.hero {
  display: flex;
  align-items: center;
  padding-top: 60px;
  justify-content: center;
}

.heading p {
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: 16px;
  line-height: 24px;
}

.heading p span.left {
  color: var(--radon-color-grey-dark);
}

.heading p span.center {
  color: var(--ifm-color-primary);
  font-weight: 700;
  margin: 0 4px;
}

.headingLabel {
  color: var(--ifm-color-primary);
  text-align: center;
  font-size: 64px;
  font-weight: 400;
  line-height: 72px;
  padding: 24px 0;
}

.headingLabel span {
  color: var(--swm-green-light-100);
}

.gradient {
  width: 100%;
  width: 1360px;
  height: 682px;
  flex-shrink: 0;
  background: var(
    --Radial-green,
    radial-gradient(50% 50% at 50% 50%, #38a880 55.29%, rgba(17, 17, 17, 0) 100%)
  );
  display: flex;
  justify-content: center;
}

.heroImage {
  width: 100%;
  max-width: 1200px;
  height: auto;
  aspect-ratio: 16/9;
  border-right: 1px solid rgba(255, 255, 255, 0.05);
  border-left: 1px solid rgba(255, 255, 255, 0.05);
  position: relative;
  top: 83px;
}

.headingDisclaimer {
  color: var(--radon-color-grey-dark);
  text-align: center;

  font-size: 16px;
  font-weight: 400;
  line-height: 24px;
  padding: 16px 0;
}

.headingDisclaimerIcon {
  margin-right: 5px;
}

.subheadingLabel {
  color: var(--radon-subheading);
  text-align: center;
  font-size: 20px;
  font-weight: 400;
  line-height: 32px;
  padding-bottom: 40px;
}

.buttonContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 24px;
}

@media (min-width: 2920px) {
  .heroImageWrapper {
    width: auto;
    position: static;
    transform: none;
  }
  .hero {
    flex-direction: row-reverse;
    margin-bottom: 0;
    align-items: center;
  }
  .subheadingLabel {
    width: 100%;
  }
  .heading {
    margin: 0;
  }
}

@media (max-width: 2400px) {
  .heroImageWrapper {
    transform: translateX(60%) translateY(5%);
  }
}

@media (max-width: 996px) {
  .hero {
    margin-bottom: 1rem;
  }
  .heading {
    margin-top: 4rem;
  }
  .headingLabel {
    font-size: 42px;
  }
  .subheadingLabel {
    margin: 2rem 0 3.5rem 0;
    font-size: 26px;
    width: 100%;
  }

  .heroImageWrapper {
    width: auto;
    position: static;
    margin-top: 4rem;
    border-width: 1rem;
    border-radius: 2.5rem;
    transform: none;
  }
  .heroImage {
    border-width: 0.5rem;
    border-radius: 1.5rem;
  }
}

@media (max-width: 430px) {
  .hero {
    margin-bottom: 0;
  }
  .headingLabel {
    font-size: 28px;
  }
  .subheadingLabel {
    margin: 1rem 0 2rem 0;
    font-size: 18px;
  }

  .heroImageWrapper {
    border-width: 8px;
    border-radius: 16px;
  }
  .heroImage {
    border-width: 4px;
    border-radius: 8px;
  }
  .headingDisclaimer {
    align-items: flex-start;
  }
  .headingDisclaimer svg {
    margin-top: 2px;
  }

  .buttonContainer {
    flex-direction: column;
  }
}

/*   Open state of the dialog  */
dialog[open] {
  opacity: 1;
}

/*   Closed state of the dialog   */
dialog {
  overflow: hidden;
  box-sizing: border-box;
  border: none;
  max-width: 1280px;
  width: 100%;
  opacity: 0;
  transform: translateY(0px);
  transition: all 0.3s allow-discrete;
  padding: 2rem;
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog[open] {
    opacity: 0;
    transform: translateY(50px);
  }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition: all 0.3s allow-discrete;
  user-select: none;
}

dialog[open]::backdrop {
  background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}

.responsiveIframe {
  aspect-ratio: 16 / 9;
  max-width: 1200px;
}

html:has(dialog[open]) {
  overflow: hidden;
}

.dialogCloseButton {
  position: absolute;
  padding: 6px;
  height: 32px;
  width: 32px;
  top: 3px;
  right: 3px;
  cursor: pointer;
  background-color: transparent;
  border: none;
}
