import * as __WEBPACK_EXTERNAL_MODULE_react__ from "react";
import * as __WEBPACK_EXTERNAL_MODULE_react_dom_7dac9eee__ from "react-dom";
import * as __WEBPACK_EXTERNAL_MODULE_react_is_5160a61b__ from "react-is";
/******/ var __webpack_modules__ = ({

/***/ 1831:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.importFromOldV8CPUProfile = exports.importFromChromeCPUProfile = exports.importFromChromeTimeline = exports.isChromeTimeline = void 0;

const profile_1 = __webpack_require__(5108);

const utils_1 = __webpack_require__(1713);

const value_formatters_1 = __webpack_require__(1177);

const v8cpuFormatter_1 = __webpack_require__(4292);

function isChromeTimeline(rawProfile) {
  if (!Array.isArray(rawProfile)) return false;
  if (rawProfile.length < 1) return false;
  const first = rawProfile[0];
  if (!('pid' in first && 'tid' in first && 'ph' in first && 'cat' in first)) return false;
  if (!rawProfile.find(e => e.name === 'CpuProfile' || e.name === 'Profile' || e.name === 'ProfileChunk')) return false;
  return true;
}

exports.isChromeTimeline = isChromeTimeline;

function importFromChromeTimeline(events, fileName) {
  // It seems like sometimes Chrome timeline files contain multiple CpuProfiles?
  // For now, choose the first one in the list.
  const cpuProfileByID = new Map(); // Maps profile IDs (like "0x3") to pid/tid pairs formatted as `${pid}:${tid}`

  const pidTidById = new Map(); // Maps pid/tid pairs to thread names

  const threadNameByPidTid = new Map(); // The events aren't necessarily recorded in chronological order. Sort them so
  // that they are.

  utils_1.sortBy(events, e => e.ts);

  for (let event of events) {
    if (event.name === 'CpuProfile') {
      const pidTid = `${event.pid}:${event.tid}`;
      const id = event.id || pidTid;
      cpuProfileByID.set(id, event.args.data.cpuProfile);
      pidTidById.set(id, pidTid);
    }

    if (event.name === 'Profile') {
      const pidTid = `${event.pid}:${event.tid}`;
      cpuProfileByID.set(event.id || pidTid, Object.assign({
        startTime: 0,
        endTime: 0,
        nodes: [],
        samples: [],
        timeDeltas: []
      }, event.args.data));

      if (event.id) {
        pidTidById.set(event.id, `${event.pid}:${event.tid}`);
      }
    }

    if (event.name === 'thread_name') {
      threadNameByPidTid.set(`${event.pid}:${event.tid}`, event.args.name);
    }

    if (event.name === 'ProfileChunk') {
      const pidTid = `${event.pid}:${event.tid}`;
      const cpuProfile = cpuProfileByID.get(event.id || pidTid);

      if (cpuProfile) {
        const chunk = event.args.data;

        if (chunk.cpuProfile) {
          if (chunk.cpuProfile.nodes) {
            cpuProfile.nodes = cpuProfile.nodes.concat(chunk.cpuProfile.nodes);
          }

          if (chunk.cpuProfile.samples) {
            cpuProfile.samples = cpuProfile.samples.concat(chunk.cpuProfile.samples);
          }
        }

        if (chunk.timeDeltas) {
          cpuProfile.timeDeltas = cpuProfile.timeDeltas.concat(chunk.timeDeltas);
        }

        if (chunk.startTime != null) {
          cpuProfile.startTime = chunk.startTime;
        }

        if (chunk.endTime != null) {
          cpuProfile.endTime = chunk.endTime;
        }
      } else {
        console.warn(`Ignoring ProfileChunk for undeclared Profile with id ${event.id || pidTid}`);
      }
    }
  }

  if (cpuProfileByID.size > 0) {
    const profiles = [];
    let indexToView = 0;
    utils_1.itForEach(cpuProfileByID.keys(), profileId => {
      let threadName = null;
      let pidTid = pidTidById.get(profileId);

      if (pidTid) {
        threadName = threadNameByPidTid.get(pidTid) || null;

        if (threadName) {}
      }

      const profile = importFromChromeCPUProfile(cpuProfileByID.get(profileId));

      if (threadName && cpuProfileByID.size > 1) {
        profile.setName(`${fileName} - ${threadName}`);

        if (threadName === 'CrRendererMain') {
          indexToView = profiles.length;
        }
      } else {
        profile.setName(`${fileName}`);
      }

      profiles.push(profile);
    });
    return {
      name: fileName,
      indexToView,
      profiles
    };
  } else {
    throw new Error('Could not find CPU profile in Timeline');
  }
}

exports.importFromChromeTimeline = importFromChromeTimeline;
const callFrameToFrameInfo = new Map();

function frameInfoForCallFrame(callFrame) {
  return utils_1.getOrInsert(callFrameToFrameInfo, callFrame, callFrame => {
    const name = callFrame.functionName || '(anonymous)';
    const file = callFrame.url;
    const line = callFrame.lineNumber;
    const col = callFrame.columnNumber;
    return {
      key: `${name}:${file}:${line}:${col}`,
      name,
      file,
      line,
      col
    };
  });
}

function shouldIgnoreFunction(callFrame) {
  const {
    functionName,
    url
  } = callFrame;

  if (url === 'native dummy.js') {
    // I'm not really sure what this is about, but this seems to be used
    // as a way of avoiding edge cases in V8's implementation.
    // See: https://github.com/v8/v8/blob/b8626ca4/tools/js2c.py#L419-L424
    return true;
  }

  return functionName === '(root)' || functionName === '(idle)';
}

function shouldPlaceOnTopOfPreviousStack(functionName) {
  return functionName === '(garbage collector)' || functionName === '(program)';
}

function importFromChromeCPUProfile(chromeProfile) {
  const profile = new profile_1.CallTreeProfileBuilder(chromeProfile.endTime - chromeProfile.startTime);
  const nodeById = new Map();

  for (let node of chromeProfile.nodes) {
    nodeById.set(node.id, node);
  }

  for (let node of chromeProfile.nodes) {
    if (typeof node.parent === 'number') {
      node.parent = nodeById.get(node.parent);
    }

    if (!node.children) continue;

    for (let childId of node.children) {
      const child = nodeById.get(childId);
      if (!child) continue;
      child.parent = node;
    }
  }

  const samples = [];
  const sampleTimes = []; // The first delta is relative to the profile startTime.
  // Ref: https://github.com/v8/v8/blob/44bd8fd7/src/inspector/js_protocol.json#L1485

  let elapsed = chromeProfile.timeDeltas[0]; // Prevents negative time deltas from causing bad data. See
  // https://github.com/jlfwong/speedscope/pull/305 for details.

  let lastValidElapsed = elapsed;
  let lastNodeId = NaN; // The chrome CPU profile format doesn't collapse identical samples. We'll do that
  // here to save a ton of work later doing mergers.

  for (let i = 0; i < chromeProfile.samples.length; i++) {
    const nodeId = chromeProfile.samples[i];

    if (nodeId != lastNodeId) {
      samples.push(nodeId);

      if (elapsed < lastValidElapsed) {
        sampleTimes.push(lastValidElapsed);
      } else {
        sampleTimes.push(elapsed);
        lastValidElapsed = elapsed;
      }
    }

    if (i === chromeProfile.samples.length - 1) {
      if (!isNaN(lastNodeId)) {
        samples.push(lastNodeId);

        if (elapsed < lastValidElapsed) {
          sampleTimes.push(lastValidElapsed);
        } else {
          sampleTimes.push(elapsed);
          lastValidElapsed = elapsed;
        }
      }
    } else {
      const timeDelta = chromeProfile.timeDeltas[i + 1];
      elapsed += timeDelta;
      lastNodeId = nodeId;
    }
  }

  let prevStack = [];

  for (let i = 0; i < samples.length; i++) {
    const value = sampleTimes[i];
    const nodeId = samples[i];
    let stackTop = nodeById.get(nodeId);
    if (!stackTop) continue; // Find lowest common ancestor of the current stack and the previous one

    let lca = null; // This is O(n^2), but n should be relatively small here (stack height),
    // so hopefully this isn't much of a problem

    for (lca = stackTop; lca && prevStack.indexOf(lca) === -1; lca = shouldPlaceOnTopOfPreviousStack(lca.callFrame.functionName) ? utils_1.lastOf(prevStack) : lca.parent || null) {} // Close frames that are no longer open


    while (prevStack.length > 0 && utils_1.lastOf(prevStack) != lca) {
      const closingNode = prevStack.pop();
      const frame = frameInfoForCallFrame(closingNode.callFrame);
      profile.leaveFrame(frame, value);
    } // Open frames that are now becoming open


    const toOpen = [];

    for (let node = stackTop; node && node != lca && !shouldIgnoreFunction(node.callFrame); // Place Chrome internal functions on top of the previous call stack
    node = shouldPlaceOnTopOfPreviousStack(node.callFrame.functionName) ? utils_1.lastOf(prevStack) : node.parent || null) {
      toOpen.push(node);
    }

    toOpen.reverse();

    for (let node of toOpen) {
      profile.enterFrame(frameInfoForCallFrame(node.callFrame), value);
    }

    prevStack = prevStack.concat(toOpen);
  } // Close frames that are open at the end of the trace


  for (let i = prevStack.length - 1; i >= 0; i--) {
    profile.leaveFrame(frameInfoForCallFrame(prevStack[i].callFrame), utils_1.lastOf(sampleTimes));
  }

  profile.setValueFormatter(new value_formatters_1.TimeFormatter('microseconds'));
  return profile.build();
}

exports.importFromChromeCPUProfile = importFromChromeCPUProfile;

function importFromOldV8CPUProfile(content) {
  return importFromChromeCPUProfile(v8cpuFormatter_1.chromeTreeToNodes(content));
}

exports.importFromOldV8CPUProfile = importFromOldV8CPUProfile;

/***/ }),

/***/ 4292:
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.chromeTreeToNodes = void 0;

function treeToArray(root) {
  const nodes = [];

  function visit(node) {
    nodes.push({
      id: node.id,
      callFrame: {
        columnNumber: 0,
        functionName: node.functionName,
        lineNumber: node.lineNumber,
        scriptId: node.scriptId,
        url: node.url
      },
      hitCount: node.hitCount,
      children: node.children.map(child => child.id)
    });
    node.children.forEach(visit);
  }

  visit(root);
  return nodes;
}

function timestampsToDeltas(timestamps, startTime) {
  return timestamps.map((timestamp, index) => {
    const lastTimestamp = index === 0 ? startTime * 1000000 : timestamps[index - 1];
    return timestamp - lastTimestamp;
  });
}
/**
 * Convert the old tree-based format to the new flat-array based format
 */


function chromeTreeToNodes(content) {
  // Note that both startTime and endTime are now in microseconds
  return {
    samples: content.samples,
    startTime: content.startTime * 1000000,
    endTime: content.endTime * 1000000,
    nodes: treeToArray(content.head),
    timeDeltas: timestampsToDeltas(content.timestamps, content.startTime)
  };
}

exports.chromeTreeToNodes = chromeTreeToNodes;

/***/ }),

/***/ 1766:
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.demangleCpp = void 0;
let cppfilt;
const cache = new Map(); // This function converts a mangled C++ name such as "__ZNK7Support6ColorFeqERKS0_"
// into a human-readable symbol (in this case "Support::ColorF::==(Support::ColorF&)")

function demangleCpp(name) {
  if (name.startsWith('__Z')) {
    let result = cache.get(name);

    if (result !== undefined) {
      name = result;
    } else {
      if (!cppfilt) {
        cppfilt = new Function('exports', code)();
      }

      result = cppfilt(name.slice(1));
      result = result === '(null)' ? name : result;
      cache.set(name, result);
      name = result;
    }
  }

  return name;
}

exports.demangleCpp = demangleCpp; // This was taken from https://d.fuqu.jp/c++filtjs/

const code = `
return function(){function r(r){eval.call(null,r)}function a(r){throw print(r+":\\n"+(new Error).stack),ke=!0,"Assertion: "+r}function e(r,e){r||a("Assertion failed: "+e)}function i(r,a,i,v){function t(r,a){if("string"==a){var e=Oe;return le.stackAlloc(r.length+1),A(r,e),e}return r}function f(r,a){return"string"==a?s(r):r}try{func=ce.Module["_"+r]}catch(r){}e(func,"Cannot call unknown function "+r+" (perhaps LLVM optimizations or closure removed it?)");var _=0,n=v?v.map(function(r){return t(r,i[_++])}):[];return f(func.apply(null,n),a)}function v(r,a,e){return function(){return i(r,a,e,Array.prototype.slice.call(arguments))}}function t(r,e,i,v){switch(i=i||"i8","*"===i[i.length-1]&&(i="i32"),i){case"i1":Ae[r]=e;break;case"i8":Ae[r]=e;break;case"i16":ye[r>>1]=e;break;case"i32":Se[r>>2]=e;break;case"i64":Se[r>>2]=e;break;case"float":Ce[r>>2]=e;break;case"double":ze[0]=e,Se[r>>2]=xe[0],Se[r+4>>2]=xe[1];break;default:a("invalid type for setValue: "+i)}}function f(r,e,i){switch(e=e||"i8","*"===e[e.length-1]&&(e="i32"),e){case"i1":return Ae[r];case"i8":return Ae[r];case"i16":return ye[r>>1];case"i32":return Se[r>>2];case"i64":return Se[r>>2];case"float":return Ce[r>>2];case"double":return xe[0]=Se[r>>2],xe[1]=Se[r+4>>2],ze[0];default:a("invalid type for setValue: "+e)}return null}function _(r,a,e){var i,v;"number"==typeof r?(i=!0,v=r):(i=!1,v=r.length);var f="string"==typeof a?a:null,_=[Jr,le.stackAlloc,le.staticAlloc][void 0===e?we:e](Math.max(v,f?1:a.length));if(i)return Fa(_,0,v),_;for(var s,n=0;n<v;){var o=r[n];"function"==typeof o&&(o=le.getFunctionIndex(o)),s=f||a[n],0!==s?("i64"==s&&(s="i32"),t(_+n,o,s),n+=le.getNativeTypeSize(s)):n++}return _}function s(r,a){for(var e,i="undefined"==typeof a,v="",t=0,f=String.fromCharCode(0);;){if(e=String.fromCharCode(ge[r+t]),i&&e==f)break;if(v+=e,t+=1,!i&&t==a)break}return v}function n(r){for(var a="",e=0;e<r.length;e++)a+=String.fromCharCode(r[e]);return a}function o(r){return r+4095>>12<<12}function l(){for(;Le<=Ie;)Le=o(2*Le);var r=Ae,a=new ArrayBuffer(Le);Ae=new Int8Array(a),ye=new Int16Array(a),Se=new Int32Array(a),ge=new Uint8Array(a),me=new Uint16Array(a),Me=new Uint32Array(a),Ce=new Float32Array(a),Re=new Float64Array(a),Ae.set(r)}function b(r){for(;r.length>0;){var a=r.shift(),e=a.func;"number"==typeof e&&(e=pe[e]),e(void 0===a.arg?null:a.arg)}}function k(){b(Ve)}function u(){b(Be),be.print()}function c(r,a){return Array.prototype.slice.call(Ae.subarray(r,r+a))}function h(r,a){for(var e=new Uint8Array(a),i=0;i<a;++i)e[i]=Ae[r+i];return e.buffer}function d(r){for(var a=0;Ae[r+a];)a++;return a}function w(r,a){var e=d(r);a&&e++;var i=c(r,e);return a&&(i[e-1]=0),i}function p(r,a){for(var e=[],i=0;i<r.length;){var v=r.charCodeAt(i);v>255&&(v&=255),e.push(v),i+=1}return a||e.push(0),e}function E(r){for(var a=[],e=0;e<r.length;e++){var i=r[e];i>255&&(i&=255),a.push(String.fromCharCode(i))}return a.join("")}function A(r,a,e){for(var i=0;i<r.length;){var v=r.charCodeAt(i);v>255&&(v&=255),Ae[a+i]=v,i+=1}e||(Ae[a+i]=0)}function g(r,a,e,i){return r>=0?r:a<=32?2*Math.abs(1<<a-1)+r:Math.pow(2,a)+r}function y(r,a,e,i){if(r<=0)return r;var v=a<=32?Math.abs(1<<a-1):Math.pow(2,a-1);return r>=v&&(a<=32||r>v)&&(r=-2*v+r),r}function m(r,a,e){if(0==(0|r)|0==(0|a)|0==(0|e))var i=0;else{Se[r>>2]=0,Se[r+4>>2]=a,Se[r+8>>2]=e;var i=1}var i;return i}function S(r,a,e){if(0==(0|r)|(0|a)<0|0==(0|e))var i=0;else{Se[r>>2]=41,Se[r+4>>2]=a,Se[r+8>>2]=e;var i=1}var i;return i}function M(r,a,e){if(0==(0|r)|0==(0|e))var i=0;else{Se[r>>2]=6,Se[r+4>>2]=a,Se[r+8>>2]=e;var i=1}var i;return i}function C(r,a,e){if(0==(0|r)|0==(0|e))var i=0;else{Se[r>>2]=7,Se[r+4>>2]=a,Se[r+8>>2]=e;var i=1}var i;return i}function R(r,a){var e,i=0==(0|a);do if(i)var v=0;else{var e=(r+32|0)>>2,t=Se[e];if((0|t)>=(0|Se[r+36>>2])){var v=0;break}var f=(t<<2)+Se[r+28>>2]|0;Se[f>>2]=a;var _=Se[e]+1|0;Se[e]=_;var v=1}while(0);var v;return v}function T(r,a){var e,e=(r+12|0)>>2,i=Se[e],v=i+1|0;Se[e]=v;var t=Ae[i]<<24>>24==95;do if(t){var f=i+2|0;if(Se[e]=f,Ae[v]<<24>>24!=90){var _=0;break}var s=O(r,a),_=s}else var _=0;while(0);var _;return _}function O(r,a){var e=r+12|0,i=Ae[Se[e>>2]];r:do if(i<<24>>24==71||i<<24>>24==84)var v=Tr(r),t=v;else{var f=Ar(r),_=0==(0|f)|0==(0|a);do if(!_){if(0!=(1&Se[r+8>>2]|0))break;var s=Me[f>>2],n=(s-25|0)>>>0<3;a:do if(n)for(var o=f;;){var o,l=Me[o+4>>2],b=Me[l>>2];if((b-25|0)>>>0>=3){var k=l,u=b;break a}var o=l}else var k=f,u=s;while(0);var u,k;if(2!=(0|u)){var t=k;break r}var c=k+8|0,h=Me[c>>2],d=(Se[h>>2]-25|0)>>>0<3;a:do if(d)for(var w=h;;){var w,p=Me[w+4>>2];if((Se[p>>2]-25|0)>>>0>=3){var E=p;break a}var w=p}else var E=h;while(0);var E;Se[c>>2]=E;var t=k;break r}while(0);var A=Ae[Se[e>>2]];if(A<<24>>24==0||A<<24>>24==69){var t=f;break}var g=Or(f),y=Sr(r,g),m=D(r,3,f,y),t=m}while(0);var t;return t}function N(r){var a,e,i=Oe;Oe+=4;var v=i,e=v>>2,a=(r+12|0)>>2,t=Me[a],f=Ae[t],_=f<<24>>24;r:do if(f<<24>>24==114||f<<24>>24==86||f<<24>>24==75){var s=I(r,v,0);if(0==(0|s)){var n=0;break}var o=N(r);Se[s>>2]=o;var l=Se[e],b=R(r,l);if(0==(0|b)){var n=0;break}var n=Se[e]}else{do{if(97==(0|_)||98==(0|_)||99==(0|_)||100==(0|_)||101==(0|_)||102==(0|_)||103==(0|_)||104==(0|_)||105==(0|_)||106==(0|_)||108==(0|_)||109==(0|_)||110==(0|_)||111==(0|_)||115==(0|_)||116==(0|_)||118==(0|_)||119==(0|_)||120==(0|_)||121==(0|_)||122==(0|_)){var k=ai+20*(_-97)|0,u=P(r,k);Se[e]=u;var c=r+48|0,h=Se[c>>2]+Se[Se[u+4>>2]+4>>2]|0;Se[c>>2]=h;var d=Se[a]+1|0;Se[a]=d;var n=u;break r}if(117==(0|_)){Se[a]=t+1|0;var w=L(r),p=D(r,34,w,0);Se[e]=p;var E=p}else if(70==(0|_)){var A=F(r);Se[e]=A;var E=A}else if(48==(0|_)||49==(0|_)||50==(0|_)||51==(0|_)||52==(0|_)||53==(0|_)||54==(0|_)||55==(0|_)||56==(0|_)||57==(0|_)||78==(0|_)||90==(0|_)){var g=X(r);Se[e]=g;var E=g}else if(65==(0|_)){var y=j(r);Se[e]=y;var E=y}else if(77==(0|_)){var m=U(r);Se[e]=m;var E=m}else if(84==(0|_)){var S=x(r);if(Se[e]=S,Ae[Se[a]]<<24>>24!=73){var E=S;break}var M=R(r,S);if(0==(0|M)){var n=0;break r}var C=Se[e],T=z(r),O=D(r,4,C,T);Se[e]=O;var E=O}else if(83==(0|_)){var B=ge[t+1|0];if((B-48&255&255)<10|B<<24>>24==95|(B-65&255&255)<26){var H=V(r,0);if(Se[e]=H,Ae[Se[a]]<<24>>24!=73){var n=H;break r}var K=z(r),Y=D(r,4,H,K);Se[e]=Y;var E=Y}else{var G=X(r);if(Se[e]=G,0==(0|G)){var E=0;break}if(21==(0|Se[G>>2])){var n=G;break r}var E=G}}else if(80==(0|_)){Se[a]=t+1|0;var W=N(r),Z=D(r,29,W,0);Se[e]=Z;var E=Z}else if(82==(0|_)){Se[a]=t+1|0;var Q=N(r),q=D(r,30,Q,0);Se[e]=q;var E=q}else if(67==(0|_)){Se[a]=t+1|0;var $=N(r),J=D(r,31,$,0);Se[e]=J;var E=J}else if(71==(0|_)){Se[a]=t+1|0;var rr=N(r),ar=D(r,32,rr,0);Se[e]=ar;var E=ar}else{if(85!=(0|_)){var n=0;break r}Se[a]=t+1|0;var er=L(r);Se[e]=er;var ir=N(r),vr=Se[e],tr=D(r,28,ir,vr);Se[e]=tr;var E=tr}}while(0);var E,fr=R(r,E);if(0==(0|fr)){var n=0;break}var n=Se[e]}while(0);var n;return Oe=i,n}function I(r,a,e){for(var i,v=r+12|0,t=0!=(0|e),f=t?25:22,i=(r+48|0)>>2,_=t?26:23,s=t?27:24,n=a;;){var n,o=Se[v>>2],l=Ae[o];if(l<<24>>24!=114&&l<<24>>24!=86&&l<<24>>24!=75){var b=n;break}var k=o+1|0;if(Se[v>>2]=k,l<<24>>24==114){var u=Se[i]+9|0;Se[i]=u;var c=f}else if(l<<24>>24==86){var h=Se[i]+9|0;Se[i]=h;var c=_}else{var d=Se[i]+6|0;Se[i]=d;var c=s}var c,w=D(r,c,0,0);if(Se[n>>2]=w,0==(0|w)){var b=0;break}var n=w+4|0}var b;return b}function P(r,a){var e=0==(0|a);do if(e)var i=0;else{var v=J(r);if(0==(0|v)){var i=0;break}Se[v>>2]=33,Se[v+4>>2]=a;var i=v}while(0);var i;return i}function D(r,a,e,i){var v,t;do{if(1==(0|a)||2==(0|a)||3==(0|a)||4==(0|a)||10==(0|a)||28==(0|a)||37==(0|a)||43==(0|a)||44==(0|a)||45==(0|a)||46==(0|a)||47==(0|a)||48==(0|a)||49==(0|a)||50==(0|a)){if(0==(0|e)|0==(0|i)){var f=0;t=7;break}t=5;break}if(8==(0|a)||9==(0|a)||11==(0|a)||12==(0|a)||13==(0|a)||14==(0|a)||15==(0|a)||16==(0|a)||17==(0|a)||18==(0|a)||19==(0|a)||20==(0|a)||29==(0|a)||30==(0|a)||31==(0|a)||32==(0|a)||34==(0|a)||38==(0|a)||39==(0|a)||42==(0|a)){if(0==(0|e)){var f=0;t=7;break}t=5;break}if(36==(0|a)){if(0==(0|i)){var f=0;t=7;break}t=5;break}if(35==(0|a)||22==(0|a)||23==(0|a)||24==(0|a)||25==(0|a)||26==(0|a)||27==(0|a))t=5;else{var f=0;t=7}}while(0);do if(5==t){var _=J(r),v=_>>2;if(0==(0|_)){var f=0;break}Se[v]=a,Se[v+1]=e,Se[v+2]=i;var f=_}while(0);var f;return f}function L(r){var a=sr(r);if((0|a)<1)var e=0;else{var i=Rr(r,a);Se[r+44>>2]=i;var e=i}var e;return e}function F(r){var a,a=(r+12|0)>>2,e=Se[a],i=e+1|0;if(Se[a]=i,Ae[e]<<24>>24==70){if(Ae[i]<<24>>24==89){var v=e+2|0;Se[a]=v}var t=Sr(r,1),f=Se[a],_=f+1|0;Se[a]=_;var s=Ae[f]<<24>>24==69?t:0,n=s}else var n=0;var n;return n}function X(r){var a=Ar(r);return a}function j(r){var a,a=(r+12|0)>>2,e=Se[a],i=e+1|0;Se[a]=i;var v=Ae[e]<<24>>24==65;do if(v){var t=Ae[i];if(t<<24>>24==95)var f=0;else if((t-48&255&255)<10){for(var _=i;;){var _,s=_+1|0;if(Se[a]=s,(Ae[s]-48&255&255)>=10)break;var _=s}var n=s-i|0,o=lr(r,i,n);if(0==(0|o)){var l=0;break}var f=o}else{var b=nr(r);if(0==(0|b)){var l=0;break}var f=b}var f,k=Se[a],u=k+1|0;if(Se[a]=u,Ae[k]<<24>>24!=95){var l=0;break}var c=N(r),h=D(r,36,f,c),l=h}else var l=0;while(0);var l;return l}function U(r){var a=Oe;Oe+=4;var e=a,i=r+12|0,v=Se[i>>2],t=v+1|0;Se[i>>2]=t;var f=Ae[v]<<24>>24==77;r:do if(f){var _=N(r),s=I(r,e,1);if(0==(0|s)){var n=0;break}var o=N(r);Se[s>>2]=o;var l=(0|s)==(0|e);do if(!l){if(35==(0|Se[o>>2]))break;var b=Se[e>>2],k=R(r,b);if(0==(0|k)){var n=0;break r}}while(0);var u=Se[e>>2],c=D(r,37,_,u),n=c}else var n=0;while(0);var n;return Oe=a,n}function x(r){var a,a=(r+12|0)>>2,e=Se[a],i=e+1|0;Se[a]=i;var v=Ae[e]<<24>>24==84;do if(v){if(Ae[i]<<24>>24==95)var t=0,f=i;else{var _=sr(r);if((0|_)<0){var s=0;break}var t=_+1|0,f=Se[a]}var f,t;if(Se[a]=f+1|0,Ae[f]<<24>>24!=95){var s=0;break}var n=r+40|0,o=Se[n>>2]+1|0;Se[n>>2]=o;var l=Er(r,t),s=l}else var s=0;while(0);var s;return s}function z(r){var a,e=Oe;Oe+=4;var i=e,v=r+44|0,t=Se[v>>2],a=(r+12|0)>>2,f=Se[a],_=f+1|0;Se[a]=_;var s=Ae[f]<<24>>24==73;r:do if(s){Se[i>>2]=0;for(var n=i;;){var n,o=_r(r);if(0==(0|o)){var l=0;break r}var b=D(r,39,o,0);if(Se[n>>2]=b,0==(0|b)){var l=0;break r}var k=Se[a];if(Ae[k]<<24>>24==69)break;var n=b+8|0}var u=k+1|0;Se[a]=u,Se[v>>2]=t;var l=Se[i>>2]}else var l=0;while(0);var l;return Oe=e,l}function V(r,a){var e,e=(r+12|0)>>2,i=Se[e],v=i+1|0;Se[e]=v;var t=Ae[i]<<24>>24==83;r:do if(t){var f=i+2|0;Se[e]=f;var _=ge[v];if(_<<24>>24==95)var s=0;else{if(!((_-48&255&255)<10|(_-65&255&255)<26)){var n=8&Se[r+8>>2],o=n>>>3,l=0!=(0|n)|0==(0|a);do if(l)var b=o;else{if((Ae[f]-67&255&255)>=2){var b=o;break}var b=1}while(0);for(var b,k=0|ei;;){var k;if(k>>>0>=(ei+196|0)>>>0){var u=0;break r}if(_<<24>>24==Ae[0|k]<<24>>24)break;var k=k+28|0}var c=Se[k+20>>2];if(0!=(0|c)){var h=Se[k+24>>2],d=fr(r,c,h);Se[r+44>>2]=d}if(0==(0|b))var w=k+8|0,p=k+4|0;else var w=k+16|0,p=k+12|0;var p,w,E=Se[w>>2],A=Se[p>>2],g=r+48|0,y=Se[g>>2]+E|0;Se[g>>2]=y;var m=fr(r,A,E),u=m;break}for(var S=_,M=0,C=f;;){var C,M,S;if((S-48&255&255)<10)var R=36*M-48|0;else{if((S-65&255&255)>=26){var u=0;break r}var R=36*M-55|0}var R,T=(S<<24>>24)+R|0;if((0|T)<0){var u=0;break r}var O=C+1|0;Se[e]=O;var N=ge[C];if(N<<24>>24==95)break;var S=N,M=T,C=O}var s=T+1|0}var s;if((0|s)>=(0|Se[r+32>>2])){var u=0;break}var I=r+40|0,P=Se[I>>2]+1|0;Se[I>>2]=P;var u=Se[Se[r+28>>2]+(s<<2)>>2]}else var u=0;while(0);var u;return u}function B(r,a,e,i){var v,t,f,_,s=Oe;Oe+=28;var n,o=s,_=o>>2;Se[_]=r;var l=e+1|0,f=(o+12|0)>>2;Se[f]=l;var b=Jr(l),t=(o+4|0)>>2;if(Se[t]=b,0==(0|b))var k=0,u=1;else{var v=(o+8|0)>>2;Se[v]=0,Se[_+4]=0,Se[_+5]=0;var c=o+24|0;Se[c>>2]=0,H(o,a);var h=Me[t],d=0==(0|h);do{if(!d){var w=Me[v];if(w>>>0>=Me[f]>>>0){n=5;break}Se[v]=w+1|0,Ae[h+w|0]=0,n=6;break}n=5}while(0);5==n&&Y(o,0);var p=Se[t],E=0==(0|p)?Se[c>>2]:Se[f],k=p,u=E}var u,k;return Se[i>>2]=u,Oe=s,k}function H(r,a){var e,i,v,t,f,_,s,n,o,l,b,k,u,c,h,d,w,p,E,A,g,y,m,S,M,C,R,T,O,N,I,P,D,L,F,X,j,U,x,z,V,B,K,G,W,J,vr,tr,fr,_r,sr,nr,or,lr,br,kr,ur,cr,hr,dr,wr,pr=a>>2,Er=r>>2,Ar=Oe;Oe+=184;var gr,yr=Ar,wr=yr>>2,mr=Ar+64,dr=mr>>2,Sr=Ar+72,Mr=Ar+88,Cr=Ar+104,hr=Cr>>2,Rr=Ar+168,Tr=0==(0|a);r:do if(Tr)Z(r);else{var cr=(r+4|0)>>2,Or=Me[cr];if(0==(0|Or))break;var Nr=0|a,Ir=Me[Nr>>2];a:do{if(0==(0|Ir)){if(0!=(4&Se[Er]|0)){var Pr=Se[pr+1],Dr=Se[pr+2];q(r,Pr,Dr);break r}var ur=(r+8|0)>>2,Lr=Me[ur],Fr=a+8|0,Xr=Me[Fr>>2];if((Xr+Lr|0)>>>0>Me[Er+3]>>>0){var jr=Se[pr+1];Q(r,jr,Xr);break r}var Ur=Or+Lr|0,xr=Se[pr+1];Pa(Ur,xr,Xr,1);var zr=Se[ur]+Se[Fr>>2]|0;Se[ur]=zr;break r}if(1==(0|Ir)||2==(0|Ir)){var Vr=Se[pr+1];H(r,Vr);var Br=0==(4&Se[Er]|0),Hr=Me[cr],Kr=0!=(0|Hr);e:do if(Br){do if(Kr){var kr=(r+8|0)>>2,Yr=Me[kr];if((Yr+2|0)>>>0>Me[Er+3]>>>0)break;var Gr=Hr+Yr|0;oe=14906,Ae[Gr]=255&oe,oe>>=8,Ae[Gr+1]=255&oe;var Wr=Se[kr]+2|0;Se[kr]=Wr;break e}while(0);Q(r,0|He.__str120,2)}else{do if(Kr){var Zr=r+8|0,Qr=Me[Zr>>2];if(Qr>>>0>=Me[Er+3]>>>0)break;Se[Zr>>2]=Qr+1|0,Ae[Hr+Qr|0]=46;break e}while(0);Y(r,46)}while(0);var qr=Se[pr+2];H(r,qr);break r}if(3==(0|Ir)){for(var br=(r+20|0)>>2,$r=Me[br],lr=(r+16|0)>>2,Jr=a,ra=0,aa=$r;;){var aa,ra,Jr,ea=Me[Jr+4>>2];if(0==(0|ea)){var ia=ra,va=0;gr=33;break}if(ra>>>0>3){Z(r);break r}var ta=(ra<<4)+yr|0;Se[ta>>2]=aa,Se[br]=ta,Se[((ra<<4)+4>>2)+wr]=ea,Se[((ra<<4)+8>>2)+wr]=0;var fa=Me[lr];Se[((ra<<4)+12>>2)+wr]=fa;var _a=ra+1|0,sa=0|ea,na=Me[sa>>2];if((na-25|0)>>>0>=3){gr=25;break}var Jr=ea,ra=_a,aa=ta}e:do if(25==gr){if(4==(0|na)){Se[dr]=fa,Se[lr]=mr,Se[dr+1]=ea;var oa=Se[sa>>2],la=mr}else var oa=na,la=fa;var la,oa;if(2!=(0|oa)){var ia=_a,va=sa;break}for(var ba=_a,ka=ea+8|0;;){var ka,ba,ua=Me[ka>>2];if((Se[ua>>2]-25|0)>>>0>=3){var ia=ba,va=sa;break e}if(ba>>>0>3)break;var ca=(ba<<4)+yr|0,ha=ba-1|0,da=(ha<<4)+yr|0,or=ca>>2,nr=da>>2;Se[or]=Se[nr],Se[or+1]=Se[nr+1],Se[or+2]=Se[nr+2],Se[or+3]=Se[nr+3],Se[ca>>2]=da,Se[br]=ca,Se[((ha<<4)+4>>2)+wr]=ua,Se[((ha<<4)+8>>2)+wr]=0,Se[((ha<<4)+12>>2)+wr]=la;var ba=ba+1|0,ka=ua+4|0}Z(r);break r}while(0);var va,ia,wa=Se[pr+2];if(H(r,wa),4==(0|Se[va>>2])){var pa=Se[dr];Se[lr]=pa}var Ea=0==(0|ia);e:do if(!Ea)for(var Aa=r+8|0,ga=r+12|0,ya=ia;;){var ya,ma=ya-1|0;if(0==(0|Se[((ma<<4)+8>>2)+wr])){var Sa=Me[cr],Ma=0==(0|Sa);do{if(!Ma){var Ca=Me[Aa>>2];if(Ca>>>0>=Me[ga>>2]>>>0){gr=41;break}Se[Aa>>2]=Ca+1|0,Ae[Sa+Ca|0]=32,gr=42;break}gr=41}while(0);41==gr&&Y(r,32);var Ra=Se[((ma<<4)+4>>2)+wr];$(r,Ra)}if(0==(0|ma))break e;var ya=ma}while(0);Se[br]=$r;break r}if(4==(0|Ir)){var sr=(r+20|0)>>2,Ta=Se[sr];Se[sr]=0;var Oa=Se[pr+1];H(r,Oa);var Na=Me[cr],Ia=0==(0|Na);do{if(!Ia){var _r=(r+8|0)>>2,Da=Me[_r],La=0==(0|Da);do if(!La){if(Ae[Na+(Da-1)|0]<<24>>24!=60)break;Da>>>0<Me[Er+3]>>>0?(Se[_r]=Da+1|0,Ae[Na+Da|0]=32):Y(r,32)}while(0);var Fa=Me[cr];if(0==(0|Fa)){gr=54;break}var Xa=Me[_r];if(Xa>>>0>=Me[Er+3]>>>0){gr=54;break}Se[_r]=Xa+1|0,Ae[Fa+Xa|0]=60,gr=55;break}gr=54}while(0);54==gr&&Y(r,60);var ja=Se[pr+2];H(r,ja);var Ua=Me[cr],xa=0==(0|Ua);do{if(!xa){var fr=(r+8|0)>>2,za=Me[fr],Va=0==(0|za);do if(!Va){if(Ae[Ua+(za-1)|0]<<24>>24!=62)break;za>>>0<Me[Er+3]>>>0?(Se[fr]=za+1|0,Ae[Ua+za|0]=32):Y(r,32)}while(0);var Ba=Me[cr];if(0==(0|Ba)){gr=64;break}var Ha=Me[fr];if(Ha>>>0>=Me[Er+3]>>>0){gr=64;break}Se[fr]=Ha+1|0,Ae[Ba+Ha|0]=62,gr=65;break}gr=64}while(0);64==gr&&Y(r,62),Se[sr]=Ta;break r}if(5==(0|Ir)){var tr=(r+16|0)>>2,Ka=Me[tr];if(0==(0|Ka)){Z(r);break r}for(var Ya=Se[pr+1],Ga=Se[Ka+4>>2];;){var Ga,Ya,Wa=Se[Ga+8>>2];if(0==(0|Wa))break;if(39!=(0|Se[Wa>>2])){Z(r);break r}if((0|Ya)<1){if(0!=(0|Ya))break;var Za=Se[Ka>>2];Se[tr]=Za;var Qa=Se[Wa+4>>2];H(r,Qa),Se[tr]=Ka;break r}var Ya=Ya-1|0,Ga=Wa}Z(r);break r}if(6==(0|Ir)){var qa=Se[pr+2];H(r,qa);break r}if(7==(0|Ir)){var $a=r+8|0,Ja=Me[$a>>2];Ja>>>0<Me[Er+3]>>>0?(Se[$a>>2]=Ja+1|0,Ae[Or+Ja|0]=126):Y(r,126);var re=Se[pr+2];H(r,re);break r}if(8==(0|Ir)){var vr=(r+8|0)>>2,ae=Me[vr];if((ae+11|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str121,11);else{for(var ee=Or+ae|0,ie=0|He.__str121,ve=ee,te=ie+11;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var fe=Se[vr]+11|0;Se[vr]=fe}var _e=Se[pr+1];H(r,_e);break r}if(9==(0|Ir)){var J=(r+8|0)>>2,se=Me[J];if((se+8|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str122,8);else{var ne=Or+se|0,le=0|ne;oe=542397526,Ae[le]=255&oe,oe>>=8,Ae[le+1]=255&oe,oe>>=8,Ae[le+2]=255&oe,oe>>=8,Ae[le+3]=255&oe;var be=ne+4|0;oe=544370534,Ae[be]=255&oe,oe>>=8,Ae[be+1]=255&oe,oe>>=8,Ae[be+2]=255&oe,oe>>=8,Ae[be+3]=255&oe;var ke=Se[J]+8|0;Se[J]=ke}var ue=Se[pr+1];H(r,ue);break r}if(10==(0|Ir)){var W=(r+8|0)>>2,ce=Me[W],he=r+12|0;if((ce+24|0)>>>0>Me[he>>2]>>>0)Q(r,0|He.__str123,24);else{var de=Or+ce|0;Pa(de,0|He.__str123,24,1);var we=Se[W]+24|0;Se[W]=we}var pe=Se[pr+1];H(r,pe);var Ee=Me[cr],ge=0==(0|Ee);do{if(!ge){var ye=Me[W];if((ye+4|0)>>>0>Me[he>>2]>>>0){gr=96;break}var me=Ee+ye|0;oe=762210605,Ae[me]=255&oe,oe>>=8,Ae[me+1]=255&oe,oe>>=8,Ae[me+2]=255&oe,oe>>=8,Ae[me+3]=255&oe;var Ce=Se[W]+4|0;Se[W]=Ce,gr=97;break}gr=96}while(0);96==gr&&Q(r,0|He.__str124,4);var Re=Se[pr+2];H(r,Re);break r}if(11==(0|Ir)){var G=(r+8|0)>>2,Te=Me[G];if((Te+13|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str125,13);else{for(var Ne=Or+Te|0,ie=0|He.__str125,ve=Ne,te=ie+13;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var Ie=Se[G]+13|0;Se[G]=Ie}var Pe=Se[pr+1];H(r,Pe);break r}if(12==(0|Ir)){var K=(r+8|0)>>2,De=Me[K];if((De+18|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str126,18);else{for(var Le=Or+De|0,ie=0|He.__str126,ve=Le,te=ie+18;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var Fe=Se[K]+18|0;Se[K]=Fe}var Xe=Se[pr+1];H(r,Xe);break r}if(13==(0|Ir)){var B=(r+8|0)>>2,je=Me[B];if((je+16|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str127,16);else{for(var Ue=Or+je|0,ie=0|He.__str127,ve=Ue,te=ie+16;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var xe=Se[B]+16|0;Se[B]=xe}var ze=Se[pr+1];H(r,ze);break r}if(14==(0|Ir)){var V=(r+8|0)>>2,Ve=Me[V];if((Ve+21|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str128,21);else{var Be=Or+Ve|0;Pa(Be,0|He.__str128,21,1);var Ke=Se[V]+21|0;Se[V]=Ke}var Ye=Se[pr+1];H(r,Ye);break r}if(15==(0|Ir)){var z=(r+8|0)>>2,Ge=Me[z];if((Ge+17|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str129,17);else{for(var We=Or+Ge|0,ie=0|He.__str129,ve=We,te=ie+17;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var Ze=Se[z]+17|0;Se[z]=Ze}var Qe=Se[pr+1];H(r,Qe);break r}if(16==(0|Ir)){var x=(r+8|0)>>2,qe=Me[x];if((qe+26|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str130,26);else{var $e=Or+qe|0;Pa($e,0|He.__str130,26,1);var Je=Se[x]+26|0;Se[x]=Je}var ri=Se[pr+1];H(r,ri);break r}if(17==(0|Ir)){var U=(r+8|0)>>2,ai=Me[U];if((ai+15|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str131,15);else{for(var ei=Or+ai|0,ie=0|He.__str131,ve=ei,te=ie+15;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var ii=Se[U]+15|0;Se[U]=ii}var vi=Se[pr+1];H(r,vi);break r}if(18==(0|Ir)){var j=(r+8|0)>>2,ti=Me[j];if((ti+19|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str132,19);else{for(var fi=Or+ti|0,ie=0|He.__str132,ve=fi,te=ie+19;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var _i=Se[j]+19|0;Se[j]=_i}var si=Se[pr+1];H(r,si);break r}if(19==(0|Ir)){var X=(r+8|0)>>2,ni=Me[X];if((ni+24|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str133,24);else{var oi=Or+ni|0;Pa(oi,0|He.__str133,24,1);var li=Se[X]+24|0;Se[X]=li}var bi=Se[pr+1];H(r,bi);break r}if(20==(0|Ir)){var F=(r+8|0)>>2,ki=Me[F];if((ki+17|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str134,17);else{for(var ui=Or+ki|0,ie=0|He.__str134,ve=ui,te=ie+17;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var ci=Se[F]+17|0;Se[F]=ci}var hi=Se[pr+1];H(r,hi);break r}if(21==(0|Ir)){var L=(r+8|0)>>2,di=Me[L],wi=a+8|0,pi=Me[wi>>2];if((pi+di|0)>>>0>Me[Er+3]>>>0){var Ei=Se[pr+1];Q(r,Ei,pi);break r}var Ai=Or+di|0,gi=Se[pr+1];Pa(Ai,gi,pi,1);var yi=Se[L]+Se[wi>>2]|0;Se[L]=yi;break r}if(22==(0|Ir)||23==(0|Ir)||24==(0|Ir)){for(var mi=r+20|0;;){var mi,Si=Me[mi>>2];if(0==(0|Si))break a;if(0==(0|Se[Si+8>>2])){var Mi=Me[Se[Si+4>>2]>>2];if((Mi-22|0)>>>0>=3)break a;if((0|Mi)==(0|Ir))break}var mi=0|Si}var Ci=Se[pr+1];H(r,Ci);break r}if(25!=(0|Ir)&&26!=(0|Ir)&&27!=(0|Ir)&&28!=(0|Ir)&&29!=(0|Ir)&&30!=(0|Ir)&&31!=(0|Ir)&&32!=(0|Ir)){if(33==(0|Ir)){var D=(r+8|0)>>2,Ri=Me[D],P=(a+4|0)>>2,I=Me[P]>>2;if(0==(4&Se[Er]|0)){var Ti=Me[I+1];if((Ti+Ri|0)>>>0>Me[Er+3]>>>0){var Oi=Se[I];Q(r,Oi,Ti);break r}var Ni=Or+Ri|0,Ii=Se[I];Pa(Ni,Ii,Ti,1);var Pi=Se[D]+Se[Se[P]+4>>2]|0;Se[D]=Pi;break r}var Di=Me[I+3];if((Di+Ri|0)>>>0>Me[Er+3]>>>0){var Li=Se[I+2];Q(r,Li,Di);break r}var Fi=Or+Ri|0,Xi=Se[I+2];Pa(Fi,Xi,Di,1);var ji=Se[D]+Se[Se[P]+12>>2]|0;Se[D]=ji;break r}if(34==(0|Ir)){var Ui=Se[pr+1];H(r,Ui);break r}if(35==(0|Ir)){var N=(0|r)>>2;if(0!=(32&Se[N]|0)){var xi=Se[Er+5];rr(r,a,xi)}var zi=a+4|0,Vi=0==(0|Se[zi>>2]);e:do if(!Vi){var O=(r+20|0)>>2,Bi=Se[O],Hi=0|Mr;Se[Hi>>2]=Bi,Se[O]=Mr,Se[Mr+4>>2]=a;var Ki=Mr+8|0;Se[Ki>>2]=0;var Yi=Se[Er+4];Se[Mr+12>>2]=Yi;var Gi=Se[zi>>2];H(r,Gi);var Wi=Se[Hi>>2];if(Se[O]=Wi,0!=(0|Se[Ki>>2]))break r;if(0!=(32&Se[N]|0))break;var Zi=Me[cr],Qi=0==(0|Zi);do if(!Qi){var qi=r+8|0,$i=Me[qi>>2];if($i>>>0>=Me[Er+3]>>>0)break;Se[qi>>2]=$i+1|0,Ae[Zi+$i|0]=32;break e}while(0);Y(r,32)}while(0);if(0!=(32&Se[N]|0))break r;var Ji=Se[Er+5];rr(r,a,Ji);break r}if(36==(0|Ir)){var T=(r+20|0)>>2,rv=Me[T],av=0|Cr;Se[hr]=rv,Se[T]=av,Se[hr+1]=a;var ev=Cr+8|0;Se[ev>>2]=0;var iv=Se[Er+4];Se[hr+3]=iv;for(var vv=rv,tv=1;;){var tv,vv;if(0==(0|vv))break;if((Se[Se[vv+4>>2]>>2]-22|0)>>>0>=3)break;var fv=vv+8|0;if(0==(0|Se[fv>>2])){if(tv>>>0>3){Z(r);break r}var _v=(tv<<4)+Cr|0,R=_v>>2,C=vv>>2;Se[R]=Se[C],Se[R+1]=Se[C+1],Se[R+2]=Se[C+2],Se[R+3]=Se[C+3];var sv=Se[T];Se[_v>>2]=sv,Se[T]=_v,Se[fv>>2]=1;var nv=tv+1|0}else var nv=tv;var nv,vv=Se[vv>>2],tv=nv}var ov=Se[pr+2];if(H(r,ov),Se[T]=rv,0!=(0|Se[ev>>2]))break r;if(tv>>>0>1){for(var lv=tv;;){var lv,bv=lv-1|0,kv=Se[((bv<<4)+4>>2)+hr];if($(r,kv),bv>>>0<=1)break;var lv=bv}var uv=Se[T]}else var uv=rv;var uv;ar(r,a,uv);break r}if(37==(0|Ir)){var M=(r+20|0)>>2,cv=Se[M],hv=0|Rr;Se[hv>>2]=cv,Se[M]=Rr,Se[Rr+4>>2]=a;var dv=Rr+8|0;Se[dv>>2]=0;var wv=Se[Er+4];Se[Rr+12>>2]=wv;var pv=a+4|0,Ev=Se[pr+2];H(r,Ev);var Av=0==(0|Se[dv>>2]);e:do if(Av){var gv=Me[cr],yv=0==(0|gv);do{if(!yv){var mv=r+8|0,Sv=Me[mv>>2];if(Sv>>>0>=Me[Er+3]>>>0){gr=187;break}Se[mv>>2]=Sv+1|0,Ae[gv+Sv|0]=32,gr=188;break}gr=187}while(0);187==gr&&Y(r,32);var Mv=Se[pv>>2];H(r,Mv);var Cv=Me[cr],Rv=0==(0|Cv);do if(!Rv){var S=(r+8|0)>>2,Tv=Me[S];if((Tv+3|0)>>>0>Me[Er+3]>>>0)break;var Ov=Cv+Tv|0;Ae[Ov]=Ae[0|He.__str135],Ae[Ov+1]=Ae[(0|He.__str135)+1],Ae[Ov+2]=Ae[(0|He.__str135)+2];var Nv=Se[S]+3|0;Se[S]=Nv;break e}while(0);Q(r,0|He.__str135,3)}while(0);var Iv=Se[hv>>2];Se[M]=Iv;break r}if(38==(0|Ir)||39==(0|Ir)){var Pv=Se[pr+1];H(r,Pv);var Dv=a+8|0;if(0==(0|Se[Dv>>2]))break r;var Lv=Me[cr],Fv=0==(0|Lv);do{if(!Fv){var m=(r+8|0)>>2,Xv=Me[m];if((Xv+2|0)>>>0>Me[Er+3]>>>0){gr=197;break}var jv=Lv+Xv|0;oe=8236,Ae[jv]=255&oe,oe>>=8,Ae[jv+1]=255&oe;var Uv=Se[m]+2|0;Se[m]=Uv,gr=198;break}gr=197}while(0);197==gr&&Q(r,0|He.__str136,2);var xv=Se[Dv>>2];H(r,xv);break r}if(40==(0|Ir)){var y=(r+8|0)>>2,zv=Me[y],g=(r+12|0)>>2;if((zv+8|0)>>>0>Me[g]>>>0)Q(r,0|He.__str137,8);else{var Vv=Or+zv|0,le=0|Vv;oe=1919250543,Ae[le]=255&oe,oe>>=8,Ae[le+1]=255&oe,oe>>=8,Ae[le+2]=255&oe,oe>>=8,Ae[le+3]=255&oe;var be=Vv+4|0;oe=1919906913,Ae[be]=255&oe,oe>>=8,Ae[be+1]=255&oe,oe>>=8,Ae[be+2]=255&oe,oe>>=8,Ae[be+3]=255&oe;var Bv=Se[y]+8|0;Se[y]=Bv}var A=(a+4|0)>>2,Hv=(Ae[Se[Se[A]+4>>2]]-97&255&255)<26;e:do if(Hv){var Kv=Me[cr],Yv=0==(0|Kv);do if(!Yv){var Gv=Me[y];if(Gv>>>0>=Me[g]>>>0)break;Se[y]=Gv+1|0,Ae[Kv+Gv|0]=32;break e}while(0);Y(r,32)}while(0);var Wv=Me[cr],Zv=0==(0|Wv);do{if(!Zv){var Qv=Me[y],qv=Me[A],$v=Me[qv+8>>2];if(($v+Qv|0)>>>0>Me[g]>>>0){var Jv=qv,rt=$v;break}var at=Wv+Qv|0,et=Se[qv+4>>2];Pa(at,et,$v,1);var it=Se[y]+Se[Se[A]+8>>2]|0;Se[y]=it;break r}var vt=Me[A],Jv=vt,rt=Se[vt+8>>2]}while(0);var rt,Jv,tt=Se[Jv+4>>2];Q(r,tt,rt);break r}if(41==(0|Ir)){var E=(r+8|0)>>2,ft=Me[E];if((ft+9|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str10180,9);else{for(var _t=Or+ft|0,ie=0|He.__str10180,ve=_t,te=ie+9;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var st=Se[E]+9|0;Se[E]=st}var nt=Se[pr+2];H(r,nt);break r}if(42==(0|Ir)){var p=(r+8|0)>>2,ot=Me[p];if((ot+9|0)>>>0>Me[Er+3]>>>0)Q(r,0|He.__str10180,9);else{for(var lt=Or+ot|0,ie=0|He.__str10180,ve=lt,te=ie+9;ie<te;ie++,ve++)Ae[ve]=Ae[ie];var bt=Se[p]+9|0;Se[p]=bt}er(r,a);break r}if(43==(0|Ir)){var kt=a+4|0,ut=Se[kt>>2],ct=42==(0|Se[ut>>2]);e:do if(ct){var w=(r+8|0)>>2,ht=Me[w],dt=r+12|0;ht>>>0<Me[dt>>2]>>>0?(Se[w]=ht+1|0,Ae[Or+ht|0]=40):Y(r,40);var wt=Se[kt>>2];er(r,wt);var pt=Me[cr],Et=0==(0|pt);do if(!Et){var At=Me[w];if(At>>>0>=Me[dt>>2]>>>0)break;Se[w]=At+1|0,Ae[pt+At|0]=41;break e}while(0);Y(r,41)}else ir(r,ut);while(0);var gt=Me[cr],yt=0==(0|gt);do{if(!yt){var mt=r+8|0,St=Me[mt>>2];if(St>>>0>=Me[Er+3]>>>0){gr=232;break}Se[mt>>2]=St+1|0,Ae[gt+St|0]=40,gr=233;break}gr=232}while(0);232==gr&&Y(r,40);var Mt=Se[pr+2];H(r,Mt);var Ct=Me[cr],Rt=0==(0|Ct);do if(!Rt){var Tt=r+8|0,Ot=Me[Tt>>2];if(Ot>>>0>=Me[Er+3]>>>0)break;Se[Tt>>2]=Ot+1|0,Ae[Ct+Ot|0]=41;break r}while(0);Y(r,41);break r}if(44==(0|Ir)){var d=(a+8|0)>>2;if(45==(0|Se[Se[d]>>2])){var h=(a+4|0)>>2,Nt=Se[h],It=40==(0|Se[Nt>>2]);do if(It){var Pt=Se[Nt+4>>2];if(1!=(0|Se[Pt+8>>2]))break;if(Ae[Se[Pt+4>>2]]<<24>>24!=62)break;var Dt=r+8|0,Lt=Me[Dt>>2];Lt>>>0<Me[Er+3]>>>0?(Se[Dt>>2]=Lt+1|0,Ae[Or+Lt|0]=40):Y(r,40)}while(0);var Ft=Me[cr],Xt=0==(0|Ft);do{if(!Xt){var jt=r+8|0,Ut=Me[jt>>2];if(Ut>>>0>=Me[Er+3]>>>0){gr=248;break}Se[jt>>2]=Ut+1|0,Ae[Ft+Ut|0]=40,gr=249;break}gr=248}while(0);248==gr&&Y(r,40);var xt=Se[Se[d]+4>>2];H(r,xt);var zt=Me[cr],Vt=0==(0|zt);do{if(!Vt){var c=(r+8|0)>>2,Bt=Me[c];if((Bt+2|0)>>>0>Me[Er+3]>>>0){gr=252;break}var Ht=zt+Bt|0;oe=8233,Ae[Ht]=255&oe,oe>>=8,Ae[Ht+1]=255&oe;var Kt=Se[c]+2|0;Se[c]=Kt,gr=253;break}gr=252}while(0);252==gr&&Q(r,0|He.__str139,2);var Yt=Se[h];ir(r,Yt);var Gt=Me[cr],Wt=0==(0|Gt);do{if(!Wt){var u=(r+8|0)>>2,Zt=Me[u];if((Zt+2|0)>>>0>Me[Er+3]>>>0){gr=256;break}var Qt=Gt+Zt|0;oe=10272,Ae[Qt]=255&oe,oe>>=8,Ae[Qt+1]=255&oe;var qt=Se[u]+2|0;Se[u]=qt,gr=257;break}gr=256}while(0);256==gr&&Q(r,0|He.__str140,2);var $t=Se[Se[d]+8>>2];H(r,$t);var Jt=Me[cr],rf=0==(0|Jt);do{if(!rf){var af=r+8|0,ef=Me[af>>2];if(ef>>>0>=Me[Er+3]>>>0){gr=260;break}Se[af>>2]=ef+1|0,Ae[Jt+ef|0]=41,gr=261;break}gr=260}while(0);260==gr&&Y(r,41);var vf=Se[h];if(40!=(0|Se[vf>>2]))break r;var tf=Se[vf+4>>2];if(1!=(0|Se[tf+8>>2]))break r;if(Ae[Se[tf+4>>2]]<<24>>24!=62)break r;var ff=Me[cr],_f=0==(0|ff);do if(!_f){var sf=r+8|0,nf=Me[sf>>2];if(nf>>>0>=Me[Er+3]>>>0)break;Se[sf>>2]=nf+1|0,Ae[ff+nf|0]=41;break r}while(0);Y(r,41);break r}Z(r);break r}if(45==(0|Ir)){Z(r);break r}if(46==(0|Ir)){var of=a+4|0,k=(a+8|0)>>2,lf=Se[k],bf=47==(0|Se[lf>>2]);do if(bf){if(48!=(0|Se[Se[lf+8>>2]>>2]))break;var b=(r+8|0)>>2,kf=Me[b],l=(r+12|0)>>2;kf>>>0<Me[l]>>>0?(Se[b]=kf+1|0,Ae[Or+kf|0]=40):Y(r,40);var uf=Se[Se[k]+4>>2];H(r,uf);var cf=Me[cr],hf=0==(0|cf);do{if(!hf){var df=Me[b];if((df+2|0)>>>0>Me[l]>>>0){gr=278;break}var wf=cf+df|0;oe=8233,Ae[wf]=255&oe,oe>>=8,Ae[wf+1]=255&oe;var pf=Se[b]+2|0;Se[b]=pf,gr=279;break}gr=278}while(0);278==gr&&Q(r,0|He.__str139,2);var Ef=Se[of>>2];ir(r,Ef);var Af=Me[cr],gf=0==(0|Af);do{if(!gf){var yf=Me[b];if((yf+2|0)>>>0>Me[l]>>>0){gr=282;break}var mf=Af+yf|0;oe=10272,Ae[mf]=255&oe,oe>>=8,Ae[mf+1]=255&oe;var Sf=Se[b]+2|0;Se[b]=Sf,gr=283;break}gr=282}while(0);282==gr&&Q(r,0|He.__str140,2);var Mf=Se[Se[Se[k]+8>>2]+4>>2];H(r,Mf);var Cf=Me[cr],Rf=0==(0|Cf);do{if(!Rf){var Tf=Me[b];if((Tf+5|0)>>>0>Me[l]>>>0){gr=286;break}var Of=Cf+Tf|0;Ae[Of]=Ae[0|He.__str141],Ae[Of+1]=Ae[(0|He.__str141)+1],Ae[Of+2]=Ae[(0|He.__str141)+2],Ae[Of+3]=Ae[(0|He.__str141)+3],Ae[Of+4]=Ae[(0|He.__str141)+4];var Nf=Se[b]+5|0;Se[b]=Nf,gr=287;break}gr=286}while(0);286==gr&&Q(r,0|He.__str141,5);var If=Se[Se[Se[k]+8>>2]+8>>2];H(r,If);var Pf=Me[cr],Df=0==(0|Pf);do if(!Df){var Lf=Me[b];if(Lf>>>0>=Me[l]>>>0)break;Se[b]=Lf+1|0,Ae[Pf+Lf|0]=41;break r}while(0);Y(r,41);break r}while(0);Z(r);break r}if(47==(0|Ir)||48==(0|Ir)){Z(r);break r}if(49==(0|Ir)||50==(0|Ir)){var Ff=a+4|0,Xf=Se[Ff>>2],jf=33==(0|Se[Xf>>2]);do{if(jf){var Uf=Me[Se[Xf+4>>2]+16>>2];if(1==(0|Uf)||2==(0|Uf)||3==(0|Uf)||4==(0|Uf)||5==(0|Uf)||6==(0|Uf)){var xf=a+8|0;if(0!=(0|Se[Se[xf>>2]>>2])){var zf=Uf;break}if(50==(0|Ir)){var Vf=r+8|0,Bf=Me[Vf>>2];Bf>>>0<Me[Er+3]>>>0?(Se[Vf>>2]=Bf+1|0,Ae[Or+Bf|0]=45):Y(r,45)}var Hf=Se[xf>>2];if(H(r,Hf),2==(0|Uf)){var Kf=Me[cr],Yf=0==(0|Kf);do if(!Yf){var Gf=r+8|0,Wf=Me[Gf>>2];if(Wf>>>0>=Me[Er+3]>>>0)break;Se[Gf>>2]=Wf+1|0,Ae[Kf+Wf|0]=117;break r}while(0);Y(r,117);break r}if(3==(0|Uf)){var Zf=Me[cr],Qf=0==(0|Zf);do if(!Qf){var qf=r+8|0,$f=Me[qf>>2];if($f>>>0>=Me[Er+3]>>>0)break;Se[qf>>2]=$f+1|0,Ae[Zf+$f|0]=108;break r}while(0);Y(r,108);break r}if(4==(0|Uf)){var Jf=Me[cr],r_=0==(0|Jf);do if(!r_){var o=(r+8|0)>>2,a_=Me[o];if((a_+2|0)>>>0>Me[Er+3]>>>0)break;var e_=Jf+a_|0;oe=27765,Ae[e_]=255&oe,oe>>=8,Ae[e_+1]=255&oe;var i_=Se[o]+2|0;Se[o]=i_;break r}while(0);Q(r,0|He.__str142,2);break r}if(5==(0|Uf)){var v_=Me[cr],t_=0==(0|v_);do if(!t_){var n=(r+8|0)>>2,f_=Me[n];if((f_+2|0)>>>0>Me[Er+3]>>>0)break;var __=v_+f_|0;oe=27756,Ae[__]=255&oe,oe>>=8,Ae[__+1]=255&oe;var s_=Se[n]+2|0;Se[n]=s_;break r}while(0);Q(r,0|He.__str143,2);break r}if(6==(0|Uf)){var n_=Me[cr],o_=0==(0|n_);do if(!o_){var s=(r+8|0)>>2,l_=Me[s];if((l_+3|0)>>>0>Me[Er+3]>>>0)break;var b_=n_+l_|0;Ae[b_]=Ae[0|He.__str144],Ae[b_+1]=Ae[(0|He.__str144)+1],Ae[b_+2]=Ae[(0|He.__str144)+2];var k_=Se[s]+3|0;Se[s]=k_;break r}while(0);Q(r,0|He.__str144,3);break r}break r}if(7==(0|Uf)){var _=Se[pr+2]>>2;if(0!=(0|Se[_])){var zf=7;break}if(!(1==(0|Se[_+2])&49==(0|Ir))){var zf=Uf;break}var u_=Ae[Se[_+1]]<<24>>24;if(48==(0|u_)){var f=(r+8|0)>>2,c_=Me[f];if((c_+5|0)>>>0>Me[Er+3]>>>0){Q(r,0|He.__str145,5);break r}var h_=Or+c_|0;Ae[h_]=Ae[0|He.__str145],Ae[h_+1]=Ae[(0|He.__str145)+1],Ae[h_+2]=Ae[(0|He.__str145)+2],Ae[h_+3]=Ae[(0|He.__str145)+3],Ae[h_+4]=Ae[(0|He.__str145)+4];var d_=Se[f]+5|0;Se[f]=d_;break r}if(49==(0|u_)){var t=(r+8|0)>>2,w_=Me[t];if((w_+4|0)>>>0>Me[Er+3]>>>0){Q(r,0|He.__str146,4);break r}var p_=Or+w_|0;oe=1702195828,Ae[p_]=255&oe,oe>>=8,Ae[p_+1]=255&oe,oe>>=8,Ae[p_+2]=255&oe,oe>>=8,Ae[p_+3]=255&oe;var E_=Se[t]+4|0;Se[t]=E_;break r}var zf=Uf;break}var zf=Uf;break}var zf=0}while(0);var zf,v=(r+8|0)>>2,A_=Me[v],i=(r+12|0)>>2;A_>>>0<Me[i]>>>0?(Se[v]=A_+1|0,Ae[Or+A_|0]=40):Y(r,40);var g_=Se[Ff>>2];H(r,g_);var y_=Me[cr],m_=0==(0|y_);do{if(!m_){var S_=Me[v];if(S_>>>0>=Me[i]>>>0){gr=335;break}Se[v]=S_+1|0,Ae[y_+S_|0]=41,gr=336;break}gr=335}while(0);335==gr&&Y(r,41);var M_=50==(0|Se[Nr>>2]);e:do if(M_){var C_=Me[cr],R_=0==(0|C_);do if(!R_){var T_=Me[v];if(T_>>>0>=Me[i]>>>0)break;Se[v]=T_+1|0,Ae[C_+T_|0]=45;break e}while(0);Y(r,45)}while(0);if(8==(0|zf)){var O_=Me[cr],N_=0==(0|O_);do{if(!N_){var I_=Me[v];if(I_>>>0>=Me[i]>>>0){gr=345;break}Se[v]=I_+1|0,Ae[O_+I_|0]=91,gr=346;break}gr=345}while(0);345==gr&&Y(r,91);var P_=Se[pr+2];H(r,P_);var D_=Me[cr],L_=0==(0|D_);do if(!L_){var F_=Me[v];if(F_>>>0>=Me[i]>>>0)break;Se[v]=F_+1|0,Ae[D_+F_|0]=93;break r}while(0);Y(r,93);break r}var X_=Se[pr+2];H(r,X_);break r}Z(r);break r}}while(0);var e=(r+20|0)>>2,j_=Se[e],U_=0|Sr;Se[U_>>2]=j_,Se[e]=Sr,Se[Sr+4>>2]=a;var x_=Sr+8|0;Se[x_>>2]=0;var z_=Se[Er+4];Se[Sr+12>>2]=z_;var V_=Se[pr+1];H(r,V_),0==(0|Se[x_>>2])&&$(r,a);var B_=Se[U_>>2];Se[e]=B_}while(0);Oe=Ar}function K(r,a,e,i){var v=i>>2;Se[v]=r,Se[v+1]=r+e|0,Se[v+2]=a,Se[v+3]=r,Se[v+6]=e<<1,Se[v+5]=0,Se[v+9]=e,Se[v+8]=0,Se[v+10]=0,Se[v+11]=0,Se[v+12]=0}function Y(r,a){var e,i=r+4|0,v=Me[i>>2],t=0==(0|v);do if(!t){var e=(r+8|0)>>2,f=Me[e];if(f>>>0<Me[r+12>>2]>>>0)var _=v,s=f;else{tr(r,1);var n=Me[i>>2];if(0==(0|n))break;var _=n,s=Se[e]}var s,_;Ae[_+s|0]=255&a;var o=Se[e]+1|0;Se[e]=o}while(0)}function G(r,a,e,i){var v,t=i>>2,f=Oe;Oe+=4;var _=f,v=_>>2,s=0==(0|r);do if(s){if(0==(0|i)){var n=0;break}Se[t]=-3;var n=0}else{var o=0==(0|e);if(0!=(0|a)&o){if(0==(0|i)){var n=0;break}Se[t]=-3;var n=0}else{var l=W(r,_);if(0==(0|l)){if(0==(0|i)){var n=0;break}if(1==(0|Se[v])){Se[t]=-1;var n=0}else{Se[t]=-2;var n=0}}else{var b=0==(0|a);do if(b){if(o){var k=l;break}var u=Se[v];Se[e>>2]=u;var k=l}else{var c=Ca(l);if(c>>>0<Me[e>>2]>>>0){Ra(a,l);va(l);var k=a}else{va(a);var h=Se[v];Se[e>>2]=h;var k=l}}while(0);var k;if(0==(0|i)){var n=k;break}Se[t]=0;var n=k}}}while(0);var n;return Oe=f,n}function W(r,a){var e,i=Oe;Oe+=52;var v,t=i,e=t>>2;Se[a>>2]=0;var f=Ca(r),_=Ae[r]<<24>>24==95;do{if(_){if(Ae[r+1|0]<<24>>24==90){var s=0;v=13;break}v=3;break}v=3}while(0);do if(3==v){var n=Na(r,0|He.__str117,8);if(0!=(0|n)){var s=1;v=13;break}var o=Ae[r+8|0];if(o<<24>>24!=46&&o<<24>>24!=95&&o<<24>>24!=36){var s=1;v=13;break}var l=r+9|0,b=Ae[l];if(b<<24>>24!=68&&b<<24>>24!=73){
var s=1;v=13;break}if(Ae[r+10|0]<<24>>24!=95){var s=1;v=13;break}var k=f+29|0,u=Jr(k);if(0==(0|u)){Se[a>>2]=1;var c=0;v=19;break}Ae[l]<<24>>24==73?Pa(u,0|He.__str118,30,1):Pa(u,0|He.__str119,29,1);var h=r+11|0,c=(Ia(u,h),u);v=19;break}while(0);if(13==v){var s;K(r,17,f,t);var d=Se[e+6],w=Ta(),p=Oe;Oe+=12*d,Oe=Oe+3>>2<<2;var E=Oe;if(Oe+=4*Se[e+9],Oe=Oe+3>>2<<2,Se[e+4]=p,Se[e+7]=E,s)var A=N(t),g=A;else var y=T(t,1),g=y;var g,m=Ae[Se[e+3]]<<24>>24==0?g:0,S=Se[e+12]+f+10*Se[e+10]|0;if(0==(0|m))var M=0;else var C=S/8+S|0,R=B(17,m,C,a),M=R;var M;Oa(w);var c=M}var c;return Oe=i,c}function Z(r){var a=r+4|0,e=Se[a>>2];va(e),Se[a>>2]=0}function Q(r,a,e){var i,v=r+4|0,t=Me[v>>2],f=0==(0|t);do if(!f){var i=(r+8|0)>>2,_=Me[i];if((_+e|0)>>>0>Me[r+12>>2]>>>0){tr(r,e);var s=Me[v>>2];if(0==(0|s))break;var n=s,o=Se[i]}else var n=t,o=_;var o,n;Pa(n+o|0,a,e,1);var l=Se[i]+e|0;Se[i]=l}while(0)}function q(r,a,e){var i,v,t=a+e|0,f=(0|e)>0;r:do if(f)for(var _=t,s=r+4|0,i=(r+8|0)>>2,n=r+12|0,o=a;;){var o,l=(_-o|0)>3;a:do{if(l){if(Ae[o]<<24>>24!=95){v=21;break}if(Ae[o+1|0]<<24>>24!=95){v=21;break}if(Ae[o+2|0]<<24>>24!=85){v=21;break}for(var b=o+3|0,k=0;;){var k,b;if(b>>>0>=t>>>0){v=21;break a}var u=ge[b],c=u<<24>>24;if((u-48&255&255)<10)var h=c-48|0;else if((u-65&255&255)<6)var h=c-55|0;else{if((u-97&255&255)>=6)break;var h=c-87|0}var h,b=b+1|0,k=(k<<4)+h|0}if(!(u<<24>>24==95&k>>>0<256)){v=21;break}var d=Me[s>>2],w=0==(0|d);do if(!w){var p=Me[i];if(p>>>0>=Me[n>>2]>>>0)break;Se[i]=p+1|0,Ae[d+p|0]=255&k;var E=b;v=25;break a}while(0);Y(r,k);var E=b;v=25;break}v=21}while(0);a:do if(21==v){var A=Me[s>>2],g=0==(0|A);do if(!g){var y=Me[i];if(y>>>0>=Me[n>>2]>>>0)break;var m=Ae[o];Se[i]=y+1|0,Ae[A+y|0]=m;var E=o;break a}while(0);var S=Ae[o]<<24>>24;Y(r,S);var E=o}while(0);var E,M=E+1|0;if(M>>>0>=t>>>0)break r;var o=M}while(0)}function $(r,a){var e,i,v,t,f,_,s,n=r>>2,o=Se[a>>2];r:do if(22==(0|o)||25==(0|o)){var l=Me[n+1],b=0==(0|l);do if(!b){var _=(r+8|0)>>2,k=Me[_];if((k+9|0)>>>0>Me[n+3]>>>0)break;for(var u=l+k|0,c=0|He.__str147,h=u,d=c+9;c<d;c++,h++)Ae[h]=Ae[c];var w=Se[_]+9|0;Se[_]=w;break r}while(0);Q(r,0|He.__str147,9)}else if(23==(0|o)||26==(0|o)){var p=Me[n+1],E=0==(0|p);do if(!E){var f=(r+8|0)>>2,A=Me[f];if((A+9|0)>>>0>Me[n+3]>>>0)break;for(var g=p+A|0,c=0|He.__str148,h=g,d=c+9;c<d;c++,h++)Ae[h]=Ae[c];var y=Se[f]+9|0;Se[f]=y;break r}while(0);Q(r,0|He.__str148,9)}else if(24==(0|o)||27==(0|o)){var m=Me[n+1],S=0==(0|m);do if(!S){var t=(r+8|0)>>2,M=Me[t];if((M+6|0)>>>0>Me[n+3]>>>0)break;var C=m+M|0;Ae[C]=Ae[0|He.__str149],Ae[C+1]=Ae[(0|He.__str149)+1],Ae[C+2]=Ae[(0|He.__str149)+2],Ae[C+3]=Ae[(0|He.__str149)+3],Ae[C+4]=Ae[(0|He.__str149)+4],Ae[C+5]=Ae[(0|He.__str149)+5];var R=Se[t]+6|0;Se[t]=R;break r}while(0);Q(r,0|He.__str149,6)}else if(28==(0|o)){var T=Me[n+1],O=0==(0|T);do{if(!O){var N=r+8|0,I=Me[N>>2];if(I>>>0>=Me[n+3]>>>0){s=17;break}Se[N>>2]=I+1|0,Ae[T+I|0]=32,s=18;break}s=17}while(0);17==s&&Y(r,32);var P=Se[a+8>>2];H(r,P)}else if(29==(0|o)){if(0!=(4&Se[n]|0))break;var D=Me[n+1],L=0==(0|D);do if(!L){var F=r+8|0,X=Me[F>>2];if(X>>>0>=Me[n+3]>>>0)break;Se[F>>2]=X+1|0,Ae[D+X|0]=42;break r}while(0);Y(r,42)}else if(30==(0|o)){var j=Me[n+1],U=0==(0|j);do if(!U){var x=r+8|0,z=Me[x>>2];if(z>>>0>=Me[n+3]>>>0)break;Se[x>>2]=z+1|0,Ae[j+z|0]=38;break r}while(0);Y(r,38)}else if(31==(0|o)){var V=Me[n+1],B=0==(0|V);do if(!B){var v=(r+8|0)>>2,K=Me[v];if((K+8|0)>>>0>Me[n+3]>>>0)break;var G=V+K|0,W=0|G;oe=1886220131,Ae[W]=255&oe,oe>>=8,Ae[W+1]=255&oe,oe>>=8,Ae[W+2]=255&oe,oe>>=8,Ae[W+3]=255&oe;var Z=G+4|0;oe=544761196,Ae[Z]=255&oe,oe>>=8,Ae[Z+1]=255&oe,oe>>=8,Ae[Z+2]=255&oe,oe>>=8,Ae[Z+3]=255&oe;var q=Se[v]+8|0;Se[v]=q;break r}while(0);Q(r,0|He.__str150,8)}else if(32==(0|o)){var $=Me[n+1],J=0==(0|$);do if(!J){var i=(r+8|0)>>2,rr=Me[i];if((rr+10|0)>>>0>Me[n+3]>>>0)break;for(var ar=$+rr|0,c=0|He.__str151,h=ar,d=c+10;c<d;c++,h++)Ae[h]=Ae[c];var er=Se[i]+10|0;Se[i]=er;break r}while(0);Q(r,0|He.__str151,10)}else if(37==(0|o)){var ir=r+4|0,vr=Me[ir>>2],tr=0==(0|vr);do{if(!tr){var fr=r+8|0,_r=Me[fr>>2];if(0!=(0|_r)&&Ae[vr+(_r-1)|0]<<24>>24==40){s=42;break}if(_r>>>0>=Me[n+3]>>>0){s=41;break}Se[fr>>2]=_r+1|0,Ae[vr+_r|0]=32,s=42;break}s=41}while(0);41==s&&Y(r,32);var sr=Se[a+4>>2];H(r,sr);var nr=Me[ir>>2],or=0==(0|nr);do if(!or){var e=(r+8|0)>>2,lr=Me[e];if((lr+3|0)>>>0>Me[n+3]>>>0)break;var br=nr+lr|0;Ae[br]=Ae[0|He.__str135],Ae[br+1]=Ae[(0|He.__str135)+1],Ae[br+2]=Ae[(0|He.__str135)+2];var kr=Se[e]+3|0;Se[e]=kr;break r}while(0);Q(r,0|He.__str135,3)}else if(3==(0|o)){var ur=Se[a+4>>2];H(r,ur)}else H(r,a);while(0)}function J(r){var a=r+20|0,e=Se[a>>2];if((0|e)<(0|Se[r+24>>2])){var i=Se[r+16>>2]+12*e|0,v=e+1|0;Se[a>>2]=v;var t=i}else var t=0;var t;return t}function rr(r,a,e){var i,v,t,f,_=r>>2,s=e,t=s>>2,n=0;r:for(;;){var n,s,o=0==(0|s);do if(!o){if(0!=(0|Se[t+2]))break;var l=Se[Se[t+1]>>2];if(29==(0|l)||30==(0|l)){f=9;break r}if(22==(0|l)||23==(0|l)||24==(0|l)||28==(0|l)||31==(0|l)||32==(0|l)||37==(0|l)){var b=Se[_+1];f=12;break r}var s=Se[t],t=s>>2,n=1;continue r}while(0);if(0!=(0|Se[a+4>>2])&0==(0|n)){f=9;break}var k=0,u=r+4|0,v=u>>2;f=22;break}do if(9==f){var c=Se[_+1];if(0==(0|c)){f=17;break}var h=Se[_+2];if(0==(0|h)){var d=c;f=13;break}var w=Ae[c+(h-1)|0];if(w<<24>>24==40||w<<24>>24==42){f=18;break}var b=c;f=12;break}while(0);do if(12==f){var b;if(0==(0|b)){f=17;break}var d=b;f=13;break}while(0);do if(13==f){var d,p=r+8|0,E=Me[p>>2];if(0!=(0|E)&&Ae[d+(E-1)|0]<<24>>24==32){f=18;break}if(E>>>0>=Me[_+3]>>>0){f=17;break}Se[p>>2]=E+1|0,Ae[d+E|0]=32,f=18;break}while(0);do if(17==f){Y(r,32),f=18;break}while(0);r:do if(18==f){var A=r+4|0,g=Me[A>>2],y=0==(0|g);do if(!y){var m=r+8|0,S=Me[m>>2];if(S>>>0>=Me[_+3]>>>0)break;Se[m>>2]=S+1|0,Ae[g+S|0]=40;var k=1,u=A,v=u>>2;break r}while(0);Y(r,40);var k=1,u=A,v=u>>2}while(0);var u,k,i=(r+20|0)>>2,M=Se[i];Se[i]=0,vr(r,e,0);r:do if(k){var C=Me[v],R=0==(0|C);do if(!R){var T=r+8|0,O=Me[T>>2];if(O>>>0>=Me[_+3]>>>0)break;Se[T>>2]=O+1|0,Ae[C+O|0]=41;break r}while(0);Y(r,41)}while(0);var N=Me[v],I=0==(0|N);do{if(!I){var P=r+8|0,D=Me[P>>2];if(D>>>0>=Me[_+3]>>>0){f=30;break}Se[P>>2]=D+1|0,Ae[N+D|0]=40,f=31;break}f=30}while(0);30==f&&Y(r,40);var L=Se[a+8>>2];0!=(0|L)&&H(r,L);var F=Me[v],X=0==(0|F);do{if(!X){var j=r+8|0,U=Me[j>>2];if(U>>>0>=Me[_+3]>>>0){f=36;break}Se[j>>2]=U+1|0,Ae[F+U|0]=41,f=37;break}f=36}while(0);36==f&&Y(r,41),vr(r,e,1),Se[i]=M}function ar(r,a,e){var i,v,t,f=r>>2,_=0==(0|e);do{if(!_){var s=e,v=s>>2;r:for(;;){var s;if(0==(0|s)){var n=1;t=14;break}if(0==(0|Se[v+2])){var o=36==(0|Se[Se[v+1]>>2]),l=1&o^1;if(o){var n=l;t=14;break}var b=r+4|0,k=Me[b>>2],u=0==(0|k);do{if(!u){var i=(r+8|0)>>2,c=Me[i];if((c+2|0)>>>0>Me[f+3]>>>0){t=9;break}var h=k+c|0;oe=10272,Ae[h]=255&oe,oe>>=8,Ae[h+1]=255&oe;var d=Se[i]+2|0;Se[i]=d,vr(r,e,0),t=10;break}t=9}while(0);9==t&&(Q(r,0|He.__str140,2),vr(r,e,0));var w=Me[b>>2],p=0==(0|w);do if(!p){var E=r+8|0,A=Me[E>>2];if(A>>>0>=Me[f+3]>>>0)break;Se[E>>2]=A+1|0,Ae[w+A|0]=41;var g=l;t=15;break r}while(0);Y(r,41);var g=l;t=15;break}var s=Se[v],v=s>>2}if(14==t){var n;vr(r,e,0);var g=n}var g;if(0!=(0|g)){t=17;break}var y=r+4|0;t=21;break}t=17}while(0);r:do if(17==t){var m=r+4|0,S=Me[m>>2],M=0==(0|S);do if(!M){var C=r+8|0,R=Me[C>>2];if(R>>>0>=Me[f+3]>>>0)break;Se[C>>2]=R+1|0,Ae[S+R|0]=32;var y=m;break r}while(0);Y(r,32);var y=m}while(0);var y,T=Me[y>>2],O=0==(0|T);do{if(!O){var N=r+8|0,I=Me[N>>2];if(I>>>0>=Me[f+3]>>>0){t=24;break}Se[N>>2]=I+1|0,Ae[T+I|0]=91,t=25;break}t=24}while(0);24==t&&Y(r,91);var P=Se[a+4>>2];0!=(0|P)&&H(r,P);var D=Me[y>>2],L=0==(0|D);do{if(!L){var F=r+8|0,X=Me[F>>2];if(X>>>0>=Me[f+3]>>>0){t=30;break}Se[F>>2]=X+1|0,Ae[D+X|0]=93,t=31;break}t=30}while(0);30==t&&Y(r,93)}function er(r,a){var e,i,v,t,f,_,s=Oe;Oe+=8;var n,o=s,_=(a+4|0)>>2,l=Se[_];if(4==(0|Se[l>>2])){var f=(r+20|0)>>2,b=Se[f];Se[f]=0;var t=(r+16|0)>>2,k=Se[t],u=0|o;Se[u>>2]=k,Se[t]=o;var c=Se[_];Se[o+4>>2]=c;var h=Se[c+4>>2];H(r,h);var d=Se[u>>2];Se[t]=d;var v=(r+4|0)>>2,w=Me[v],p=0==(0|w);do{if(!p){var i=(r+8|0)>>2,E=Me[i],A=0==(0|E);do if(!A){if(Ae[w+(E-1)|0]<<24>>24!=60)break;E>>>0<Me[r+12>>2]>>>0?(Se[i]=E+1|0,Ae[w+E|0]=32):Y(r,32)}while(0);var g=Me[v];if(0==(0|g)){n=12;break}var y=Me[i];if(y>>>0>=Me[r+12>>2]>>>0){n=12;break}Se[i]=y+1|0,Ae[g+y|0]=60,n=13;break}n=12}while(0);12==n&&Y(r,60);var m=Se[Se[_]+8>>2];H(r,m);var S=Me[v],M=0==(0|S);do{if(!M){var e=(r+8|0)>>2,C=Me[e],R=0==(0|C);do if(!R){if(Ae[S+(C-1)|0]<<24>>24!=62)break;C>>>0<Me[r+12>>2]>>>0?(Se[e]=C+1|0,Ae[S+C|0]=32):Y(r,32)}while(0);var T=Me[v];if(0==(0|T)){n=22;break}var O=Me[e];if(O>>>0>=Me[r+12>>2]>>>0){n=22;break}Se[e]=O+1|0,Ae[T+O|0]=62,n=23;break}n=22}while(0);22==n&&Y(r,62),Se[f]=b}else H(r,l);Oe=s}function ir(r,a){var e,i=40==(0|Se[a>>2]);r:do if(i){var v=Me[r+4>>2],t=0==(0|v);do{if(!t){var e=(r+8|0)>>2,f=Me[e],_=a+4|0,s=Me[_>>2],n=Me[s+8>>2];if((n+f|0)>>>0>Me[r+12>>2]>>>0){var o=s,l=n;break}var b=v+f|0,k=Se[s+4>>2];Pa(b,k,n,1);var u=Se[e]+Se[Se[_>>2]+8>>2]|0;Se[e]=u;break r}var c=Me[a+4>>2],o=c,l=Se[c+8>>2]}while(0);var l,o,h=Se[o+4>>2];Q(r,h,l)}else H(r,a);while(0)}function vr(r,a,e){var i,v,t,f,_,f=(r+4|0)>>2,s=0==(0|e),t=(r+16|0)>>2;r:do if(s)for(var n=a;;){var n;if(0==(0|n)){_=29;break r}if(0==(0|Se[f])){_=29;break r}var o=n+8|0,l=0==(0|Se[o>>2]);do if(l){var b=n+4|0;if((Se[Se[b>>2]>>2]-25|0)>>>0<3)break;Se[o>>2]=1;var k=Me[t],u=Se[n+12>>2];Se[t]=u;var c=Me[b>>2],h=Se[c>>2];if(35==(0|h)){var d=n,w=k,p=c;_=14;break r}if(36==(0|h)){var E=n,A=k,g=c;_=15;break r}if(2==(0|h)){var y=k,m=b;_=16;break r}$(r,c),Se[t]=k}while(0);var n=Se[n>>2]}else for(var S=a;;){var S;if(0==(0|S)){_=29;break r}if(0==(0|Se[f])){_=29;break r}var M=S+8|0;if(0==(0|Se[M>>2])){Se[M>>2]=1;var C=Me[t],R=Se[S+12>>2];Se[t]=R;var T=S+4|0,O=Me[T>>2],N=Se[O>>2];if(35==(0|N)){var d=S,w=C,p=O;_=14;break r}if(36==(0|N)){var E=S,A=C,g=O;_=15;break r}if(2==(0|N)){var y=C,m=T;_=16;break r}$(r,O),Se[t]=C}var S=Se[S>>2]}while(0);if(14==_){var p,w,d,I=Se[d>>2];rr(r,p,I),Se[t]=w}else if(15==_){var g,A,E,P=Se[E>>2];ar(r,g,P),Se[t]=A}else if(16==_){var m,y,v=(r+20|0)>>2,D=Se[v];Se[v]=0;var L=Se[Se[m>>2]+4>>2];H(r,L),Se[v]=D;var F=0==(4&Se[r>>2]|0),X=Me[f],j=0!=(0|X);r:do if(F){do if(j){var i=(r+8|0)>>2,U=Me[i];if((U+2|0)>>>0>Me[r+12>>2]>>>0)break;var x=X+U|0;oe=14906,Ae[x]=255&oe,oe>>=8,Ae[x+1]=255&oe;var z=Se[i]+2|0;Se[i]=z;break r}while(0);Q(r,0|He.__str120,2)}else{do if(j){var V=r+8|0,B=Me[V>>2];if(B>>>0>=Me[r+12>>2]>>>0)break;Se[V>>2]=B+1|0,Ae[X+B|0]=46;break r}while(0);Y(r,46)}while(0);var K=Me[Se[m>>2]+8>>2],G=(Se[K>>2]-25|0)>>>0<3;r:do if(G)for(var W=K;;){var W,Z=Me[W+4>>2];if((Se[Z>>2]-25|0)>>>0>=3){var q=Z;break r}var W=Z}else var q=K;while(0);var q;H(r,q),Se[t]=y}}function tr(r,a){var e,e=(r+4|0)>>2,i=Se[e],v=0==(0|i);r:do if(!v){for(var t=Se[r+8>>2]+a|0,f=r+12|0,_=Se[f>>2],s=i;;){var s,_;if(t>>>0<=_>>>0)break r;var n=_<<1,o=fa(s,n);if(0==(0|o))break;Se[e]=o,Se[f>>2]=n;var _=n,s=o}var l=Se[e];va(l),Se[e]=0,Se[r+24>>2]=1}while(0)}function fr(r,a,e){var i,v=J(r),i=v>>2;return 0!=(0|v)&&(Se[i]=21,Se[i+1]=a,Se[i+2]=e),v}function _r(r){var a,a=(r+12|0)>>2,e=Se[a],i=Ae[e]<<24>>24;if(88==(0|i)){var v=e+1|0;Se[a]=v;var t=nr(r),f=Se[a],_=f+1|0;Se[a]=_;var s=Ae[f]<<24>>24==69?t:0,n=s}else if(76==(0|i))var o=or(r),n=o;else var l=N(r),n=l;var n;return n}function sr(r){var a,a=(r+12|0)>>2,e=Se[a],i=Ae[e];if(i<<24>>24==110){var v=e+1|0;Se[a]=v;var t=1,f=Ae[v],_=v}else var t=0,f=i,_=e;var _,f,t,s=(f-48&255&255)<10;r:do if(s)for(var n=f,o=0,l=_;;){var l,o,n,b=(n<<24>>24)-48+10*o|0,k=l+1|0;Se[a]=k;var u=ge[k];if((u-48&255&255)>=10){var c=b;break r}var n=u,o=b,l=k}else var c=0;while(0);var c,h=0==(0|t)?c:0|-c;return h}function nr(r){var a,e,a=(r+12|0)>>2,i=Se[a],v=Ae[i];do{if(v<<24>>24==76){var t=or(r),f=t;e=21;break}if(v<<24>>24==84){var _=x(r),f=_;e=21;break}if(v<<24>>24==115){if(Ae[i+1|0]<<24>>24!=114){e=8;break}var s=i+2|0;Se[a]=s;var n=N(r),o=br(r);if(Ae[Se[a]]<<24>>24==73){var l=z(r),b=D(r,4,o,l),k=D(r,1,n,b),f=k;e=21;break}var u=D(r,1,n,o),f=u;e=21;break}e=8}while(0);r:do if(8==e){var c=kr(r);if(0==(0|c)){var f=0;break}var h=0|c,d=Se[h>>2],w=40==(0|d);do{if(w){var p=c+4|0,E=r+48|0,A=Se[Se[p>>2]+8>>2]-2+Se[E>>2]|0;Se[E>>2]=A;var g=Se[h>>2];if(40!=(0|g)){var y=g;e=13;break}var m=Se[p>>2],S=Se[m>>2],M=Da(S,0|He.__str90);if(0!=(0|M)){var C=m;e=15;break}var R=N(r),T=D(r,43,c,R),f=T;break r}var y=d;e=13}while(0);do if(13==e){var y;if(40==(0|y)){var C=Se[c+4>>2];e=15;break}if(41==(0|y)){var O=c+4|0;e=17;break}if(42==(0|y)){e=18;break}var f=0;break r}while(0);do if(15==e){var C,O=C+12|0;e=17;break}while(0);do if(17==e){var O,I=Se[O>>2];if(1==(0|I))break;if(2==(0|I)){var P=nr(r),L=nr(r),F=D(r,45,P,L),X=D(r,44,c,F);return X}if(3==(0|I)){var j=nr(r),U=nr(r),V=nr(r),B=D(r,48,U,V),H=D(r,47,j,B),K=D(r,46,c,H);return K}var f=0;break r}while(0);var Y=nr(r),G=D(r,43,c,Y);return G}while(0);var f;return f}function or(r){var a,a=(r+12|0)>>2,e=Se[a],i=e+1|0;Se[a]=i;var v=Ae[e]<<24>>24==76;r:do if(v){if(Ae[i]<<24>>24==95)var t=T(r,0),f=t;else{var _=N(r);if(0==(0|_)){var s=0;break}var n=33==(0|Se[_>>2]);do if(n){var o=Se[_+4>>2];if(0==(0|Se[o+16>>2]))break;var l=r+48|0,b=Se[l>>2]-Se[o+4>>2]|0;Se[l>>2]=b}while(0);var k=Se[a];if(Ae[k]<<24>>24==110){var u=k+1|0;Se[a]=u;var c=50,h=u}else var c=49,h=k;for(var h,c,d=h;;){var d,w=Ae[d];if(w<<24>>24==69)break;if(w<<24>>24==0){var s=0;break r}var p=d+1|0;Se[a]=p;var d=p}var E=lr(r,h,d-h|0),A=D(r,c,_,E),f=A}var f,g=Se[a],y=g+1|0;Se[a]=y;var m=Ae[g]<<24>>24==69?f:0,s=m}else var s=0;while(0);var s;return s}function lr(r,a,e){var i=J(r),v=m(i,a,e),t=0==(0|v)?0:i;return t}function br(r){var a=r+12|0,e=Me[a>>2],i=ge[e],v=(i-48&255&255)<10;do if(v)var t=L(r),f=t;else if((i-97&255&255)<26){var _=kr(r);if(0==(0|_)){var f=0;break}if(40!=(0|Se[_>>2])){var f=_;break}var s=r+48|0,n=Se[Se[_+4>>2]+8>>2]+Se[s>>2]+7|0;Se[s>>2]=n;var f=_}else if(i<<24>>24==67||i<<24>>24==68)var o=hr(r),f=o;else{if(i<<24>>24!=76){var f=0;break}Se[a>>2]=e+1|0;var l=L(r);if(0==(0|l)){var f=0;break}var b=dr(r),k=0==(0|b)?0:l,f=k}while(0);var f;return f}function kr(r){var a,e,a=(r+12|0)>>2,i=Se[a],v=i+1|0;Se[a]=v;var t=ge[i],f=i+2|0;Se[a]=f;var _=ge[v];do{if(t<<24>>24==118){if((_-48&255&255)>=10){var s=49,n=0;e=6;break}var o=(_<<24>>24)-48|0,l=L(r),b=ur(r,o,l),k=b;e=14;break}if(t<<24>>24==99){if(_<<24>>24!=118){var s=49,n=0;e=6;break}var u=N(r),c=D(r,42,u,0),k=c;e=14;break}var s=49,n=0;e=6}while(0);r:do if(6==e){for(;;){var n,s,h=(s-n)/2+n|0,d=(h<<4)+ri|0,w=Se[d>>2],p=Ae[w],E=t<<24>>24==p<<24>>24;if(E&&_<<24>>24==Ae[w+1|0]<<24>>24)break;var A=t<<24>>24<p<<24>>24;do if(A)var g=h,y=n;else{if(E&&_<<24>>24<Ae[w+1|0]<<24>>24){var g=h,y=n;break}var g=s,y=h+1|0}while(0);var y,g;if((0|y)==(0|g)){var k=0;break r}var s=g,n=y}var m=cr(r,d),k=m}while(0);var k;return k}function ur(r,a,e){var i=J(r),v=S(i,a,e),t=0==(0|v)?0:i;return t}function cr(r,a){var e=J(r);return 0!=(0|e)&&(Se[e>>2]=40,Se[e+4>>2]=a),e}function hr(r){var a,e,i=Se[r+44>>2],e=i>>2,v=0==(0|i);do if(!v){var t=Se[e];if(0==(0|t)){var f=r+48|0,_=Se[f>>2]+Se[e+2]|0;Se[f>>2]=_}else{if(21!=(0|t))break;var s=r+48|0,n=Se[s>>2]+Se[e+2]|0;Se[s>>2]=n}}while(0);var a=(r+12|0)>>2,o=Se[a],l=o+1|0;Se[a]=l;var b=Ae[o]<<24>>24;do if(67==(0|b)){var k=o+2|0;Se[a]=k;var u=Ae[l]<<24>>24;if(49==(0|u))var c=1;else if(50==(0|u))var c=2;else{if(51!=(0|u)){var h=0;break}var c=3}var c,d=wr(r,c,i),h=d}else if(68==(0|b)){var w=o+2|0;Se[a]=w;var p=Ae[l]<<24>>24;if(48==(0|p))var E=1;else if(49==(0|p))var E=2;else{if(50!=(0|p)){var h=0;break}var E=3}var E,A=pr(r,E,i),h=A}else var h=0;while(0);var h;return h}function dr(r){var a=r+12|0,e=Se[a>>2];if(Ae[e]<<24>>24==95){var i=e+1|0;Se[a>>2]=i;var v=sr(r),t=v>>>31^1}else var t=1;var t;return t}function wr(r,a,e){var i=J(r),v=M(i,a,e),t=0==(0|v)?0:i;return t}function pr(r,a,e){var i=J(r),v=C(i,a,e),t=0==(0|v)?0:i;return t}function Er(r,a){var e=J(r);return 0!=(0|e)&&(Se[e>>2]=5,Se[e+4>>2]=a),e}function Ar(r){var a,a=(r+12|0)>>2,e=Se[a],i=Ae[e]<<24>>24;do if(78==(0|i))var v=gr(r),t=v;else if(90==(0|i))var f=yr(r),t=f;else if(76==(0|i))var _=br(r),t=_;else if(83==(0|i)){if(Ae[e+1|0]<<24>>24==116){var s=e+2|0;Se[a]=s;var n=lr(r,0|He.__str152,3),o=br(r),l=D(r,1,n,o),b=r+48|0,k=Se[b>>2]+3|0;Se[b>>2]=k;var u=0,c=l}else var h=V(r,0),u=1,c=h;var c,u;if(Ae[Se[a]]<<24>>24!=73){var t=c;break}if(0==(0|u)){var d=R(r,c);if(0==(0|d)){var t=0;break}}var w=z(r),p=D(r,4,c,w),t=p}else{var E=br(r);if(Ae[Se[a]]<<24>>24!=73){var t=E;break}var A=R(r,E);if(0==(0|A)){var t=0;break}var g=z(r),y=D(r,4,E,g),t=y}while(0);var t;return t}function gr(r){var a,e=Oe;Oe+=4;var i=e,a=(r+12|0)>>2,v=Se[a],t=v+1|0;Se[a]=t;var f=Ae[v]<<24>>24==78;do if(f){var _=I(r,i,1);if(0==(0|_)){var s=0;break}var n=mr(r);if(Se[_>>2]=n,0==(0|n)){var s=0;break}var o=Se[a],l=o+1|0;if(Se[a]=l,Ae[o]<<24>>24!=69){var s=0;break}var s=Se[i>>2]}else var s=0;while(0);var s;return Oe=e,s}function yr(r){var a,a=(r+12|0)>>2,e=Se[a],i=e+1|0;Se[a]=i;var v=Ae[e]<<24>>24==90;do if(v){var t=O(r,0),f=Se[a],_=f+1|0;if(Se[a]=_,Ae[f]<<24>>24!=69){var s=0;break}if(Ae[_]<<24>>24==115){var n=f+2|0;Se[a]=n;var o=dr(r);if(0==(0|o)){var s=0;break}var l=lr(r,0|He.__str168,14),b=D(r,2,t,l),s=b}else{var k=Ar(r),u=dr(r);if(0==(0|u)){var s=0;break}var c=D(r,2,t,k),s=c}}else var s=0;while(0);var s;return s}function mr(r){var a,e=r+12|0,i=0;r:for(;;){var i,v=ge[Se[e>>2]];if(v<<24>>24==0){var t=0;break}var f=(v-48&255&255)<10|(v-97&255&255)<26;do{if(!f){if(v<<24>>24==76||v<<24>>24==68||v<<24>>24==67){a=5;break}if(v<<24>>24==83){var _=V(r,1),s=_;a=10;break}if(v<<24>>24==73){if(0==(0|i)){var t=0;break r}var n=z(r),o=4,l=n;a=11;break}if(v<<24>>24==84){var b=x(r),s=b;a=10;break}if(v<<24>>24==69){var t=i;break r}var t=0;break r}a=5}while(0);do if(5==a){var k=br(r),s=k;a=10;break}while(0);do if(10==a){var s;if(0==(0|i)){var u=s;a=12;break}var o=1,l=s;a=11;break}while(0);if(11==a)var l,o,c=D(r,o,i,l),u=c;var u;if(v<<24>>24!=83)if(Ae[Se[e>>2]]<<24>>24!=69){var h=R(r,u);if(0==(0|h)){var t=0;break}var i=u}else var i=u;else var i=u}var t;return t}function Sr(r,a){var e,i,v=Oe;Oe+=4;var t=v,i=t>>2,e=(r+12|0)>>2,f=Se[e];if(Ae[f]<<24>>24==74){var _=f+1|0;Se[e]=_;var s=1}else var s=a;var s;Se[i]=0;var n=s,o=0,l=t;r:for(;;)for(var l,o,n,b=n,k=o;;){var k,b,u=Ae[Se[e]];if(u<<24>>24==0||u<<24>>24==69){var c=Se[i];if(0==(0|c)){var h=0;break r}var d=0==(0|Se[c+8>>2]);do if(d){var w=Se[c+4>>2];if(33!=(0|Se[w>>2])){var p=c;break}var E=Se[w+4>>2];if(9!=(0|Se[E+16>>2])){var p=c;break}var A=r+48|0,g=Se[A>>2]-Se[E+4>>2]|0;Se[A>>2]=g,Se[i]=0;var p=0}else var p=c;while(0);var p,y=D(r,35,k,p),h=y;break r}var m=N(r);if(0==(0|m)){var h=0;break r}if(0==(0|b)){var S=D(r,38,m,0);if(Se[l>>2]=S,0==(0|S)){var h=0;break r}var n=0,o=k,l=S+8|0;continue r}var b=0,k=m}var h;return Oe=v,h}function Mr(r){for(var a=r;;){var a;if(0==(0|a)){var e=0;break}var i=Se[a>>2];if(1!=(0|i)&&2!=(0|i)){if(6==(0|i)||7==(0|i)||42==(0|i)){var e=1;break}var e=0;break}var a=Se[a+8>>2]}var e;return e}function Cr(r){var a=r>>2;Se[a+3]=0,Se[a+2]=0,Se[a+1]=0,Se[a]=0,Se[a+4]=0}function Rr(r,a){var e,e=(r+12|0)>>2,i=Se[e],v=(Se[r+4>>2]-i|0)<(0|a);r:do if(v)var t=0;else{var f=i+a|0;Se[e]=f;var _=0==(4&Se[r+8>>2]|0);do if(!_){if(Ae[f]<<24>>24!=36)break;var s=a+(i+1)|0;Se[e]=s}while(0);var n=(0|a)>9;do if(n){var o=La(i,0|He.__str117,8);if(0!=(0|o))break;var l=Ae[i+8|0];if(l<<24>>24!=46&&l<<24>>24!=95&&l<<24>>24!=36)break;if(Ae[i+9|0]<<24>>24!=78)break;var b=r+48|0,k=22-a+Se[b>>2]|0;Se[b>>2]=k;var u=lr(r,0|He.__str169,21),t=u;break r}while(0);var c=lr(r,i,a),t=c}while(0);var t;return t}function Tr(r){var a,e,e=(r+48|0)>>2,i=Se[e],v=i+20|0;Se[e]=v;var a=(r+12|0)>>2,t=Se[a],f=t+1|0;Se[a]=f;var _=Ae[t];do if(_<<24>>24==84){var s=t+2|0;Se[a]=s;var n=Ae[f]<<24>>24;if(86==(0|n)){var o=i+15|0;Se[e]=o;var l=N(r),b=D(r,8,l,0),k=b}else if(84==(0|n)){var u=i+10|0;Se[e]=u;var c=N(r),h=D(r,9,c,0),k=h}else if(73==(0|n))var d=N(r),w=D(r,11,d,0),k=w;else if(83==(0|n))var p=N(r),E=D(r,12,p,0),k=E;else if(104==(0|n)){var A=Nr(r,104);if(0==(0|A)){var k=0;break}var g=O(r,0),y=D(r,14,g,0),k=y}else if(118==(0|n)){var m=Nr(r,118);if(0==(0|m)){var k=0;break}var S=O(r,0),M=D(r,15,S,0),k=M}else if(99==(0|n)){var C=Nr(r,0);if(0==(0|C)){var k=0;break}var R=Nr(r,0);if(0==(0|R)){var k=0;break}var T=O(r,0),I=D(r,16,T,0),k=I}else if(67==(0|n)){var P=N(r),L=sr(r);if((0|L)<0){var k=0;break}var F=Se[a],X=F+1|0;if(Se[a]=X,Ae[F]<<24>>24!=95){var k=0;break}var j=N(r),U=Se[e]+5|0;Se[e]=U;var x=D(r,10,j,P),k=x}else if(70==(0|n))var z=N(r),V=D(r,13,z,0),k=V;else{if(74!=(0|n)){var k=0;break}var B=N(r),H=D(r,17,B,0),k=H}}else if(_<<24>>24==71){var K=t+2|0;Se[a]=K;var Y=Ae[f]<<24>>24;if(86==(0|Y))var G=Ar(r),W=D(r,18,G,0),k=W;else if(82==(0|Y))var Z=Ar(r),Q=D(r,19,Z,0),k=Q;else{if(65!=(0|Y)){var k=0;break}var q=O(r,0),$=D(r,20,q,0),k=$}}else var k=0;while(0);var k;return k}function Or(r){for(var a,e=r,a=e>>2;;){var e;if(0==(0|e)){var i=0;break}var v=Se[a];if(4==(0|v)){var t=Se[a+1],f=Mr(t),i=0==(0|f)&1;break}if(25!=(0|v)&&26!=(0|v)&&27!=(0|v)){var i=0;break}var e=Se[a+1],a=e>>2}var i;return i}function Nr(r,a){var e;if(0==(0|a)){var i=r+12|0,v=Se[i>>2],t=v+1|0;Se[i>>2]=t;var f=Ae[v]<<24>>24}else var f=a;var f;do{if(104==(0|f)){var _=(sr(r),r+12|0);e=7;break}if(118==(0|f)){var s=(sr(r),r+12|0),n=Se[s>>2],o=n+1|0;if(Se[s>>2]=o,Ae[n]<<24>>24!=95){var l=0;e=8;break}var _=(sr(r),s);e=7;break}var l=0;e=8}while(0);if(7==e){var _,b=Se[_>>2],k=b+1|0;Se[_>>2]=k;var l=Ae[b]<<24>>24==95&1}var l;return l}function Ir(r){var a,e,i=r>>2,v=Oe;Oe+=56;var t,f=v,_=v+8,s=v+16,n=v+36,e=(0|r)>>2,o=Se[e],l=0==(8192&o|0);r:do{if(l){var a=(r+12|0)>>2,b=Se[a];if(Ae[b]<<24>>24!=63){var k=0;t=111;break}var u=b+1|0;Se[a]=u;var c=Ae[u];do if(c<<24>>24==63){if(Ae[b+2|0]<<24>>24==36){var h=b+3|0;if(Ae[h]<<24>>24!=63){var d=5;t=90;break}Se[a]=h;var w=6,p=h}else var w=0,p=u;var p,w,E=p+1|0;Se[a]=E;var A=Ae[E]<<24>>24;do if(48==(0|A)){var g=1;t=81}else{if(49==(0|A)){var g=2;t=81;break}if(50!=(0|A)){if(51==(0|A)){var y=0|He.__str2172,m=E;t=82;break}if(52==(0|A)){var y=0|He.__str3173,m=E;t=82;break}if(53==(0|A)){var y=0|He.__str4174,m=E;t=82;break}if(54==(0|A)){var y=0|He.__str5175,m=E;t=82;break}if(55==(0|A)){var y=0|He.__str6176,m=E;t=82;break}if(56==(0|A)){var y=0|He.__str7177,m=E;t=82;break}if(57==(0|A)){var y=0|He.__str8178,m=E;t=82;break}if(65==(0|A)){var y=0|He.__str9179,m=E;t=82;break}if(66==(0|A)){Se[a]=p+2|0;var S=0|He.__str10180,M=3;t=88;break}if(67==(0|A)){var y=0|He.__str11181,m=E;t=82;break}if(68==(0|A)){var y=0|He.__str12182,m=E;t=82;break}if(69==(0|A)){var y=0|He.__str13183,m=E;t=82;break}if(70==(0|A)){var y=0|He.__str14184,m=E;t=82;break}if(71==(0|A)){var y=0|He.__str15185,m=E;t=82;break}if(72==(0|A)){var y=0|He.__str16186,m=E;t=82;break}if(73==(0|A)){var y=0|He.__str17187,m=E;t=82;break}if(74==(0|A)){var y=0|He.__str18188,m=E;t=82;break}if(75==(0|A)){var y=0|He.__str19189,m=E;t=82;break}if(76==(0|A)){var y=0|He.__str20190,m=E;t=82;break}if(77==(0|A)){var y=0|He.__str21191,m=E;t=82;break}if(78==(0|A)){var y=0|He.__str22192,m=E;t=82;break}if(79==(0|A)){var y=0|He.__str23193,m=E;t=82;break}if(80==(0|A)){var y=0|He.__str24194,m=E;t=82;break}if(81==(0|A)){var y=0|He.__str25195,m=E;t=82;break}if(82==(0|A)){var y=0|He.__str26196,m=E;t=82;break}if(83==(0|A)){var y=0|He.__str27197,m=E;t=82;break}if(84==(0|A)){var y=0|He.__str28198,m=E;t=82;break}if(85==(0|A)){var y=0|He.__str29199,m=E;t=82;break}if(86==(0|A)){var y=0|He.__str30200,m=E;t=82;break}if(87==(0|A)){var y=0|He.__str31201,m=E;t=82;break}if(88==(0|A)){var y=0|He.__str32202,m=E;t=82;break}if(89==(0|A)){var y=0|He.__str33203,m=E;t=82;break}if(90==(0|A)){var y=0|He.__str34204,m=E;t=82;break}if(95==(0|A)){var C=p+2|0;Se[a]=C;var R=Ae[C]<<24>>24;if(48==(0|R)){var y=0|He.__str35205,m=C;t=82;break}if(49==(0|R)){var y=0|He.__str36206,m=C;t=82;break}if(50==(0|R)){var y=0|He.__str37207,m=C;t=82;break}if(51==(0|R)){var y=0|He.__str38208,m=C;t=82;break}if(52==(0|R)){var y=0|He.__str39209,m=C;t=82;break}if(53==(0|R)){var y=0|He.__str40210,m=C;t=82;break}if(54==(0|R)){var y=0|He.__str41211,m=C;t=82;break}if(55==(0|R)){var y=0|He.__str42212,m=C;t=82;break}if(56==(0|R)){var y=0|He.__str43213,m=C;t=82;break}if(57==(0|R)){var y=0|He.__str44214,m=C;t=82;break}if(65==(0|R)){var y=0|He.__str45215,m=C;t=82;break}if(66==(0|R)){var y=0|He.__str46216,m=C;t=82;break}if(67==(0|R)){Se[a]=p+3|0;var T=0|He.__str47217;t=84;break}if(68==(0|R)){var y=0|He.__str48218,m=C;t=82;break}if(69==(0|R)){var y=0|He.__str49219,m=C;t=82;break}if(70==(0|R)){var y=0|He.__str50220,m=C;t=82;break}if(71==(0|R)){var y=0|He.__str51221,m=C;t=82;break}if(72==(0|R)){var y=0|He.__str52222,m=C;t=82;break}if(73==(0|R)){var y=0|He.__str53223,m=C;t=82;break}if(74==(0|R)){var y=0|He.__str54224,m=C;t=82;break}if(75==(0|R)){var y=0|He.__str55225,m=C;t=82;break}if(76==(0|R)){var y=0|He.__str56226,m=C;t=82;break}if(77==(0|R)){var y=0|He.__str57227,m=C;t=82;break}if(78==(0|R)){var y=0|He.__str58228,m=C;t=82;break}if(79==(0|R)){var y=0|He.__str59229,m=C;t=82;break}if(82==(0|R)){var O=4|o;Se[e]=O;var N=p+3|0;Se[a]=N;var I=Ae[N]<<24>>24;if(48==(0|I)){Se[a]=p+4|0,Cr(s);var P=(Pr(r,_,s,0),Se[_>>2]),D=Se[_+4>>2],L=Dr(r,0|He.__str60230,(ne=Oe,Oe+=8,Se[ne>>2]=P,Se[ne+4>>2]=D,ne)),F=Se[a]-1|0;Se[a]=F;var y=L,m=F;t=82;break}if(49==(0|I)){Se[a]=p+4|0;var X=Lr(r),j=Lr(r),U=Lr(r),x=Lr(r),z=Se[a]-1|0;Se[a]=z;var V=Dr(r,0|He.__str61231,(ne=Oe,Oe+=16,Se[ne>>2]=X,Se[ne+4>>2]=j,Se[ne+8>>2]=U,Se[ne+12>>2]=x,ne)),y=V,m=Se[a];t=82;break}if(50==(0|I)){var y=0|He.__str62232,m=N;t=82;break}if(51==(0|I)){var y=0|He.__str63233,m=N;t=82;break}if(52==(0|I)){var y=0|He.__str64234,m=N;t=82;break}var y=0,m=N;t=82;break}if(83==(0|R)){var y=0|He.__str65235,m=C;t=82;break}if(84==(0|R)){var y=0|He.__str66236,m=C;t=82;break}if(85==(0|R)){var y=0|He.__str67237,m=C;t=82;break}if(86==(0|R)){var y=0|He.__str68238,m=C;t=82;break}if(88==(0|R)){var y=0|He.__str69239,m=C;t=82;break}if(89==(0|R)){var y=0|He.__str70240,m=C;t=82;break}var k=0;t=111;break r}var k=0;t=111;break r}var y=0|He.__str1171,m=E;t=82}while(0);do{if(81==t){var g;Se[a]=p+2|0;var B=g;t=83;break}if(82==t){var m,y;if(Se[a]=m+1|0,1==(0|w)||2==(0|w)){var B=w;t=83;break}if(4==(0|w)){var T=y;t=84;break}if(6!=(0|w)){var S=y,M=w;t=88;break}Cr(n);var H=Xr(r,n,0,60,62);if(0==(0|H))var K=y;else var Y=Dr(r,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=y,Se[ne+4>>2]=H,ne)),K=Y;var K;Se[i+6]=0;var S=K,M=w;t=88;break}}while(0);if(83==t){var B,G=r+40|0,W=Fr(r,0|He._symbol_demangle_dashed_null,-1,G);if(0==(0|W)){var k=0;t=111;break r}var d=B;t=90;break}if(84==t){var T;Se[i+4]=T;var Z=1,Q=T;t=109;break r}if(88==t){var M,S,q=r+40|0,$=Fr(r,S,-1,q);if(0==(0|$)){var k=0;t=111;break r}var d=M;t=90;break}}else{if(c<<24>>24==36){var J=b+2|0;Se[a]=J;var rr=jr(r);Se[i+4]=rr;var ar=0!=(0|rr)&1;t=107;break}var d=0;t=90}while(0);if(90==t){var d,er=Me[a],ir=Ae[er]<<24>>24;if(64==(0|ir))Se[a]=er+1|0;else if(36==(0|ir))t=93;else{var vr=zr(r);if(0==(0|vr)){var k=-1;t=111;break}}if(5==(0|d)){var tr=r+20|0,fr=Se[tr>>2]+1|0;Se[tr>>2]=fr}else if(1==(0|d)||2==(0|d)){if(Me[i+11]>>>0<2){var k=-1;t=111;break}var _r=r+56|0,sr=Me[_r>>2],nr=Se[sr+4>>2];if(1==(0|d))Se[sr>>2]=nr;else{var or=Dr(r,0|He.__str71241,(ne=Oe,Oe+=4,Se[ne>>2]=nr,ne)),lr=Se[_r>>2];Se[lr>>2]=or}var br=4|Se[e];Se[e]=br}else if(3==(0|d)){var kr=Se[e]&-5;Se[e]=kr}var ur=ge[Se[a]];if((ur-48&255&255)<10)var cr=Vr(r),ar=cr;else if((ur-65&255&255)<26)var hr=Br(r,3==(0|d)&1),ar=hr;else{if(ur<<24>>24!=36){var k=-1;t=111;break}var dr=Hr(r),ar=dr}}var ar;if(0==(0|ar)){var k=-1;t=111;break}var Z=ar,Q=Se[i+4];t=109;break}var wr=Pr(r,f,0,0);if(0==(0|wr)){var k=-1;t=111;break}var pr=Se[f>>2],Er=Se[f+4>>2],Ar=Dr(r,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=pr,Se[ne+4>>2]=Er,ne));Se[i+4]=Ar;var Z=1,Q=Ar;t=109;break}while(0);do if(109==t){var Q,Z;if(0!=(0|Q)){var k=Z;break}Xa(0|He.__str72242,1499,0|He.___func___symbol_demangle,0|He.__str73243);var k=Z}while(0);var k;return Oe=v,k}function Pr(r,a,e,i){var v,t,f,_=Oe;Oe+=24;var s=_,n=_+4,o=_+8,l=_+16,b=_+20;0==(0|a)&&Xa(0|He.__str72242,829,0|He.___func___demangle_datatype,0|He.__str121291);var f=(a+4|0)>>2;Se[f]=0;var t=(0|a)>>2;Se[t]=0;var v=(r+12|0)>>2,k=Me[v],u=k+1|0;Se[v]=u;var c=Ae[k],h=c<<24>>24;do if(95==(0|h)){Se[v]=k+2|0;var d=Ae[u],w=Zr(d);Se[t]=w}else if(67==(0|h)||68==(0|h)||69==(0|h)||70==(0|h)||71==(0|h)||72==(0|h)||73==(0|h)||74==(0|h)||75==(0|h)||77==(0|h)||78==(0|h)||79==(0|h)||88==(0|h)||90==(0|h)){var p=Qr(c);Se[t]=p}else if(84==(0|h)||85==(0|h)||86==(0|h)||89==(0|h)){var E=qr(r);if(0==(0|E))break;var A=0==(32768&Se[r>>2]|0);do if(A)if(84==(0|h))var g=0|He.__str122292;else if(85==(0|h))var g=0|He.__str123293;else if(86==(0|h))var g=0|He.__str124294;else{if(89!=(0|h)){var g=0;break}var g=0|He.__str125295}else var g=0;while(0);var g,y=Dr(r,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=g,Se[ne+4>>2]=E,ne));Se[t]=y}else if(63==(0|h))if(0==(0|i))$r(a,r,e,63,0);else{var m=Lr(r);if(0==(0|m))break;var S=Dr(r,0|He.__str126296,(ne=Oe,Oe+=4,Se[ne>>2]=m,ne));Se[t]=S}else if(65==(0|h)||66==(0|h))$r(a,r,e,c,i);else if(81==(0|h)||82==(0|h)||83==(0|h)){var M=0==(0|i)?80:c;$r(a,r,e,M,i)}else if(80==(0|h))if(((Ae[u]<<24>>24)-48|0)>>>0<10){var C=k+2|0;if(Se[v]=C,Ae[u]<<24>>24!=54)break;var R=r+44|0,T=Se[R>>2];Se[v]=k+3|0;var O=Ae[C],N=Se[r>>2]&-17,I=Ur(O,s,n,N);if(0==(0|I))break;var P=Pr(r,o,e,0);if(0==(0|P))break;var D=Xr(r,e,1,40,41);if(0==(0|D))break;Se[R>>2]=T;var L=Se[o>>2],F=Se[o+4>>2],X=Se[s>>2],j=Dr(r,0|He.__str127297,(ne=Oe,Oe+=12,Se[ne>>2]=L,Se[ne+4>>2]=F,Se[ne+8>>2]=X,ne));Se[t]=j;var U=Dr(r,0|He.__str128298,(ne=Oe,Oe+=4,Se[ne>>2]=D,ne));Se[f]=U}else $r(a,r,e,80,i);else if(87==(0|h)){if(Ae[u]<<24>>24!=52)break;Se[v]=k+2|0;var x=qr(r);if(0==(0|x))break;if(0==(32768&Se[r>>2]|0)){var z=Dr(r,0|He.__str129299,(ne=Oe,Oe+=4,Se[ne>>2]=x,ne));Se[t]=z}else Se[t]=x}else if(48==(0|h)||49==(0|h)||50==(0|h)||51==(0|h)||52==(0|h)||53==(0|h)||54==(0|h)||55==(0|h)||56==(0|h)||57==(0|h)){var V=h<<1,B=V-96|0,H=Yr(e,B);Se[t]=H;var K=V-95|0,Y=Yr(e,K);Se[f]=Y}else if(36==(0|h)){var G=k+2|0;Se[v]=G;var W=Ae[u]<<24>>24;if(48==(0|W)){var Z=Lr(r);Se[t]=Z}else if(68==(0|W)){var Q=Lr(r);if(0==(0|Q))break;var q=Dr(r,0|He.__str130300,(ne=Oe,Oe+=4,Se[ne>>2]=Q,ne));Se[t]=q}else if(70==(0|W)){var $=Lr(r);if(0==(0|$))break;var J=Lr(r);if(0==(0|J))break;var rr=Dr(r,0|He.__str131301,(ne=Oe,Oe+=8,Se[ne>>2]=$,Se[ne+4>>2]=J,ne));Se[t]=rr}else if(71==(0|W)){var ar=Lr(r);if(0==(0|ar))break;var er=Lr(r);if(0==(0|er))break;var ir=Lr(r);if(0==(0|ir))break;var vr=Dr(r,0|He.__str132302,(ne=Oe,Oe+=12,Se[ne>>2]=ar,Se[ne+4>>2]=er,Se[ne+8>>2]=ir,ne));Se[t]=vr}else if(81==(0|W)){var tr=Lr(r);if(0==(0|tr))break;var fr=Dr(r,0|He.__str133303,(ne=Oe,Oe+=4,Se[ne>>2]=tr,ne));Se[t]=fr}else{if(36!=(0|W))break;if(Ae[G]<<24>>24!=67)break;Se[v]=k+3|0;var _r=xr(r,l,b);if(0==(0|_r))break;var sr=Pr(r,a,e,i);if(0==(0|sr))break;var nr=Se[t],or=Se[l>>2],lr=Dr(r,0|He.__str83253,(ne=Oe,Oe+=8,Se[ne>>2]=nr,Se[ne+4>>2]=or,ne));Se[t]=lr}}while(0);var br=0!=(0|Se[t])&1;return Oe=_,br}function Dr(r,a){var e,i=Oe;Oe+=4;var v=i,e=v>>2,t=v;Se[t>>2]=arguments[Dr.length];var f=1,_=0;r:for(;;){var _,f,s=Ae[a+_|0];do{if(s<<24>>24==0)break r;if(s<<24>>24==37){var n=_+1|0,o=Ae[a+n|0]<<24>>24;if(115==(0|o)){var l=Se[e],b=l,k=l+4|0;Se[e]=k;var u=Se[b>>2];if(0==(0|u)){var c=f,h=n;break}var d=Ca(u),c=d+f|0,h=n;break}if(99==(0|o)){var w=Se[e]+4|0;Se[e]=w;var c=f+1|0,h=n;break}if(37==(0|o))var p=n;else var p=_;var p,c=f+1|0,h=p}else var c=f+1|0,h=_}while(0);var h,c,f=c,_=h+1|0}var E=Wr(r,f);if(0==(0|E))var A=0;else{Se[t>>2]=arguments[Dr.length];var g=E,y=0;r:for(;;){var y,g,m=Ae[a+y|0];do{if(m<<24>>24==0)break r;if(m<<24>>24==37){var S=y+1|0,M=Ae[a+S|0]<<24>>24;if(115==(0|M)){var C=Se[e],R=C,T=C+4|0;Se[e]=T;var O=Se[R>>2];if(0==(0|O)){var N=g,I=S;break}var P=Ca(O);Pa(g,O,P,1);var N=g+P|0,I=S;break}if(99==(0|M)){var D=Se[e],L=D,F=D+4|0;Se[e]=F,Ae[g]=255&Se[L>>2];var N=g+1|0,I=S;break}if(37==(0|M))var X=S;else var X=y;var X;Ae[g]=37;var N=g+1|0,I=X}else{Ae[g]=m;var N=g+1|0,I=y}}while(0);var I,N,g=N,y=I+1|0}Ae[g]=0;var A=E}var A;return Oe=i,A}function Lr(r){var a,a=(r+12|0)>>2,e=Se[a],i=Ae[e];if(i<<24>>24==63){var v=e+1|0;Se[a]=v;var t=1,f=v,_=Ae[v]}else var t=0,f=e,_=i;var _,f,t,s=(_-48&255&255)<9;do if(s){var n=Wr(r,3),o=0!=(0|t);o&&(Ae[n]=45);var l=Ae[Se[a]]+1&255;Ae[n+t|0]=l;var b=o?2:1;
Ae[n+b|0]=0;var k=Se[a]+1|0;Se[a]=k;var u=n}else if(_<<24>>24==57){var c=Wr(r,4),h=0!=(0|t);h&&(Ae[c]=45),Ae[c+t|0]=49;var d=h?2:1;Ae[c+d|0]=48;var w=h?3:2;Ae[c+w|0]=0;var p=Se[a]+1|0;Se[a]=p;var u=c}else{if((_-65&255&255)>=16){var u=0;break}for(var E=0,A=f;;){var A,E,g=A+1|0;Se[a]=g;var y=(Ae[A]<<24>>24)+((E<<4)-65)|0,m=ge[g];if((m-65&255&255)>=16)break;var E=y,A=g}if(m<<24>>24!=64){var u=0;break}var S=Wr(r,17),M=0!=(0|t)?0|He.__str119289:0|ii,C=(za(S,0|He.__str118288,(ne=Oe,Oe+=8,Se[ne>>2]=M,Se[ne+4>>2]=y,ne)),Se[a]+1|0);Se[a]=C;var u=S}while(0);var u;return u}function Fr(r,a,e,i){var v,t,f,_;0==(0|a)&&Xa(0|He.__str72242,212,0|He.___func___str_array_push,0|He.__str115285),0==(0|i)&&Xa(0|He.__str72242,213,0|He.___func___str_array_push,0|He.__str116286);var f=(i+12|0)>>2,s=Me[f],n=0==(0|s);do{if(n){Se[f]=32;var o=Wr(r,128);if(0==(0|o)){var l=0;_=17;break}Se[i+16>>2]=o,_=11;break}if(Me[i+8>>2]>>>0<s>>>0){_=11;break}var b=s<<3,k=Wr(r,b);if(0==(0|k)){var l=0;_=17;break}var u=k,c=i+16|0,h=Se[c>>2],d=Se[f]<<2;Pa(k,h,d,1);var w=Se[f]<<1;Se[f]=w,Se[c>>2]=u,_=11;break}while(0);do if(11==_){if((0|e)==-1)var p=Ca(a),E=p;else var E=e;var E,A=ja(a),g=E+1|0,y=Wr(r,g),t=(i+4|0)>>2,v=(i+16|0)>>2,m=(Se[t]<<2)+Se[v]|0;Se[m>>2]=y;var S=Se[Se[v]+(Se[t]<<2)>>2];if(0==(0|S)){Xa(0|He.__str72242,233,0|He.___func___str_array_push,0|He.__str117287);var M=Se[Se[v]+(Se[t]<<2)>>2]}else var M=S;var M;Pa(M,A,E,1),va(A),Ae[Se[Se[v]+(Se[t]<<2)>>2]+g|0]=0;var C=Se[t]+1|0;Se[t]=C;var R=i+8|0;if(C>>>0<Me[R>>2]>>>0){var l=1;break}Se[R>>2]=C;var l=1}while(0);var l;return l}function Xr(r,a,e,i,v){var t,f,_=Oe;Oe+=28;var s,n=_,o=_+8;Cr(o);var f=(r+12|0)>>2,l=0==(0|e),t=(0|n)>>2,b=n+4|0;r:do if(l)for(;;){var k=Se[f],u=Ae[k];if(u<<24>>24==0){s=12;break r}if(u<<24>>24==64){var c=k;s=7;break r}var h=Pr(r,n,a,1);if(0==(0|h)){var d=0;s=25;break r}var w=Se[t],p=Se[b>>2],E=Dr(r,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=w,Se[ne+4>>2]=p,ne)),A=Fr(r,E,-1,o);if(0==(0|A)){var d=0;s=25;break r}var g=Se[t],y=Da(g,0|He.__str110280);if(0==(0|y)){s=12;break r}}else for(;;){var m=Se[f],S=Ae[m];if(S<<24>>24==0){s=12;break r}if(S<<24>>24==64){var c=m;s=7;break r}var M=Pr(r,n,a,1);if(0==(0|M)){var d=0;s=25;break r}var C=Se[t],R=Da(C,0|He.__str84254);if(0==(0|R)){s=13;break r}var T=Se[b>>2],O=Dr(r,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=C,Se[ne+4>>2]=T,ne)),N=Fr(r,O,-1,o);if(0==(0|N)){var d=0;s=25;break r}var I=Se[t],P=Da(I,0|He.__str110280);if(0==(0|P)){s=12;break r}}while(0);do if(7==s){var c;Se[f]=c+1|0,s=12;break}while(0);do if(12==s){if(l){s=14;break}s=13;break}while(0);do if(13==s){var D=Se[f],L=D+1|0;if(Se[f]=L,Ae[D]<<24>>24==90){s=14;break}var d=0;s=25;break}while(0);r:do if(14==s){var F=o+4|0,X=Me[F>>2];do{if(0!=(0|X)){if(1==(0|X)){var j=o+16|0,U=Se[Se[j>>2]>>2],x=Da(U,0|He.__str84254);if(0==(0|x)){s=17;break}var z=j;s=20;break}var V=o+16|0;if(X>>>0<=1){var z=V;s=20;break}for(var B=0,H=1;;){var H,B,K=Se[Se[V>>2]+(H<<2)>>2],Y=Dr(r,0|He.__str112282,(ne=Oe,Oe+=8,Se[ne>>2]=B,Se[ne+4>>2]=K,ne)),G=H+1|0;if(G>>>0>=Me[F>>2]>>>0)break;var B=Y,H=G}if(0==(0|Y)){var z=V;s=20;break}var W=Y,Z=Y;s=21;break}s=17}while(0);if(17==s){var Q=i<<24>>24,q=v<<24>>24,$=Dr(r,0|He.__str111281,(ne=Oe,Oe+=8,Se[ne>>2]=Q,Se[ne+4>>2]=q,ne)),d=$;break}if(20==s)var z,W=Se[Se[z>>2]>>2],Z=0;var Z,W,J=v<<24>>24,rr=v<<24>>24==62;do if(rr){var ar=Ca(W);if(Ae[W+(ar-1)|0]<<24>>24!=62)break;var er=i<<24>>24,ir=Se[Se[o+16>>2]>>2],vr=Dr(r,0|He.__str113283,(ne=Oe,Oe+=16,Se[ne>>2]=er,Se[ne+4>>2]=ir,Se[ne+8>>2]=Z,Se[ne+12>>2]=J,ne)),d=vr;break r}while(0);var tr=i<<24>>24,fr=Se[Se[o+16>>2]>>2],_r=Dr(r,0|He.__str114284,(ne=Oe,Oe+=16,Se[ne>>2]=tr,Se[ne+4>>2]=fr,Se[ne+8>>2]=Z,Se[ne+12>>2]=J,ne)),d=_r}while(0);var d;return Oe=_,d}function jr(r){var a,e=Oe;Oe+=20;var i=e,v=r+24|0,t=Se[v>>2],a=(r+20|0)>>2,f=Se[a],_=r+44|0,s=Se[_>>2];Se[a]=t;var n=Kr(r);if(0==(0|n))var o=0;else{Cr(i);var l=Xr(r,i,0,60,62);if(0==(0|l))var b=n;else var k=Dr(r,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=n,Se[ne+4>>2]=l,ne)),b=k;var b;Se[v>>2]=t,Se[a]=f,Se[_>>2]=s;var o=b}var o;return Oe=e,o}function Ur(r,a,e,i){var v,t=a>>2;Se[e>>2]=0,Se[t]=0;var f=0==(18&i|0);do{if(f){var _=r<<24>>24,s=1==((_-65)%2|0);if(0==(1&i|0)){if(s?Se[e>>2]=0|He.__str95265:v=14,65==(0|_)||66==(0|_)){Se[t]=0|He.__str96266,v=21;break}if(67==(0|_)||68==(0|_)){Se[t]=0|He.__str97267,v=21;break}if(69==(0|_)||70==(0|_)){Se[t]=0|He.__str98268,v=21;break}if(71==(0|_)||72==(0|_)){Se[t]=0|He.__str99269,v=21;break}if(73==(0|_)||74==(0|_)){Se[t]=0|He.__str100270,v=21;break}if(75==(0|_)||76==(0|_)){v=21;break}if(77==(0|_)){Se[t]=0|He.__str101271,v=21;break}var n=0;v=22;break}if(s?Se[e>>2]=0|He.__str88258:v=5,65==(0|_)||66==(0|_)){Se[t]=0|He.__str89259,v=21;break}if(67==(0|_)||68==(0|_)){Se[t]=0|He.__str90260,v=21;break}if(69==(0|_)||70==(0|_)){Se[t]=0|He.__str91261,v=21;break}if(71==(0|_)||72==(0|_)){Se[t]=0|He.__str92262,v=21;break}if(73==(0|_)||74==(0|_)){Se[t]=0|He.__str93263,v=21;break}if(75==(0|_)||76==(0|_)){v=21;break}if(77==(0|_)){Se[t]=0|He.__str94264,v=21;break}var n=0;v=22;break}v=21}while(0);if(21==v)var n=1;var n;return n}function xr(r,a,e){var i;Se[e>>2]=0;var i=(r+12|0)>>2,v=Se[i];if(Ae[v]<<24>>24==69){Se[e>>2]=0|He.__str102272;var t=Se[i]+1|0;Se[i]=t;var f=t}else var f=v;var f;Se[i]=f+1|0;var _=Ae[f]<<24>>24;if(65==(0|_)){Se[a>>2]=0;var s=1}else if(66==(0|_)){Se[a>>2]=0|He.__str103273;var s=1}else if(67==(0|_)){Se[a>>2]=0|He.__str104274;var s=1}else if(68==(0|_)){Se[a>>2]=0|He.__str105275;var s=1}else var s=0;var s;return s}function zr(r){var a,e,a=(r+12|0)>>2,i=r+40|0,v=r+20|0,t=0|i,f=r+44|0,_=r+48|0,s=r+52|0,n=r+56|0,o=r+20|0,l=r+24|0,b=r+16|0,k=0;r:for(;;){var k,u=Se[a],c=Ae[u];if(c<<24>>24==64){var h=u+1|0;Se[a]=h;var d=1;break}var w=c<<24>>24;do{if(0==(0|w)){var d=0;break r}if(48==(0|w)||49==(0|w)||50==(0|w)||51==(0|w)||52==(0|w)||53==(0|w)||54==(0|w)||55==(0|w)||56==(0|w)||57==(0|w)){var p=u+1|0;Se[a]=p;var E=(Ae[u]<<24>>24)-48|0,A=Yr(v,E),g=A;e=14;break}if(63==(0|w)){var y=u+1|0;Se[a]=y;var m=Ae[y]<<24>>24;if(36==(0|m)){var S=u+2|0;Se[a]=S;var M=jr(r);if(0==(0|M)){var d=0;break r}var C=Fr(r,M,-1,v);if(0==(0|C)){var d=0;break r}var R=M;e=15;break}if(63==(0|m)){var T=Se[t>>2],O=Se[f>>2],N=Se[_>>2],I=Se[s>>2],P=Se[n>>2],D=Se[o>>2],L=Se[l>>2];Cr(i);var F=Ir(r);if(0==(0|F))var X=k;else var j=Se[b>>2],U=Dr(r,0|He.__str109279,(ne=Oe,Oe+=4,Se[ne>>2]=j,ne)),X=U;var X;Se[o>>2]=D,Se[l>>2]=L,Se[t>>2]=T,Se[f>>2]=O,Se[_>>2]=N,Se[s>>2]=I,Se[n>>2]=P;var g=X;e=14;break}var x=Lr(r);if(0==(0|x)){var d=0;break r}var z=Dr(r,0|He.__str109279,(ne=Oe,Oe+=4,Se[ne>>2]=x,ne)),g=z;e=14;break}var V=Kr(r),g=V;e=14;break}while(0);if(14==e){var g;if(0==(0|g)){var d=0;break}var R=g}var R,B=Fr(r,R,-1,i);if(0==(0|B)){var d=0;break}var k=R}var d;return d}function Vr(r){var a,e,i,v=Oe;Oe+=36;var t,f=v,i=f>>2,_=v+4,s=v+8,e=s>>2,n=v+16;Se[i]=0;var o=0|r,l=Se[o>>2],b=0==(128&l|0),k=r+12|0;do if(b){var u=Ae[Se[k>>2]]<<24>>24;if(48==(0|u))var c=0|He.__str76246,h=k,a=h>>2;else if(49==(0|u))var c=0|He.__str77247,h=k,a=h>>2;else{if(50!=(0|u)){var c=0,h=k,a=h>>2;break}var c=0|He.__str78248,h=k,a=h>>2}}else var c=0,h=k,a=h>>2;while(0);var h,c,d=0==(512&l|0);do if(d){if((Ae[Se[a]]-48&255&255)>=3){var w=0;break}var w=0|He.__str79249}else var w=0;while(0);var w,p=Gr(r,0),E=Se[a],A=E+1|0;Se[a]=A;var g=Ae[E]<<24>>24;do{if(48==(0|g)||49==(0|g)||50==(0|g)||51==(0|g)||52==(0|g)||53==(0|g)){var y=r+44|0,m=Se[y>>2];Cr(n);var S=Pr(r,s,n,0);if(0==(0|S)){var M=0;t=28;break}var C=xr(r,f,_);if(0==(0|C)){var M=0;t=28;break}var R=Se[i],T=0==(0|R),O=Se[_>>2];do if(T)Se[i]=O;else{if(0==(0|O))break;var N=Dr(r,0|He.__str83253,(ne=Oe,Oe+=8,Se[ne>>2]=R,Se[ne+4>>2]=O,ne));Se[i]=N}while(0);Se[y>>2]=m,t=22;break}if(54==(0|g)||55==(0|g)){var I=s+4|0;Se[I>>2]=0,Se[e]=0;var P=xr(r,f,_);if(0==(0|P)){var M=0;t=28;break}if(Ae[Se[a]]<<24>>24==64){t=22;break}var D=qr(r);if(0==(0|D)){var M=0;t=28;break}var L=Dr(r,0|He.__str107277,(ne=Oe,Oe+=4,Se[ne>>2]=D,ne));Se[I>>2]=L,t=22;break}if(56==(0|g)||57==(0|g)){Se[e+1]=0,Se[e]=0,Se[i]=0,t=22;break}var M=0;t=28}while(0);if(22==t){var F=0==(4096&Se[o>>2]|0);do{if(F){var X=Se[e],j=Se[i];if(0==(0|j)){var U=X;t=26;break}var x=0!=(0|X)?0|He.__str87257:0,z=0|He.__str87257,V=j,B=x,H=X;t=27;break}Se[i]=0,Se[e+1]=0,Se[e]=0;var U=0;t=26;break}while(0);if(26==t)var U,K=0!=(0|U)?0|He.__str87257:0,z=K,V=0,B=0,H=U;var H,B,V,z,Y=Se[e+1],G=Dr(r,0|He.__str108278,(ne=Oe,Oe+=32,Se[ne>>2]=c,Se[ne+4>>2]=w,Se[ne+8>>2]=H,Se[ne+12>>2]=B,Se[ne+16>>2]=V,Se[ne+20>>2]=z,Se[ne+24>>2]=p,Se[ne+28>>2]=Y,ne));Se[r+16>>2]=G;var M=1}var M;return Oe=v,M}function Br(r,a){var e,i,v,t,f=Oe;Oe+=44;var _,s=f,t=s>>2,n=f+8,o=f+12,v=o>>2,l=f+16,b=f+20,k=f+40;Se[v]=0;var i=(r+12|0)>>2,u=Se[i],c=u+1|0;Se[i]=c;var h=ge[u],d=h<<24>>24,w=(h-65&255&255)>25;r:do if(w)var p=0;else{var e=(0|r)>>2,E=Me[e],A=0==(128&E|0),g=d-65|0;do if(A){var y=g/8|0;if(0==(0|y))var m=0|He.__str76246,S=g;else if(1==(0|y))var m=0|He.__str77247,S=g;else{if(2!=(0|y)){var m=0,S=g;break}var m=0|He.__str78248,S=g}}else var m=0,S=g;while(0);var S,m,M=0==(512&E|0)&h<<24>>24<89,C=(0|S)%8;do if(M)if(2==(0|C)||3==(0|C))var R=m,T=0|He.__str79249;else if(4==(0|C)||5==(0|C))var R=m,T=0|He.__str80250;else{if(6!=(0|C)&&7!=(0|C)){var R=m,T=0;break}var O=Dr(r,0|He.__str81251,(ne=Oe,Oe+=4,Se[ne>>2]=m,ne)),R=O,T=0|He.__str80250}else var R=m,T=0;while(0);var T,R,N=Gr(r,0),I=6==(0|C);do{if(!I){if(7==((d-56)%8|0)){_=14;break}var P=N;_=15;break}_=14}while(0);if(14==_)var D=Lr(r),L=Dr(r,0|He.__str82252,(ne=Oe,Oe+=8,Se[ne>>2]=N,Se[ne+4>>2]=D,ne)),P=L;var P,F=h<<24>>24>88;do if(F)var X=0;else{if((C-2|0)>>>0<2){var X=0;break}var j=xr(r,o,k);if(0==(0|j)){var p=0;break r}var U=Me[v],x=Se[k>>2];if(0==(0|U)&0==(0|x)){var X=0;break}var z=Dr(r,0|He.__str83253,(ne=Oe,Oe+=8,Se[ne>>2]=U,Se[ne+4>>2]=x,ne));Se[v]=z;var X=z}while(0);var X,V=Se[i],B=V+1|0;Se[i]=B;var H=Ae[V],K=Se[e],Y=Ur(H,n,l,K);if(0==(0|Y)){var p=0;break}Cr(b);var G=Se[i];if(Ae[G]<<24>>24==64){Se[t]=0|He.__str84254,Se[t+1]=0;var W=G+1|0;Se[i]=W}else{var Z=Pr(r,s,b,0);if(0==(0|Z)){var p=0;break}}if(0!=(4&Se[e]|0)&&(Se[t+1]=0,Se[t]=0),0==(0|a))var Q=P;else{var q=0|s,$=Se[q>>2],J=s+4|0,rr=Se[J>>2],ar=Dr(r,0|He.__str85255,(ne=Oe,Oe+=12,Se[ne>>2]=P,Se[ne+4>>2]=$,Se[ne+8>>2]=rr,ne));Se[J>>2]=0,Se[q>>2]=0;var Q=ar}var Q,er=r+44|0,ir=Se[er>>2],vr=Xr(r,b,1,40,41);if(0==(0|vr)){var p=0;break}if(0==(4096&Se[e]|0))var tr=vr,fr=X;else{Se[v]=0;var tr=0,fr=0}var fr,tr;Se[er>>2]=ir;var _r=Se[t],sr=Se[t+1];if(0==(0|_r))var nr=0;else var or=0!=(0|sr)?0:0|He.__str87257,nr=or;var nr,lr=Se[n>>2],br=0!=(0|lr)?0|He.__str87257:0,kr=Se[l>>2],ur=Dr(r,0|He.__str86256,(ne=Oe,Oe+=44,Se[ne>>2]=R,Se[ne+4>>2]=T,Se[ne+8>>2]=_r,Se[ne+12>>2]=nr,Se[ne+16>>2]=lr,Se[ne+20>>2]=br,Se[ne+24>>2]=kr,Se[ne+28>>2]=Q,Se[ne+32>>2]=tr,Se[ne+36>>2]=fr,Se[ne+40>>2]=sr,ne));Se[r+16>>2]=ur;var p=1}while(0);var p;return Oe=f,p}function Hr(r){var a,a=(r+12|0)>>2,e=Se[a];if(Ae[e]<<24>>24==36)var i=e;else{Xa(0|He.__str72242,1252,0|He.___func___handle_template,0|He.__str74244);var i=Se[a]}var i;Se[a]=i+1|0;var v=Kr(r),t=0==(0|v);do if(t)var f=0;else{var _=Xr(r,0,0,60,62);if(0==(0|_)){var f=0;break}var s=Dr(r,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=v,Se[ne+4>>2]=_,ne));Se[r+16>>2]=s;var f=1}while(0);var f;return f}function Kr(r){for(var a,a=(r+12|0)>>2,e=Me[a],i=e,v=Ae[e];;){var v,i;if(!((v-65&255&255)<26|(v-97&255&255)<26|(v-48&255&255)<10)&&v<<24>>24!=95&&v<<24>>24!=36){var t=0;break}var f=i+1|0;Se[a]=f;var _=ge[f];if(_<<24>>24==64){Se[a]=i+2|0;var s=f-e|0,n=r+20|0,o=Fr(r,e,s,n);if(0==(0|o)){var t=0;break}var l=Se[r+24>>2]-1-Se[n>>2]|0,b=Yr(n,l),t=b;break}var i=f,v=_}var t;return t}function Yr(r,a){0==(0|r)&&Xa(0|He.__str72242,263,0|He.___func___str_array_get_ref,0|He.__str75245);var e=Se[r>>2]+a|0;if(e>>>0<Me[r+8>>2]>>>0)var i=Se[Se[r+16>>2]+(e<<2)>>2];else var i=0;var i;return i}function Gr(r,a){var e,e=(r+44|0)>>2,i=Me[e];if(i>>>0>a>>>0){for(var v=r+56|0,t=a,f=0,_=Se[v>>2],s=i;;){var s,_,f,t,n=Me[_+(t<<2)>>2];if(0==(0|n)){Xa(0|He.__str72242,680,0|He.___func___get_class_string,0|He.__str106276);var o=Se[v>>2],l=o,b=Se[o+(t<<2)>>2],k=Se[e]}else var l=_,b=n,k=s;var k,b,l,u=Ca(b),c=u+(f+2)|0,h=t+1|0;if(h>>>0>=k>>>0)break;var t=h,f=c,_=l,s=k}var d=c-1|0}else var d=-1;var d,w=Wr(r,d);if(0==(0|w))var p=0;else{var E=Se[e]-1|0,A=(0|E)<(0|a);r:do if(A)var g=0;else for(var y=r+56|0,m=0,S=E;;){var S,m,M=Se[Se[y>>2]+(S<<2)>>2],C=Ca(M),R=w+m|0;Pa(R,M,C,1);var T=C+m|0;if((0|S)>(0|a)){var O=T+1|0;Ae[w+T|0]=58;var N=T+2|0;Ae[w+O|0]=58;var I=N}else var I=T;var I,P=S-1|0;if((0|P)<(0|a)){var g=I;break r}var m=I,S=P}while(0);var g;Ae[w+g|0]=0;var p=w}var p;return p}function Wr(r,a){var e,i=a>>>0>1020;do if(i){var v=Se[r+4>>2],t=a+4|0,f=pe[v](t);if(0==(0|f)){var _=0;break}var s=r+60|0,n=Se[s>>2],o=f;Se[o>>2]=n,Se[s>>2]=f,Se[r+64>>2]=0;var _=f+4|0}else{var e=(r+64|0)>>2,l=Me[e];if(l>>>0<a>>>0){var b=Se[r+4>>2],k=pe[b](1024);if(0==(0|k)){var _=0;break}var u=r+60|0,c=Se[u>>2],h=k;Se[h>>2]=c,Se[u>>2]=k,Se[e]=1020;var d=1020,w=k}else var d=l,w=Se[r+60>>2];var w,d;Se[e]=d-a|0;var _=w+(1024-d)|0}while(0);var _;return _}function Zr(r){var a=r<<24>>24;if(68==(0|a))var e=0|He.__str157327;else if(69==(0|a))var e=0|He.__str158328;else if(70==(0|a))var e=0|He.__str159329;else if(71==(0|a))var e=0|He.__str160330;else if(72==(0|a))var e=0|He.__str161331;else if(73==(0|a))var e=0|He.__str162332;else if(74==(0|a))var e=0|He.__str163333;else if(75==(0|a))var e=0|He.__str164334;else if(76==(0|a))var e=0|He.__str165335;else if(77==(0|a))var e=0|He.__str166336;else if(78==(0|a))var e=0|He.__str167337;else if(87==(0|a))var e=0|He.__str168338;else var e=0;var e;return e}function Qr(r){var a=r<<24>>24;if(67==(0|a))var e=0|He.__str145315;else if(68==(0|a))var e=0|He.__str146316;else if(69==(0|a))var e=0|He.__str147317;else if(70==(0|a))var e=0|He.__str148318;else if(71==(0|a))var e=0|He.__str149319;else if(72==(0|a))var e=0|He.__str150320;else if(73==(0|a))var e=0|He.__str151321;else if(74==(0|a))var e=0|He.__str152322;else if(75==(0|a))var e=0|He.__str153323;else if(77==(0|a))var e=0|He.__str154324;else if(78==(0|a))var e=0|He.__str155325;else if(79==(0|a))var e=0|He.__str156326;else if(88==(0|a))var e=0|He.__str84254;else if(90==(0|a))var e=0|He.__str110280;else var e=0;var e;return e}function qr(r){var a=r+44|0,e=Se[a>>2],i=zr(r);if(0==(0|i))var v=0;else var t=Gr(r,e),v=t;var v;return Se[a>>2]=e,v}function $r(r,a,e,i,v){var t,f,_,s=Oe;Oe+=16;var n,o=s,_=o>>2,l=s+4,b=s+8,f=b>>2;Se[l>>2]=0|ii;var t=(a+12|0)>>2,k=Se[t];if(Ae[k]<<24>>24==69){Se[l>>2]=0|He.__str134304;var u=k+1|0;Se[t]=u;var c=0|He.__str134304}else var c=0|ii;var c,h=i<<24>>24;do{if(65==(0|h)){var d=Dr(a,0|He.__str135305,(ne=Oe,Oe+=4,Se[ne>>2]=c,ne)),w=d;n=10;break}if(66==(0|h)){var p=Dr(a,0|He.__str136306,(ne=Oe,Oe+=4,Se[ne>>2]=c,ne)),w=p;n=10;break}if(80==(0|h)){var E=Dr(a,0|He.__str137307,(ne=Oe,Oe+=4,Se[ne>>2]=c,ne)),w=E;n=10;break}if(81==(0|h)){var A=Dr(a,0|He.__str138308,(ne=Oe,Oe+=4,Se[ne>>2]=c,ne)),w=A;n=10;break}if(82==(0|h)){var g=Dr(a,0|He.__str139309,(ne=Oe,Oe+=4,Se[ne>>2]=c,ne)),w=g;n=10;break}if(83==(0|h)){var y=Dr(a,0|He.__str140310,(ne=Oe,Oe+=4,Se[ne>>2]=c,ne)),w=y;n=10;break}if(63==(0|h)){var w=0|ii;n=10}else n=31}while(0);r:do if(10==n){var w,m=xr(a,o,l);if(0==(0|m))break;var S=a+44|0,M=Se[S>>2],C=Se[t],R=Ae[C]<<24>>24==89;a:do if(R){var T=C+1|0;Se[t]=T;var O=Lr(a);if(0==(0|O))break r;var N=Ha(O),I=Ae[w]<<24>>24==32,P=Se[_],D=0==(0|P);do{if(I){if(!D){n=17;break}var L=w+1|0;n=18;break}if(D){var L=w;n=18;break}n=17;break}while(0);if(17==n){var F=Dr(a,0|He.__str141311,(ne=Oe,Oe+=8,Se[ne>>2]=P,Se[ne+4>>2]=w,ne));Se[_]=0;var X=F}else if(18==n)var L,j=Dr(a,0|He.__str142312,(ne=Oe,Oe+=4,Se[ne>>2]=L,ne)),X=j;var X;if(0==(0|N)){var U=X;break}for(var x=X,z=N;;){var z,x,V=z-1|0,B=Lr(a),H=Dr(a,0|He.__str143313,(ne=Oe,Oe+=8,Se[ne>>2]=x,Se[ne+4>>2]=B,ne));if(0==(0|V)){var U=H;break a}var x=H,z=V}}else var U=w;while(0);var U,K=Pr(a,b,e,0);if(0==(0|K))break;var Y=Se[_];if(0==(0|Y)){var G=0==(0|v);do if(G){if(Ae[U]<<24>>24==0){var W=U;break}var Z=U+1|0;if(Ae[Z]<<24>>24!=42){var W=U;break}var Q=Se[f],q=Ca(Q);if(Ae[Q+(q-1)|0]<<24>>24!=42){var W=U;break}var W=Z}else var W=U;while(0);var W,$=Se[f],J=Dr(a,0|He.__str170,(ne=Oe,Oe+=8,Se[ne>>2]=$,Se[ne+4>>2]=W,ne));Se[r>>2]=J}else{var rr=Se[f],ar=Dr(a,0|He.__str144314,(ne=Oe,Oe+=12,Se[ne>>2]=rr,Se[ne+4>>2]=Y,Se[ne+8>>2]=U,ne));Se[r>>2]=ar}var er=Se[f+1];Se[r+4>>2]=er,Se[S>>2]=M}while(0);Oe=s}function Jr(r){var a,e=r>>>0<245;do{if(e){if(r>>>0<11)var i=16;else var i=r+11&-8;var i,v=i>>>3,t=Me[vi>>2],f=t>>>(v>>>0);if(0!=(3&f|0)){var _=(1&f^1)+v|0,s=_<<1,n=(s<<2)+vi+40|0,o=(s+2<<2)+vi+40|0,l=Me[o>>2],b=l+8|0,k=Me[b>>2];if((0|n)==(0|k))Se[vi>>2]=t&(1<<_^-1);else{if(k>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[o>>2]=k,Se[k+12>>2]=n}var u=_<<3;Se[l+4>>2]=3|u;var c=l+(4|u)|0,h=1|Se[c>>2];Se[c>>2]=h;var d=b;a=38;break}if(i>>>0<=Me[vi+8>>2]>>>0){var w=i;a=30;break}if(0!=(0|f)){var p=2<<v,E=f<<v&(p|-p),A=(E&-E)-1|0,g=A>>>12&16,y=A>>>(g>>>0),m=y>>>5&8,S=y>>>(m>>>0),M=S>>>2&4,C=S>>>(M>>>0),R=C>>>1&2,T=C>>>(R>>>0),O=T>>>1&1,N=(m|g|M|R|O)+(T>>>(O>>>0))|0,I=N<<1,P=(I<<2)+vi+40|0,D=(I+2<<2)+vi+40|0,L=Me[D>>2],F=L+8|0,X=Me[F>>2];if((0|P)==(0|X))Se[vi>>2]=t&(1<<N^-1);else{if(X>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[D>>2]=X,Se[X+12>>2]=P}var j=N<<3,U=j-i|0;Se[L+4>>2]=3|i;var x=L,z=x+i|0;Se[x+(4|i)>>2]=1|U,Se[x+j>>2]=U;var V=Me[vi+8>>2];if(0!=(0|V)){var B=Se[vi+20>>2],H=V>>>2&1073741822,K=(H<<2)+vi+40|0,Y=Me[vi>>2],G=1<<(V>>>3),W=0==(Y&G|0);do{if(!W){var Z=(H+2<<2)+vi+40|0,Q=Me[Z>>2];if(Q>>>0>=Me[vi+16>>2]>>>0){var q=Q,$=Z;break}throw Ka(),"Reached an unreachable!"}Se[vi>>2]=Y|G;var q=K,$=(H+2<<2)+vi+40|0}while(0);var $,q;Se[$>>2]=B,Se[q+12>>2]=B;var J=B+8|0;Se[J>>2]=q;var rr=B+12|0;Se[rr>>2]=K}Se[vi+8>>2]=U,Se[vi+20>>2]=z;var d=F;a=38;break}if(0==(0|Se[vi+4>>2])){var w=i;a=30;break}var ar=ra(i);if(0==(0|ar)){var w=i;a=30;break}var d=ar;a=38;break}if(r>>>0>4294967231){var w=-1;a=30;break}var er=r+11&-8;if(0==(0|Se[vi+4>>2])){var w=er;a=30;break}var ir=ea(er);if(0==(0|ir)){var w=er;a=30;break}var d=ir;a=38;break}while(0);if(30==a){var w,vr=Me[vi+8>>2];if(w>>>0>vr>>>0){var tr=Me[vi+12>>2];if(w>>>0<tr>>>0){var fr=tr-w|0;Se[vi+12>>2]=fr;var _r=Me[vi+24>>2],sr=_r;Se[vi+24>>2]=sr+w|0,Se[w+(sr+4)>>2]=1|fr,Se[_r+4>>2]=3|w;var d=_r+8|0}else var nr=aa(w),d=nr}else{var or=vr-w|0,lr=Me[vi+20>>2];if(or>>>0>15){var br=lr;Se[vi+20>>2]=br+w|0,Se[vi+8>>2]=or,Se[w+(br+4)>>2]=1|or,Se[br+vr>>2]=or,Se[lr+4>>2]=3|w}else{Se[vi+8>>2]=0,Se[vi+20>>2]=0,Se[lr+4>>2]=3|vr;var kr=vr+(lr+4)|0,ur=1|Se[kr>>2];Se[kr>>2]=ur}var d=lr+8|0}}var d;return d}function ra(r){var a,e,i,v=Se[vi+4>>2],t=(v&-v)-1|0,f=t>>>12&16,_=t>>>(f>>>0),s=_>>>5&8,n=_>>>(s>>>0),o=n>>>2&4,l=n>>>(o>>>0),b=l>>>1&2,k=l>>>(b>>>0),u=k>>>1&1,c=Me[vi+((s|f|o|b|u)+(k>>>(u>>>0))<<2)+304>>2],h=c,e=h>>2,d=(Se[c+4>>2]&-8)-r|0;r:for(;;)for(var d,h,w=h;;){var w,p=Se[w+16>>2];if(0==(0|p)){var E=Se[w+20>>2];if(0==(0|E))break r;var A=E}else var A=p;var A,g=(Se[A+4>>2]&-8)-r|0;if(g>>>0<d>>>0){var h=A,e=h>>2,d=g;continue r}var w=A}var y=h,m=Me[vi+16>>2],S=y>>>0<m>>>0;do if(!S){var M=y+r|0,C=M;if(y>>>0>=M>>>0)break;var R=Me[e+6],T=Me[e+3],O=(0|T)==(0|h);do if(O){var N=h+20|0,I=Se[N>>2];if(0==(0|I)){var P=h+16|0,D=Se[P>>2];if(0==(0|D)){var L=0,a=L>>2;break}var F=P,X=D}else{var F=N,X=I;i=14}for(;;){var X,F,j=X+20|0,U=Se[j>>2];if(0==(0|U)){var x=X+16|0,z=Me[x>>2];if(0==(0|z))break;var F=x,X=z}else var F=j,X=U}if(F>>>0<m>>>0)throw Ka(),"Reached an unreachable!";Se[F>>2]=0;var L=X,a=L>>2}else{var V=Me[e+2];if(V>>>0<m>>>0)throw Ka(),"Reached an unreachable!";Se[V+12>>2]=T,Se[T+8>>2]=V;var L=T,a=L>>2}while(0);var L,B=0==(0|R);r:do if(!B){var H=h+28|0,K=(Se[H>>2]<<2)+vi+304|0,Y=(0|h)==(0|Se[K>>2]);do{if(Y){if(Se[K>>2]=L,0!=(0|L))break;var G=Se[vi+4>>2]&(1<<Se[H>>2]^-1);Se[vi+4>>2]=G;break r}if(R>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";var W=R+16|0;if((0|Se[W>>2])==(0|h)?Se[W>>2]=L:Se[R+20>>2]=L,0==(0|L))break r}while(0);if(L>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[a+6]=R;var Z=Me[e+4];if(0!=(0|Z)){if(Z>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[a+4]=Z,Se[Z+24>>2]=L}var Q=Me[e+5];if(0==(0|Q))break;if(Q>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[a+5]=Q,Se[Q+24>>2]=L}while(0);if(d>>>0<16){var q=d+r|0;Se[e+1]=3|q;var $=q+(y+4)|0,J=1|Se[$>>2];Se[$>>2]=J}else{Se[e+1]=3|r,Se[r+(y+4)>>2]=1|d,Se[y+d+r>>2]=d;var rr=Me[vi+8>>2];if(0!=(0|rr)){var ar=Me[vi+20>>2],er=rr>>>2&1073741822,ir=(er<<2)+vi+40|0,vr=Me[vi>>2],tr=1<<(rr>>>3),fr=0==(vr&tr|0);do{if(!fr){var _r=(er+2<<2)+vi+40|0,sr=Me[_r>>2];if(sr>>>0>=Me[vi+16>>2]>>>0){var nr=sr,or=_r;break}throw Ka(),"Reached an unreachable!"}Se[vi>>2]=vr|tr;var nr=ir,or=(er+2<<2)+vi+40|0}while(0);var or,nr;Se[or>>2]=ar,Se[nr+12>>2]=ar,Se[ar+8>>2]=nr,Se[ar+12>>2]=ir}Se[vi+8>>2]=d,Se[vi+20>>2]=C}return h+8|0}while(0);throw Ka(),"Reached an unreachable!"}function aa(r){var a,e;0==(0|Se[ti>>2])&&ba();var i=0==(4&Se[vi+440>>2]|0);do{if(i){var v=Se[vi+24>>2],t=0==(0|v);do{if(!t){var f=v,_=ua(f);if(0==(0|_)){e=6;break}var s=Se[ti+8>>2],n=r+47-Se[vi+12>>2]+s&-s;if(n>>>0>=2147483647){e=14;break}var o=re(n);if((0|o)==(Se[_>>2]+Se[_+4>>2]|0)){var l=o,b=n,k=o;e=13;break}var u=o,c=n;e=15;break}e=6}while(0);do if(6==e){var h=re(0);if((0|h)==-1){e=14;break}var d=Se[ti+8>>2],w=d+(r+47)&-d,p=h,E=Se[ti+4>>2],A=E-1|0;if(0==(A&p|0))var g=w;else var g=w-p+(A+p&-E)|0;var g;if(g>>>0>=2147483647){e=14;break}var y=re(g);if((0|y)==(0|h)){var l=h,b=g,k=y;e=13;break}var u=y,c=g;e=15;break}while(0);if(13==e){var k,b,l;if((0|l)!=-1){var m=b,S=l;e=26;break}var u=k,c=b}else if(14==e){var M=4|Se[vi+440>>2];Se[vi+440>>2]=M,e=23;break}var c,u,C=0|-c,R=(0|u)!=-1&c>>>0<2147483647;do{if(R){if(c>>>0>=(r+48|0)>>>0){var T=c;e=21;break}var O=Se[ti+8>>2],N=r+47-c+O&-O;if(N>>>0>=2147483647){var T=c;e=21;break}var I=re(N);if((0|I)==-1){re(C);e=22;break}var T=N+c|0;e=21;break}var T=c;e=21}while(0);if(21==e){var T;if((0|u)!=-1){var m=T,S=u;e=26;break}}var P=4|Se[vi+440>>2];Se[vi+440>>2]=P,e=23;break}e=23}while(0);do if(23==e){var D=Se[ti+8>>2],L=D+(r+47)&-D;if(L>>>0>=2147483647){e=49;break}var F=re(L),X=re(0);if(!((0|X)!=-1&(0|F)!=-1&F>>>0<X>>>0)){e=49;break}var j=X-F|0;if(j>>>0<=(r+40|0)>>>0|(0|F)==-1){e=49;break}var m=j,S=F;e=26;break}while(0);r:do if(26==e){var S,m,U=Se[vi+432>>2]+m|0;Se[vi+432>>2]=U,U>>>0>Me[vi+436>>2]>>>0&&(Se[vi+436>>2]=U);var x=Me[vi+24>>2],z=0==(0|x);a:do if(z){var V=Me[vi+16>>2];0==(0|V)|S>>>0<V>>>0&&(Se[vi+16>>2]=S),Se[vi+444>>2]=S,Se[vi+448>>2]=m,Se[vi+456>>2]=0;var B=Se[ti>>2];Se[vi+36>>2]=B,Se[vi+32>>2]=-1,ha(),ca(S,m-40|0)}else{for(var H=vi+444|0,a=H>>2;;){var H;if(0==(0|H))break;var K=Me[a],Y=H+4|0,G=Me[Y>>2],W=K+G|0;if((0|S)==(0|W)){if(0!=(8&Se[a+3]|0))break;var Z=x;if(!(Z>>>0>=K>>>0&Z>>>0<W>>>0))break;Se[Y>>2]=G+m|0;var Q=Se[vi+24>>2],q=Se[vi+12>>2]+m|0;ca(Q,q);break a}var H=Se[a+2],a=H>>2}S>>>0<Me[vi+16>>2]>>>0&&(Se[vi+16>>2]=S);for(var $=S+m|0,J=vi+444|0;;){var J;if(0==(0|J))break;var rr=0|J,ar=Me[rr>>2];if((0|ar)==(0|$)){if(0!=(8&Se[J+12>>2]|0))break;Se[rr>>2]=S;var er=J+4|0,ir=Se[er>>2]+m|0;Se[er>>2]=ir;var vr=da(S,ar,r),tr=vr;e=50;break r}var J=Se[J+8>>2]}Ma(S,m)}while(0);var fr=Me[vi+12>>2];if(fr>>>0<=r>>>0){e=49;break}var _r=fr-r|0;Se[vi+12>>2]=_r;var sr=Me[vi+24>>2],nr=sr;Se[vi+24>>2]=nr+r|0,Se[r+(nr+4)>>2]=1|_r,Se[sr+4>>2]=3|r;var tr=sr+8|0;e=50;break}while(0);if(49==e){var or=Je();Se[or>>2]=12;var tr=0}var tr;return tr}function ea(r){var a,e,i,v,t,f,_=r>>2,s=0|-r,n=r>>>8,o=0==(0|n);do if(o)var l=0;else{if(r>>>0>16777215){var l=31;break}var b=(n+1048320|0)>>>16&8,k=n<<b,u=(k+520192|0)>>>16&4,c=k<<u,h=(c+245760|0)>>>16&2,d=14-(u|b|h)+(c<<h>>>15)|0,l=r>>>((d+7|0)>>>0)&1|d<<1}while(0);var l,w=Me[vi+(l<<2)+304>>2],p=0==(0|w);r:do if(p)var E=0,A=s,g=0;else{if(31==(0|l))var y=0;else var y=25-(l>>>1)|0;for(var y,m=0,S=s,M=w,t=M>>2,C=r<<y,R=0;;){var R,C,M,S,m,T=Se[t+1]&-8,O=T-r|0;if(O>>>0<S>>>0){if((0|T)==(0|r)){var E=M,A=O,g=M;break r}var N=M,I=O}else var N=m,I=S;var I,N,P=Me[t+5],D=Me[((C>>>31<<2)+16>>2)+t],L=0==(0|P)|(0|P)==(0|D)?R:P;if(0==(0|D)){var E=N,A=I,g=L;break r}var m=N,S=I,M=D,t=M>>2,C=C<<1,R=L}}while(0);var g,A,E,F=0==(0|g)&0==(0|E);do if(F){var X=2<<l,j=Se[vi+4>>2]&(X|-X);if(0==(0|j)){var U=g;break}var x=(j&-j)-1|0,z=x>>>12&16,V=x>>>(z>>>0),B=V>>>5&8,H=V>>>(B>>>0),K=H>>>2&4,Y=H>>>(K>>>0),G=Y>>>1&2,W=Y>>>(G>>>0),Z=W>>>1&1,U=Se[vi+((B|z|K|G|Z)+(W>>>(Z>>>0))<<2)+304>>2]}else var U=g;while(0);var U,Q=0==(0|U);r:do if(Q)var q=A,$=E,v=$>>2;else for(var J=U,i=J>>2,rr=A,ar=E;;){var ar,rr,J,er=(Se[i+1]&-8)-r|0,ir=er>>>0<rr>>>0,vr=ir?er:rr,tr=ir?J:ar,fr=Me[i+4];if(0==(0|fr)){var _r=Me[i+5];if(0==(0|_r)){var q=vr,$=tr,v=$>>2;break r}var J=_r,i=J>>2,rr=vr,ar=tr}else var J=fr,i=J>>2,rr=vr,ar=tr}while(0);var $,q,sr=0==(0|$);r:do{if(!sr){if(q>>>0>=(Se[vi+8>>2]-r|0)>>>0){var nr=0;break}var or=$,e=or>>2,lr=Me[vi+16>>2],br=or>>>0<lr>>>0;do if(!br){var kr=or+r|0,ur=kr;if(or>>>0>=kr>>>0)break;var cr=Me[v+6],hr=Me[v+3],dr=(0|hr)==(0|$);do if(dr){var wr=$+20|0,pr=Se[wr>>2];if(0==(0|pr)){var Er=$+16|0,Ar=Se[Er>>2];if(0==(0|Ar)){var gr=0,a=gr>>2;break}var yr=Er,mr=Ar}else{var yr=wr,mr=pr;f=28}for(;;){var mr,yr,Sr=mr+20|0,Mr=Se[Sr>>2];if(0==(0|Mr)){var Cr=mr+16|0,Rr=Me[Cr>>2];if(0==(0|Rr))break;var yr=Cr,mr=Rr}else var yr=Sr,mr=Mr}if(yr>>>0<lr>>>0)throw Ka(),"Reached an unreachable!";Se[yr>>2]=0;var gr=mr,a=gr>>2}else{var Tr=Me[v+2];if(Tr>>>0<lr>>>0)throw Ka(),"Reached an unreachable!";Se[Tr+12>>2]=hr,Se[hr+8>>2]=Tr;var gr=hr,a=gr>>2}while(0);var gr,Or=0==(0|cr);a:do if(!Or){var Nr=$+28|0,Ir=(Se[Nr>>2]<<2)+vi+304|0,Pr=(0|$)==(0|Se[Ir>>2]);do{if(Pr){if(Se[Ir>>2]=gr,0!=(0|gr))break;var Dr=Se[vi+4>>2]&(1<<Se[Nr>>2]^-1);Se[vi+4>>2]=Dr;break a}if(cr>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";var Lr=cr+16|0;if((0|Se[Lr>>2])==(0|$)?Se[Lr>>2]=gr:Se[cr+20>>2]=gr,0==(0|gr))break a}while(0);if(gr>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[a+6]=cr;var Fr=Me[v+4];if(0!=(0|Fr)){if(Fr>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[a+4]=Fr,Se[Fr+24>>2]=gr}var Xr=Me[v+5];if(0==(0|Xr))break;if(Xr>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[a+5]=Xr,Se[Xr+24>>2]=gr}while(0);var jr=q>>>0<16;a:do if(jr){var Ur=q+r|0;Se[v+1]=3|Ur;var xr=Ur+(or+4)|0,zr=1|Se[xr>>2];Se[xr>>2]=zr}else if(Se[v+1]=3|r,Se[_+(e+1)]=1|q,Se[(q>>2)+e+_]=q,q>>>0<256){var Vr=q>>>2&1073741822,Br=(Vr<<2)+vi+40|0,Hr=Me[vi>>2],Kr=1<<(q>>>3),Yr=0==(Hr&Kr|0);do{if(!Yr){var Gr=(Vr+2<<2)+vi+40|0,Wr=Me[Gr>>2];if(Wr>>>0>=Me[vi+16>>2]>>>0){var Zr=Wr,Qr=Gr;break}throw Ka(),"Reached an unreachable!"}Se[vi>>2]=Hr|Kr;var Zr=Br,Qr=(Vr+2<<2)+vi+40|0}while(0);var Qr,Zr;Se[Qr>>2]=ur,Se[Zr+12>>2]=ur,Se[_+(e+2)]=Zr,Se[_+(e+3)]=Br}else{var qr=kr,$r=q>>>8,Jr=0==(0|$r);do if(Jr)var ra=0;else{if(q>>>0>16777215){var ra=31;break}var aa=($r+1048320|0)>>>16&8,ea=$r<<aa,ia=(ea+520192|0)>>>16&4,va=ea<<ia,ta=(va+245760|0)>>>16&2,fa=14-(ia|aa|ta)+(va<<ta>>>15)|0,ra=q>>>((fa+7|0)>>>0)&1|fa<<1}while(0);var ra,_a=(ra<<2)+vi+304|0;Se[_+(e+7)]=ra;var sa=r+(or+16)|0;Se[_+(e+5)]=0,Se[sa>>2]=0;var na=Se[vi+4>>2],oa=1<<ra;if(0==(na&oa|0)){var la=na|oa;Se[vi+4>>2]=la,Se[_a>>2]=qr,Se[_+(e+6)]=_a,Se[_+(e+3)]=qr,Se[_+(e+2)]=qr}else{if(31==(0|ra))var ba=0;else var ba=25-(ra>>>1)|0;for(var ba,ka=q<<ba,ua=Se[_a>>2];;){var ua,ka;if((Se[ua+4>>2]&-8|0)==(0|q)){var ca=ua+8|0,ha=Me[ca>>2],da=Me[vi+16>>2],wa=ua>>>0<da>>>0;do if(!wa){if(ha>>>0<da>>>0)break;Se[ha+12>>2]=qr,Se[ca>>2]=qr,Se[_+(e+2)]=ha,Se[_+(e+3)]=ua,Se[_+(e+6)]=0;break a}while(0);throw Ka(),"Reached an unreachable!"}var pa=(ka>>>31<<2)+ua+16|0,Ea=Me[pa>>2];if(0==(0|Ea)){if(pa>>>0>=Me[vi+16>>2]>>>0){Se[pa>>2]=qr,Se[_+(e+6)]=ua,Se[_+(e+3)]=qr,Se[_+(e+2)]=qr;break a}throw Ka(),"Reached an unreachable!"}var ka=ka<<1,ua=Ea}}}while(0);var nr=$+8|0;break r}while(0);throw Ka(),"Reached an unreachable!"}var nr=0}while(0);var nr;return nr}function ia(r){var a;0==(0|Se[ti>>2])&&ba();var e=r>>>0<4294967232;r:do if(e){var i=Me[vi+24>>2];if(0==(0|i)){var v=0;break}var t=Me[vi+12>>2],f=t>>>0>(r+40|0)>>>0;do if(f){var _=Me[ti+8>>2],s=-40-r-1+t+_|0,n=Math.floor((s>>>0)/(_>>>0)),o=(n-1)*_|0,l=i,b=ua(l);if(0!=(8&Se[b+12>>2]|0))break;var k=re(0),a=(b+4|0)>>2;if((0|k)!=(Se[b>>2]+Se[a]|0))break;var u=o>>>0>2147483646?-2147483648-_|0:o,c=0|-u,h=re(c),d=re(0);if(!((0|h)!=-1&d>>>0<k>>>0))break;var w=k-d|0;if((0|k)==(0|d))break;var p=Se[a]-w|0;Se[a]=p;var E=Se[vi+432>>2]-w|0;Se[vi+432>>2]=E;var A=Se[vi+24>>2],g=Se[vi+12>>2]-w|0;ca(A,g);var v=(0|k)!=(0|d);break r}while(0);if(Me[vi+12>>2]>>>0<=Me[vi+28>>2]>>>0){var v=0;break}Se[vi+28>>2]=-1;var v=0}else var v=0;while(0);var v;return 1&v}function va(r){var a,e,i,v,t,f,_,s=r>>2,n=0==(0|r);r:do if(!n){var o=r-8|0,l=o,b=Me[vi+16>>2],k=o>>>0<b>>>0;a:do if(!k){var u=Me[r-4>>2],c=3&u;if(1==(0|c))break;var h=u&-8,f=h>>2,d=r+(h-8)|0,w=d,p=0==(1&u|0);e:do if(p){var E=Me[o>>2];if(0==(0|c))break r;var A=-8-E|0,t=A>>2,g=r+A|0,y=g,m=E+h|0;if(g>>>0<b>>>0)break a;if((0|y)==(0|Se[vi+20>>2])){var v=(r+(h-4)|0)>>2;if(3!=(3&Se[v]|0)){var S=y,i=S>>2,M=m;break}Se[vi+8>>2]=m;var C=Se[v]&-2;Se[v]=C,Se[t+(s+1)]=1|m,Se[d>>2]=m;break r}if(E>>>0<256){var R=Me[t+(s+2)],T=Me[t+(s+3)];if((0|R)!=(0|T)){var O=((E>>>2&1073741822)<<2)+vi+40|0,N=(0|R)!=(0|O)&R>>>0<b>>>0;do if(!N){if(!((0|T)==(0|O)|T>>>0>=b>>>0))break;Se[R+12>>2]=T,Se[T+8>>2]=R;var S=y,i=S>>2,M=m;break e}while(0);throw Ka(),"Reached an unreachable!"}var I=Se[vi>>2]&(1<<(E>>>3)^-1);Se[vi>>2]=I;var S=y,i=S>>2,M=m}else{var P=g,D=Me[t+(s+6)],L=Me[t+(s+3)],F=(0|L)==(0|P);do if(F){var X=A+(r+20)|0,j=Se[X>>2];if(0==(0|j)){var U=A+(r+16)|0,x=Se[U>>2];if(0==(0|x)){var z=0,e=z>>2;break}var V=U,B=x}else{var V=X,B=j;_=21}for(;;){var B,V,H=B+20|0,K=Se[H>>2];if(0==(0|K)){var Y=B+16|0,G=Me[Y>>2];if(0==(0|G))break;var V=Y,B=G}else var V=H,B=K}if(V>>>0<b>>>0)throw Ka(),"Reached an unreachable!";Se[V>>2]=0;var z=B,e=z>>2}else{var W=Me[t+(s+2)];if(W>>>0<b>>>0)throw Ka(),"Reached an unreachable!";Se[W+12>>2]=L,Se[L+8>>2]=W;var z=L,e=z>>2}while(0);var z;if(0==(0|D)){var S=y,i=S>>2,M=m;break}var Z=A+(r+28)|0,Q=(Se[Z>>2]<<2)+vi+304|0,q=(0|P)==(0|Se[Q>>2]);do{if(q){if(Se[Q>>2]=z,0!=(0|z))break;var $=Se[vi+4>>2]&(1<<Se[Z>>2]^-1);Se[vi+4>>2]=$;var S=y,i=S>>2,M=m;break e}if(D>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";var J=D+16|0;if((0|Se[J>>2])==(0|P)?Se[J>>2]=z:Se[D+20>>2]=z,0==(0|z)){var S=y,i=S>>2,M=m;break e}}while(0);if(z>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[e+6]=D;var rr=Me[t+(s+4)];if(0!=(0|rr)){if(rr>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[e+4]=rr,Se[rr+24>>2]=z}var ar=Me[t+(s+5)];if(0==(0|ar)){var S=y,i=S>>2,M=m;break}if(ar>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[e+5]=ar,Se[ar+24>>2]=z;var S=y,i=S>>2,M=m}}else var S=l,i=S>>2,M=h;while(0);var M,S,er=S;if(er>>>0>=d>>>0)break;var ir=r+(h-4)|0,vr=Me[ir>>2];if(0==(1&vr|0))break;var tr=0==(2&vr|0);do{if(tr){if((0|w)==(0|Se[vi+24>>2])){var fr=Se[vi+12>>2]+M|0;Se[vi+12>>2]=fr,Se[vi+24>>2]=S;var _r=1|fr;if(Se[i+1]=_r,(0|S)==(0|Se[vi+20>>2])&&(Se[vi+20>>2]=0,Se[vi+8>>2]=0),fr>>>0<=Me[vi+28>>2]>>>0)break r;ia(0);break r}if((0|w)==(0|Se[vi+20>>2])){var sr=Se[vi+8>>2]+M|0;Se[vi+8>>2]=sr,Se[vi+20>>2]=S;var nr=1|sr;Se[i+1]=nr;var or=er+sr|0;Se[or>>2]=sr;break r}var lr=(vr&-8)+M|0,br=vr>>>3,kr=vr>>>0<256;e:do if(kr){var ur=Me[s+f],cr=Me[((4|h)>>2)+s];if((0|ur)!=(0|cr)){var hr=((vr>>>2&1073741822)<<2)+vi+40|0,dr=(0|ur)==(0|hr);do{if(!dr){if(ur>>>0<Me[vi+16>>2]>>>0){_=66;break}_=63;break}_=63}while(0);do if(63==_){if((0|cr)!=(0|hr)&&cr>>>0<Me[vi+16>>2]>>>0)break;Se[ur+12>>2]=cr,Se[cr+8>>2]=ur;break e}while(0);throw Ka(),"Reached an unreachable!"}var wr=Se[vi>>2]&(1<<br^-1);Se[vi>>2]=wr}else{var pr=d,Er=Me[f+(s+4)],Ar=Me[((4|h)>>2)+s],gr=(0|Ar)==(0|pr);do if(gr){var yr=h+(r+12)|0,mr=Se[yr>>2];if(0==(0|mr)){var Sr=h+(r+8)|0,Mr=Se[Sr>>2];if(0==(0|Mr)){var Cr=0,a=Cr>>2;break}var Rr=Sr,Tr=Mr}else{var Rr=yr,Tr=mr;_=73}for(;;){var Tr,Rr,Or=Tr+20|0,Nr=Se[Or>>2];if(0==(0|Nr)){var Ir=Tr+16|0,Pr=Me[Ir>>2];if(0==(0|Pr))break;var Rr=Ir,Tr=Pr}else var Rr=Or,Tr=Nr}if(Rr>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[Rr>>2]=0;var Cr=Tr,a=Cr>>2}else{var Dr=Me[s+f];if(Dr>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[Dr+12>>2]=Ar,
Se[Ar+8>>2]=Dr;var Cr=Ar,a=Cr>>2}while(0);var Cr;if(0==(0|Er))break;var Lr=h+(r+20)|0,Fr=(Se[Lr>>2]<<2)+vi+304|0,Xr=(0|pr)==(0|Se[Fr>>2]);do{if(Xr){if(Se[Fr>>2]=Cr,0!=(0|Cr))break;var jr=Se[vi+4>>2]&(1<<Se[Lr>>2]^-1);Se[vi+4>>2]=jr;break e}if(Er>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";var Ur=Er+16|0;if((0|Se[Ur>>2])==(0|pr)?Se[Ur>>2]=Cr:Se[Er+20>>2]=Cr,0==(0|Cr))break e}while(0);if(Cr>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[a+6]=Er;var xr=Me[f+(s+2)];if(0!=(0|xr)){if(xr>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[a+4]=xr,Se[xr+24>>2]=Cr}var zr=Me[f+(s+3)];if(0==(0|zr))break;if(zr>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[a+5]=zr,Se[zr+24>>2]=Cr}while(0);if(Se[i+1]=1|lr,Se[er+lr>>2]=lr,(0|S)!=(0|Se[vi+20>>2])){var Vr=lr;break}Se[vi+8>>2]=lr;break r}Se[ir>>2]=vr&-2,Se[i+1]=1|M,Se[er+M>>2]=M;var Vr=M}while(0);var Vr;if(Vr>>>0<256){var Br=Vr>>>2&1073741822,Hr=(Br<<2)+vi+40|0,Kr=Me[vi>>2],Yr=1<<(Vr>>>3),Gr=0==(Kr&Yr|0);do{if(!Gr){var Wr=(Br+2<<2)+vi+40|0,Zr=Me[Wr>>2];if(Zr>>>0>=Me[vi+16>>2]>>>0){var Qr=Zr,qr=Wr;break}throw Ka(),"Reached an unreachable!"}Se[vi>>2]=Kr|Yr;var Qr=Hr,qr=(Br+2<<2)+vi+40|0}while(0);var qr,Qr;Se[qr>>2]=S,Se[Qr+12>>2]=S,Se[i+2]=Qr,Se[i+3]=Hr;break r}var $r=S,Jr=Vr>>>8,ra=0==(0|Jr);do if(ra)var aa=0;else{if(Vr>>>0>16777215){var aa=31;break}var ea=(Jr+1048320|0)>>>16&8,va=Jr<<ea,fa=(va+520192|0)>>>16&4,_a=va<<fa,sa=(_a+245760|0)>>>16&2,na=14-(fa|ea|sa)+(_a<<sa>>>15)|0,aa=Vr>>>((na+7|0)>>>0)&1|na<<1}while(0);var aa,oa=(aa<<2)+vi+304|0;Se[i+7]=aa,Se[i+5]=0,Se[i+4]=0;var la=Se[vi+4>>2],ba=1<<aa,ka=0==(la&ba|0);e:do if(ka){var ua=la|ba;Se[vi+4>>2]=ua,Se[oa>>2]=$r,Se[i+6]=oa,Se[i+3]=S,Se[i+2]=S}else{if(31==(0|aa))var ca=0;else var ca=25-(aa>>>1)|0;for(var ca,ha=Vr<<ca,da=Se[oa>>2];;){var da,ha;if((Se[da+4>>2]&-8|0)==(0|Vr)){var wa=da+8|0,pa=Me[wa>>2],Ea=Me[vi+16>>2],Aa=da>>>0<Ea>>>0;do if(!Aa){if(pa>>>0<Ea>>>0)break;Se[pa+12>>2]=$r,Se[wa>>2]=$r,Se[i+2]=pa,Se[i+3]=da,Se[i+6]=0;break e}while(0);throw Ka(),"Reached an unreachable!"}var ga=(ha>>>31<<2)+da+16|0,ya=Me[ga>>2];if(0==(0|ya)){if(ga>>>0>=Me[vi+16>>2]>>>0){Se[ga>>2]=$r,Se[i+6]=da,Se[i+3]=S,Se[i+2]=S;break e}throw Ka(),"Reached an unreachable!"}var ha=ha<<1,da=ya}}while(0);var ma=Se[vi+32>>2]-1|0;if(Se[vi+32>>2]=ma,0!=(0|ma))break r;ta();break r}while(0);throw Ka(),"Reached an unreachable!"}while(0)}function ta(){var r=Se[vi+452>>2],a=0==(0|r);r:do if(!a)for(var e=r;;){var e,i=Se[e+8>>2];if(0==(0|i))break r;var e=i}while(0);Se[vi+32>>2]=-1}function fa(r,a){if(0==(0|r))var e=Jr(a),i=e;else var v=la(r,a),i=v;var i;return i}function _a(r,a){var e,i=r>>>0<9;do if(i)var v=Jr(a),t=v;else{var f=r>>>0<16?16:r,_=0==(f-1&f|0);r:do if(_)var s=f;else{if(f>>>0<=16){var s=16;break}for(var n=16;;){var n,o=n<<1;if(o>>>0>=f>>>0){var s=o;break r}var n=o}}while(0);var s;if((-64-s|0)>>>0>a>>>0){if(a>>>0<11)var l=16;else var l=a+11&-8;var l,b=Jr(l+(s+12)|0);if(0==(0|b)){var t=0;break}var k=b-8|0;if(0==((b>>>0)%(s>>>0)|0))var u=k,c=0;else{var h=b+(s-1)&-s,d=h-8|0,w=k;if((d-w|0)>>>0>15)var p=d;else var p=h+(s-8)|0;var p,E=p-w|0,e=(b-4|0)>>2,A=Se[e],g=(A&-8)-E|0;if(0==(3&A|0)){var y=Se[k>>2]+E|0;Se[p>>2]=y,Se[p+4>>2]=g;var u=p,c=0}else{var m=p+4|0,S=g|1&Se[m>>2]|2;Se[m>>2]=S;var M=g+(p+4)|0,C=1|Se[M>>2];Se[M>>2]=C;var R=E|1&Se[e]|2;Se[e]=R;var T=b+(E-4)|0,O=1|Se[T>>2];Se[T>>2]=O;var u=p,c=b}}var c,u,N=u+4|0,I=Me[N>>2],P=0==(3&I|0);do if(P)var D=0;else{var L=I&-8;if(L>>>0<=(l+16|0)>>>0){var D=0;break}var F=L-l|0;Se[N>>2]=l|1&I|2,Se[u+(4|l)>>2]=3|F;var X=u+(4|L)|0,j=1|Se[X>>2];Se[X>>2]=j;var D=l+(u+8)|0}while(0);var D;0!=(0|c)&&va(c),0!=(0|D)&&va(D);var t=u+8|0}else{var U=Je();Se[U>>2]=12;var t=0}}while(0);var t;return t}function sa(r,a,e,i){var v,t;0==(0|Se[ti>>2])&&ba();var f=0==(0|i),_=0==(0|r);do{if(f){if(_){var s=Jr(0),n=s;t=30;break}var o=r<<2;if(o>>>0<11){var l=0,b=16;t=9;break}var l=0,b=o+11&-8;t=9;break}if(_){var n=i;t=30;break}var l=i,b=0;t=9;break}while(0);do if(9==t){var b,l,k=0==(1&e|0);r:do if(k){if(_){var u=0,c=0;break}for(var h=0,d=0;;){var d,h,w=Me[a+(d<<2)>>2];if(w>>>0<11)var p=16;else var p=w+11&-8;var p,E=p+h|0,A=d+1|0;if((0|A)==(0|r)){var u=0,c=E;break r}var h=E,d=A}}else{var g=Me[a>>2];if(g>>>0<11)var y=16;else var y=g+11&-8;var y,u=y,c=y*r|0}while(0);var c,u,m=Jr(b-4+c|0);if(0==(0|m)){var n=0;break}var S=m-8|0,M=Se[m-4>>2]&-8;if(0!=(2&e|0)){var C=-4-b+M|0;Fa(m,0,C,1)}if(0==(0|l)){var R=m+c|0,T=M-c|3;Se[m+(c-4)>>2]=T;var O=R,v=O>>2,N=c}else var O=l,v=O>>2,N=M;var N,O;Se[v]=m;var I=r-1|0,P=0==(0|I);r:do if(P)var D=S,L=N;else if(0==(0|u))for(var F=S,X=N,j=0;;){var j,X,F,U=Me[a+(j<<2)>>2];if(U>>>0<11)var x=16;else var x=U+11&-8;var x,z=X-x|0;Se[F+4>>2]=3|x;var V=F+x|0,B=j+1|0;if(Se[(B<<2>>2)+v]=x+(F+8)|0,(0|B)==(0|I)){var D=V,L=z;break r}var F=V,X=z,j=B}else for(var H=3|u,K=u+8|0,Y=S,G=N,W=0;;){var W,G,Y,Z=G-u|0;Se[Y+4>>2]=H;var Q=Y+u|0,q=W+1|0;if(Se[(q<<2>>2)+v]=Y+K|0,(0|q)==(0|I)){var D=Q,L=Z;break r}var Y=Q,G=Z,W=q}while(0);var L,D;Se[D+4>>2]=3|L;var n=O}while(0);var n;return n}function na(r){var a=r>>2;0==(0|Se[ti>>2])&&ba();var e=Me[vi+24>>2];if(0==(0|e))var i=0,v=0,t=0,f=0,_=0,s=0,n=0;else{for(var o=Me[vi+12>>2],l=o+40|0,b=vi+444|0,k=l,u=l,c=1;;){var c,u,k,b,h=Me[b>>2],d=h+8|0;if(0==(7&d|0))var w=0;else var w=7&-d;for(var w,p=b+4|0,E=h+w|0,A=c,g=u,y=k;;){var y,g,A,E;if(E>>>0<h>>>0)break;if(E>>>0>=(h+Se[p>>2]|0)>>>0|(0|E)==(0|e))break;var m=Se[E+4>>2];if(7==(0|m))break;var S=m&-8,M=S+y|0;if(1==(3&m|0))var C=A+1|0,R=S+g|0;else var C=A,R=g;var R,C,E=E+S|0,A=C,g=R,y=M}var T=Me[b+8>>2];if(0==(0|T))break;var b=T,k=y,u=g,c=A}var O=Se[vi+432>>2],i=y,v=A,t=o,f=g,_=O-y|0,s=Se[vi+436>>2],n=O-g|0}var n,s,_,f,t,v,i;Se[a]=i,Se[a+1]=v,Se[a+2]=0,Se[a+3]=0,Se[a+4]=_,Se[a+5]=s,Se[a+6]=0,Se[a+7]=n,Se[a+8]=f,Se[a+9]=t}function oa(){0==(0|Se[ti>>2])&&ba();var r=Me[vi+24>>2],a=0==(0|r);r:do if(a)var e=0,i=0,v=0;else for(var t=Se[vi+436>>2],f=Me[vi+432>>2],_=vi+444|0,s=f-40-Se[vi+12>>2]|0;;){var s,_,n=Me[_>>2],o=n+8|0;if(0==(7&o|0))var l=0;else var l=7&-o;for(var l,b=_+4|0,k=n+l|0,u=s;;){var u,k;if(k>>>0<n>>>0)break;if(k>>>0>=(n+Se[b>>2]|0)>>>0|(0|k)==(0|r))break;var c=Se[k+4>>2];if(7==(0|c))break;var h=c&-8,d=1==(3&c|0)?h:0,w=u-d|0,k=k+h|0,u=w}var p=Me[_+8>>2];if(0==(0|p)){var e=t,i=f,v=u;break r}var _=p,s=u}while(0);var v,i,e,E=Se[Se[qe>>2]+12>>2],A=(Qa(E,0|He.__str339,(ne=Oe,Oe+=4,Se[ne>>2]=e,ne)),Se[Se[qe>>2]+12>>2]),g=(Qa(A,0|He.__str1340,(ne=Oe,Oe+=4,Se[ne>>2]=i,ne)),Se[Se[qe>>2]+12>>2]);Qa(g,0|He.__str2341,(ne=Oe,Oe+=4,Se[ne>>2]=v,ne))}function la(r,a){var e,i,v,t=a>>>0>4294967231;r:do{if(!t){var f=r-8|0,_=f,i=(r-4|0)>>2,s=Me[i],n=s&-8,o=n-8|0,l=r+o|0,b=f>>>0<Me[vi+16>>2]>>>0;do if(!b){var k=3&s;if(!(1!=(0|k)&(0|o)>-8))break;var e=(r+(n-4)|0)>>2;if(0==(1&Se[e]|0))break;if(a>>>0<11)var u=16;else var u=a+11&-8;var u,c=0==(0|k);do{if(c){var h=ka(_,u),d=0,w=h;v=17;break}if(n>>>0<u>>>0){if((0|l)!=(0|Se[vi+24>>2])){v=21;break}var p=Se[vi+12>>2]+n|0;if(p>>>0<=u>>>0){v=21;break}var E=p-u|0,A=r+(u-8)|0;Se[i]=u|1&s|2;var g=1|E;Se[r+(u-4)>>2]=g,Se[vi+24>>2]=A,Se[vi+12>>2]=E;var d=0,w=_;v=17;break}var y=n-u|0;if(y>>>0<=15){var d=0,w=_;v=17;break}Se[i]=u|1&s|2,Se[r+(u-4)>>2]=3|y;var m=1|Se[e];Se[e]=m;var d=r+u|0,w=_;v=17;break}while(0);do if(17==v){var w,d;if(0==(0|w))break;0!=(0|d)&&va(d);var S=w+8|0;break r}while(0);var M=Jr(a);if(0==(0|M)){var S=0;break r}var C=0==(3&Se[i]|0)?8:4,R=n-C|0,T=R>>>0<a>>>0?R:a;Pa(M,r,T,1),va(r);var S=M;break r}while(0);throw Ka(),"Reached an unreachable!"}var O=Je();Se[O>>2]=12;var S=0}while(0);var S;return S}function ba(){if(0==(0|Se[ti>>2])){var r=qa(8);if(0!=(r-1&r|0))throw Ka(),"Reached an unreachable!";Se[ti+8>>2]=r,Se[ti+4>>2]=r,Se[ti+12>>2]=-1,Se[ti+16>>2]=2097152,Se[ti+20>>2]=0,Se[vi+440>>2]=0;var a=$a(0);Se[ti>>2]=a&-16^1431655768}}function ka(r,a){var e=Se[r+4>>2]&-8,i=a>>>0<256;do if(i)var v=0;else{if(e>>>0>=(a+4|0)>>>0&&(e-a|0)>>>0<=Se[ti+8>>2]<<1>>>0){var v=r;break}var v=0}while(0);var v;return v}function ua(r){for(var a,e=vi+444|0,a=e>>2;;){var e,i=Me[a];if(i>>>0<=r>>>0&&(i+Se[a+1]|0)>>>0>r>>>0){var v=e;break}var t=Me[a+2];if(0==(0|t)){var v=0;break}var e=t,a=e>>2}var v;return v}function ca(r,a){var e=r,i=r+8|0;if(0==(7&i|0))var v=0;else var v=7&-i;var v,t=a-v|0;Se[vi+24>>2]=e+v|0,Se[vi+12>>2]=t,Se[v+(e+4)>>2]=1|t,Se[a+(e+4)>>2]=40;var f=Se[ti+16>>2];Se[vi+28>>2]=f}function ha(){for(var r=0;;){var r,a=r<<1,e=(a<<2)+vi+40|0;Se[vi+(a+3<<2)+40>>2]=e,Se[vi+(a+2<<2)+40>>2]=e;var i=r+1|0;if(32==(0|i))break;var r=i}}function da(r,a,e){var i,v,t,f,_=a>>2,s=r>>2,n=r+8|0;if(0==(7&n|0))var o=0;else var o=7&-n;var o,l=a+8|0;if(0==(7&l|0))var b=0,t=b>>2;else var b=7&-l,t=b>>2;var b,k=a+b|0,u=k,c=o+e|0,v=c>>2,h=r+c|0,d=h,w=k-(r+o)-e|0;Se[(o+4>>2)+s]=3|e;var p=(0|u)==(0|Se[vi+24>>2]);r:do if(p){var E=Se[vi+12>>2]+w|0;Se[vi+12>>2]=E,Se[vi+24>>2]=d;var A=1|E;Se[v+(s+1)]=A}else if((0|u)==(0|Se[vi+20>>2])){var g=Se[vi+8>>2]+w|0;Se[vi+8>>2]=g,Se[vi+20>>2]=d;var y=1|g;Se[v+(s+1)]=y;var m=r+g+c|0;Se[m>>2]=g}else{var S=Me[t+(_+1)];if(1==(3&S|0)){var M=S&-8,C=S>>>3,R=S>>>0<256;a:do if(R){var T=Me[((8|b)>>2)+_],O=Me[t+(_+3)];if((0|T)!=(0|O)){var N=((S>>>2&1073741822)<<2)+vi+40|0,I=(0|T)==(0|N);do{if(!I){if(T>>>0<Me[vi+16>>2]>>>0){f=18;break}f=15;break}f=15}while(0);do if(15==f){if((0|O)!=(0|N)&&O>>>0<Me[vi+16>>2]>>>0)break;Se[T+12>>2]=O,Se[O+8>>2]=T;break a}while(0);throw Ka(),"Reached an unreachable!"}var P=Se[vi>>2]&(1<<C^-1);Se[vi>>2]=P}else{var D=k,L=Me[((24|b)>>2)+_],F=Me[t+(_+3)],X=(0|F)==(0|D);do if(X){var j=16|b,U=j+(a+4)|0,x=Se[U>>2];if(0==(0|x)){var z=a+j|0,V=Se[z>>2];if(0==(0|V)){var B=0,i=B>>2;break}var H=z,K=V}else{var H=U,K=x;f=25}for(;;){var K,H,Y=K+20|0,G=Se[Y>>2];if(0==(0|G)){var W=K+16|0,Z=Me[W>>2];if(0==(0|Z))break;var H=W,K=Z}else var H=Y,K=G}if(H>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[H>>2]=0;var B=K,i=B>>2}else{var Q=Me[((8|b)>>2)+_];if(Q>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[Q+12>>2]=F,Se[F+8>>2]=Q;var B=F,i=B>>2}while(0);var B;if(0==(0|L))break;var q=b+(a+28)|0,$=(Se[q>>2]<<2)+vi+304|0,J=(0|D)==(0|Se[$>>2]);do{if(J){if(Se[$>>2]=B,0!=(0|B))break;var rr=Se[vi+4>>2]&(1<<Se[q>>2]^-1);Se[vi+4>>2]=rr;break a}if(L>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";var ar=L+16|0;if((0|Se[ar>>2])==(0|D)?Se[ar>>2]=B:Se[L+20>>2]=B,0==(0|B))break a}while(0);if(B>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[i+6]=L;var er=16|b,ir=Me[(er>>2)+_];if(0!=(0|ir)){if(ir>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[i+4]=ir,Se[ir+24>>2]=B}var vr=Me[(er+4>>2)+_];if(0==(0|vr))break;if(vr>>>0<Me[vi+16>>2]>>>0)throw Ka(),"Reached an unreachable!";Se[i+5]=vr,Se[vr+24>>2]=B}while(0);var tr=a+(M|b)|0,fr=M+w|0}else var tr=u,fr=w;var fr,tr,_r=tr+4|0,sr=Se[_r>>2]&-2;if(Se[_r>>2]=sr,Se[v+(s+1)]=1|fr,Se[(fr>>2)+s+v]=fr,fr>>>0<256){var nr=fr>>>2&1073741822,or=(nr<<2)+vi+40|0,lr=Me[vi>>2],br=1<<(fr>>>3),kr=0==(lr&br|0);do{if(!kr){var ur=(nr+2<<2)+vi+40|0,cr=Me[ur>>2];if(cr>>>0>=Me[vi+16>>2]>>>0){var hr=cr,dr=ur;break}throw Ka(),"Reached an unreachable!"}Se[vi>>2]=lr|br;var hr=or,dr=(nr+2<<2)+vi+40|0}while(0);var dr,hr;Se[dr>>2]=d,Se[hr+12>>2]=d,Se[v+(s+2)]=hr,Se[v+(s+3)]=or}else{var wr=h,pr=fr>>>8,Er=0==(0|pr);do if(Er)var Ar=0;else{if(fr>>>0>16777215){var Ar=31;break}var gr=(pr+1048320|0)>>>16&8,yr=pr<<gr,mr=(yr+520192|0)>>>16&4,Sr=yr<<mr,Mr=(Sr+245760|0)>>>16&2,Cr=14-(mr|gr|Mr)+(Sr<<Mr>>>15)|0,Ar=fr>>>((Cr+7|0)>>>0)&1|Cr<<1}while(0);var Ar,Rr=(Ar<<2)+vi+304|0;Se[v+(s+7)]=Ar;var Tr=c+(r+16)|0;Se[v+(s+5)]=0,Se[Tr>>2]=0;var Or=Se[vi+4>>2],Nr=1<<Ar;if(0==(Or&Nr|0)){var Ir=Or|Nr;Se[vi+4>>2]=Ir,Se[Rr>>2]=wr,Se[v+(s+6)]=Rr,Se[v+(s+3)]=wr,Se[v+(s+2)]=wr}else{if(31==(0|Ar))var Pr=0;else var Pr=25-(Ar>>>1)|0;for(var Pr,Dr=fr<<Pr,Lr=Se[Rr>>2];;){var Lr,Dr;if((Se[Lr+4>>2]&-8|0)==(0|fr)){var Fr=Lr+8|0,Xr=Me[Fr>>2],jr=Me[vi+16>>2],Ur=Lr>>>0<jr>>>0;do if(!Ur){if(Xr>>>0<jr>>>0)break;Se[Xr+12>>2]=wr,Se[Fr>>2]=wr,Se[v+(s+2)]=Xr,Se[v+(s+3)]=Lr,Se[v+(s+6)]=0;break r}while(0);throw Ka(),"Reached an unreachable!"}var xr=(Dr>>>31<<2)+Lr+16|0,zr=Me[xr>>2];if(0==(0|zr)){if(xr>>>0>=Me[vi+16>>2]>>>0){Se[xr>>2]=wr,Se[v+(s+6)]=Lr,Se[v+(s+3)]=wr,Se[v+(s+2)]=wr;break r}throw Ka(),"Reached an unreachable!"}var Dr=Dr<<1,Lr=zr}}}}while(0);return r+(8|o)|0}function wa(r){return 0|He.__str3342}function pa(r){return 0|He.__str14343}function Ea(r){Se[r>>2]=si+8|0}function Aa(r){0!=(0|r)&&va(r)}function ga(r){ya(r);var a=r;Aa(a)}function ya(r){var a=0|r;Ye(a)}function ma(r){var a=0|r;Ea(a),Se[r>>2]=ni+8|0}function Sa(r){var a=0|r;ya(a);var e=r;Aa(e)}function Ma(r,a){var e,i,v=Me[vi+24>>2],i=v>>2,t=v,f=ua(t),_=Se[f>>2],s=Se[f+4>>2],n=_+s|0,o=_+(s-39)|0;if(0==(7&o|0))var l=0;else var l=7&-o;var l,b=_+(s-47)+l|0,k=b>>>0<(v+16|0)>>>0?t:b,u=k+8|0,e=u>>2,c=u,h=r,d=a-40|0;ca(h,d);var w=k+4|0;Se[w>>2]=27,Se[e]=Se[vi+444>>2],Se[e+1]=Se[vi+448>>2],Se[e+2]=Se[vi+452>>2],Se[e+3]=Se[vi+456>>2],Se[vi+444>>2]=r,Se[vi+448>>2]=a,Se[vi+456>>2]=0,Se[vi+452>>2]=c;var p=k+28|0;Se[p>>2]=7;var E=(k+32|0)>>>0<n>>>0;r:do if(E)for(var A=p;;){var A,g=A+4|0;if(Se[g>>2]=7,(A+8|0)>>>0>=n>>>0)break r;var A=g}while(0);var y=(0|k)==(0|t);r:do if(!y){var m=k-v|0,S=t+m|0,M=m+(t+4)|0,C=Se[M>>2]&-2;Se[M>>2]=C;var R=1|m;Se[i+1]=R;var T=S;if(Se[T>>2]=m,m>>>0<256){var O=m>>>2&1073741822,N=(O<<2)+vi+40|0,I=Me[vi>>2],P=1<<(m>>>3),D=0==(I&P|0);do{if(!D){var L=(O+2<<2)+vi+40|0,F=Me[L>>2];if(F>>>0>=Me[vi+16>>2]>>>0){var X=F,j=L;break}throw Ka(),"Reached an unreachable!"}var U=I|P;Se[vi>>2]=U;var X=N,j=(O+2<<2)+vi+40|0}while(0);var j,X;Se[j>>2]=v,Se[X+12>>2]=v,Se[i+2]=X,Se[i+3]=N}else{var x=v,z=m>>>8,V=0==(0|z);do if(V)var B=0;else{if(m>>>0>16777215){var B=31;break}var H=(z+1048320|0)>>>16&8,K=z<<H,Y=(K+520192|0)>>>16&4,G=K<<Y,W=(G+245760|0)>>>16&2,Z=14-(Y|H|W)+(G<<W>>>15)|0,B=m>>>((Z+7|0)>>>0)&1|Z<<1}while(0);var B,Q=(B<<2)+vi+304|0;Se[i+7]=B,Se[i+5]=0,Se[i+4]=0;var q=Se[vi+4>>2],$=1<<B;if(0==(q&$|0)){var J=q|$;Se[vi+4>>2]=J,Se[Q>>2]=x,Se[i+6]=Q,Se[i+3]=v,Se[i+2]=v}else{if(31==(0|B))var rr=0;else var rr=25-(B>>>1)|0;for(var rr,ar=m<<rr,er=Se[Q>>2];;){var er,ar;if((Se[er+4>>2]&-8|0)==(0|m)){var ir=er+8|0,vr=Me[ir>>2],tr=Me[vi+16>>2],fr=er>>>0<tr>>>0;do if(!fr){if(vr>>>0<tr>>>0)break;Se[vr+12>>2]=x,Se[ir>>2]=x,Se[i+2]=vr,Se[i+3]=er,Se[i+6]=0;break r}while(0);throw Ka(),"Reached an unreachable!"}var _r=(ar>>>31<<2)+er+16|0,sr=Me[_r>>2];if(0==(0|sr)){if(_r>>>0>=Me[vi+16>>2]>>>0){Se[_r>>2]=x,Se[i+6]=er,Se[i+3]=v,Se[i+2]=v;break r}throw Ka(),"Reached an unreachable!"}var ar=ar<<1,er=sr}}}}while(0)}function Ca(r){return d(r)}function Ra(r,a){var e=0;do Ae[r+e]=Ae[a+e],e++;while(0!=Ae[a+e-1]);return r}function Ta(){var r=Ta;return r.LLVM_SAVEDSTACKS||(r.LLVM_SAVEDSTACKS=[]),r.LLVM_SAVEDSTACKS.push(le.stackSave()),r.LLVM_SAVEDSTACKS.length-1}function Oa(r){var a=Ta,e=a.LLVM_SAVEDSTACKS[r];a.LLVM_SAVEDSTACKS.splice(r,1),le.stackRestore(e)}function Na(r,a,e){for(var i=0;i<e;){var v=Ae[r+i],t=Ae[a+i];if(v==t&&0==v)return 0;if(0==v)return-1;if(0==t)return 1;if(v!=t)return v>t?1:-1;i++}return 0}function Ia(r,a){var e=Ca(r),i=0;do Ae[r+e+i]=Ae[a+i],i++;while(0!=Ae[a+i-1]);return r}function Pa(r,a,e,i){if(e>=20&&a%2==r%2)if(a%4==r%4){for(var v=a+e;a%4;)Ae[r++]=Ae[a++];for(var t=a>>2,f=r>>2,_=v>>2;t<_;)Se[f++]=Se[t++];for(a=t<<2,r=f<<2;a<v;)Ae[r++]=Ae[a++]}else{var v=a+e;a%2&&(Ae[r++]=Ae[a++]);for(var s=a>>1,n=r>>1,o=v>>1;s<o;)ye[n++]=ye[s++];a=s<<1,r=n<<1,a<v&&(Ae[r++]=Ae[a++])}else for(;e--;)Ae[r++]=Ae[a++]}function Da(r,a){return Na(r,a,Le)}function La(r,a,e){for(var i=0;i<e;i++){var v=Ae[r+i],t=Ae[a+i];if(v!=t)return v>t?1:-1}return 0}function Fa(r,a,e,i){if(e>=20){for(var v=r+e;r%4;)Ae[r++]=a;a<0&&(a+=256);for(var t=r>>2,f=v>>2,_=a|a<<8|a<<16|a<<24;t<f;)Se[t++]=_;for(r=t<<2;r<v;)Ae[r++]=a}else for(;e--;)Ae[r++]=a}function Xa(r,a,e,i){throw"Assertion failed: "+s(i)+", at: "+[s(r),a,s(e)]}function ja(r){var a=d(r),e=Jr(a+1);return Pa(e,r,a,1),Ae[e+a]=0,e}function Ua(r,a){function e(r){var e;return"double"===r?(xe[0]=Se[a+_>>2],xe[1]=Se[a+_+4>>2],e=ze[0]):"i64"==r?e=[Se[a+_>>2],Se[a+_+4>>2]]:(r="i32",e=Se[a+_>>2]),_+=le.getNativeFieldSize(r),e}for(var i,v,t,f=r,_=0,s=[];;){var n=f;if(i=Ae[f],0===i)break;if(v=Ae[f+1],i=="%".charCodeAt(0)){var o=!1,l=!1,b=!1,k=!1;r:for(;;){switch(v){case"+".charCodeAt(0):o=!0;break;case"-".charCodeAt(0):l=!0;break;case"#".charCodeAt(0):b=!0;break;case"0".charCodeAt(0):if(k)break r;k=!0;break;default:break r}f++,v=Ae[f+1]}var u=0;if(v=="*".charCodeAt(0))u=e("i32"),f++,v=Ae[f+1];else for(;v>="0".charCodeAt(0)&&v<="9".charCodeAt(0);)u=10*u+(v-"0".charCodeAt(0)),f++,v=Ae[f+1];var c=!1;if(v==".".charCodeAt(0)){var h=0;if(c=!0,f++,v=Ae[f+1],v=="*".charCodeAt(0))h=e("i32"),f++;else for(;;){var d=Ae[f+1];if(d<"0".charCodeAt(0)||d>"9".charCodeAt(0))break;h=10*h+(d-"0".charCodeAt(0)),f++}v=Ae[f+1]}else var h=6;var E;switch(String.fromCharCode(v)){case"h":var A=Ae[f+2];A=="h".charCodeAt(0)?(f++,E=1):E=2;break;case"l":var A=Ae[f+2];A=="l".charCodeAt(0)?(f++,E=8):E=4;break;case"L":case"q":case"j":E=8;break;case"z":case"t":case"I":E=4;break;default:E=null}if(E&&f++,v=Ae[f+1],["d","i","u","o","x","X","p"].indexOf(String.fromCharCode(v))!=-1){var m=v=="d".charCodeAt(0)||v=="i".charCodeAt(0);E=E||4;var t=e("i"+8*E);if(8==E&&(t=le.makeBigInt(t[0],t[1],v=="u".charCodeAt(0))),E<=4){var S=Math.pow(256,E)-1;t=(m?y:g)(t&S,8*E)}var M,C=Math.abs(t),R="";if(v=="d".charCodeAt(0)||v=="i".charCodeAt(0))M=y(t,8*E,1).toString(10);else if(v=="u".charCodeAt(0))M=g(t,8*E,1).toString(10),t=Math.abs(t);else if(v=="o".charCodeAt(0))M=(b?"0":"")+C.toString(8);else if(v=="x".charCodeAt(0)||v=="X".charCodeAt(0)){if(R=b?"0x":"",t<0){t=-t,M=(C-1).toString(16);for(var T=[],O=0;O<M.length;O++)T.push((15-parseInt(M[O],16)).toString(16));for(M=T.join("");M.length<2*E;)M="f"+M}else M=C.toString(16);v=="X".charCodeAt(0)&&(R=R.toUpperCase(),M=M.toUpperCase())}else v=="p".charCodeAt(0)&&(0===C?M="(nil)":(R="0x",M=C.toString(16)));if(c)for(;M.length<h;)M="0"+M;for(o&&(R=t<0?"-"+R:"+"+R);R.length+M.length<u;)l?M+=" ":k?M="0"+M:R=" "+R;M=R+M,M.split("").forEach(function(r){s.push(r.charCodeAt(0))})}else if(["f","F","e","E","g","G"].indexOf(String.fromCharCode(v))!=-1){var M,t=e("double");if(isNaN(t))M="nan",k=!1;else if(isFinite(t)){var N=!1,I=Math.min(h,20);if(v=="g".charCodeAt(0)||v=="G".charCodeAt(0)){N=!0,h=h||1;var P=parseInt(t.toExponential(I).split("e")[1],10);h>P&&P>=-4?(v=(v=="g".charCodeAt(0)?"f":"F").charCodeAt(0),h-=P+1):(v=(v=="g".charCodeAt(0)?"e":"E").charCodeAt(0),h--),I=Math.min(h,20)}v=="e".charCodeAt(0)||v=="E".charCodeAt(0)?(M=t.toExponential(I),/[eE][-+]\\d$/.test(M)&&(M=M.slice(0,-1)+"0"+M.slice(-1))):v!="f".charCodeAt(0)&&v!="F".charCodeAt(0)||(M=t.toFixed(I));var D=M.split("e");if(N&&!b)for(;D[0].length>1&&D[0].indexOf(".")!=-1&&("0"==D[0].slice(-1)||"."==D[0].slice(-1));)D[0]=D[0].slice(0,-1);else for(b&&M.indexOf(".")==-1&&(D[0]+=".");h>I++;)D[0]+="0";M=D[0]+(D.length>1?"e"+D[1]:""),v=="E".charCodeAt(0)&&(M=M.toUpperCase()),o&&t>=0&&(M="+"+M)}else M=(t<0?"-":"")+"inf",k=!1;for(;M.length<u;)l?M+=" ":M=!k||"-"!=M[0]&&"+"!=M[0]?(k?"0":" ")+M:M[0]+"0"+M.slice(1);v<"a".charCodeAt(0)&&(M=M.toUpperCase()),M.split("").forEach(function(r){s.push(r.charCodeAt(0))})}else if(v=="s".charCodeAt(0)){var L,F=e("i8*");if(F?(L=w(F),c&&L.length>h&&(L=L.slice(0,h))):L=p("(null)",!0),!l)for(;L.length<u--;)s.push(" ".charCodeAt(0));if(s=s.concat(L),l)for(;L.length<u--;)s.push(" ".charCodeAt(0))}else if(v=="c".charCodeAt(0)){for(l&&s.push(e("i8"));--u>0;)s.push(" ".charCodeAt(0));l||s.push(e("i8"))}else if(v=="n".charCodeAt(0)){var X=e("i32*");Se[X>>2]=s.length}else if(v=="%".charCodeAt(0))s.push(i);else for(var O=n;O<f+2;O++)s.push(Ae[O]);f+=2}else s.push(i),f+=1}return s}function xa(r,a,e,i){for(var v=Ua(e,i),t=void 0===a?v.length:Math.min(v.length,a-1),f=0;f<t;f++)Ae[r+f]=v[f];return Ae[r+f]=0,v.length}function za(r,a,e){return xa(r,void 0,a,e)}function Va(r){return r in{32:0,9:0,10:0,11:0,12:0,13:0}}function Ba(r){return r>="0".charCodeAt(0)&&r<="9".charCodeAt(0)}function Ha(r){for(var a;(a=Ae[r])&&Va(a);)r++;if(!a||!Ba(a))return 0;for(var e=r;(a=Ae[e])&&Ba(a);)e++;return Math.floor(Number(s(r).substr(0,e-r)))}function Ka(r){throw ke=!0,"ABORT: "+r+", at "+(new Error).stack}function Ya(r){return Ya.ret||(Ya.ret=_([0],"i32",we)),Se[Ya.ret>>2]=r,r}function Ga(r,a,e,i){var v=$e.streams[r];if(!v||v.object.isDevice)return Ya(Ge.EBADF),-1;if(v.isWrite){if(v.object.isFolder)return Ya(Ge.EISDIR),-1;if(e<0||i<0)return Ya(Ge.EINVAL),-1;for(var t=v.object.contents;t.length<i;)t.push(0);for(var f=0;f<e;f++)t[i+f]=ge[a+f];return v.object.timestamp=Date.now(),f}return Ya(Ge.EACCES),-1}function Wa(r,a,e){var i=$e.streams[r];if(i){if(i.isWrite){if(e<0)return Ya(Ge.EINVAL),-1;if(i.object.isDevice){if(i.object.output){for(var v=0;v<e;v++)try{i.object.output(Ae[a+v])}catch(r){return Ya(Ge.EIO),-1}return i.object.timestamp=Date.now(),v}return Ya(Ge.ENXIO),-1}var t=Ga(r,a,e,i.position);return t!=-1&&(i.position+=t),t}return Ya(Ge.EACCES),-1}return Ya(Ge.EBADF),-1}function Za(r,a,e,i){var v=e*a;if(0==v)return 0;var t=Wa(i,r,v);return t==-1?($e.streams[i]&&($e.streams[i].error=!0),-1):Math.floor(t/a)}function Qa(r,a,e){var i=Ua(a,e),v=le.stackSave(),t=Za(_(i,"i8",de),1,i.length,r);return le.stackRestore(v),t}function qa(r){switch(r){case 8:return Pe;case 54:case 56:case 21:case 61:case 63:case 22:case 67:case 23:case 24:case 25:case 26:case 27:case 69:case 28:case 101:case 70:case 71:case 29:case 30:case 199:case 75:case 76:case 32:case 43:case 44:case 80:case 46:case 47:case 45:case 48:case 49:case 42:case 82:case 33:case 7:case 108:case 109:case 107:case 112:case 119:case 121:return 200809;case 13:case 104:case 94:case 95:case 34:case 35:case 77:case 81:case 83:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 91:case 94:case 95:case 110:case 111:case 113:case 114:case 115:case 116:case 117:case 118:case 120:case 40:case 16:case 79:case 19:return-1;case 92:case 93:case 5:case 72:case 6:case 74:case 92:case 93:case 96:case 97:case 98:case 99:case 102:case 103:case 105:return 1;case 38:case 66:case 50:case 51:case 4:return 1024;case 15:case 64:case 41:return 32;case 55:case 37:case 17:return 2147483647;case 18:case 1:return 47839;case 59:case 57:return 99;case 68:case 58:return 2048;case 0:return 2097152;case 3:return 65536;case 14:return 32768;case 73:return 32767;case 39:return 16384;case 60:return 1e3;case 106:return 700;case 52:return 256;case 62:return 255;case 2:return 100;case 65:return 64;case 36:return 20;case 100:return 16;case 20:return 6;case 53:return 4}return Ya(Ge.EINVAL),-1}function $a(r){var a=Math.floor(Date.now()/1e3);return r&&(Se[r>>2]=a),a}function Ja(){return Ya.ret}function re(r){var a=re;a.called||(Ie=o(Ie),a.called=!0);var e=Ie;return 0!=r&&le.staticAlloc(r),e}function ae(){return Se[ae.buf>>2]}function ee(r){r=r||Module.arguments,k();var a=null;return Module._main&&(a=Module.callMain(r),Module.noExitRuntime||u()),a}var ie=[],ve=false,te="object"==typeof window,fe="function"==typeof importScripts,_e=!te&&!ve&&!fe;if(ve){print=function(r){process.stdout.write(r+"\\n")},printErr=function(r){process.stderr.write(r+"\\n")};var se=require("fs");read=function(r){var a=se.readFileSync(r).toString();return a||"/"==r[0]||(r=__dirname.split("/").slice(0,-1).join("/")+"/src/"+r,a=se.readFileSync(r).toString()),a},load=function(a){r(read(a))},ie=process.argv.slice(2)}else if(_e)this.read||(this.read=function(r){snarf(r)}),"undefined"!=typeof scriptArgs?ie=scriptArgs:"undefined"!=typeof arguments&&(ie=arguments);else if(te)this.print=printErr=function(r){console.log(r)},this.read=function(r){var a=new XMLHttpRequest;return a.open("GET",r,!1),a.send(null),a.responseText},this.arguments&&(ie=arguments);else{if(!fe)throw"Unknown runtime environment. Where are we?";this.load=importScripts}"undefined"==typeof load&&"undefined"!=typeof read&&(this.load=function(a){r(read(a))}),"undefined"==typeof printErr&&(this.printErr=function(){}),"undefined"==typeof print&&(this.print=printErr);try{this.Module=Module}catch(r){this.Module=Module={}}Module.arguments||(Module.arguments=ie),Module.print&&(print=Module.print);var ne,oe,le={stackSave:function(){return Oe},stackRestore:function(r){Oe=r},forceAlign:function(r,a){if(a=a||4,1==a)return r;if(isNumber(r)&&isNumber(a))return Math.ceil(r/a)*a;if(isNumber(a)&&isPowerOfTwo(a)){var e=log2(a);return"(((("+r+")+"+(a-1)+")>>"+e+")<<"+e+")"}return"Math.ceil(("+r+")/"+a+")*"+a},isNumberType:function(r){return r in le.INT_TYPES||r in le.FLOAT_TYPES},isPointerType:function(r){return"*"==r[r.length-1]},isStructType:function(r){return!isPointerType(r)&&(!!/^\\[\\d+\\ x\\ (.*)\\]/.test(r)||(!!/<?{ [^}]* }>?/.test(r)||"%"==r[0]))},INT_TYPES:{i1:0,i8:0,i16:0,i32:0,i64:0},FLOAT_TYPES:{float:0,double:0},bitshift64:function(r,e,i,v){var t=Math.pow(2,v)-1;if(v<32)switch(i){case"shl":return[r<<v,e<<v|(r&t<<32-v)>>>32-v];case"ashr":return[(r>>>v|(e&t)<<32-v)>>0>>>0,e>>v>>>0];case"lshr":return[(r>>>v|(e&t)<<32-v)>>>0,e>>>v]}else if(32==v)switch(i){case"shl":return[0,r];case"ashr":return[e,(0|e)<0?t:0];case"lshr":return[e,0]}else switch(i){case"shl":return[0,r<<v-32];case"ashr":return[e>>v-32>>>0,(0|e)<0?t:0];case"lshr":return[e>>>v-32,0]}a("unknown bitshift64 op: "+[value,i,v])},or64:function(r,a){var e=0|r|(0|a),i=4294967296*(Math.round(r/4294967296)|Math.round(a/4294967296));return e+i},and64:function(r,a){var e=(0|r)&(0|a),i=4294967296*(Math.round(r/4294967296)&Math.round(a/4294967296));return e+i},xor64:function(r,a){var e=(0|r)^(0|a),i=4294967296*(Math.round(r/4294967296)^Math.round(a/4294967296));return e+i},getNativeTypeSize:function(r,a){if(1==le.QUANTUM_SIZE)return 1;var i={"%i1":1,"%i8":1,"%i16":2,"%i32":4,"%i64":8,"%float":4,"%double":8}["%"+r];if(!i)if("*"==r[r.length-1])i=le.QUANTUM_SIZE;else if("i"==r[0]){var v=parseInt(r.substr(1));e(v%8==0),i=v/8}return i},getNativeFieldSize:function(r){return Math.max(le.getNativeTypeSize(r),le.QUANTUM_SIZE)},dedup:function(r,a){var e={};return a?r.filter(function(r){return!e[r[a]]&&(e[r[a]]=!0,!0)}):r.filter(function(r){return!e[r]&&(e[r]=!0,!0)})},set:function(){for(var r="object"==typeof arguments[0]?arguments[0]:arguments,a={},e=0;e<r.length;e++)a[r[e]]=0;return a},calculateStructAlignment:function(r){r.flatSize=0,r.alignSize=0;var a=[],e=-1;return r.flatIndexes=r.fields.map(function(i){var v,t;if(le.isNumberType(i)||le.isPointerType(i))v=le.getNativeTypeSize(i),t=v;else{if(!le.isStructType(i))throw"Unclear type in struct: "+i+", in "+r.name_+" :: "+dump(Types.types[r.name_]);v=Types.types[i].flatSize,t=Types.types[i].alignSize}t=r.packed?1:Math.min(t,le.QUANTUM_SIZE),r.alignSize=Math.max(r.alignSize,t);var f=le.alignMemory(r.flatSize,t);return r.flatSize=f+v,e>=0&&a.push(f-e),e=f,f}),r.flatSize=le.alignMemory(r.flatSize,r.alignSize),0==a.length?r.flatFactor=r.flatSize:1==le.dedup(a).length&&(r.flatFactor=a[0]),r.needsFlattening=1!=r.flatFactor,r.flatIndexes},generateStructInfo:function(r,a,i){var v,t;if(a){if(i=i||0,v=("undefined"==typeof Types?le.typeInfo:Types.types)[a],!v)return null;e(v.fields.length===r.length,"Number of named fields must match the type for "+a),t=v.flatIndexes}else{var v={fields:r.map(function(r){return r[0]})};t=le.calculateStructAlignment(v)}var f={__size__:v.flatSize};return a?r.forEach(function(r,a){if("string"==typeof r)f[r]=t[a]+i;else{var e;for(var _ in r)e=_;f[e]=le.generateStructInfo(r[e],v.fields[a],t[a])}}):r.forEach(function(r,a){f[r[1]]=t[a]}),f},stackAlloc:function(r){var a=Oe;return Oe+=r,Oe=Oe+3>>2<<2,a},staticAlloc:function(r){var a=Ie;return Ie+=r,Ie=Ie+3>>2<<2,Ie>=Le&&l(),a},alignMemory:function(r,a){var e=r=Math.ceil(r/(a?a:4))*(a?a:4);return e},makeBigInt:function(r,a,e){var i=e?(r>>>0)+4294967296*(a>>>0):(r>>>0)+4294967296*(0|a);return i},QUANTUM_SIZE:4,__dummy__:0},be={MAX_ALLOWED:0,corrections:0,sigs:{},note:function(r,e,i){e||(this.corrections++,this.corrections>=this.MAX_ALLOWED&&a("\\n\\nToo many corrections!"))},print:function(){}},ke=!1,ue=0,ce=this;Module.ccall=i,Module.setValue=t,Module.getValue=f;var he=0,de=1,we=2;Module.ALLOC_NORMAL=he,Module.ALLOC_STACK=de,Module.ALLOC_STATIC=we,Module.allocate=_,Module.Pointer_stringify=s,Module.Array_stringify=n;var pe,Ee,Ae,ge,ye,me,Se,Me,Ce,Re,Te,Oe,Ne,Ie,Pe=4096,De=Module.TOTAL_STACK||5242880,Le=Module.TOTAL_MEMORY||10485760;Module.FAST_MEMORY||2097152;e(!!(Int32Array&&Float64Array&&new Int32Array(1).subarray&&new Int32Array(1).set),"Cannot fallback to non-typed array case: Code is too specialized");var Fe=new ArrayBuffer(Le);Ae=new Int8Array(Fe),ye=new Int16Array(Fe),Se=new Int32Array(Fe),ge=new Uint8Array(Fe),me=new Uint16Array(Fe),Me=new Uint32Array(Fe),Ce=new Float32Array(Fe),Re=new Float64Array(Fe),Se[0]=255,e(255===ge[0]&&0===ge[3],"Typed arrays 2 must be run on a little-endian system");var Xe=p("(null)");Ie=Xe.length;for(var je=0;je<Xe.length;je++)Ae[je]=Xe[je];Module.HEAP=Ee,Module.HEAP8=Ae,Module.HEAP16=ye,Module.HEAP32=Se,Module.HEAPU8=ge,Module.HEAPU16=me,Module.HEAPU32=Me,Module.HEAPF32=Ce,Module.HEAPF64=Re,Te=Oe=le.alignMemory(Ie),Ne=Te+De;var Ue=le.alignMemory(Ne,8),xe=(Ae.subarray(Ue),Se.subarray(Ue>>2)),ze=(Ce.subarray(Ue>>2),Re.subarray(Ue>>3));Ne=Ue+8,Ie=o(Ne);var Ve=[],Be=[];Module.Array_copy=c,Module.TypedArray_copy=h,Module.String_len=d,Module.String_copy=w,Module.intArrayFromString=p,Module.intArrayToString=E,Module.writeStringToMemory=A;var He=[],Ke=0;O.X=1,N.X=1,V.X=1,H.X=1,G.X=1,W.X=1,q.X=1,$.X=1,rr.X=1,ar.X=1,er.X=1,vr.X=1,nr.X=1,or.X=1,kr.X=1,hr.X=1,Ar.X=1,Sr.X=1,Tr.X=1,Ir.X=1,Pr.X=1,Dr.X=1,Lr.X=1,Fr.X=1,Xr.X=1,zr.X=1,Vr.X=1,Br.X=1,Gr.X=1,$r.X=1,Module._malloc=Jr,Jr.X=1,ra.X=1,aa.X=1,ea.X=1,ia.X=1,Module._free=va,va.X=1,_a.X=1,sa.X=1,na.X=1,oa.X=1,la.X=1,da.X=1,Ma.X=1;var Ye,Ge={E2BIG:7,EACCES:13,EADDRINUSE:98,EADDRNOTAVAIL:99,EAFNOSUPPORT:97,EAGAIN:11,EALREADY:114,EBADF:9,EBADMSG:74,EBUSY:16,ECANCELED:125,ECHILD:10,ECONNABORTED:103,ECONNREFUSED:111,ECONNRESET:104,EDEADLK:35,EDESTADDRREQ:89,EDOM:33,EDQUOT:122,EEXIST:17,EFAULT:14,EFBIG:27,EHOSTUNREACH:113,EIDRM:43,EILSEQ:84,EINPROGRESS:115,EINTR:4,EINVAL:22,EIO:5,EISCONN:106,EISDIR:21,ELOOP:40,EMFILE:24,EMLINK:31,EMSGSIZE:90,EMULTIHOP:72,ENAMETOOLONG:36,ENETDOWN:100,ENETRESET:102,ENETUNREACH:101,ENFILE:23,ENOBUFS:105,ENODATA:61,ENODEV:19,ENOENT:2,ENOEXEC:8,ENOLCK:37,ENOLINK:67,ENOMEM:12,ENOMSG:42,ENOPROTOOPT:92,ENOSPC:28,ENOSR:63,ENOSTR:60,ENOSYS:38,ENOTCONN:107,ENOTDIR:20,ENOTEMPTY:39,ENOTRECOVERABLE:131,ENOTSOCK:88,ENOTSUP:95,ENOTTY:25,ENXIO:6,EOVERFLOW:75,EOWNERDEAD:130,EPERM:1,EPIPE:32,EPROTO:71,EPROTONOSUPPORT:93,EPROTOTYPE:91,ERANGE:34,EROFS:30,ESPIPE:29,ESRCH:3,ESTALE:116,ETIME:62,ETIMEDOUT:110,ETXTBSY:26,EWOULDBLOCK:11,EXDEV:18},We=0,Ze=0,Qe=0,qe=0,$e={currentPath:"/",nextInode:2,streams:[null],ignorePermissions:!0,absolutePath:function(r,a){if("string"!=typeof r)return null;void 0===a&&(a=$e.currentPath),r&&"/"==r[0]&&(a="");for(var e=a+"/"+r,i=e.split("/").reverse(),v=[""];i.length;){var t=i.pop();""==t||"."==t||(".."==t?v.length>1&&v.pop():v.push(t))}return 1==v.length?"/":v.join("/")},analyzePath:function(r,a,e){var i={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};if(r=$e.absolutePath(r),"/"==r)i.isRoot=!0,i.exists=i.parentExists=!0,i.name="/",i.path=i.parentPath="/",i.object=i.parentObject=$e.root;else if(null!==r){e=e||0,r=r.slice(1).split("/");for(var v=$e.root,t=[""];r.length;){1==r.length&&v.isFolder&&(i.parentExists=!0,i.parentPath=1==t.length?"/":t.join("/"),i.parentObject=v,i.name=r[0]);var f=r.shift();if(!v.isFolder){i.error=Ge.ENOTDIR;break}if(!v.read){i.error=Ge.EACCES;break}if(!v.contents.hasOwnProperty(f)){i.error=Ge.ENOENT;break}if(v=v.contents[f],v.link&&(!a||0!=r.length)){if(e>40){i.error=Ge.ELOOP;break}var _=$e.absolutePath(v.link,t.join("/"));return $e.analyzePath([_].concat(r).join("/"),a,e+1)}t.push(f),0==r.length&&(i.exists=!0,i.path=t.join("/"),i.object=v)}return i}return i},findObject:function(r,a){$e.ensureRoot();var e=$e.analyzePath(r,a);return e.exists?e.object:(Ya(e.error),null)},createObject:function(r,a,e,i,v){if(r||(r="/"),"string"==typeof r&&(r=$e.findObject(r)),!r)throw Ya(Ge.EACCES),new Error("Parent path must exist.");if(!r.isFolder)throw Ya(Ge.ENOTDIR),
new Error("Parent must be a folder.");if(!r.write&&!$e.ignorePermissions)throw Ya(Ge.EACCES),new Error("Parent folder must be writeable.");if(!a||"."==a||".."==a)throw Ya(Ge.ENOENT),new Error("Name must not be empty.");if(r.contents.hasOwnProperty(a))throw Ya(Ge.EEXIST),new Error("Can't overwrite object.");r.contents[a]={read:void 0===i||i,write:void 0!==v&&v,timestamp:Date.now(),inodeNumber:$e.nextInode++};for(var t in e)e.hasOwnProperty(t)&&(r.contents[a][t]=e[t]);return r.contents[a]},createFolder:function(r,a,e,i){var v={isFolder:!0,isDevice:!1,contents:{}};return $e.createObject(r,a,v,e,i)},createPath:function(r,a,e,i){var v=$e.findObject(r);if(null===v)throw new Error("Invalid parent.");for(a=a.split("/").reverse();a.length;){var t=a.pop();t&&(v.contents.hasOwnProperty(t)||$e.createFolder(v,t,e,i),v=v.contents[t])}return v},createFile:function(r,a,e,i,v){return e.isFolder=!1,$e.createObject(r,a,e,i,v)},createDataFile:function(r,a,e,i,v){if("string"==typeof e){for(var t=new Array(e.length),f=0,_=e.length;f<_;++f)t[f]=e.charCodeAt(f);e=t}var s={isDevice:!1,contents:e};return $e.createFile(r,a,s,i,v)},createLazyFile:function(r,a,e,i,v){var t={isDevice:!1,url:e};return $e.createFile(r,a,t,i,v)},createLink:function(r,a,e,i,v){var t={isDevice:!1,link:e};return $e.createFile(r,a,t,i,v)},createDevice:function(r,a,e,i){if(!e&&!i)throw new Error("A device must have at least one callback defined.");var v={isDevice:!0,input:e,output:i};return $e.createFile(r,a,v,Boolean(e),Boolean(i))},forceLoadFile:function(r){if(r.isDevice||r.isFolder||r.link||r.contents)return!0;var a=!0;if("undefined"!=typeof XMLHttpRequest)e("Cannot do synchronous binary XHRs in modern browsers. Use --embed-file or --preload-file in emcc");else{if("undefined"==typeof read)throw new Error("Cannot load without read() or XMLHttpRequest.");try{r.contents=p(read(r.url),!0)}catch(r){a=!1}}return a||Ya(Ge.EIO),a},ensureRoot:function(){$e.root||($e.root={read:!0,write:!0,isFolder:!0,isDevice:!1,timestamp:Date.now(),inodeNumber:1,contents:{}})},init:function(r,a,i){function v(r){null===r||r==="\\n".charCodeAt(0)?(a.printer(a.buffer.join("")),a.buffer=[]):a.buffer.push(String.fromCharCode(r))}e(!$e.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)"),$e.init.initialized=!0,$e.ensureRoot(),r=r||Module.stdin,a=a||Module.stdout,i=i||Module.stderr;var t=!0,f=!0,s=!0;r||(t=!1,r=function(){if(!r.cache||!r.cache.length){var a;"undefined"!=typeof window&&"function"==typeof window.prompt?a=window.prompt("Input: "):"function"==typeof readline&&(a=readline()),a||(a=""),r.cache=p(a+"\\n",!0)}return r.cache.shift()}),a||(f=!1,a=v),a.printer||(a.printer=print),a.buffer||(a.buffer=[]),i||(s=!1,i=v),i.printer||(i.printer=print),i.buffer||(i.buffer=[]),$e.createFolder("/","tmp",!0,!0);var n=$e.createFolder("/","dev",!0,!0),o=$e.createDevice(n,"stdin",r),l=$e.createDevice(n,"stdout",null,a),b=$e.createDevice(n,"stderr",null,i);$e.createDevice(n,"tty",r,a),$e.streams[1]={path:"/dev/stdin",object:o,position:0,isRead:!0,isWrite:!1,isAppend:!1,isTerminal:!t,error:!1,eof:!1,ungotten:[]},$e.streams[2]={path:"/dev/stdout",object:l,position:0,isRead:!1,isWrite:!0,isAppend:!1,isTerminal:!f,error:!1,eof:!1,ungotten:[]},$e.streams[3]={path:"/dev/stderr",object:b,position:0,isRead:!1,isWrite:!0,isAppend:!1,isTerminal:!s,error:!1,eof:!1,ungotten:[]},We=_([1],"void*",we),Ze=_([2],"void*",we),Qe=_([3],"void*",we),$e.createPath("/","dev/shm/tmp",!0,!0),$e.streams[We]=$e.streams[1],$e.streams[Ze]=$e.streams[2],$e.streams[Qe]=$e.streams[3],qe=_([_([0,0,0,0,We,0,0,0,Ze,0,0,0,Qe,0,0,0],"void*",we)],"void*",we)},quit:function(){$e.init.initialized&&($e.streams[2]&&$e.streams[2].object.output.buffer.length>0&&$e.streams[2].object.output("\\n".charCodeAt(0)),$e.streams[3]&&$e.streams[3].object.output.buffer.length>0&&$e.streams[3].object.output("\\n".charCodeAt(0)))}},Je=Ja;Ve.unshift({func:function(){$e.ignorePermissions=!1,$e.init.initialized||$e.init()}}),Be.push({func:function(){$e.quit()}}),Ya(0),ae.buf=_(12,"void*",we),Module.callMain=function(r){function a(){for(var r=0;r<3;r++)i.push(0)}var e=r.length+1,i=[_(p("/bin/this.program"),"i8",we)];a();for(var v=0;v<e-1;v+=1)i.push(_(p(r[v]),"i8",we)),a();return i.push(0),i=_(i,"i32",we),_main(e,i,0)};var ri,ai,ei,ii,vi,ti,qe,fi,_i,si,ni,oi,li,bi,ki,ui,ci,hi,di,wi;if(He.__str=_([97,78,0],"i8",we),He.__str1=_([38,61,0],"i8",we),He.__str2=_([97,83,0],"i8",we),He.__str3=_([61,0],"i8",we),He.__str4=_([97,97,0],"i8",we),He.__str5=_([38,38,0],"i8",we),He.__str6=_([97,100,0],"i8",we),He.__str7=_([38,0],"i8",we),He.__str8=_([97,110,0],"i8",we),He.__str9=_([99,108,0],"i8",we),He.__str10=_([40,41,0],"i8",we),He.__str11=_([99,109,0],"i8",we),He.__str12=_([44,0],"i8",we),He.__str13=_([99,111,0],"i8",we),He.__str14=_([126,0],"i8",we),He.__str15=_([100,86,0],"i8",we),He.__str16=_([47,61,0],"i8",we),He.__str17=_([100,97,0],"i8",we),He.__str18=_([100,101,108,101,116,101,91,93,0],"i8",we),He.__str19=_([100,101,0],"i8",we),He.__str20=_([42,0],"i8",we),He.__str21=_([100,108,0],"i8",we),He.__str22=_([100,101,108,101,116,101,0],"i8",we),He.__str23=_([100,118,0],"i8",we),He.__str24=_([47,0],"i8",we),He.__str25=_([101,79,0],"i8",we),He.__str26=_([94,61,0],"i8",we),He.__str27=_([101,111,0],"i8",we),He.__str28=_([94,0],"i8",we),He.__str29=_([101,113,0],"i8",we),He.__str30=_([61,61,0],"i8",we),He.__str31=_([103,101,0],"i8",we),He.__str32=_([62,61,0],"i8",we),He.__str33=_([103,116,0],"i8",we),He.__str34=_([62,0],"i8",we),He.__str35=_([105,120,0],"i8",we),He.__str36=_([91,93,0],"i8",we),He.__str37=_([108,83,0],"i8",we),He.__str38=_([60,60,61,0],"i8",we),He.__str39=_([108,101,0],"i8",we),He.__str40=_([60,61,0],"i8",we),He.__str41=_([108,115,0],"i8",we),He.__str42=_([60,60,0],"i8",we),He.__str43=_([108,116,0],"i8",we),He.__str44=_([60,0],"i8",we),He.__str45=_([109,73,0],"i8",we),He.__str46=_([45,61,0],"i8",we),He.__str47=_([109,76,0],"i8",we),He.__str48=_([42,61,0],"i8",we),He.__str49=_([109,105,0],"i8",we),He.__str51=_([109,108,0],"i8",we),He.__str52=_([109,109,0],"i8",we),He.__str53=_([45,45,0],"i8",we),He.__str54=_([110,97,0],"i8",we),He.__str55=_([110,101,119,91,93,0],"i8",we),He.__str56=_([110,101,0],"i8",we),He.__str57=_([33,61,0],"i8",we),He.__str58=_([110,103,0],"i8",we),He.__str59=_([110,116,0],"i8",we),He.__str60=_([33,0],"i8",we),He.__str61=_([110,119,0],"i8",we),He.__str62=_([110,101,119,0],"i8",we),He.__str63=_([111,82,0],"i8",we),He.__str64=_([124,61,0],"i8",we),He.__str65=_([111,111,0],"i8",we),He.__str66=_([124,124,0],"i8",we),He.__str67=_([111,114,0],"i8",we),He.__str68=_([124,0],"i8",we),He.__str69=_([112,76,0],"i8",we),He.__str70=_([43,61,0],"i8",we),He.__str71=_([112,108,0],"i8",we),He.__str72=_([43,0],"i8",we),He.__str73=_([112,109,0],"i8",we),He.__str74=_([45,62,42,0],"i8",we),He.__str75=_([112,112,0],"i8",we),He.__str76=_([43,43,0],"i8",we),He.__str77=_([112,115,0],"i8",we),He.__str78=_([112,116,0],"i8",we),He.__str79=_([45,62,0],"i8",we),He.__str80=_([113,117,0],"i8",we),He.__str81=_([63,0],"i8",we),He.__str82=_([114,77,0],"i8",we),He.__str83=_([37,61,0],"i8",we),He.__str84=_([114,83,0],"i8",we),He.__str85=_([62,62,61,0],"i8",we),He.__str86=_([114,109,0],"i8",we),He.__str87=_([37,0],"i8",we),He.__str88=_([114,115,0],"i8",we),He.__str89=_([62,62,0],"i8",we),He.__str90=_([115,116,0],"i8",we),He.__str91=_([115,105,122,101,111,102,32,0],"i8",we),He.__str92=_([115,122,0],"i8",we),ri=_([0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],["*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0],we),He.__str95=_([98,111,111,108,101,97,110,0],"i8",we),He.__str97=_([98,121,116,101,0],"i8",we),He.__str101=_([95,95,102,108,111,97,116,49,50,56,0],"i8",we),He.__str105=_([117,110,115,105,103,110,101,100,0],"i8",we),He.__str114=_([108,111,110,103,32,108,111,110,103,0],"i8",we),He.__str115=_([117,110,115,105,103,110,101,100,32,108,111,110,103,32,108,111,110,103,0],"i8",we),ai=_([0,0,0,0,11,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,7,0,0,0,7,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,6,0,0,0,8,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,11,0,0,0,8,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,8,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,10,0,0,0,8,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,3,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,13,0,0,0,4,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,9,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,18,0,0,0,6,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0],["*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0],we),He.__str117=_([95,71,76,79,66,65,76,95,0],"i8",we),He.__str118=_([103,108,111,98,97,108,32,99,111,110,115,116,114,117,99,116,111,114,115,32,107,101,121,101,100,32,116,111,32,0],"i8",we),He.__str119=_([103,108,111,98,97,108,32,100,101,115,116,114,117,99,116,111,114,115,32,107,101,121,101,100,32,116,111,32,0],"i8",we),He.__str120=_([58,58,0],"i8",we),He.__str121=_([118,116,97,98,108,101,32,102,111,114,32,0],"i8",we),He.__str122=_([86,84,84,32,102,111,114,32,0],"i8",we),He.__str123=_([99,111,110,115,116,114,117,99,116,105,111,110,32,118,116,97,98,108,101,32,102,111,114,32,0],"i8",we),He.__str124=_([45,105,110,45,0],"i8",we),He.__str125=_([116,121,112,101,105,110,102,111,32,102,111,114,32,0],"i8",we),He.__str126=_([116,121,112,101,105,110,102,111,32,110,97,109,101,32,102,111,114,32,0],"i8",we),He.__str127=_([116,121,112,101,105,110,102,111,32,102,110,32,102,111,114,32,0],"i8",we),He.__str128=_([110,111,110,45,118,105,114,116,117,97,108,32,116,104,117,110,107,32,116,111,32,0],"i8",we),He.__str129=_([118,105,114,116,117,97,108,32,116,104,117,110,107,32,116,111,32,0],"i8",we),He.__str130=_([99,111,118,97,114,105,97,110,116,32,114,101,116,117,114,110,32,116,104,117,110,107,32,116,111,32,0],"i8",we),He.__str131=_([106,97,118,97,32,67,108,97,115,115,32,102,111,114,32,0],"i8",we),He.__str132=_([103,117,97,114,100,32,118,97,114,105,97,98,108,101,32,102,111,114,32,0],"i8",we),He.__str133=_([114,101,102,101,114,101,110,99,101,32,116,101,109,112,111,114,97,114,121,32,102,111,114,32,0],"i8",we),He.__str134=_([104,105,100,100,101,110,32,97,108,105,97,115,32,102,111,114,32,0],"i8",we),He.__str135=_([58,58,42,0],"i8",we),He.__str136=_([44,32,0],"i8",we),He.__str137=_([111,112,101,114,97,116,111,114,0],"i8",we),He.__str139=_([41,32,0],"i8",we),He.__str140=_([32,40,0],"i8",we),He.__str141=_([41,32,58,32,40,0],"i8",we),He.__str142=_([117,108,0],"i8",we),He.__str143=_([108,108,0],"i8",we),He.__str144=_([117,108,108,0],"i8",we),He.__str145=_([102,97,108,115,101,0],"i8",we),He.__str146=_([116,114,117,101,0],"i8",we),He.__str147=_([32,114,101,115,116,114,105,99,116,0],"i8",we),He.__str148=_([32,118,111,108,97,116,105,108,101,0],"i8",we),He.__str149=_([32,99,111,110,115,116,0],"i8",we),He.__str150=_([99,111,109,112,108,101,120,32,0],"i8",we),He.__str151=_([105,109,97,103,105,110,97,114,121,32,0],"i8",we),ei=_([116,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,9,0,0,0,98,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,12,0,0,0,115,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,70,0,0,0,0,0,0,0,12,0,0,0,105,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,13,0,0,0,111,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,13,0,0,0,100,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0,14,0,0,0],["i8",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i8",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i8",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i8",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i8",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i8",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i8",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0],we),He.__str152=_([115,116,100,0],"i8",we),He.__str153=_([115,116,100,58,58,97,108,108,111,99,97,116,111,114,0],"i8",we),He.__str154=_([97,108,108,111,99,97,116,111,114,0],"i8",we),He.__str155=_([115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,0],"i8",we),He.__str156=_([98,97,115,105,99,95,115,116,114,105,110,103,0],"i8",we),He.__str157=_([115,116,100,58,58,115,116,114,105,110,103,0],"i8",we),He.__str158=_([115,116,100,58,58,98,97,115,105,99,95,115,116,114,105,110,103,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,44,32,115,116,100,58,58,97,108,108,111,99,97,116,111,114,60,99,104,97,114,62,32,62,0],"i8",we),He.__str159=_([115,116,100,58,58,105,115,116,114,101,97,109,0],"i8",we),He.__str160=_([115,116,100,58,58,98,97,115,105,99,95,105,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0],"i8",we),He.__str161=_([98,97,115,105,99,95,105,115,116,114,101,97,109,0],"i8",we),He.__str162=_([115,116,100,58,58,111,115,116,114,101,97,109,0],"i8",we),He.__str163=_([115,116,100,58,58,98,97,115,105,99,95,111,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0],"i8",we),He.__str164=_([98,97,115,105,99,95,111,115,116,114,101,97,109,0],"i8",we),He.__str165=_([115,116,100,58,58,105,111,115,116,114,101,97,109,0],"i8",we),He.__str166=_([115,116,100,58,58,98,97,115,105,99,95,105,111,115,116,114,101,97,109,60,99,104,97,114,44,32,115,116,100,58,58,99,104,97,114,95,116,114,97,105,116,115,60,99,104,97,114,62,32,62,0],"i8",we),He.__str167=_([98,97,115,105,99,95,105,111,115,116,114,101,97,109,0],"i8",we),He.__str168=_([115,116,114,105,110,103,32,108,105,116,101,114,97,108,0],"i8",we),He.__str169=_([40,97,110,111,110,121,109,111,117,115,32,110,97,109,101,115,112,97,99,101,41,0],"i8",we),He._symbol_demangle_dashed_null=_([45,45,110,117,108,108,45,45,0],"i8",we),He.__str170=_([37,115,37,115,0],"i8",we),He.__str1171=_([111,112,101,114,97,116,111,114,32,110,101,119,0],"i8",we),He.__str2172=_([111,112,101,114,97,116,111,114,32,100,101,108,101,116,101,0],"i8",we),He.__str3173=_([111,112,101,114,97,116,111,114,61,0],"i8",we),He.__str4174=_([111,112,101,114,97,116,111,114,62,62,0],"i8",we),He.__str5175=_([111,112,101,114,97,116,111,114,60,60,0],"i8",we),He.__str6176=_([111,112,101,114,97,116,111,114,33,0],"i8",we),He.__str7177=_([111,112,101,114,97,116,111,114,61,61,0],"i8",we),He.__str8178=_([111,112,101,114,97,116,111,114,33,61,0],"i8",we),He.__str9179=_([111,112,101,114,97,116,111,114,91,93,0],"i8",we),He.__str10180=_([111,112,101,114,97,116,111,114,32,0],"i8",we),He.__str11181=_([111,112,101,114,97,116,111,114,45,62,0],"i8",we),He.__str12182=_([111,112,101,114,97,116,111,114,42,0],"i8",we),He.__str13183=_([111,112,101,114,97,116,111,114,43,43,0],"i8",we),He.__str14184=_([111,112,101,114,97,116,111,114,45,45,0],"i8",we),He.__str15185=_([111,112,101,114,97,116,111,114,45,0],"i8",we),He.__str16186=_([111,112,101,114,97,116,111,114,43,0],"i8",we),He.__str17187=_([111,112,101,114,97,116,111,114,38,0],"i8",we),He.__str18188=_([111,112,101,114,97,116,111,114,45,62,42,0],"i8",we),He.__str19189=_([111,112,101,114,97,116,111,114,47,0],"i8",we),He.__str20190=_([111,112,101,114,97,116,111,114,37,0],"i8",we),He.__str21191=_([111,112,101,114,97,116,111,114,60,0],"i8",we),He.__str22192=_([111,112,101,114,97,116,111,114,60,61,0],"i8",we),He.__str23193=_([111,112,101,114,97,116,111,114,62,0],"i8",we),He.__str24194=_([111,112,101,114,97,116,111,114,62,61,0],"i8",we),He.__str25195=_([111,112,101,114,97,116,111,114,44,0],"i8",we),He.__str26196=_([111,112,101,114,97,116,111,114,40,41,0],"i8",we),He.__str27197=_([111,112,101,114,97,116,111,114,126,0],"i8",we),He.__str28198=_([111,112,101,114,97,116,111,114,94,0],"i8",we),He.__str29199=_([111,112,101,114,97,116,111,114,124,0],"i8",we),He.__str30200=_([111,112,101,114,97,116,111,114,38,38,0],"i8",we),He.__str31201=_([111,112,101,114,97,116,111,114,124,124,0],"i8",we),He.__str32202=_([111,112,101,114,97,116,111,114,42,61,0],"i8",we),He.__str33203=_([111,112,101,114,97,116,111,114,43,61,0],"i8",we),He.__str34204=_([111,112,101,114,97,116,111,114,45,61,0],"i8",we),He.__str35205=_([111,112,101,114,97,116,111,114,47,61,0],"i8",we),He.__str36206=_([111,112,101,114,97,116,111,114,37,61,0],"i8",we),He.__str37207=_([111,112,101,114,97,116,111,114,62,62,61,0],"i8",we),He.__str38208=_([111,112,101,114,97,116,111,114,60,60,61,0],"i8",we),He.__str39209=_([111,112,101,114,97,116,111,114,38,61,0],"i8",we),He.__str40210=_([111,112,101,114,97,116,111,114,124,61,0],"i8",we),He.__str41211=_([111,112,101,114,97,116,111,114,94,61,0],"i8",we),He.__str42212=_([96,118,102,116,97,98,108,101,39,0],"i8",we),He.__str43213=_([96,118,98,116,97,98,108,101,39,0],"i8",we),He.__str44214=_([96,118,99,97,108,108,39,0],"i8",we),He.__str45215=_([96,116,121,112,101,111,102,39,0],"i8",we),He.__str46216=_([96,108,111,99,97,108,32,115,116,97,116,105,99,32,103,117,97,114,100,39,0],"i8",we),He.__str47217=_([96,115,116,114,105,110,103,39,0],"i8",we),He.__str48218=_([96,118,98,97,115,101,32,100,101,115,116,114,117,99,116,111,114,39,0],"i8",we),He.__str49219=_([96,118,101,99,116,111,114,32,100,101,108,101,116,105,110,103,32,100,101,115,116,114,117,99,116,111,114,39,0],"i8",we),He.__str50220=_([96,100,101,102,97,117,108,116,32,99,111,110,115,116,114,117,99,116,111,114,32,99,108,111,115,117,114,101,39,0],"i8",we),He.__str51221=_([96,115,99,97,108,97,114,32,100,101,108,101,116,105,110,103,32,100,101,115,116,114,117,99,116,111,114,39,0],"i8",we),He.__str52222=_([96,118,101,99,116,111,114,32,99,111,110,115,116,114,117,99,116,111,114,32,105,116,101,114,97,116,111,114,39,0],"i8",we),He.__str53223=_([96,118,101,99,116,111,114,32,100,101,115,116,114,117,99,116,111,114,32,105,116,101,114,97,116,111,114,39,0],"i8",we),He.__str54224=_([96,118,101,99,116,111,114,32,118,98,97,115,101,32,99,111,110,115,116,114,117,99,116,111,114,32,105,116,101,114,97,116,111,114,39,0],"i8",we),He.__str55225=_([96,118,105,114,116,117,97,108,32,100,105,115,112,108,97,99,101,109,101,110,116,32,109,97,112,39,0],"i8",we),He.__str56226=_([96,101,104,32,118,101,99,116,111,114,32,99,111,110,115,116,114,117,99,116,111,114,32,105,116,101,114,97,116,111,114,39,0],"i8",we),He.__str57227=_([96,101,104,32,118,101,99,116,111,114,32,100,101,115,116,114,117,99,116,111,114,32,105,116,101,114,97,116,111,114,39,0],"i8",we),He.__str58228=_([96,101,104,32,118,101,99,116,111,114,32,118,98,97,115,101,32,99,111,110,115,116,114,117,99,116,111,114,32,105,116,101,114,97,116,111,114,39,0],"i8",we),He.__str59229=_([96,99,111,112,121,32,99,111,110,115,116,114,117,99,116,111,114,32,99,108,111,115,117,114,101,39,0],"i8",we),He.__str60230=_([37,115,37,115,32,96,82,84,84,73,32,84,121,112,101,32,68,101,115,99,114,105,112,116,111,114,39,0],"i8",we),He.__str61231=_([96,82,84,84,73,32,66,97,115,101,32,67,108,97,115,115,32,68,101,115,99,114,105,112,116,111,114,32,97,116,32,40,37,115,44,37,115,44,37,115,44,37,115,41,39,0],"i8",we),He.__str62232=_([96,82,84,84,73,32,66,97,115,101,32,67,108,97,115,115,32,65,114,114,97,121,39,0],"i8",we),He.__str63233=_([96,82,84,84,73,32,67,108,97,115,115,32,72,105,101,114,97,114,99,104,121,32,68,101,115,99,114,105,112,116,111,114,39,0],"i8",we),He.__str64234=_([96,82,84,84,73,32,67,111,109,112,108,101,116,101,32,79,98,106,101,99,116,32,76,111,99,97,116,111,114,39,0],"i8",we),He.__str65235=_([96,108,111,99,97,108,32,118,102,116,97,98,108,101,39,0],"i8",we),He.__str66236=_([96,108,111,99,97,108,32,118,102,116,97,98,108,101,32,99,111,110,115,116,114,117,99,116,111,114,32,99,108,111,115,117,114,101,39,0],"i8",we),He.__str67237=_([111,112,101,114,97,116,111,114,32,110,101,119,91,93,0],"i8",we),He.__str68238=_([111,112,101,114,97,116,111,114,32,100,101,108,101,116,101,91,93,0],"i8",we),He.__str69239=_([96,112,108,97,99,101,109,101,110,116,32,100,101,108,101,116,101,32,99,108,111,115,117,114,101,39,0],"i8",we),He.__str70240=_([96,112,108,97,99,101,109,101,110,116,32,100,101,108,101,116,101,91,93,32,99,108,111,115,117,114,101,39,0],"i8",we),He.__str71241=_([126,37,115,0],"i8",we),He.__str72242=_([117,110,100,110,97,109,101,46,99,0],"i8",we),He.___func___symbol_demangle=_([115,121,109,98,111,108,95,100,101,109,97,110,103,108,101,0],"i8",we),He.__str73243=_([115,121,109,45,62,114,101,115,117,108,116,0],"i8",we),He.___func___handle_template=_([104,97,110,100,108,101,95,116,101,109,112,108,97,116,101,0],"i8",we),He.__str74244=_([42,115,121,109,45,62,99,117,114,114,101,110,116,32,61,61,32,39,36,39,0],"i8",we),He.___func___str_array_get_ref=_([115,116,114,95,97,114,114,97,121,95,103,101,116,95,114,101,102,0],"i8",we),He.__str75245=_([99,114,101,102,0],"i8",we),He.__str76246=_([112,114,105,118,97,116,101,58,32,0],"i8",we),He.__str77247=_([112,114,111,116,101,99,116,101,100,58,32,0],"i8",we),He.__str78248=_([112,117,98,108,105,99,58,32,0],"i8",we),He.__str79249=_([115,116,97,116,105,99,32,0],"i8",we),He.__str80250=_([118,105,114,116,117,97,108,32,0],"i8",we),He.__str81251=_([91,116,104,117,110,107,93,58,37,115,0],"i8",we),He.__str82252=_([37,115,96,97,100,106,117,115,116,111,114,123,37,115,125,39,32,0],"i8",we),He.__str83253=_([37,115,32,37,115,0],"i8",we),He.__str84254=_([118,111,105,100,0],"i8",we),He.__str85255=_([37,115,37,115,37,115,0],"i8",we),He.__str86256=_([37,115,37,115,37,115,37,115,37,115,37,115,37,115,37,115,37,115,37,115,37,115,0],"i8",we),He.__str87257=_([32,0],"i8",we),He.__str88258=_([100,108,108,95,101,120,112,111,114,116,32,0],"i8",we),He.__str89259=_([99,100,101,99,108,0],"i8",we),He.__str90260=_([112,97,115,99,97,108,0],"i8",we),He.__str91261=_([116,104,105,115,99,97,108,108,0],"i8",we),He.__str92262=_([115,116,100,99,97,108,108,0],"i8",we),He.__str93263=_([102,97,115,116,99,97,108,108,0],"i8",we),He.__str94264=_([99,108,114,99,97,108,108,0],"i8",we),He.__str95265=_([95,95,100,108,108,95,101,120,112,111,114,116,32,0],"i8",we),He.__str96266=_([95,95,99,100,101,99,108,0],"i8",we),He.__str97267=_([95,95,112,97,115,99,97,108,0],"i8",we),He.__str98268=_([95,95,116,104,105,115,99,97,108,108,0],"i8",we),He.__str99269=_([95,95,115,116,100,99,97,108,108,0],"i8",we),He.__str100270=_([95,95,102,97,115,116,99,97,108,108,0],"i8",we),He.__str101271=_([95,95,99,108,114,99,97,108,108,0],"i8",we),He.__str102272=_([95,95,112,116,114,54,52,0],"i8",we),He.__str103273=_([99,111,110,115,116,0],"i8",we),He.__str104274=_([118,111,108,97,116,105,108,101,0],"i8",we),He.__str105275=_([99,111,110,115,116,32,118,111,108,97,116,105,108,101,0],"i8",we),He.___func___get_class_string=_([103,101,116,95,99,108,97,115,115,95,115,116,114,105,110,103,0],"i8",we),He.__str106276=_([97,45,62,101,108,116,115,91,105,93,0],"i8",we),He.__str107277=_([123,102,111,114,32,96,37,115,39,125,0],"i8",we),He.__str108278=_([37,115,37,115,37,115,37,115,37,115,37,115,37,115,37,115,0],"i8",we),He.__str109279=_([96,37,115,39,0],"i8",we),He.__str110280=_([46,46,46,0],"i8",we),He.__str111281=_([37,99,118,111,105,100,37,99,0],"i8",we),He.__str112282=_([37,115,44,37,115,0],"i8",we),He.__str113283=_([37,99,37,115,37,115,32,37,99,0],"i8",we),He.__str114284=_([37,99,37,115,37,115,37,99,0],"i8",we),He.___func___str_array_push=_([115,116,114,95,97,114,114,97,121,95,112,117,115,104,0],"i8",we),He.__str115285=_([112,116,114,0],"i8",we),He.__str116286=_([97,0],"i8",we),He.__str117287=_([97,45,62,101,108,116,115,91,97,45,62,110,117,109,93,0],"i8",we),He.__str118288=_([37,115,37,100,0],"i8",we),He.__str119289=_([45,0],"i8",we),ii=_(1,"i8",we),He.___func___demangle_datatype=_([100,101,109,97,110,103,108,101,95,100,97,116,97,116,121,112,101,0],"i8",we),He.__str121291=_([99,116,0],"i8",we),He.__str122292=_([117,110,105,111,110,32,0],"i8",we),He.__str123293=_([115,116,114,117,99,116,32,0],"i8",we),He.__str124294=_([99,108,97,115,115,32,0],"i8",we),He.__str125295=_([99,111,105,110,116,101,114,102,97,99,101,32,0],"i8",we),He.__str126296=_([96,116,101,109,112,108,97,116,101,45,112,97,114,97,109,101,116,101,114,45,37,115,39,0],"i8",we),He.__str127297=_([37,115,37,115,32,40,37,115,42,0],"i8",we),He.__str128298=_([41,37,115,0],"i8",we),He.__str129299=_([101,110,117,109,32,37,115,0],"i8",we),He.__str130300=_([96,116,101,109,112,108,97,116,101,45,112,97,114,97,109,101,116,101,114,37,115,39,0],"i8",we),He.__str131301=_([123,37,115,44,37,115,125,0],"i8",we),He.__str132302=_([123,37,115,44,37,115,44,37,115,125,0],"i8",we),He.__str133303=_([96,110,111,110,45,116,121,112,101,45,116,101,109,112,108,97,116,101,45,112,97,114,97,109,101,116,101,114,37,115,39,0],"i8",we),He.__str134304=_([32,95,95,112,116,114,54,52,0],"i8",we),He.__str135305=_([32,38,37,115,0],"i8",we),He.__str136306=_([32,38,37,115,32,118,111,108,97,116,105,108,101,0],"i8",we),He.__str137307=_([32,42,37,115,0],"i8",we),He.__str138308=_([32,42,37,115,32,99,111,110,115,116,0],"i8",we),He.__str139309=_([32,42,37,115,32,118,111,108,97,116,105,108,101,0],"i8",we),He.__str140310=_([32,42,37,115,32,99,111,110,115,116,32,118,111,108,97,116,105,108,101,0],"i8",we),He.__str141311=_([32,40,37,115,37,115,41,0],"i8",we),He.__str142312=_([32,40,37,115,41,0],"i8",we),He.__str143313=_([37,115,91,37,115,93,0],"i8",we),He.__str144314=_([37,115,32,37,115,37,115,0],"i8",we),He.__str145315=_([115,105,103,110,101,100,32,99,104,97,114,0],"i8",we),He.__str146316=_([99,104,97,114,0],"i8",we),He.__str147317=_([117,110,115,105,103,110,101,100,32,99,104,97,114,0],"i8",we),He.__str148318=_([115,104,111,114,116,0],"i8",we),He.__str149319=_([117,110,115,105,103,110,101,100,32,115,104,111,114,116,0],"i8",we),He.__str150320=_([105,110,116,0],"i8",we),He.__str151321=_([117,110,115,105,103,110,101,100,32,105,110,116,0],"i8",we),He.__str152322=_([108,111,110,103,0],"i8",we),He.__str153323=_([117,110,115,105,103,110,101,100,32,108,111,110,103,0],"i8",we),He.__str154324=_([102,108,111,97,116,0],"i8",we),He.__str155325=_([100,111,117,98,108,101,0],"i8",we),He.__str156326=_([108,111,110,103,32,100,111,117,98,108,101,0],"i8",we),He.__str157327=_([95,95,105,110,116,56,0],"i8",we),He.__str158328=_([117,110,115,105,103,110,101,100,32,95,95,105,110,116,56,0],"i8",we),He.__str159329=_([95,95,105,110,116,49,54,0],"i8",we),He.__str160330=_([117,110,115,105,103,110,101,100,32,95,95,105,110,116,49,54,0],"i8",we),He.__str161331=_([95,95,105,110,116,51,50,0],"i8",we),He.__str162332=_([117,110,115,105,103,110,101,100,32,95,95,105,110,116,51,50,0],"i8",we),He.__str163333=_([95,95,105,110,116,54,52,0],"i8",we),He.__str164334=_([117,110,115,105,103,110,101,100,32,95,95,105,110,116,54,52,0],"i8",we),
He.__str165335=_([95,95,105,110,116,49,50,56,0],"i8",we),He.__str166336=_([117,110,115,105,103,110,101,100,32,95,95,105,110,116,49,50,56,0],"i8",we),He.__str167337=_([98,111,111,108,0],"i8",we),He.__str168338=_([119,99,104,97,114,95,116,0],"i8",we),vi=_(468,["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0],we),ti=_(24,"i32",we),He.__str339=_([109,97,120,32,115,121,115,116,101,109,32,98,121,116,101,115,32,61,32,37,49,48,108,117,10,0],"i8",we),He.__str1340=_([115,121,115,116,101,109,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0],"i8",we),He.__str2341=_([105,110,32,117,115,101,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0],"i8",we),fi=_([ue],"i8",we),_i=_(1,"void ()*",we),si=_([0,0,0,0,0,0,0,0,6,0,0,0,8,0,0,0,10,0,0,0],["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],we),_(1,"void*",we),He.__str3342=_([115,116,100,58,58,98,97,100,95,97,108,108,111,99,0],"i8",we),ni=_([0,0,0,0,0,0,0,0,6,0,0,0,12,0,0,0,14,0,0,0],["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0],we),_(1,"void*",we),He.__str14343=_([98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0],"i8",we),He.__ZTSSt9bad_alloc=_([83,116,57,98,97,100,95,97,108,108,111,99,0],"i8",we),bi=_(12,"*",we),He.__ZTSSt20bad_array_new_length=_([83,116,50,48,98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0],"i8",we),ki=_(12,"*",we),Se[ri>>2]=0|He.__str,Se[ri+4>>2]=0|He.__str1,Se[ri+16>>2]=0|He.__str2,Se[ri+20>>2]=0|He.__str3,Se[ri+32>>2]=0|He.__str4,Se[ri+36>>2]=0|He.__str5,Se[ri+48>>2]=0|He.__str6,Se[ri+52>>2]=0|He.__str7,Se[ri+64>>2]=0|He.__str8,Se[ri+68>>2]=0|He.__str7,Se[ri+80>>2]=0|He.__str9,Se[ri+84>>2]=0|He.__str10,Se[ri+96>>2]=0|He.__str11,Se[ri+100>>2]=0|He.__str12,Se[ri+112>>2]=0|He.__str13,Se[ri+116>>2]=0|He.__str14,Se[ri+128>>2]=0|He.__str15,Se[ri+132>>2]=0|He.__str16,Se[ri+144>>2]=0|He.__str17,Se[ri+148>>2]=0|He.__str18,Se[ri+160>>2]=0|He.__str19,Se[ri+164>>2]=0|He.__str20,Se[ri+176>>2]=0|He.__str21,Se[ri+180>>2]=0|He.__str22,Se[ri+192>>2]=0|He.__str23,Se[ri+196>>2]=0|He.__str24,Se[ri+208>>2]=0|He.__str25,Se[ri+212>>2]=0|He.__str26,Se[ri+224>>2]=0|He.__str27,Se[ri+228>>2]=0|He.__str28,Se[ri+240>>2]=0|He.__str29,Se[ri+244>>2]=0|He.__str30,Se[ri+256>>2]=0|He.__str31,Se[ri+260>>2]=0|He.__str32,Se[ri+272>>2]=0|He.__str33,Se[ri+276>>2]=0|He.__str34,Se[ri+288>>2]=0|He.__str35,Se[ri+292>>2]=0|He.__str36,Se[ri+304>>2]=0|He.__str37,Se[ri+308>>2]=0|He.__str38,Se[ri+320>>2]=0|He.__str39,Se[ri+324>>2]=0|He.__str40,Se[ri+336>>2]=0|He.__str41,Se[ri+340>>2]=0|He.__str42,Se[ri+352>>2]=0|He.__str43,Se[ri+356>>2]=0|He.__str44,Se[ri+368>>2]=0|He.__str45,Se[ri+372>>2]=0|He.__str46,Se[ri+384>>2]=0|He.__str47,Se[ri+388>>2]=0|He.__str48,Se[ri+400>>2]=0|He.__str49,Se[ri+404>>2]=0|He.__str119289,Se[ri+416>>2]=0|He.__str51,Se[ri+420>>2]=0|He.__str20,Se[ri+432>>2]=0|He.__str52,Se[ri+436>>2]=0|He.__str53,Se[ri+448>>2]=0|He.__str54,Se[ri+452>>2]=0|He.__str55,Se[ri+464>>2]=0|He.__str56,Se[ri+468>>2]=0|He.__str57,Se[ri+480>>2]=0|He.__str58,Se[ri+484>>2]=0|He.__str119289,Se[ri+496>>2]=0|He.__str59,Se[ri+500>>2]=0|He.__str60,Se[ri+512>>2]=0|He.__str61,Se[ri+516>>2]=0|He.__str62,Se[ri+528>>2]=0|He.__str63,Se[ri+532>>2]=0|He.__str64,Se[ri+544>>2]=0|He.__str65,Se[ri+548>>2]=0|He.__str66,Se[ri+560>>2]=0|He.__str67,Se[ri+564>>2]=0|He.__str68,Se[ri+576>>2]=0|He.__str69,Se[ri+580>>2]=0|He.__str70,Se[ri+592>>2]=0|He.__str71,Se[ri+596>>2]=0|He.__str72,Se[ri+608>>2]=0|He.__str73,Se[ri+612>>2]=0|He.__str74,Se[ri+624>>2]=0|He.__str75,Se[ri+628>>2]=0|He.__str76,Se[ri+640>>2]=0|He.__str77,Se[ri+644>>2]=0|He.__str72,Se[ri+656>>2]=0|He.__str78,Se[ri+660>>2]=0|He.__str79,Se[ri+672>>2]=0|He.__str80,Se[ri+676>>2]=0|He.__str81,Se[ri+688>>2]=0|He.__str82,Se[ri+692>>2]=0|He.__str83,Se[ri+704>>2]=0|He.__str84,Se[ri+708>>2]=0|He.__str85,Se[ri+720>>2]=0|He.__str86,Se[ri+724>>2]=0|He.__str87,Se[ri+736>>2]=0|He.__str88,Se[ri+740>>2]=0|He.__str89,Se[ri+752>>2]=0|He.__str90,Se[ri+756>>2]=0|He.__str91,Se[ri+768>>2]=0|He.__str92,Se[ri+772>>2]=0|He.__str91,Se[ai>>2]=0|He.__str145315,Se[ai+8>>2]=0|He.__str145315,Se[ai+20>>2]=0|He.__str167337,Se[ai+28>>2]=0|He.__str95,Se[ai+40>>2]=0|He.__str146316,Se[ai+48>>2]=0|He.__str97,Se[ai+60>>2]=0|He.__str155325,Se[ai+68>>2]=0|He.__str155325,Se[ai+80>>2]=0|He.__str156326,Se[ai+88>>2]=0|He.__str156326,Se[ai+100>>2]=0|He.__str154324,Se[ai+108>>2]=0|He.__str154324,Se[ai+120>>2]=0|He.__str101,Se[ai+128>>2]=0|He.__str101,Se[ai+140>>2]=0|He.__str147317,Se[ai+148>>2]=0|He.__str147317,Se[ai+160>>2]=0|He.__str150320,Se[ai+168>>2]=0|He.__str150320,Se[ai+180>>2]=0|He.__str151321,Se[ai+188>>2]=0|He.__str105,Se[ai+220>>2]=0|He.__str152322,Se[ai+228>>2]=0|He.__str152322,Se[ai+240>>2]=0|He.__str153323,Se[ai+248>>2]=0|He.__str153323,Se[ai+260>>2]=0|He.__str165335,Se[ai+268>>2]=0|He.__str165335,Se[ai+280>>2]=0|He.__str166336,Se[ai+288>>2]=0|He.__str166336,Se[ai+360>>2]=0|He.__str148318,Se[ai+368>>2]=0|He.__str148318,Se[ai+380>>2]=0|He.__str149319,Se[ai+388>>2]=0|He.__str149319,Se[ai+420>>2]=0|He.__str84254,Se[ai+428>>2]=0|He.__str84254,Se[ai+440>>2]=0|He.__str168338,Se[ai+448>>2]=0|He.__str146316,Se[ai+460>>2]=0|He.__str114,Se[ai+468>>2]=0|He.__str152322,Se[ai+480>>2]=0|He.__str115,Se[ai+488>>2]=0|He.__str115,Se[ai+500>>2]=0|He.__str110280,Se[ai+508>>2]=0|He.__str110280,Se[ei+4>>2]=0|He.__str152,Se[ei+12>>2]=0|He.__str152,Se[ei+32>>2]=0|He.__str153,Se[ei+40>>2]=0|He.__str153,Se[ei+48>>2]=0|He.__str154,Se[ei+60>>2]=0|He.__str155,Se[ei+68>>2]=0|He.__str155,Se[ei+76>>2]=0|He.__str156,Se[ei+88>>2]=0|He.__str157,Se[ei+96>>2]=0|He.__str158,Se[ei+104>>2]=0|He.__str156,Se[ei+116>>2]=0|He.__str159,Se[ei+124>>2]=0|He.__str160,Se[ei+132>>2]=0|He.__str161,Se[ei+144>>2]=0|He.__str162,Se[ei+152>>2]=0|He.__str163,Se[ei+160>>2]=0|He.__str164,Se[ei+172>>2]=0|He.__str165,Se[ei+180>>2]=0|He.__str166,Se[ei+188>>2]=0|He.__str167,Se[si+4>>2]=bi,Se[ni+4>>2]=ki,oi=_([2,0,0,0,0],["i8*",0,0,0,0],we),Se[bi>>2]=oi+8|0,Se[bi+4>>2]=0|He.__ZTSSt9bad_alloc,Se[bi+8>>2]=li,Se[ki>>2]=oi+8|0,Se[ki+4>>2]=0|He.__ZTSSt20bad_array_new_length,Se[ki+8>>2]=bi,ui=16,ci=6,hi=18,di=6,wi=6,pe=[0,0,Jr,0,va,0,ya,0,ga,0,wa,0,Sa,0,pa,0,Ea,0,ma,0],Module.FUNCTION_TABLE=pe,Module.run=ee,Module.preRun&&Module.preRun(),0==Ke){ee()}Module.postRun&&Module.postRun(),Module.___cxa_demangle=G;var pi=v("__cxa_demangle","string",["string","string","number","number"]);return function(r){return pi(r,"",1,0)}}();
`;

/***/ }),

/***/ 8463:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Flamechart = void 0;

const utils_1 = __webpack_require__(1713);

const math_1 = __webpack_require__(1824);

class Flamechart {
  constructor(source) {
    this.source = source; // Bottom to top

    this.layers = [];
    this.totalWeight = 0;
    this.minFrameWidth = 1;
    const stack = [];

    const openFrame = (node, value) => {
      const parent = utils_1.lastOf(stack);
      const frame = {
        node,
        parent,
        children: [],
        start: value,
        end: value
      };

      if (parent) {
        parent.children.push(frame);
      }

      stack.push(frame);
    };

    this.minFrameWidth = Infinity;

    const closeFrame = (node, value) => {
      console.assert(stack.length > 0);
      const stackTop = stack.pop();
      stackTop.end = value;
      if (stackTop.end - stackTop.start === 0) return;
      const layerIndex = stack.length;

      while (this.layers.length <= layerIndex) this.layers.push([]);

      this.layers[layerIndex].push(stackTop);
      this.minFrameWidth = Math.min(this.minFrameWidth, stackTop.end - stackTop.start);
    };

    this.totalWeight = source.getTotalWeight();
    source.forEachCall(openFrame, closeFrame);
    if (!isFinite(this.minFrameWidth)) this.minFrameWidth = 1;
  }

  getTotalWeight() {
    return this.totalWeight;
  }

  getLayers() {
    return this.layers;
  }

  getColorBucketForFrame(frame) {
    return this.source.getColorBucketForFrame(frame);
  }

  getMinFrameWidth() {
    return this.minFrameWidth;
  }

  formatValue(v) {
    return this.source.formatValue(v);
  }

  getClampedViewportWidth(viewportWidth) {
    const maxWidth = this.getTotalWeight(); // In order to avoid floating point error, we cap the maximum zoom. In
    // particular, it's important that at the maximum zoom level, the total
    // trace size + a viewport width is not equal to the trace size due to
    // floating point rounding.
    //
    // For instance, if the profile's total weight is 2^60, and the viewport
    // size is 1, trying to move one viewport width right will result in no
    // change because 2^60 + 1 = 2^60 in floating point arithmetic. JavaScript
    // numbers are 64 bit floats, and therefore have 53 mantissa bits. You can
    // see this for yourself in the console. Try:
    //
    //   > Math.pow(2, 60) + 1 === Math.pow(2, 60)
    //   true
    //   > Math.pow(2, 53) + 1 === Math.pow(2, 53)
    //   true
    //   > Math.pow(2, 52) + 1 === Math.pow(2, 52)
    //   false
    //
    // We use 2^40 as a cap instead, since we want to be able to make small
    // adjustments within a viewport width.
    //
    // For reference, this will still allow you to zoom until 1 nanosecond fills
    // the screen in a profile with a duration of over 18 minutes.
    //
    //   > Math.pow(2, 40) / (60 * Math.pow(10, 9))
    //   18.325193796266667
    //

    const maxZoom = Math.pow(2, 40); // In addition to capping zoom to avoid floating point error, we further cap
    // zoom to avoid letting you zoom in so that the smallest element more than
    // fills the screen, since that probably isn't useful. The final zoom cap is
    // determined by the minimum zoom of either 2^40x zoom or the necessary zoom
    // for the smallest frame to fill the screen three times.

    const minWidth = math_1.clamp(3 * this.getMinFrameWidth(), maxWidth / maxZoom, maxWidth);
    return math_1.clamp(viewportWidth, minWidth, maxWidth);
  } // Given a desired config-space viewport rectangle, clamp the rectangle so
  // that it fits within the given flamechart. This prevents the viewport from
  // extending past the bounds of the flamechart or zooming in too far.


  getClampedConfigSpaceViewportRect({
    configSpaceViewportRect,
    renderInverted
  }) {
    const configSpaceSize = new math_1.Vec2(this.getTotalWeight(), this.getLayers().length);
    const width = this.getClampedViewportWidth(configSpaceViewportRect.size.x);
    const size = configSpaceViewportRect.size.withX(width);
    const origin = math_1.Vec2.clamp(configSpaceViewportRect.origin, new math_1.Vec2(0, renderInverted ? 0 : -1), math_1.Vec2.max(math_1.Vec2.zero, configSpaceSize.minus(size).plus(new math_1.Vec2(0, 1))));
    return new math_1.Rect(origin, configSpaceViewportRect.size.withX(width));
  }

}

exports.Flamechart = Flamechart;

/***/ }),

/***/ 1824:
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.Rect = exports.AffineTransform = exports.Vec2 = exports.clamp = void 0;

function clamp(x, minVal, maxVal) {
  if (x < minVal) return minVal;
  if (x > maxVal) return maxVal;
  return x;
}

exports.clamp = clamp;

let Vec2 =
/** @class */
(() => {
  class Vec2 {
    constructor(x, y) {
      this.x = x;
      this.y = y;
    }

    withX(x) {
      return new Vec2(x, this.y);
    }

    withY(y) {
      return new Vec2(this.x, y);
    }

    plus(other) {
      return new Vec2(this.x + other.x, this.y + other.y);
    }

    minus(other) {
      return new Vec2(this.x - other.x, this.y - other.y);
    }

    times(scalar) {
      return new Vec2(this.x * scalar, this.y * scalar);
    }

    timesPointwise(other) {
      return new Vec2(this.x * other.x, this.y * other.y);
    }

    dividedByPointwise(other) {
      return new Vec2(this.x / other.x, this.y / other.y);
    }

    dot(other) {
      return this.x * other.x + this.y * other.y;
    }

    equals(other) {
      return this.x === other.x && this.y === other.y;
    }

    approxEquals(other, epsilon = 1e-9) {
      return Math.abs(this.x - other.x) < epsilon && Math.abs(this.y - other.y) < epsilon;
    }

    length2() {
      return this.dot(this);
    }

    length() {
      return Math.sqrt(this.length2());
    }

    abs() {
      return new Vec2(Math.abs(this.x), Math.abs(this.y));
    }

    static min(a, b) {
      return new Vec2(Math.min(a.x, b.x), Math.min(a.y, b.y));
    }

    static max(a, b) {
      return new Vec2(Math.max(a.x, b.x), Math.max(a.y, b.y));
    }

    static clamp(v, min, max) {
      return new Vec2(clamp(v.x, min.x, max.x), clamp(v.y, min.y, max.y));
    }

    flatten() {
      return [this.x, this.y];
    }

  }

  Vec2.zero = new Vec2(0, 0);
  Vec2.unit = new Vec2(1, 1);
  return Vec2;
})();

exports.Vec2 = Vec2;

class AffineTransform {
  constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0) {
    this.m00 = m00;
    this.m01 = m01;
    this.m02 = m02;
    this.m10 = m10;
    this.m11 = m11;
    this.m12 = m12;
  }

  withScale(s) {
    let {
      m00,
      m01,
      m02,
      m10,
      m11,
      m12
    } = this;
    m00 = s.x;
    m11 = s.y;
    return new AffineTransform(m00, m01, m02, m10, m11, m12);
  }

  static withScale(s) {
    return new AffineTransform().withScale(s);
  }

  scaledBy(s) {
    return AffineTransform.withScale(s).times(this);
  }

  getScale() {
    return new Vec2(this.m00, this.m11);
  }

  withTranslation(t) {
    let {
      m00,
      m01,
      m02,
      m10,
      m11,
      m12
    } = this;
    m02 = t.x;
    m12 = t.y;
    return new AffineTransform(m00, m01, m02, m10, m11, m12);
  }

  static withTranslation(t) {
    return new AffineTransform().withTranslation(t);
  }

  getTranslation() {
    return new Vec2(this.m02, this.m12);
  }

  translatedBy(t) {
    return AffineTransform.withTranslation(t).times(this);
  }

  static betweenRects(from, to) {
    return AffineTransform.withTranslation(from.origin.times(-1)).scaledBy(new Vec2(to.size.x / from.size.x, to.size.y / from.size.y)).translatedBy(to.origin);
  }

  times(other) {
    const m00 = this.m00 * other.m00 + this.m01 * other.m10;
    const m01 = this.m00 * other.m01 + this.m01 * other.m11;
    const m02 = this.m00 * other.m02 + this.m01 * other.m12 + this.m02;
    const m10 = this.m10 * other.m00 + this.m11 * other.m10;
    const m11 = this.m10 * other.m01 + this.m11 * other.m11;
    const m12 = this.m10 * other.m02 + this.m11 * other.m12 + this.m12;
    return new AffineTransform(m00, m01, m02, m10, m11, m12);
  }

  equals(other) {
    return this.m00 == other.m00 && this.m01 == other.m01 && this.m02 == other.m02 && this.m10 == other.m10 && this.m11 == other.m11 && this.m12 == other.m12;
  }

  approxEquals(other, epsilon = 1e-9) {
    return Math.abs(this.m00 - other.m00) < epsilon && Math.abs(this.m01 - other.m01) < epsilon && Math.abs(this.m02 - other.m02) < epsilon && Math.abs(this.m10 - other.m10) < epsilon && Math.abs(this.m11 - other.m11) < epsilon && Math.abs(this.m12 - other.m12) < epsilon;
  }

  timesScalar(s) {
    const {
      m00,
      m01,
      m02,
      m10,
      m11,
      m12
    } = this;
    return new AffineTransform(s * m00, s * m01, s * m02, s * m10, s * m11, s * m12);
  }

  det() {
    const {
      m00,
      m01,
      m02,
      m10,
      m11,
      m12
    } = this;
    const m20 = 0;
    const m21 = 0;
    const m22 = 1;
    return m00 * (m11 * m22 - m12 * m21) - m01 * (m10 * m22 - m12 * m20) + m02 * (m10 * m21 - m11 * m20);
  }

  adj() {
    const {
      m00,
      m01,
      m02,
      m10,
      m11,
      m12
    } = this;
    const m20 = 0;
    const m21 = 0;
    const m22 = 1; // Adjugate matrix (a) is the transpose of the
    // cofactor matrix (c).
    //
    // 00 01 02
    // 10 11 12
    // 20 21 22

    const a00 =
    /* c00 = */
    +(m11 * m22 - m12 * m21);
    const a01 =
    /* c10 = */
    -(m01 * m22 - m02 * m21);
    const a02 =
    /* c20 = */
    +(m01 * m12 - m02 * m11);
    const a10 =
    /* c01 = */
    -(m10 * m22 - m12 * m20);
    const a11 =
    /* c11 = */
    +(m00 * m22 - m02 * m20);
    const a12 =
    /* c21 = */
    -(m00 * m12 - m02 * m10);
    return new AffineTransform(a00, a01, a02, a10, a11, a12);
  }

  inverted() {
    const det = this.det();
    if (det === 0) return null;
    const adj = this.adj();
    return adj.timesScalar(1 / det);
  }

  transformVector(v) {
    return new Vec2(v.x * this.m00 + v.y * this.m01, v.x * this.m10 + v.y * this.m11);
  }

  inverseTransformVector(v) {
    const inv = this.inverted();
    if (!inv) return null;
    return inv.transformVector(v);
  }

  transformPosition(v) {
    return new Vec2(v.x * this.m00 + v.y * this.m01 + this.m02, v.x * this.m10 + v.y * this.m11 + this.m12);
  }

  inverseTransformPosition(v) {
    const inv = this.inverted();
    if (!inv) return null;
    return inv.transformPosition(v);
  }

  transformRect(r) {
    const size = this.transformVector(r.size);
    const origin = this.transformPosition(r.origin);

    if (size.x < 0 && size.y < 0) {
      return new Rect(origin.plus(size), size.abs());
    } else if (size.x < 0) {
      return new Rect(origin.withX(origin.x + size.x), size.abs());
    } else if (size.y < 0) {
      return new Rect(origin.withY(origin.y + size.y), size.abs());
    }

    return new Rect(origin, size);
  }

  inverseTransformRect(r) {
    const inv = this.inverted();
    if (!inv) return null;
    return inv.transformRect(r);
  }

  flatten() {
    // Flatten into GLSL format
    // prettier-ignore
    return [this.m00, this.m10, 0, this.m01, this.m11, 0, this.m02, this.m12, 1];
  }

}

exports.AffineTransform = AffineTransform;

let Rect =
/** @class */
(() => {
  class Rect {
    constructor(origin, size) {
      this.origin = origin;
      this.size = size;
    }

    isEmpty() {
      return this.width() == 0 || this.height() == 0;
    }

    width() {
      return this.size.x;
    }

    height() {
      return this.size.y;
    }

    left() {
      return this.origin.x;
    }

    right() {
      return this.left() + this.width();
    }

    top() {
      return this.origin.y;
    }

    bottom() {
      return this.top() + this.height();
    }

    topLeft() {
      return this.origin;
    }

    topRight() {
      return this.origin.plus(new Vec2(this.width(), 0));
    }

    bottomRight() {
      return this.origin.plus(this.size);
    }

    bottomLeft() {
      return this.origin.plus(new Vec2(0, this.height()));
    }

    withOrigin(origin) {
      return new Rect(origin, this.size);
    }

    withSize(size) {
      return new Rect(this.origin, size);
    }

    closestPointTo(p) {
      return new Vec2(clamp(p.x, this.left(), this.right()), clamp(p.y, this.top(), this.bottom()));
    }

    distanceFrom(p) {
      return p.minus(this.closestPointTo(p)).length();
    }

    contains(p) {
      return this.distanceFrom(p) === 0;
    }

    hasIntersectionWith(other) {
      const top = Math.max(this.top(), other.top());
      const bottom = Math.max(top, Math.min(this.bottom(), other.bottom()));
      if (bottom - top === 0) return false;
      const left = Math.max(this.left(), other.left());
      const right = Math.max(left, Math.min(this.right(), other.right()));
      if (right - left === 0) return false;
      return true;
    }

    intersectWith(other) {
      const topLeft = Vec2.max(this.topLeft(), other.topLeft());
      const bottomRight = Vec2.max(topLeft, Vec2.min(this.bottomRight(), other.bottomRight()));
      return new Rect(topLeft, bottomRight.minus(topLeft));
    }

    equals(other) {
      return this.origin.equals(other.origin) && this.size.equals(other.size);
    }

    approxEquals(other) {
      return this.origin.approxEquals(other.origin) && this.size.approxEquals(other.size);
    }

    area() {
      return this.size.x * this.size.y;
    }

  }

  Rect.empty = new Rect(Vec2.zero, Vec2.zero);
  Rect.unit = new Rect(Vec2.zero, Vec2.unit);
  Rect.NDC = new Rect(new Vec2(-1, -1), new Vec2(2, 2));
  return Rect;
})();

exports.Rect = Rect;

/***/ }),

/***/ 5108:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {



var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.CallTreeProfileBuilder = exports.StackListProfileBuilder = exports.Profile = exports.CallTreeNode = exports.Frame = exports.HasWeights = void 0;

const utils_1 = __webpack_require__(1713);

const value_formatters_1 = __webpack_require__(1177);

const demangleCppModule = Promise.resolve().then(() => __importStar(__webpack_require__(1766))); // Force eager loading of the module

demangleCppModule.then(() => {});

class HasWeights {
  constructor() {
    this.selfWeight = 0;
    this.totalWeight = 0;
  }

  getSelfWeight() {
    return this.selfWeight;
  }

  getTotalWeight() {
    return this.totalWeight;
  }

  addToTotalWeight(delta) {
    this.totalWeight += delta;
  }

  addToSelfWeight(delta) {
    this.selfWeight += delta;
  }

  overwriteWeightWith(other) {
    this.selfWeight = other.selfWeight;
    this.totalWeight = other.totalWeight;
  }

}

exports.HasWeights = HasWeights;

let Frame =
/** @class */
(() => {
  class Frame extends HasWeights {
    constructor(info) {
      super();
      this.key = info.key;
      this.name = info.name;
      this.file = info.file;
      this.line = info.line;
      this.col = info.col;
    }

    static getOrInsert(set, info) {
      return set.getOrInsert(new Frame(info));
    }

  }

  Frame.root = new Frame({
    key: '(speedscope root)',
    name: '(speedscope root)'
  });
  return Frame;
})();

exports.Frame = Frame;

class CallTreeNode extends HasWeights {
  constructor(frame, parent) {
    super();
    this.frame = frame;
    this.parent = parent;
    this.children = []; // If a node is "frozen", it means it should no longer be mutated.

    this.frozen = false;
  }

  isRoot() {
    return this.frame === Frame.root;
  }

  isFrozen() {
    return this.frozen;
  }

  freeze() {
    this.frozen = true;
  }

}

exports.CallTreeNode = CallTreeNode;

class Profile {
  constructor(totalWeight = 0) {
    this.name = '';
    this.frames = new utils_1.KeyedSet(); // Profiles store two call-trees.
    //
    // The "append order" call tree is the one in which nodes are ordered in
    // whatever order they were appended to their parent.
    //
    // The "grouped" call tree is one in which each node has at most one child per
    // frame. Nodes are ordered in decreasing order of weight

    this.appendOrderCalltreeRoot = new CallTreeNode(Frame.root, null);
    this.groupedCalltreeRoot = new CallTreeNode(Frame.root, null); // List of references to CallTreeNodes at the top of the
    // stack at the time of the sample.

    this.samples = [];
    this.weights = [];
    this.valueFormatter = new value_formatters_1.RawValueFormatter();
    this.totalNonIdleWeight = null;
    this.totalWeight = totalWeight;
  }

  getAppendOrderCalltreeRoot() {
    return this.appendOrderCalltreeRoot;
  }

  getGroupedCalltreeRoot() {
    return this.groupedCalltreeRoot;
  }

  formatValue(v) {
    return this.valueFormatter.format(v);
  }

  setValueFormatter(f) {
    this.valueFormatter = f;
  }

  getWeightUnit() {
    return this.valueFormatter.unit;
  }

  getName() {
    return this.name;
  }

  setName(name) {
    this.name = name;
  }

  getTotalWeight() {
    return this.totalWeight;
  }

  getTotalNonIdleWeight() {
    if (this.totalNonIdleWeight === null) {
      this.totalNonIdleWeight = this.groupedCalltreeRoot.children.reduce((n, c) => n + c.getTotalWeight(), 0);
    }

    return this.totalNonIdleWeight;
  } // This is private because it should only be called in the ProfileBuilder
  // classes. Once a Profile instance has been constructed, it should be treated
  // as immutable.


  sortGroupedCallTree() {
    function visit(node) {
      node.children.sort((a, b) => -(a.getTotalWeight() - b.getTotalWeight()));
      node.children.forEach(visit);
    }

    visit(this.groupedCalltreeRoot);
  }

  forEachCallGrouped(openFrame, closeFrame) {
    function visit(node, start) {
      if (node.frame !== Frame.root) {
        openFrame(node, start);
      }

      let childTime = 0;
      node.children.forEach(function (child) {
        visit(child, start + childTime);
        childTime += child.getTotalWeight();
      });

      if (node.frame !== Frame.root) {
        closeFrame(node, start + node.getTotalWeight());
      }
    }

    visit(this.groupedCalltreeRoot, 0);
  }

  forEachCall(openFrame, closeFrame) {
    let prevStack = [];
    let value = 0;
    let sampleIndex = 0;

    for (let stackTop of this.samples) {
      // Find lowest common ancestor of the current stack and the previous one
      let lca = null; // This is O(n^2), but n should be relatively small here (stack height),
      // so hopefully this isn't much of a problem

      for (lca = stackTop; lca && lca.frame != Frame.root && prevStack.indexOf(lca) === -1; lca = lca.parent) {} // Close frames that are no longer open


      while (prevStack.length > 0 && utils_1.lastOf(prevStack) != lca) {
        const node = prevStack.pop();
        closeFrame(node, value);
      } // Open frames that are now becoming open


      const toOpen = [];

      for (let node = stackTop; node && node.frame != Frame.root && node != lca; node = node.parent) {
        toOpen.push(node);
      }

      toOpen.reverse();

      for (let node of toOpen) {
        openFrame(node, value);
      }

      prevStack = prevStack.concat(toOpen);
      value += this.weights[sampleIndex++];
    } // Close frames that are open at the end of the trace


    for (let i = prevStack.length - 1; i >= 0; i--) {
      closeFrame(prevStack[i], value);
    }
  }

  forEachFrame(fn) {
    this.frames.forEach(fn);
  }

  getProfileWithRecursionFlattened() {
    const builder = new CallTreeProfileBuilder();
    const stack = [];
    const framesInStack = new Set();

    function openFrame(node, value) {
      if (framesInStack.has(node.frame)) {
        stack.push(null);
      } else {
        framesInStack.add(node.frame);
        stack.push(node);
        builder.enterFrame(node.frame, value);
      }
    }

    function closeFrame(node, value) {
      const stackTop = stack.pop();

      if (stackTop) {
        framesInStack.delete(stackTop.frame);
        builder.leaveFrame(stackTop.frame, value);
      }
    }

    this.forEachCall(openFrame, closeFrame);
    const flattenedProfile = builder.build();
    flattenedProfile.name = this.name;
    flattenedProfile.valueFormatter = this.valueFormatter; // When constructing a profile with recursion flattened,
    // counter-intuitive things can happen to "self time" measurements
    // for functions.
    // For example, given the following list of stacks w/ weights:
    //
    // a 1
    // a;b;a 1
    // a;b;a;b;a 1
    // a;b;a 1
    //
    // The resulting profile with recursion flattened out will look like this:
    //
    // a 1
    // a;b 3
    //
    // Which is useful to view, but it's counter-intuitive to move self-time
    // for frames around, since analyzing the self-time of functions is an important
    // thing to be able to do accurately, and we don't want this to change when recursion
    // is flattened. To work around that, we'll just copy the weights directly from the
    // un-flattened profile.

    this.forEachFrame(f => {
      flattenedProfile.frames.getOrInsert(f).overwriteWeightWith(f);
    });
    return flattenedProfile;
  }

  getInvertedProfileForCallersOf(focalFrameInfo) {
    const focalFrame = Frame.getOrInsert(this.frames, focalFrameInfo);
    const builder = new StackListProfileBuilder(); // TODO(jlfwong): Could construct this at profile
    // construction time rather than on demand.

    const nodes = [];

    function visit(node) {
      if (node.frame === focalFrame) {
        nodes.push(node);
      } else {
        for (let child of node.children) {
          visit(child);
        }
      }
    }

    visit(this.appendOrderCalltreeRoot);

    for (let node of nodes) {
      const stack = [];

      for (let n = node; n != null && n.frame !== Frame.root; n = n.parent) {
        stack.push(n.frame);
      }

      builder.appendSampleWithWeight(stack, node.getTotalWeight());
    }

    const ret = builder.build();
    ret.name = this.name;
    ret.valueFormatter = this.valueFormatter;
    return ret;
  }

  getProfileForCalleesOf(focalFrameInfo) {
    const focalFrame = Frame.getOrInsert(this.frames, focalFrameInfo);
    const builder = new StackListProfileBuilder();

    function recordSubtree(focalFrameNode) {
      const stack = [];

      function visit(node) {
        stack.push(node.frame);
        builder.appendSampleWithWeight(stack, node.getSelfWeight());

        for (let child of node.children) {
          visit(child);
        }

        stack.pop();
      }

      visit(focalFrameNode);
    }

    function findCalls(node) {
      if (node.frame === focalFrame) {
        recordSubtree(node);
      } else {
        for (let child of node.children) {
          findCalls(child);
        }
      }
    }

    findCalls(this.appendOrderCalltreeRoot);
    const ret = builder.build();
    ret.name = this.name;
    ret.valueFormatter = this.valueFormatter;
    return ret;
  } // Demangle symbols for readability


  demangle() {
    return __awaiter(this, void 0, void 0, function* () {
      let demangleCpp = null;

      for (let frame of this.frames) {
        // This function converts a mangled C++ name such as "__ZNK7Support6ColorFeqERKS0_"
        // into a human-readable symbol (in this case "Support::ColorF::==(Support::ColorF&)")
        if (frame.name.startsWith('__Z')) {
          if (!demangleCpp) {
            demangleCpp = (yield demangleCppModule).demangleCpp;
          }

          frame.name = demangleCpp(frame.name);
        }
      }
    });
  }

  remapNames(callback) {
    for (let frame of this.frames) {
      frame.name = callback(frame.name);
    }
  }

}

exports.Profile = Profile;

class StackListProfileBuilder extends Profile {
  constructor() {
    super(...arguments);
    this.pendingSample = null;
  }

  _appendSample(stack, weight, useAppendOrder) {
    if (isNaN(weight)) throw new Error('invalid weight');
    let node = useAppendOrder ? this.appendOrderCalltreeRoot : this.groupedCalltreeRoot;
    let framesInStack = new Set();

    for (let frameInfo of stack) {
      const frame = Frame.getOrInsert(this.frames, frameInfo);
      const last = useAppendOrder ? utils_1.lastOf(node.children) : node.children.find(c => c.frame === frame);

      if (last && !last.isFrozen() && last.frame == frame) {
        node = last;
      } else {
        const parent = node;
        node = new CallTreeNode(frame, node);
        parent.children.push(node);
      }

      node.addToTotalWeight(weight); // It's possible for the same frame to occur multiple
      // times in the same call stack due to either direct
      // or indirect recursion. We want to avoid counting that
      // frame multiple times for a single sample, we so just
      // track all of the unique frames that participated in
      // this call stack, then add to their weight at the end.

      framesInStack.add(node.frame);
    }

    node.addToSelfWeight(weight);

    if (useAppendOrder) {
      for (let child of node.children) {
        child.freeze();
      }
    }

    if (useAppendOrder) {
      node.frame.addToSelfWeight(weight);

      for (let frame of framesInStack) {
        frame.addToTotalWeight(weight);
      }

      if (node === utils_1.lastOf(this.samples)) {
        this.weights[this.weights.length - 1] += weight;
      } else {
        this.samples.push(node);
        this.weights.push(weight);
      }
    }
  }

  appendSampleWithWeight(stack, weight) {
    if (weight === 0) {
      // Samples with zero weight have no effect, so let's ignore them
      return;
    }

    if (weight < 0) {
      throw new Error('Samples must have positive weights');
    }

    this._appendSample(stack, weight, true);

    this._appendSample(stack, weight, false);
  }

  appendSampleWithTimestamp(stack, timestamp) {
    if (this.pendingSample) {
      if (timestamp < this.pendingSample.centralTimestamp) {
        throw new Error('Timestamps received out of order');
      }

      const endTimestamp = (timestamp + this.pendingSample.centralTimestamp) / 2;
      this.appendSampleWithWeight(this.pendingSample.stack, endTimestamp - this.pendingSample.startTimestamp);
      this.pendingSample = {
        stack,
        startTimestamp: endTimestamp,
        centralTimestamp: timestamp
      };
    } else {
      this.pendingSample = {
        stack,
        startTimestamp: timestamp,
        centralTimestamp: timestamp
      };
    }
  }

  build() {
    if (this.pendingSample) {
      if (this.samples.length > 0) {
        this.appendSampleWithWeight(this.pendingSample.stack, this.pendingSample.centralTimestamp - this.pendingSample.startTimestamp);
      } else {
        // There is only a single sample. In this case, units will be meaningless,
        // so we'll append with a weight of 1 and also clear any value formatter
        this.appendSampleWithWeight(this.pendingSample.stack, 1);
        this.setValueFormatter(new value_formatters_1.RawValueFormatter());
      }
    }

    this.totalWeight = Math.max(this.totalWeight, this.weights.reduce((a, b) => a + b, 0));
    this.sortGroupedCallTree();
    return this;
  }

}

exports.StackListProfileBuilder = StackListProfileBuilder; // As an alternative API for importing profiles more efficiently, provide a
// way to open & close frames directly without needing to construct tons of
// arrays as intermediaries.

class CallTreeProfileBuilder extends Profile {
  constructor() {
    super(...arguments);
    this.appendOrderStack = [this.appendOrderCalltreeRoot];
    this.groupedOrderStack = [this.groupedCalltreeRoot];
    this.framesInStack = new Map();
    this.stack = [];
    this.lastValue = 0;
  }

  addWeightsToFrames(value) {
    const delta = value - this.lastValue;

    for (let frame of this.framesInStack.keys()) {
      frame.addToTotalWeight(delta);
    }

    const stackTop = utils_1.lastOf(this.stack);

    if (stackTop) {
      stackTop.addToSelfWeight(delta);
    }
  }

  addWeightsToNodes(value, stack) {
    const delta = value - this.lastValue;

    for (let node of stack) {
      node.addToTotalWeight(delta);
    }

    const stackTop = utils_1.lastOf(stack);

    if (stackTop) {
      stackTop.addToSelfWeight(delta);
    }
  }

  _enterFrame(frame, value, useAppendOrder) {
    let stack = useAppendOrder ? this.appendOrderStack : this.groupedOrderStack;
    this.addWeightsToNodes(value, stack);
    let prevTop = utils_1.lastOf(stack);

    if (prevTop) {
      if (useAppendOrder) {
        const delta = value - this.lastValue;

        if (delta > 0) {
          this.samples.push(prevTop);
          this.weights.push(value - this.lastValue);
        } else if (delta < 0) {
          throw new Error(`Samples must be provided in increasing order of cumulative value. Last sample was ${this.lastValue}, this sample was ${value}`);
        }
      }

      const last = useAppendOrder ? utils_1.lastOf(prevTop.children) : prevTop.children.find(c => c.frame === frame);
      let node;

      if (last && !last.isFrozen() && last.frame == frame) {
        node = last;
      } else {
        node = new CallTreeNode(frame, prevTop);
        prevTop.children.push(node);
      }

      stack.push(node);
    }
  }

  enterFrame(frameInfo, value) {
    const frame = Frame.getOrInsert(this.frames, frameInfo);
    this.addWeightsToFrames(value);

    this._enterFrame(frame, value, true);

    this._enterFrame(frame, value, false);

    this.stack.push(frame);
    const frameCount = this.framesInStack.get(frame) || 0;
    this.framesInStack.set(frame, frameCount + 1);
    this.lastValue = value;
  }

  _leaveFrame(frame, value, useAppendOrder) {
    let stack = useAppendOrder ? this.appendOrderStack : this.groupedOrderStack;
    this.addWeightsToNodes(value, stack);

    if (useAppendOrder) {
      const leavingStackTop = this.appendOrderStack.pop();

      if (leavingStackTop == null) {
        throw new Error(`Trying to leave ${frame.key} when stack is empty`);
      }

      if (this.lastValue == null) {
        throw new Error(`Trying to leave a ${frame.key} before any have been entered`);
      }

      leavingStackTop.freeze();

      if (leavingStackTop.frame.key !== frame.key) {
        throw new Error(`Tried to leave frame "${frame.name}" while frame "${leavingStackTop.frame.name}" was at the top at ${value}`);
      }

      const delta = value - this.lastValue;

      if (delta > 0) {
        this.samples.push(leavingStackTop);
        this.weights.push(value - this.lastValue);
      } else if (delta < 0) {
        throw new Error(`Samples must be provided in increasing order of cumulative value. Last sample was ${this.lastValue}, this sample was ${value}`);
      }
    } else {
      this.groupedOrderStack.pop();
    }
  }

  leaveFrame(frameInfo, value) {
    const frame = Frame.getOrInsert(this.frames, frameInfo);
    this.addWeightsToFrames(value);

    this._leaveFrame(frame, value, true);

    this._leaveFrame(frame, value, false);

    this.stack.pop();
    const frameCount = this.framesInStack.get(frame);
    if (frameCount == null) return;

    if (frameCount === 1) {
      this.framesInStack.delete(frame);
    } else {
      this.framesInStack.set(frame, frameCount - 1);
    }

    this.lastValue = value;
    this.totalWeight = Math.max(this.totalWeight, this.lastValue);
  }

  build() {
    // Each stack is expected to contain a single node which we initialize to be
    // the root node.
    if (this.appendOrderStack.length > 1 || this.groupedOrderStack.length > 1) {
      throw new Error('Tried to complete profile construction with a non-empty stack');
    }

    this.sortGroupedCallTree();
    return this;
  }

}

exports.CallTreeProfileBuilder = CallTreeProfileBuilder;

/***/ }),

/***/ 1713:
/***/ ((__unused_webpack_module, exports) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.decodeBase64 = exports.lazyStatic = exports.memoizeByReference = exports.memoizeByShallowEquality = exports.objectsHaveShallowEquality = exports.noop = exports.binarySearch = exports.triangle = exports.fract = exports.formatPercent = exports.zeroPad = exports.itReduce = exports.itForEach = exports.itMap = exports.KeyedSet = exports.getOrThrow = exports.getOrElse = exports.getOrInsert = exports.sortBy = exports.lastOf = void 0;

function lastOf(ts) {
  return ts[ts.length - 1] || null;
}

exports.lastOf = lastOf;

function sortBy(ts, key) {
  function comparator(a, b) {
    const keyA = key(a);
    const keyB = key(b);
    return keyA < keyB ? -1 : keyA > keyB ? 1 : 0;
  }

  ts.sort(comparator);
}

exports.sortBy = sortBy;

function getOrInsert(map, k, fallback) {
  if (!map.has(k)) map.set(k, fallback(k));
  return map.get(k);
}

exports.getOrInsert = getOrInsert;

function getOrElse(map, k, fallback) {
  if (!map.has(k)) return fallback(k);
  return map.get(k);
}

exports.getOrElse = getOrElse;

function getOrThrow(map, k) {
  if (!map.has(k)) {
    throw new Error(`Expected key ${k}`);
  }

  return map.get(k);
}

exports.getOrThrow = getOrThrow;

class KeyedSet {
  constructor() {
    this.map = new Map();
  }

  getOrInsert(t) {
    const key = t.key;
    const existing = this.map.get(key);
    if (existing) return existing;
    this.map.set(key, t);
    return t;
  }

  forEach(fn) {
    this.map.forEach(fn);
  }

  [Symbol.iterator]() {
    return this.map.values();
  }

}

exports.KeyedSet = KeyedSet;

function* itMap(it, f) {
  for (let t of it) {
    yield f(t);
  }
}

exports.itMap = itMap;

function itForEach(it, f) {
  for (let t of it) {
    f(t);
  }
}

exports.itForEach = itForEach;

function itReduce(it, f, init) {
  let accum = init;

  for (let t of it) {
    accum = f(accum, t);
  }

  return accum;
}

exports.itReduce = itReduce;

function zeroPad(s, width) {
  return new Array(Math.max(width - s.length, 0) + 1).join('0') + s;
}

exports.zeroPad = zeroPad;

function formatPercent(percent) {
  let formattedPercent = `${percent.toFixed(0)}%`;
  if (percent === 100) formattedPercent = '100%';else if (percent > 99) formattedPercent = '>99%';else if (percent < 0.01) formattedPercent = '<0.01%';else if (percent < 1) formattedPercent = `${percent.toFixed(2)}%`;else if (percent < 10) formattedPercent = `${percent.toFixed(1)}%`;
  return formattedPercent;
}

exports.formatPercent = formatPercent;

function fract(x) {
  return x - Math.floor(x);
}

exports.fract = fract;

function triangle(x) {
  return 2.0 * Math.abs(fract(x) - 0.5) - 1.0;
}

exports.triangle = triangle;

function binarySearch(lo, hi, f, target, targetRangeSize = 1) {
  console.assert(!isNaN(targetRangeSize) && !isNaN(target));

  while (true) {
    if (hi - lo <= targetRangeSize) return [lo, hi];
    const mid = (hi + lo) / 2;
    const val = f(mid);
    if (val < target) lo = mid;else hi = mid;
  }
}

exports.binarySearch = binarySearch;

function noop(...args) {}

exports.noop = noop;

function objectsHaveShallowEquality(a, b) {
  for (let key in a) {
    if (a[key] !== b[key]) return false;
  }

  for (let key in b) {
    if (a[key] !== b[key]) return false;
  }

  return true;
}

exports.objectsHaveShallowEquality = objectsHaveShallowEquality;

function memoizeByShallowEquality(cb) {
  let last = null;
  return args => {
    let result;

    if (last == null) {
      result = cb(args);
      last = {
        args,
        result
      };
      return result;
    } else if (objectsHaveShallowEquality(last.args, args)) {
      return last.result;
    } else {
      last.args = args;
      last.result = cb(args);
      return last.result;
    }
  };
}

exports.memoizeByShallowEquality = memoizeByShallowEquality;

function memoizeByReference(cb) {
  let last = null;
  return args => {
    let result;

    if (last == null) {
      result = cb(args);
      last = {
        args,
        result
      };
      return result;
    } else if (last.args === args) {
      return last.result;
    } else {
      last.args = args;
      last.result = cb(args);
      return last.result;
    }
  };
}

exports.memoizeByReference = memoizeByReference;

function lazyStatic(cb) {
  let last = null;
  return () => {
    if (last == null) {
      last = {
        result: cb()
      };
    }

    return last.result;
  };
}

exports.lazyStatic = lazyStatic;
const base64lookupTable = lazyStatic(() => {
  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
  const ret = new Map();

  for (let i = 0; i < alphabet.length; i++) {
    ret.set(alphabet.charAt(i), i);
  }

  ret.set('=', -1);
  return ret;
}); // NOTE: There are probably simpler solutions to this problem, but I have this written already, so
// until we run into problems with this, let's just use this.
//
// See: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem#The_Unicode_Problem

function decodeBase64(encoded) {
  // Reference: https://www.rfc-editor.org/rfc/rfc4648.txt
  const lookupTable = base64lookupTable(); // 3 byte groups are represented as sequneces of 4 characters.
  //
  // "The encoding process represents 24-bit groups of input bits as output
  //  strings of 4 encoded characters."
  //
  // "Special processing is performed if fewer than 24 bits are available
  //  at the end of the data being encoded.  A full encoding quantum is
  //  always completed at the end of a quantity.  When fewer than 24 input
  //  bits are available in an input group bits with value zero are added
  //  (on the right) to form an integral number of 6-bit groups."

  if (encoded.length % 4 !== 0) {
    throw new Error(`Invalid length for base64 encoded string. Expected length % 4 = 0, got length = ${encoded.length}`);
  }

  const quartetCount = encoded.length / 4;
  let byteCount; // Special processing is performed if fewer than 24 bits are available
  // at the end of the data being encoded.  A full encoding quantum is
  // always completed at the end of a quantity.  When fewer than 24 input
  // bits are available in an input group, bits with value zero are added
  // (on the right) to form an integral number of 6-bit groups.  Padding
  // at the end of the data is performed using the '=' character.  Since
  // all base 64 input is an integral number of octets, only the following
  // cases can arise:
  //
  // (1) The final quantum of encoding input is an integral multiple of 24
  //     bits; here, the final unit of encoded output will be an integral
  //     multiple of 4 characters with no "=" padding.
  //
  // (2) The final quantum of encoding input is exactly 8 bits; here, the
  //     final unit of encoded output will be two characters followed by
  //     two "=" padding characters.
  //
  // (3) The final quantum of encoding input is exactly 16 bits; here, the
  //     final unit of encoded output will be three characters followed by
  //     one "=" padding character.

  if (encoded.length >= 4) {
    if (encoded.charAt(encoded.length - 1) === '=') {
      if (encoded.charAt(encoded.length - 2) === '=') {
        // Case (2)
        byteCount = quartetCount * 3 - 2;
      } else {
        // Case (3)
        byteCount = quartetCount * 3 - 1;
      }
    } else {
      // Case (1)
      byteCount = quartetCount * 3;
    }
  } else {
    // Case (1)
    byteCount = quartetCount * 3;
  }

  const bytes = new Uint8Array(byteCount);
  let offset = 0;

  for (let i = 0; i < quartetCount; i++) {
    const enc1 = encoded.charAt(i * 4 + 0);
    const enc2 = encoded.charAt(i * 4 + 1);
    const enc3 = encoded.charAt(i * 4 + 2);
    const enc4 = encoded.charAt(i * 4 + 3);
    const sextet1 = lookupTable.get(enc1);
    const sextet2 = lookupTable.get(enc2);
    const sextet3 = lookupTable.get(enc3);
    const sextet4 = lookupTable.get(enc4);

    if (sextet1 == null || sextet2 == null || sextet3 == null || sextet4 == null) {
      throw new Error(`Invalid quartet at indices ${i * 4} .. ${i * 4 + 3}: ${encoded.substring(i * 4, i * 4 + 3)}`);
    }

    bytes[offset++] = sextet1 << 2 | sextet2 >> 4;

    if (enc3 !== '=') {
      bytes[offset++] = (sextet2 & 15) << 4 | sextet3 >> 2;
    }

    if (enc4 !== '=') {
      bytes[offset++] = (sextet3 & 7) << 6 | sextet4;
    }
  }

  if (offset !== byteCount) {
    throw new Error(`Expected to decode ${byteCount} bytes, but only decoded ${offset})`);
  }

  return bytes;
}

exports.decodeBase64 = decodeBase64;

/***/ }),

/***/ 1177:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {



Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.ByteFormatter = exports.TimeFormatter = exports.RawValueFormatter = void 0;

const utils_1 = __webpack_require__(1713);

class RawValueFormatter {
  constructor() {
    this.unit = 'none';
  }

  format(v) {
    return v.toLocaleString();
  }

}

exports.RawValueFormatter = RawValueFormatter;

class TimeFormatter {
  constructor(unit) {
    this.unit = unit;
    if (unit === 'nanoseconds') this.multiplier = 1e-9;else if (unit === 'microseconds') this.multiplier = 1e-6;else if (unit === 'milliseconds') this.multiplier = 1e-3;else this.multiplier = 1;
  }

  formatUnsigned(v) {
    const s = v * this.multiplier;

    if (s / 60 >= 1) {
      const minutes = Math.floor(s / 60);
      const seconds = Math.floor(s - minutes * 60).toString();
      return `${minutes}:${utils_1.zeroPad(seconds, 2)}`;
    }

    if (s / 1 >= 1) return `${s.toFixed(2)}s`;
    if (s / 1e-3 >= 1) return `${(s / 1e-3).toFixed(2)}ms`;
    if (s / 1e-6 >= 1) return `${(s / 1e-6).toFixed(2)}µs`;else return `${(s / 1e-9).toFixed(2)}ns`;
  }

  format(v) {
    return `${v < 0 ? '-' : ''}${this.formatUnsigned(Math.abs(v))}`;
  }

}

exports.TimeFormatter = TimeFormatter;

class ByteFormatter {
  constructor() {
    this.unit = 'bytes';
  }

  format(v) {
    if (v < 1024) return `${v.toFixed(0)} B`;
    v /= 1024;
    if (v < 1024) return `${v.toFixed(2)} KB`;
    v /= 1024;
    if (v < 1024) return `${v.toFixed(2)} MB`;
    v /= 1024;
    return `${v.toFixed(2)} GB`;
  }

}

exports.ByteFormatter = ByteFormatter;

/***/ }),

/***/ 7034:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {



var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __exportStar = this && this.__exportStar || function (m, exports) {
  for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

__exportStar(__webpack_require__(1831), exports);

__exportStar(__webpack_require__(8463), exports);

/***/ }),

/***/ 3811:
/***/ ((module) => {

//  Import support https://stackoverflow.com/questions/13673346/supporting-both-commonjs-and-amd
(function (name, definition) {
  if (true) {
    module.exports = definition();
  } else {}
})("clipboard", function () {
  if (typeof document === 'undefined' || !document.addEventListener) {
    return null;
  }

  var clipboard = {};

  clipboard.copy = function () {
    var _intercept = false;
    var _data = null; // Map from data type (e.g. "text/html") to value.

    var _bogusSelection = false;

    function cleanup() {
      _intercept = false;
      _data = null;

      if (_bogusSelection) {
        window.getSelection().removeAllRanges();
      }

      _bogusSelection = false;
    }

    document.addEventListener("copy", function (e) {
      if (_intercept) {
        for (var key in _data) {
          e.clipboardData.setData(key, _data[key]);
        }

        e.preventDefault();
      }
    }); // Workaround for Safari: https://bugs.webkit.org/show_bug.cgi?id=156529

    function bogusSelect() {
      var sel = document.getSelection(); // If "nothing" is selected...

      if (!document.queryCommandEnabled("copy") && sel.isCollapsed) {
        // ... temporarily select the entire body.
        //
        // We select the entire body because:
        // - it's guaranteed to exist,
        // - it works (unlike, say, document.head, or phantom element that is
        //   not inserted into the DOM),
        // - it doesn't seem to flicker (due to the synchronous copy event), and
        // - it avoids modifying the DOM (can trigger mutation observers).
        //
        // Because we can't do proper feature detection (we already checked
        // document.queryCommandEnabled("copy") , which actually gives a false
        // negative for Blink when nothing is selected) and UA sniffing is not
        // reliable (a lot of UA strings contain "Safari"), this will also
        // happen for some browsers other than Safari. :-()
        var range = document.createRange();
        range.selectNodeContents(document.body);
        sel.removeAllRanges();
        sel.addRange(range);
        _bogusSelection = true;
      }
    }

    ;
    return function (data) {
      return new Promise(function (resolve, reject) {
        _intercept = true;

        if (typeof data === "string") {
          _data = {
            "text/plain": data
          };
        } else if (data instanceof Node) {
          _data = {
            "text/html": new XMLSerializer().serializeToString(data)
          };
        } else if (data instanceof Object) {
          _data = data;
        } else {
          reject("Invalid data type. Must be string, DOM node, or an object mapping MIME types to strings.");
        }

        function triggerCopy(tryBogusSelect) {
          try {
            if (document.execCommand("copy")) {
              // document.execCommand is synchronous: http://www.w3.org/TR/2015/WD-clipboard-apis-20150421/#integration-with-rich-text-editing-apis
              // So we can call resolve() back here.
              cleanup();
              resolve();
            } else {
              if (!tryBogusSelect) {
                bogusSelect();
                triggerCopy(true);
              } else {
                cleanup();
                throw new Error("Unable to copy. Perhaps it's not available in your browser?");
              }
            }
          } catch (e) {
            cleanup();
            reject(e);
          }
        }

        triggerCopy(false);
      });
    };
  }();

  clipboard.paste = function () {
    var _intercept = false;

    var _resolve;

    var _dataType;

    document.addEventListener("paste", function (e) {
      if (_intercept) {
        _intercept = false;
        e.preventDefault();
        var resolve = _resolve;
        _resolve = null;
        resolve(e.clipboardData.getData(_dataType));
      }
    });
    return function (dataType) {
      return new Promise(function (resolve, reject) {
        _intercept = true;
        _resolve = resolve;
        _dataType = dataType || "text/plain";

        try {
          if (!document.execCommand("paste")) {
            _intercept = false;
            reject(new Error("Unable to paste. Pasting only works in Internet Explorer at the moment."));
          }
        } catch (e) {
          _intercept = false;
          reject(new Error(e));
        }
      });
    };
  }(); // Handle IE behaviour.


  if (typeof ClipboardEvent === "undefined" && typeof window.clipboardData !== "undefined" && typeof window.clipboardData.setData !== "undefined") {
    /*! promise-polyfill 2.0.1 */
    (function (a) {
      function b(a, b) {
        return function () {
          a.apply(b, arguments);
        };
      }

      function c(a) {
        if ("object" != typeof this) throw new TypeError("Promises must be constructed via new");
        if ("function" != typeof a) throw new TypeError("not a function");
        this._state = null, this._value = null, this._deferreds = [], i(a, b(e, this), b(f, this));
      }

      function d(a) {
        var b = this;
        return null === this._state ? void this._deferreds.push(a) : void j(function () {
          var c = b._state ? a.onFulfilled : a.onRejected;
          if (null === c) return void (b._state ? a.resolve : a.reject)(b._value);
          var d;

          try {
            d = c(b._value);
          } catch (e) {
            return void a.reject(e);
          }

          a.resolve(d);
        });
      }

      function e(a) {
        try {
          if (a === this) throw new TypeError("A promise cannot be resolved with itself.");

          if (a && ("object" == typeof a || "function" == typeof a)) {
            var c = a.then;
            if ("function" == typeof c) return void i(b(c, a), b(e, this), b(f, this));
          }

          this._state = !0, this._value = a, g.call(this);
        } catch (d) {
          f.call(this, d);
        }
      }

      function f(a) {
        this._state = !1, this._value = a, g.call(this);
      }

      function g() {
        for (var a = 0, b = this._deferreds.length; b > a; a++) d.call(this, this._deferreds[a]);

        this._deferreds = null;
      }

      function h(a, b, c, d) {
        this.onFulfilled = "function" == typeof a ? a : null, this.onRejected = "function" == typeof b ? b : null, this.resolve = c, this.reject = d;
      }

      function i(a, b, c) {
        var d = !1;

        try {
          a(function (a) {
            d || (d = !0, b(a));
          }, function (a) {
            d || (d = !0, c(a));
          });
        } catch (e) {
          if (d) return;
          d = !0, c(e);
        }
      }

      var j = c.immediateFn || "function" == typeof setImmediate && setImmediate || function (a) {
        setTimeout(a, 1);
      },
          k = Array.isArray || function (a) {
        return "[object Array]" === Object.prototype.toString.call(a);
      };

      c.prototype["catch"] = function (a) {
        return this.then(null, a);
      }, c.prototype.then = function (a, b) {
        var e = this;
        return new c(function (c, f) {
          d.call(e, new h(a, b, c, f));
        });
      }, c.all = function () {
        var a = Array.prototype.slice.call(1 === arguments.length && k(arguments[0]) ? arguments[0] : arguments);
        return new c(function (b, c) {
          function d(f, g) {
            try {
              if (g && ("object" == typeof g || "function" == typeof g)) {
                var h = g.then;
                if ("function" == typeof h) return void h.call(g, function (a) {
                  d(f, a);
                }, c);
              }

              a[f] = g, 0 === --e && b(a);
            } catch (i) {
              c(i);
            }
          }

          if (0 === a.length) return b([]);

          for (var e = a.length, f = 0; f < a.length; f++) d(f, a[f]);
        });
      }, c.resolve = function (a) {
        return a && "object" == typeof a && a.constructor === c ? a : new c(function (b) {
          b(a);
        });
      }, c.reject = function (a) {
        return new c(function (b, c) {
          c(a);
        });
      }, c.race = function (a) {
        return new c(function (b, c) {
          for (var d = 0, e = a.length; e > d; d++) a[d].then(b, c);
        });
      },  true && module.exports ? module.exports = c : a.Promise || (a.Promise = c);
    })(this);

    clipboard.copy = function (data) {
      return new Promise(function (resolve, reject) {
        // IE supports string and URL types: https://msdn.microsoft.com/en-us/library/ms536744(v=vs.85).aspx
        // We only support the string type for now.
        if (typeof data !== "string" && !("text/plain" in data)) {
          throw new Error("You must provide a text/plain type.");
        }

        var strData = typeof data === "string" ? data : data["text/plain"];
        var copySucceeded = window.clipboardData.setData("Text", strData);

        if (copySucceeded) {
          resolve();
        } else {
          reject(new Error("Copying was rejected."));
        }
      });
    };

    clipboard.paste = function () {
      return new Promise(function (resolve, reject) {
        var strData = window.clipboardData.getData("Text");

        if (strData) {
          resolve(strData);
        } else {
          // The user rejected the paste request.
          reject(new Error("Pasting was rejected."));
        }
      });
    };
  }

  return clipboard;
});

/***/ }),

/***/ 9843:
/***/ ((module) => {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media " + item[2] + "{" + content + "}";
      } else {
        return content;
      }
    }).join("");
  }; // import a list of modules into the list


  list.i = function (modules, mediaQuery) {
    if (typeof modules === "string") modules = [[null, modules, ""]];
    var alreadyImportedModules = {};

    for (var i = 0; i < this.length; i++) {
      var id = this[i][0];
      if (typeof id === "number") alreadyImportedModules[id] = true;
    }

    for (i = 0; i < modules.length; i++) {
      var item = modules[i]; // skip already imported module
      // this implementation is not 100% perfect for weird media query combinations
      //  when a module is imported multiple times with different media queries.
      //  I hope this will never occur (Hey this way we have smaller bundles)

      if (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
        if (mediaQuery && !item[2]) {
          item[2] = mediaQuery;
        } else if (mediaQuery) {
          item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
        }

        list.push(item);
      }
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || '';
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;
  return '/*# ' + data + ' */';
}

/***/ }),

/***/ 2267:
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  'use strict'; // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.

  /* istanbul ignore next */

  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4430)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function ErrorStackParser(StackFrame) {
  'use strict';

  var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\S+:\d+/;
  var CHROME_IE_STACK_REGEXP = /^\s*at .*(\S+:\d+|\(native\))/m;
  var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\[native code])?$/;
  return {
    /**
     * Given an Error object, extract the most information from it.
     *
     * @param {Error} error object
     * @return {Array} of StackFrames
     */
    parse: function ErrorStackParser$$parse(error) {
      if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {
        return this.parseOpera(error);
      } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {
        return this.parseV8OrIE(error);
      } else if (error.stack) {
        return this.parseFFOrSafari(error);
      } else {
        throw new Error('Cannot parse given Error object');
      }
    },
    // Separate line and column numbers from a string of the form: (URI:Line:Column)
    extractLocation: function ErrorStackParser$$extractLocation(urlLike) {
      // Fail-fast but return locations like "(native)"
      if (urlLike.indexOf(':') === -1) {
        return [urlLike];
      }

      var regExp = /(.+?)(?::(\d+))?(?::(\d+))?$/;
      var parts = regExp.exec(urlLike.replace(/[()]/g, ''));
      return [parts[1], parts[2] || undefined, parts[3] || undefined];
    },
    parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {
      var filtered = error.stack.split('\n').filter(function (line) {
        return !!line.match(CHROME_IE_STACK_REGEXP);
      }, this);
      return filtered.map(function (line) {
        if (line.indexOf('(eval ') > -1) {
          // Throw away eval information until we implement stacktrace.js/stackframe#8
          line = line.replace(/eval code/g, 'eval').replace(/(\(eval at [^()]*)|(\),.*$)/g, '');
        }

        var sanitizedLine = line.replace(/^\s+/, '').replace(/\(eval code/g, '('); // capture and preseve the parenthesized location "(/foo/my bar.js:12:87)" in
        // case it has spaces in it, as the string is split on \s+ later on

        var location = sanitizedLine.match(/ (\((.+):(\d+):(\d+)\)$)/); // remove the parenthesized location from the line, if it was matched

        sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;
        var tokens = sanitizedLine.split(/\s+/).slice(1); // if a location was matched, pass it to extractLocation() otherwise pop the last token

        var locationParts = this.extractLocation(location ? location[1] : tokens.pop());
        var functionName = tokens.join(' ') || undefined;
        var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];
        return new StackFrame({
          functionName: functionName,
          fileName: fileName,
          lineNumber: locationParts[1],
          columnNumber: locationParts[2],
          source: line
        });
      }, this);
    },
    parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {
      var filtered = error.stack.split('\n').filter(function (line) {
        return !line.match(SAFARI_NATIVE_CODE_REGEXP);
      }, this);
      return filtered.map(function (line) {
        // Throw away eval information until we implement stacktrace.js/stackframe#8
        if (line.indexOf(' > eval') > -1) {
          line = line.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g, ':$1');
        }

        if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {
          // Safari eval frames only have function names and nothing else
          return new StackFrame({
            functionName: line
          });
        } else {
          var functionNameRegex = /((.*".+"[^@]*)?[^@]*)(?:@)/;
          var matches = line.match(functionNameRegex);
          var functionName = matches && matches[1] ? matches[1] : undefined;
          var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));
          return new StackFrame({
            functionName: functionName,
            fileName: locationParts[0],
            lineNumber: locationParts[1],
            columnNumber: locationParts[2],
            source: line
          });
        }
      }, this);
    },
    parseOpera: function ErrorStackParser$$parseOpera(e) {
      if (!e.stacktrace || e.message.indexOf('\n') > -1 && e.message.split('\n').length > e.stacktrace.split('\n').length) {
        return this.parseOpera9(e);
      } else if (!e.stack) {
        return this.parseOpera10(e);
      } else {
        return this.parseOpera11(e);
      }
    },
    parseOpera9: function ErrorStackParser$$parseOpera9(e) {
      var lineRE = /Line (\d+).*script (?:in )?(\S+)/i;
      var lines = e.message.split('\n');
      var result = [];

      for (var i = 2, len = lines.length; i < len; i += 2) {
        var match = lineRE.exec(lines[i]);

        if (match) {
          result.push(new StackFrame({
            fileName: match[2],
            lineNumber: match[1],
            source: lines[i]
          }));
        }
      }

      return result;
    },
    parseOpera10: function ErrorStackParser$$parseOpera10(e) {
      var lineRE = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i;
      var lines = e.stacktrace.split('\n');
      var result = [];

      for (var i = 0, len = lines.length; i < len; i += 2) {
        var match = lineRE.exec(lines[i]);

        if (match) {
          result.push(new StackFrame({
            functionName: match[3] || undefined,
            fileName: match[2],
            lineNumber: match[1],
            source: lines[i]
          }));
        }
      }

      return result;
    },
    // Opera 10.65+ Error.stack very similar to FF/Safari
    parseOpera11: function ErrorStackParser$$parseOpera11(error) {
      var filtered = error.stack.split('\n').filter(function (line) {
        return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);
      }, this);
      return filtered.map(function (line) {
        var tokens = line.split('@');
        var locationParts = this.extractLocation(tokens.pop());
        var functionCall = tokens.shift() || '';
        var functionName = functionCall.replace(/<anonymous function(: (\w+))?>/, '$2').replace(/\([^)]*\)/g, '') || undefined;
        var argsRaw;

        if (functionCall.match(/\(([^)]*)\)/)) {
          argsRaw = functionCall.replace(/^[^(]+\(([^)]*)\)$/, '$1');
        }

        var args = argsRaw === undefined || argsRaw === '[arguments not available]' ? undefined : argsRaw.split(',');
        return new StackFrame({
          functionName: functionName,
          args: args,
          fileName: locationParts[0],
          lineNumber: locationParts[1],
          columnNumber: locationParts[2],
          source: line
        });
      }, this);
    }
  };
});

/***/ }),

/***/ 2526:
/***/ ((module) => {



module.exports = string => {
  if (typeof string !== 'string') {
    throw new TypeError('Expected a string');
  } // Escape characters with special meaning either inside or outside character sets.
  // Use a simple backslash escape when it’s always valid, and a \unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.


  return string.replace(/[|\\{}()[\]^$+*?.]/g, '\\$&').replace(/-/g, '\\x2d');
};

/***/ }),

/***/ 1148:
/***/ ((module) => {

/**
 * These functions are for handling of query-string free URLs, necessitated
 * by query string stripping of URLs in JavaScriptCore stack traces
 * introduced in iOS 16.4.
 *
 * See https://github.com/facebook/react-native/issues/36794 for context.
 *
 * 
 */
// We use regex-based URL parsing as defined in RFC3986 because it's easier to
// determine whether the input is a complete URI, a path-absolute or a
// path-rootless (as defined in the spec), and be as faithful to the input as
// possible. This will match any string, and does not imply validity.
//
// https://www.rfc-editor.org/rfc/rfc3986#appendix-B
const URI_REGEX = /^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;

function _rfc3986Parse(url
/*:string */
) {
  const match = url.match(URI_REGEX);

  if (match == null) {
    throw new Error("Unexpected error - failed to regex-match URL");
  }

  return {
    schemeAndAuthority: (match[1] || "") + (match[3] || ""),
    path: match[5] || "",
    hasQueryPart: match[6] != null,
    queryWithoutQuestionMark: match[7] || "",
    fragmentWithHash: match[8] || ""
  };
}

function isJscSafeUrl(url
/*:string */
)
/*:boolean*/
{
  const parsedUrl = _rfc3986Parse(url);

  return !parsedUrl.hasQueryPart;
}
/**
 * @param {string} urlToNormalize
 * @returns string
 */


function toNormalUrl(urlToNormalize
/*:string */
)
/*:string */
{
  const parsedUrl = _rfc3986Parse(urlToNormalize);

  if (parsedUrl.path.indexOf("//&") === -1) {
    return urlToNormalize;
  }

  return parsedUrl.schemeAndAuthority + parsedUrl.path.replace("//&", "?") + ( // We don't expect JSC urls to also have query strings, but interpret
  // liberally and append them.
  parsedUrl.queryWithoutQuestionMark.length > 0 ? "&" + parsedUrl.queryWithoutQuestionMark : "") + // Likewise, JSC URLs will usually have their fragments stripped, but
  // preserve if we find one.
  parsedUrl.fragmentWithHash;
}
/**
 * @param {string} urlToConvert
 * @returns string
 */


function toJscSafeUrl(urlToConvert
/*:string */
)
/*:string */
{
  if (!_rfc3986Parse(urlToConvert).hasQueryPart) {
    return urlToConvert;
  }

  const parsedUrl = _rfc3986Parse(toNormalUrl(urlToConvert));

  if (parsedUrl.queryWithoutQuestionMark.length > 0 && (parsedUrl.path === "" || parsedUrl.path === "/")) {
    throw new Error(`The given URL "${urlToConvert}" has an empty path and cannot be converted to a JSC-safe format.`);
  }

  return parsedUrl.schemeAndAuthority + parsedUrl.path + (parsedUrl.queryWithoutQuestionMark.length > 0 ? "//&" + // Query strings may contain '?' (e.g. in key or value names) - these
  // must be percent-encoded to form a valid path, and not be stripped.
  parsedUrl.queryWithoutQuestionMark.replace(/\?/g, "%3F") : "") + // We expect JSC to strip this - we don't handle fragments for now.
  parsedUrl.fragmentWithHash;
}

module.exports = {
  isJscSafeUrl,
  toNormalUrl,
  toJscSafeUrl
};

/***/ }),

/***/ 4730:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

 // A linked list to keep track of recently-used-ness

const Yallist = __webpack_require__(4695);

const MAX = Symbol('max');
const LENGTH = Symbol('length');
const LENGTH_CALCULATOR = Symbol('lengthCalculator');
const ALLOW_STALE = Symbol('allowStale');
const MAX_AGE = Symbol('maxAge');
const DISPOSE = Symbol('dispose');
const NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet');
const LRU_LIST = Symbol('lruList');
const CACHE = Symbol('cache');
const UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet');

const naiveLength = () => 1; // lruList is a yallist where the head is the youngest
// item, and the tail is the oldest.  the list contains the Hit
// objects as the entries.
// Each Hit object has a reference to its Yallist.Node.  This
// never changes.
//
// cache is a Map (or PseudoMap) that matches the keys to
// the Yallist.Node object.


class LRUCache {
  constructor(options) {
    if (typeof options === 'number') options = {
      max: options
    };
    if (!options) options = {};
    if (options.max && (typeof options.max !== 'number' || options.max < 0)) throw new TypeError('max must be a non-negative number'); // Kind of weird to have a default max of Infinity, but oh well.

    const max = this[MAX] = options.max || Infinity;
    const lc = options.length || naiveLength;
    this[LENGTH_CALCULATOR] = typeof lc !== 'function' ? naiveLength : lc;
    this[ALLOW_STALE] = options.stale || false;
    if (options.maxAge && typeof options.maxAge !== 'number') throw new TypeError('maxAge must be a number');
    this[MAX_AGE] = options.maxAge || 0;
    this[DISPOSE] = options.dispose;
    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;
    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false;
    this.reset();
  } // resize the cache when the max changes.


  set max(mL) {
    if (typeof mL !== 'number' || mL < 0) throw new TypeError('max must be a non-negative number');
    this[MAX] = mL || Infinity;
    trim(this);
  }

  get max() {
    return this[MAX];
  }

  set allowStale(allowStale) {
    this[ALLOW_STALE] = !!allowStale;
  }

  get allowStale() {
    return this[ALLOW_STALE];
  }

  set maxAge(mA) {
    if (typeof mA !== 'number') throw new TypeError('maxAge must be a non-negative number');
    this[MAX_AGE] = mA;
    trim(this);
  }

  get maxAge() {
    return this[MAX_AGE];
  } // resize the cache when the lengthCalculator changes.


  set lengthCalculator(lC) {
    if (typeof lC !== 'function') lC = naiveLength;

    if (lC !== this[LENGTH_CALCULATOR]) {
      this[LENGTH_CALCULATOR] = lC;
      this[LENGTH] = 0;
      this[LRU_LIST].forEach(hit => {
        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);
        this[LENGTH] += hit.length;
      });
    }

    trim(this);
  }

  get lengthCalculator() {
    return this[LENGTH_CALCULATOR];
  }

  get length() {
    return this[LENGTH];
  }

  get itemCount() {
    return this[LRU_LIST].length;
  }

  rforEach(fn, thisp) {
    thisp = thisp || this;

    for (let walker = this[LRU_LIST].tail; walker !== null;) {
      const prev = walker.prev;
      forEachStep(this, fn, walker, thisp);
      walker = prev;
    }
  }

  forEach(fn, thisp) {
    thisp = thisp || this;

    for (let walker = this[LRU_LIST].head; walker !== null;) {
      const next = walker.next;
      forEachStep(this, fn, walker, thisp);
      walker = next;
    }
  }

  keys() {
    return this[LRU_LIST].toArray().map(k => k.key);
  }

  values() {
    return this[LRU_LIST].toArray().map(k => k.value);
  }

  reset() {
    if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {
      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value));
    }

    this[CACHE] = new Map(); // hash of items by key

    this[LRU_LIST] = new Yallist(); // list of items in order of use recency

    this[LENGTH] = 0; // length of items in the list
  }

  dump() {
    return this[LRU_LIST].map(hit => isStale(this, hit) ? false : {
      k: hit.key,
      v: hit.value,
      e: hit.now + (hit.maxAge || 0)
    }).toArray().filter(h => h);
  }

  dumpLru() {
    return this[LRU_LIST];
  }

  set(key, value, maxAge) {
    maxAge = maxAge || this[MAX_AGE];
    if (maxAge && typeof maxAge !== 'number') throw new TypeError('maxAge must be a number');
    const now = maxAge ? Date.now() : 0;
    const len = this[LENGTH_CALCULATOR](value, key);

    if (this[CACHE].has(key)) {
      if (len > this[MAX]) {
        del(this, this[CACHE].get(key));
        return false;
      }

      const node = this[CACHE].get(key);
      const item = node.value; // dispose of the old one before overwriting
      // split out into 2 ifs for better coverage tracking

      if (this[DISPOSE]) {
        if (!this[NO_DISPOSE_ON_SET]) this[DISPOSE](key, item.value);
      }

      item.now = now;
      item.maxAge = maxAge;
      item.value = value;
      this[LENGTH] += len - item.length;
      item.length = len;
      this.get(key);
      trim(this);
      return true;
    }

    const hit = new Entry(key, value, len, now, maxAge); // oversized objects fall out of cache automatically.

    if (hit.length > this[MAX]) {
      if (this[DISPOSE]) this[DISPOSE](key, value);
      return false;
    }

    this[LENGTH] += hit.length;
    this[LRU_LIST].unshift(hit);
    this[CACHE].set(key, this[LRU_LIST].head);
    trim(this);
    return true;
  }

  has(key) {
    if (!this[CACHE].has(key)) return false;
    const hit = this[CACHE].get(key).value;
    return !isStale(this, hit);
  }

  get(key) {
    return get(this, key, true);
  }

  peek(key) {
    return get(this, key, false);
  }

  pop() {
    const node = this[LRU_LIST].tail;
    if (!node) return null;
    del(this, node);
    return node.value;
  }

  del(key) {
    del(this, this[CACHE].get(key));
  }

  load(arr) {
    // reset the cache
    this.reset();
    const now = Date.now(); // A previous serialized cache has the most recent items first

    for (let l = arr.length - 1; l >= 0; l--) {
      const hit = arr[l];
      const expiresAt = hit.e || 0;
      if (expiresAt === 0) // the item was created without expiration in a non aged cache
        this.set(hit.k, hit.v);else {
        const maxAge = expiresAt - now; // dont add already expired items

        if (maxAge > 0) {
          this.set(hit.k, hit.v, maxAge);
        }
      }
    }
  }

  prune() {
    this[CACHE].forEach((value, key) => get(this, key, false));
  }

}

const get = (self, key, doUse) => {
  const node = self[CACHE].get(key);

  if (node) {
    const hit = node.value;

    if (isStale(self, hit)) {
      del(self, node);
      if (!self[ALLOW_STALE]) return undefined;
    } else {
      if (doUse) {
        if (self[UPDATE_AGE_ON_GET]) node.value.now = Date.now();
        self[LRU_LIST].unshiftNode(node);
      }
    }

    return hit.value;
  }
};

const isStale = (self, hit) => {
  if (!hit || !hit.maxAge && !self[MAX_AGE]) return false;
  const diff = Date.now() - hit.now;
  return hit.maxAge ? diff > hit.maxAge : self[MAX_AGE] && diff > self[MAX_AGE];
};

const trim = self => {
  if (self[LENGTH] > self[MAX]) {
    for (let walker = self[LRU_LIST].tail; self[LENGTH] > self[MAX] && walker !== null;) {
      // We know that we're about to delete this one, and also
      // what the next least recently used key will be, so just
      // go ahead and set it now.
      const prev = walker.prev;
      del(self, walker);
      walker = prev;
    }
  }
};

const del = (self, node) => {
  if (node) {
    const hit = node.value;
    if (self[DISPOSE]) self[DISPOSE](hit.key, hit.value);
    self[LENGTH] -= hit.length;
    self[CACHE].delete(hit.key);
    self[LRU_LIST].removeNode(node);
  }
};

class Entry {
  constructor(key, value, length, now, maxAge) {
    this.key = key;
    this.value = value;
    this.length = length;
    this.now = now;
    this.maxAge = maxAge || 0;
  }

}

const forEachStep = (self, fn, node, thisp) => {
  let hit = node.value;

  if (isStale(self, hit)) {
    del(self, node);
    if (!self[ALLOW_STALE]) hit = undefined;
  }

  if (hit) fn.call(thisp, hit.value, hit.key, self);
};

module.exports = LRUCache;

/***/ }),

/***/ 9209:
/***/ ((module) => {



function nullthrows(x, message) {
  if (x != null) {
    return x;
  }

  var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);
  error.framesToPop = 1; // Skip nullthrows's own stack frame.

  throw error;
}

module.exports = nullthrows;
module.exports["default"] = nullthrows;
Object.defineProperty(module.exports, "__esModule", ({
  value: true
}));

/***/ }),

/***/ 3531:
/***/ ((module) => {



module.exports = milliseconds => {
  if (typeof milliseconds !== 'number') {
    throw new TypeError('Expected a number');
  }

  const roundTowardsZero = milliseconds > 0 ? Math.floor : Math.ceil;
  return {
    days: roundTowardsZero(milliseconds / 86400000),
    hours: roundTowardsZero(milliseconds / 3600000) % 24,
    minutes: roundTowardsZero(milliseconds / 60000) % 60,
    seconds: roundTowardsZero(milliseconds / 1000) % 60,
    milliseconds: roundTowardsZero(milliseconds) % 1000,
    microseconds: roundTowardsZero(milliseconds * 1000) % 1000,
    nanoseconds: roundTowardsZero(milliseconds * 1e6) % 1000
  };
};

/***/ }),

/***/ 7779:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



const parseMilliseconds = __webpack_require__(3531);

const pluralize = (word, count) => count === 1 ? word : `${word}s`;

const SECOND_ROUNDING_EPSILON = 0.0000001;

module.exports = (milliseconds, options = {}) => {
  if (!Number.isFinite(milliseconds)) {
    throw new TypeError('Expected a finite number');
  }

  if (options.colonNotation) {
    options.compact = false;
    options.formatSubMilliseconds = false;
    options.separateMilliseconds = false;
    options.verbose = false;
  }

  if (options.compact) {
    options.secondsDecimalDigits = 0;
    options.millisecondsDecimalDigits = 0;
  }

  const result = [];

  const floorDecimals = (value, decimalDigits) => {
    const flooredInterimValue = Math.floor(value * 10 ** decimalDigits + SECOND_ROUNDING_EPSILON);
    const flooredValue = Math.round(flooredInterimValue) / 10 ** decimalDigits;
    return flooredValue.toFixed(decimalDigits);
  };

  const add = (value, long, short, valueString) => {
    if ((result.length === 0 || !options.colonNotation) && value === 0 && !(options.colonNotation && short === 'm')) {
      return;
    }

    valueString = (valueString || value || '0').toString();
    let prefix;
    let suffix;

    if (options.colonNotation) {
      prefix = result.length > 0 ? ':' : '';
      suffix = '';
      const wholeDigits = valueString.includes('.') ? valueString.split('.')[0].length : valueString.length;
      const minLength = result.length > 0 ? 2 : 1;
      valueString = '0'.repeat(Math.max(0, minLength - wholeDigits)) + valueString;
    } else {
      prefix = '';
      suffix = options.verbose ? ' ' + pluralize(long, value) : short;
    }

    result.push(prefix + valueString + suffix);
  };

  const parsed = parseMilliseconds(milliseconds);
  add(Math.trunc(parsed.days / 365), 'year', 'y');
  add(parsed.days % 365, 'day', 'd');
  add(parsed.hours, 'hour', 'h');
  add(parsed.minutes, 'minute', 'm');

  if (options.separateMilliseconds || options.formatSubMilliseconds || milliseconds < 1000) {
    add(parsed.seconds, 'second', 's');

    if (options.formatSubMilliseconds) {
      add(parsed.milliseconds, 'millisecond', 'ms');
      add(parsed.microseconds, 'microsecond', 'µs');
      add(parsed.nanoseconds, 'nanosecond', 'ns');
    } else {
      const millisecondsAndBelow = parsed.milliseconds + parsed.microseconds / 1000 + parsed.nanoseconds / 1e6;
      const millisecondsDecimalDigits = typeof options.millisecondsDecimalDigits === 'number' ? options.millisecondsDecimalDigits : 0;
      const roundedMiliseconds = millisecondsAndBelow >= 1 ? Math.round(millisecondsAndBelow) : Math.ceil(millisecondsAndBelow);
      const millisecondsString = millisecondsDecimalDigits ? millisecondsAndBelow.toFixed(millisecondsDecimalDigits) : roundedMiliseconds;
      add(Number.parseFloat(millisecondsString, 10), 'millisecond', 'ms', millisecondsString);
    }
  } else {
    const seconds = milliseconds / 1000 % 60;
    const secondsDecimalDigits = typeof options.secondsDecimalDigits === 'number' ? options.secondsDecimalDigits : 1;
    const secondsFixed = floorDecimals(seconds, secondsDecimalDigits);
    const secondsString = options.keepDecimalsOnWholeSeconds ? secondsFixed : secondsFixed.replace(/\.0+$/, '');
    add(Number.parseFloat(secondsString, 10), 'second', 's', secondsString);
  }

  if (result.length === 0) {
    return '0' + (options.verbose ? ' milliseconds' : 'ms');
  }

  if (options.compact) {
    return result[0];
  }

  if (typeof options.unitCount === 'number') {
    const separator = options.colonNotation ? '' : ' ';
    return result.slice(0, Math.max(options.unitCount, 1)).join(separator);
  }

  return options.colonNotation ? result.join('') : result.join(' ');
};

/***/ }),

/***/ 3169:
/***/ ((module) => {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};

/***/ }),

/***/ 6191:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var ReactPropTypesSecret = __webpack_require__(7697);

function emptyFunction() {}

function emptyFunctionWithReset() {}

emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function () {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }

    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
    err.name = 'Invariant Violation';
    throw err;
  }

  ;
  shim.isRequired = shim;

  function getShim() {
    return shim;
  }

  ; // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.

  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,
    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,
    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };
  ReactPropTypes.PropTypes = ReactPropTypes;
  return ReactPropTypes;
};

/***/ }),

/***/ 5505:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
if (false) { var throwOnDirectAccess, ReactIs; } else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(6191)();
}

/***/ }),

/***/ 7697:
/***/ ((module) => {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
module.exports = ReactPropTypesSecret;

/***/ }),

/***/ 4430:
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  'use strict'; // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.

  /* istanbul ignore next */

  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function () {
  'use strict';

  function _isNumber(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
  }

  function _capitalize(str) {
    return str.charAt(0).toUpperCase() + str.substring(1);
  }

  function _getter(p) {
    return function () {
      return this[p];
    };
  }

  var booleanProps = ['isConstructor', 'isEval', 'isNative', 'isToplevel'];
  var numericProps = ['columnNumber', 'lineNumber'];
  var stringProps = ['fileName', 'functionName', 'source'];
  var arrayProps = ['args'];
  var props = booleanProps.concat(numericProps, stringProps, arrayProps);

  function StackFrame(obj) {
    if (!obj) return;

    for (var i = 0; i < props.length; i++) {
      if (obj[props[i]] !== undefined) {
        this['set' + _capitalize(props[i])](obj[props[i]]);
      }
    }
  }

  StackFrame.prototype = {
    getArgs: function () {
      return this.args;
    },
    setArgs: function (v) {
      if (Object.prototype.toString.call(v) !== '[object Array]') {
        throw new TypeError('Args must be an Array');
      }

      this.args = v;
    },
    getEvalOrigin: function () {
      return this.evalOrigin;
    },
    setEvalOrigin: function (v) {
      if (v instanceof StackFrame) {
        this.evalOrigin = v;
      } else if (v instanceof Object) {
        this.evalOrigin = new StackFrame(v);
      } else {
        throw new TypeError('Eval Origin must be an Object or StackFrame');
      }
    },
    toString: function () {
      var fileName = this.getFileName() || '';
      var lineNumber = this.getLineNumber() || '';
      var columnNumber = this.getColumnNumber() || '';
      var functionName = this.getFunctionName() || '';

      if (this.getIsEval()) {
        if (fileName) {
          return '[eval] (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';
        }

        return '[eval]:' + lineNumber + ':' + columnNumber;
      }

      if (functionName) {
        return functionName + ' (' + fileName + ':' + lineNumber + ':' + columnNumber + ')';
      }

      return fileName + ':' + lineNumber + ':' + columnNumber;
    }
  };

  StackFrame.fromString = function StackFrame$$fromString(str) {
    var argsStartIndex = str.indexOf('(');
    var argsEndIndex = str.lastIndexOf(')');
    var functionName = str.substring(0, argsStartIndex);
    var args = str.substring(argsStartIndex + 1, argsEndIndex).split(',');
    var locationString = str.substring(argsEndIndex + 1);

    if (locationString.indexOf('@') === 0) {
      var parts = /@(.+?)(?::(\d+))?(?::(\d+))?$/.exec(locationString, '');
      var fileName = parts[1];
      var lineNumber = parts[2];
      var columnNumber = parts[3];
    }

    return new StackFrame({
      functionName: functionName,
      args: args || undefined,
      fileName: fileName,
      lineNumber: lineNumber || undefined,
      columnNumber: columnNumber || undefined
    });
  };

  for (var i = 0; i < booleanProps.length; i++) {
    StackFrame.prototype['get' + _capitalize(booleanProps[i])] = _getter(booleanProps[i]);

    StackFrame.prototype['set' + _capitalize(booleanProps[i])] = function (p) {
      return function (v) {
        this[p] = Boolean(v);
      };
    }(booleanProps[i]);
  }

  for (var j = 0; j < numericProps.length; j++) {
    StackFrame.prototype['get' + _capitalize(numericProps[j])] = _getter(numericProps[j]);

    StackFrame.prototype['set' + _capitalize(numericProps[j])] = function (p) {
      return function (v) {
        if (!_isNumber(v)) {
          throw new TypeError(p + ' must be a Number');
        }

        this[p] = Number(v);
      };
    }(numericProps[j]);
  }

  for (var k = 0; k < stringProps.length; k++) {
    StackFrame.prototype['get' + _capitalize(stringProps[k])] = _getter(stringProps[k]);

    StackFrame.prototype['set' + _capitalize(stringProps[k])] = function (p) {
      return function (v) {
        this[p] = String(v);
      };
    }(stringProps[k]);
  }

  return StackFrame;
});

/***/ }),

/***/ 6508:
/***/ ((module) => {

/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */
module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  } // blank or null?


  if (!css || typeof css !== "string") {
    return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/"); // convert each url(...)

  /*
  This regular expression is just a way to recursively match brackets within
  a string.
  	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
     (  = Start a capturing group
       (?:  = Start a non-capturing group
           [^)(]  = Match anything that isn't a parentheses
           |  = OR
           \(  = Match a start parentheses
               (?:  = Start another non-capturing groups
                   [^)(]+  = Match anything that isn't a parentheses
                   |  = OR
                   \(  = Match a start parentheses
                       [^)(]*  = Match anything that isn't a parentheses
                   \)  = Match a end parentheses
               )  = End Group
               *\) = Match anything and then a close parens
           )  = Close non-capturing group
           *  = Match anything
        )  = Close capturing group
   \)  = Match a close parens
  	 /gi  = Get all matches, not the first.  Be case insensitive.
   */

  var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function (fullMatch, origUrl) {
    // strip quotes (if they exist)
    var unquotedOrigUrl = origUrl.trim().replace(/^"(.*)"$/, function (o, $1) {
      return $1;
    }).replace(/^'(.*)'$/, function (o, $1) {
      return $1;
    }); // already a full url? no change

    if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
      return fullMatch;
    } // convert the url to a full url


    var newUrl;

    if (unquotedOrigUrl.indexOf("//") === 0) {
      //TODO: should we add protocol?
      newUrl = unquotedOrigUrl;
    } else if (unquotedOrigUrl.indexOf("/") === 0) {
      // path should be relative to the base url
      newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
    } else {
      // path should be relative to current directory
      newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
    } // send back the fixed url(...)


    return "url(" + JSON.stringify(newUrl) + ")";
  }); // send back the fixed css

  return fixedCss;
};

/***/ }),

/***/ 5753:
/***/ ((module) => {

var candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable="false"])'];
var candidateSelector = candidateSelectors.join(',');
var matches = typeof Element === 'undefined' ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;

function tabbable(el, options) {
  options = options || {};
  var regularTabbables = [];
  var orderedTabbables = [];
  var candidates = el.querySelectorAll(candidateSelector);

  if (options.includeContainer) {
    if (matches.call(el, candidateSelector)) {
      candidates = Array.prototype.slice.apply(candidates);
      candidates.unshift(el);
    }
  }

  var i, candidate, candidateTabindex;

  for (i = 0; i < candidates.length; i++) {
    candidate = candidates[i];
    if (!isNodeMatchingSelectorTabbable(candidate)) continue;
    candidateTabindex = getTabindex(candidate);

    if (candidateTabindex === 0) {
      regularTabbables.push(candidate);
    } else {
      orderedTabbables.push({
        documentOrder: i,
        tabIndex: candidateTabindex,
        node: candidate
      });
    }
  }

  var tabbableNodes = orderedTabbables.sort(sortOrderedTabbables).map(function (a) {
    return a.node;
  }).concat(regularTabbables);
  return tabbableNodes;
}

tabbable.isTabbable = isTabbable;
tabbable.isFocusable = isFocusable;

function isNodeMatchingSelectorTabbable(node) {
  if (!isNodeMatchingSelectorFocusable(node) || isNonTabbableRadio(node) || getTabindex(node) < 0) {
    return false;
  }

  return true;
}

function isTabbable(node) {
  if (!node) throw new Error('No node provided');
  if (matches.call(node, candidateSelector) === false) return false;
  return isNodeMatchingSelectorTabbable(node);
}

function isNodeMatchingSelectorFocusable(node) {
  if (node.disabled || isHiddenInput(node) || isHidden(node)) {
    return false;
  }

  return true;
}

var focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');

function isFocusable(node) {
  if (!node) throw new Error('No node provided');
  if (matches.call(node, focusableCandidateSelector) === false) return false;
  return isNodeMatchingSelectorFocusable(node);
}

function getTabindex(node) {
  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);
  if (!isNaN(tabindexAttr)) return tabindexAttr; // Browsers do not return `tabIndex` correctly for contentEditable nodes;
  // so if they don't have a tabindex attribute specifically set, assume it's 0.

  if (isContentEditable(node)) return 0;
  return node.tabIndex;
}

function sortOrderedTabbables(a, b) {
  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;
}

function isContentEditable(node) {
  return node.contentEditable === 'true';
}

function isInput(node) {
  return node.tagName === 'INPUT';
}

function isHiddenInput(node) {
  return isInput(node) && node.type === 'hidden';
}

function isRadio(node) {
  return isInput(node) && node.type === 'radio';
}

function isNonTabbableRadio(node) {
  return isRadio(node) && !isTabbableRadio(node);
}

function getCheckedRadio(nodes) {
  for (var i = 0; i < nodes.length; i++) {
    if (nodes[i].checked) {
      return nodes[i];
    }
  }
}

function isTabbableRadio(node) {
  if (!node.name) return true; // This won't account for the edge case where you have radio groups with the same
  // in separate forms on the same page.

  var radioSet = node.ownerDocument.querySelectorAll('input[type="radio"][name="' + node.name + '"]');
  var checked = getCheckedRadio(radioSet);
  return !checked || checked === node;
}

function isHidden(node) {
  // offsetParent being null will allow detecting cases where an element is invisible or inside an invisible element,
  // as long as the element does not use position: fixed. For them, their visibility has to be checked directly as well.
  return node.offsetParent === null || getComputedStyle(node).visibility === 'hidden';
}

module.exports = tabbable;

/***/ }),

/***/ 1718:
/***/ ((module) => {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor;
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor;

    var TempCtor = function () {};

    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  };
}

/***/ }),

/***/ 715:
/***/ ((module) => {

module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';
};

/***/ }),

/***/ 3082:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/* provided dependency */ var process = __webpack_require__(3169);
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
var formatRegExp = /%[sdj%]/g;

exports.format = function (f) {
  if (!isString(f)) {
    var objects = [];

    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }

    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function (x) {
    if (x === '%%') return '%';
    if (i >= len) return x;

    switch (x) {
      case '%s':
        return String(args[i++]);

      case '%d':
        return Number(args[i++]);

      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }

      default:
        return x;
    }
  });

  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }

  return str;
}; // Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.


exports.deprecate = function (fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function () {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;

  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }

      warned = true;
    }

    return fn.apply(this, arguments);
  }

  return deprecated;
};

var debugs = {};
var debugEnviron;

exports.debuglog = function (set) {
  if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();

  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;

      debugs[set] = function () {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function () {};
    }
  }

  return debugs[set];
};
/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */

/* legacy: obj, showHidden, depth, colors*/


function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  }; // legacy...

  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];

  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  } // set default options


  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}

exports.inspect = inspect; // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics

inspect.colors = {
  'bold': [1, 22],
  'italic': [3, 23],
  'underline': [4, 24],
  'inverse': [7, 27],
  'white': [37, 39],
  'grey': [90, 39],
  'black': [30, 39],
  'blue': [34, 39],
  'cyan': [36, 39],
  'green': [32, 39],
  'magenta': [35, 39],
  'red': [31, 39],
  'yellow': [33, 39]
}; // Don't use 'blue' not visible on cmd.exe

inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};

function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str + '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}

function stylizeNoColor(str, styleType) {
  return str;
}

function arrayToHash(array) {
  var hash = {};
  array.forEach(function (val, idx) {
    hash[val] = true;
  });
  return hash;
}

function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special
  value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.
  !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);

    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }

    return ret;
  } // Primitive types cannot have properties


  var primitive = formatPrimitive(ctx, value);

  if (primitive) {
    return primitive;
  } // Look up the keys of the object.


  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  } // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx


  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  } // Some type of object without properties can be shortcutted.


  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }

    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }

    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }

    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '',
      array = false,
      braces = ['{', '}']; // Make Array say that they are Array

  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  } // Make functions say that they are functions


  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  } // Make RegExps say that they are RegExps


  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  } // Make dates with properties first say the date


  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  } // Make error with message first say the error


  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);
  var output;

  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function (key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();
  return reduceToSingleString(output, base, braces);
}

function formatPrimitive(ctx, value) {
  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');

  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '').replace(/'/g, "\\'").replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }

  if (isNumber(value)) return ctx.stylize('' + value, 'number');
  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is "object", so special case here.

  if (isNull(value)) return ctx.stylize('null', 'null');
}

function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}

function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];

  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));
    } else {
      output.push('');
    }
  }

  keys.forEach(function (key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));
    }
  });
  return output;
}

function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || {
    value: value[key]
  };

  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }

  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }

  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }

      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function (line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function (line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }

  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }

    name = JSON.stringify('' + key);

    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}

function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function (prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] + (base === '' ? '' : base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
} // NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.


function isArray(ar) {
  return Array.isArray(ar);
}

exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}

exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}

exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}

exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}

exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}

exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}

exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}

exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}

exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}

exports.isDate = isDate;

function isError(e) {
  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);
}

exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}

exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol
  typeof arg === 'undefined';
}

exports.isPrimitive = isPrimitive;
exports.isBuffer = __webpack_require__(715);

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}

var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34

function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
} // log is just a thin wrapper to console.log that prepends a timestamp


exports.log = function () {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};
/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */


exports.inherits = __webpack_require__(1718);

exports._extend = function (origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;
  var keys = Object.keys(add);
  var i = keys.length;

  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }

  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

/***/ }),

/***/ 6476:
/***/ ((module) => {



module.exports = function (Yallist) {
  Yallist.prototype[Symbol.iterator] = function* () {
    for (let walker = this.head; walker; walker = walker.next) {
      yield walker.value;
    }
  };
};

/***/ }),

/***/ 4695:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



module.exports = Yallist;
Yallist.Node = Node;
Yallist.create = Yallist;

function Yallist(list) {
  var self = this;

  if (!(self instanceof Yallist)) {
    self = new Yallist();
  }

  self.tail = null;
  self.head = null;
  self.length = 0;

  if (list && typeof list.forEach === 'function') {
    list.forEach(function (item) {
      self.push(item);
    });
  } else if (arguments.length > 0) {
    for (var i = 0, l = arguments.length; i < l; i++) {
      self.push(arguments[i]);
    }
  }

  return self;
}

Yallist.prototype.removeNode = function (node) {
  if (node.list !== this) {
    throw new Error('removing node which does not belong to this list');
  }

  var next = node.next;
  var prev = node.prev;

  if (next) {
    next.prev = prev;
  }

  if (prev) {
    prev.next = next;
  }

  if (node === this.head) {
    this.head = next;
  }

  if (node === this.tail) {
    this.tail = prev;
  }

  node.list.length--;
  node.next = null;
  node.prev = null;
  node.list = null;
  return next;
};

Yallist.prototype.unshiftNode = function (node) {
  if (node === this.head) {
    return;
  }

  if (node.list) {
    node.list.removeNode(node);
  }

  var head = this.head;
  node.list = this;
  node.next = head;

  if (head) {
    head.prev = node;
  }

  this.head = node;

  if (!this.tail) {
    this.tail = node;
  }

  this.length++;
};

Yallist.prototype.pushNode = function (node) {
  if (node === this.tail) {
    return;
  }

  if (node.list) {
    node.list.removeNode(node);
  }

  var tail = this.tail;
  node.list = this;
  node.prev = tail;

  if (tail) {
    tail.next = node;
  }

  this.tail = node;

  if (!this.head) {
    this.head = node;
  }

  this.length++;
};

Yallist.prototype.push = function () {
  for (var i = 0, l = arguments.length; i < l; i++) {
    push(this, arguments[i]);
  }

  return this.length;
};

Yallist.prototype.unshift = function () {
  for (var i = 0, l = arguments.length; i < l; i++) {
    unshift(this, arguments[i]);
  }

  return this.length;
};

Yallist.prototype.pop = function () {
  if (!this.tail) {
    return undefined;
  }

  var res = this.tail.value;
  this.tail = this.tail.prev;

  if (this.tail) {
    this.tail.next = null;
  } else {
    this.head = null;
  }

  this.length--;
  return res;
};

Yallist.prototype.shift = function () {
  if (!this.head) {
    return undefined;
  }

  var res = this.head.value;
  this.head = this.head.next;

  if (this.head) {
    this.head.prev = null;
  } else {
    this.tail = null;
  }

  this.length--;
  return res;
};

Yallist.prototype.forEach = function (fn, thisp) {
  thisp = thisp || this;

  for (var walker = this.head, i = 0; walker !== null; i++) {
    fn.call(thisp, walker.value, i, this);
    walker = walker.next;
  }
};

Yallist.prototype.forEachReverse = function (fn, thisp) {
  thisp = thisp || this;

  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {
    fn.call(thisp, walker.value, i, this);
    walker = walker.prev;
  }
};

Yallist.prototype.get = function (n) {
  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {
    // abort out of the list early if we hit a cycle
    walker = walker.next;
  }

  if (i === n && walker !== null) {
    return walker.value;
  }
};

Yallist.prototype.getReverse = function (n) {
  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {
    // abort out of the list early if we hit a cycle
    walker = walker.prev;
  }

  if (i === n && walker !== null) {
    return walker.value;
  }
};

Yallist.prototype.map = function (fn, thisp) {
  thisp = thisp || this;
  var res = new Yallist();

  for (var walker = this.head; walker !== null;) {
    res.push(fn.call(thisp, walker.value, this));
    walker = walker.next;
  }

  return res;
};

Yallist.prototype.mapReverse = function (fn, thisp) {
  thisp = thisp || this;
  var res = new Yallist();

  for (var walker = this.tail; walker !== null;) {
    res.push(fn.call(thisp, walker.value, this));
    walker = walker.prev;
  }

  return res;
};

Yallist.prototype.reduce = function (fn, initial) {
  var acc;
  var walker = this.head;

  if (arguments.length > 1) {
    acc = initial;
  } else if (this.head) {
    walker = this.head.next;
    acc = this.head.value;
  } else {
    throw new TypeError('Reduce of empty list with no initial value');
  }

  for (var i = 0; walker !== null; i++) {
    acc = fn(acc, walker.value, i);
    walker = walker.next;
  }

  return acc;
};

Yallist.prototype.reduceReverse = function (fn, initial) {
  var acc;
  var walker = this.tail;

  if (arguments.length > 1) {
    acc = initial;
  } else if (this.tail) {
    walker = this.tail.prev;
    acc = this.tail.value;
  } else {
    throw new TypeError('Reduce of empty list with no initial value');
  }

  for (var i = this.length - 1; walker !== null; i--) {
    acc = fn(acc, walker.value, i);
    walker = walker.prev;
  }

  return acc;
};

Yallist.prototype.toArray = function () {
  var arr = new Array(this.length);

  for (var i = 0, walker = this.head; walker !== null; i++) {
    arr[i] = walker.value;
    walker = walker.next;
  }

  return arr;
};

Yallist.prototype.toArrayReverse = function () {
  var arr = new Array(this.length);

  for (var i = 0, walker = this.tail; walker !== null; i++) {
    arr[i] = walker.value;
    walker = walker.prev;
  }

  return arr;
};

Yallist.prototype.slice = function (from, to) {
  to = to || this.length;

  if (to < 0) {
    to += this.length;
  }

  from = from || 0;

  if (from < 0) {
    from += this.length;
  }

  var ret = new Yallist();

  if (to < from || to < 0) {
    return ret;
  }

  if (from < 0) {
    from = 0;
  }

  if (to > this.length) {
    to = this.length;
  }

  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {
    walker = walker.next;
  }

  for (; walker !== null && i < to; i++, walker = walker.next) {
    ret.push(walker.value);
  }

  return ret;
};

Yallist.prototype.sliceReverse = function (from, to) {
  to = to || this.length;

  if (to < 0) {
    to += this.length;
  }

  from = from || 0;

  if (from < 0) {
    from += this.length;
  }

  var ret = new Yallist();

  if (to < from || to < 0) {
    return ret;
  }

  if (from < 0) {
    from = 0;
  }

  if (to > this.length) {
    to = this.length;
  }

  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {
    walker = walker.prev;
  }

  for (; walker !== null && i > from; i--, walker = walker.prev) {
    ret.push(walker.value);
  }

  return ret;
};

Yallist.prototype.splice = function (start, deleteCount
/*, ...nodes */
) {
  if (start > this.length) {
    start = this.length - 1;
  }

  if (start < 0) {
    start = this.length + start;
  }

  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {
    walker = walker.next;
  }

  var ret = [];

  for (var i = 0; walker && i < deleteCount; i++) {
    ret.push(walker.value);
    walker = this.removeNode(walker);
  }

  if (walker === null) {
    walker = this.tail;
  }

  if (walker !== this.head && walker !== this.tail) {
    walker = walker.prev;
  }

  for (var i = 2; i < arguments.length; i++) {
    walker = insert(this, walker, arguments[i]);
  }

  return ret;
};

Yallist.prototype.reverse = function () {
  var head = this.head;
  var tail = this.tail;

  for (var walker = head; walker !== null; walker = walker.prev) {
    var p = walker.prev;
    walker.prev = walker.next;
    walker.next = p;
  }

  this.head = tail;
  this.tail = head;
  return this;
};

function insert(self, node, value) {
  var inserted = node === self.head ? new Node(value, null, node, self) : new Node(value, node, node.next, self);

  if (inserted.next === null) {
    self.tail = inserted;
  }

  if (inserted.prev === null) {
    self.head = inserted;
  }

  self.length++;
  return inserted;
}

function push(self, item) {
  self.tail = new Node(item, self.tail, null, self);

  if (!self.head) {
    self.head = self.tail;
  }

  self.length++;
}

function unshift(self, item) {
  self.head = new Node(item, null, self.head, self);

  if (!self.tail) {
    self.tail = self.head;
  }

  self.length++;
}

function Node(value, prev, next, list) {
  if (!(this instanceof Node)) {
    return new Node(value, prev, next, list);
  }

  this.list = list;
  this.value = value;

  if (prev) {
    prev.next = this;
    this.prev = prev;
  } else {
    this.prev = null;
  }

  if (next) {
    next.prev = this;
    this.next = next;
  } else {
    this.next = null;
  }
}

try {
  // add if support for Symbol.iterator is present
  __webpack_require__(6476)(Yallist);
} catch (er) {}

/***/ }),

/***/ 8074:
/***/ (function(module) {

(function (global, factory) {
   true ? module.exports = factory() : 0;
})(this, function () {
  'use strict';

  function createCommonjsModule(fn, module) {
    return module = {
      exports: {}
    }, fn(module, module.exports), module.exports;
  }

  var _global = createCommonjsModule(function (module) {
    // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
    var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self // eslint-disable-next-line no-new-func
    : Function('return this')();

    if (typeof __g == 'number') {
      __g = global;
    } // eslint-disable-line no-undef

  });

  var _core = createCommonjsModule(function (module) {
    var core = module.exports = {
      version: '2.6.5'
    };

    if (typeof __e == 'number') {
      __e = core;
    } // eslint-disable-line no-undef

  });

  var _core_1 = _core.version;

  var _isObject = function (it) {
    return typeof it === 'object' ? it !== null : typeof it === 'function';
  };

  var _anObject = function (it) {
    if (!_isObject(it)) {
      throw TypeError(it + ' is not an object!');
    }

    return it;
  };

  var _fails = function (exec) {
    try {
      return !!exec();
    } catch (e) {
      return true;
    }
  }; // Thank's IE8 for his funny defineProperty


  var _descriptors = !_fails(function () {
    return Object.defineProperty({}, 'a', {
      get: function () {
        return 7;
      }
    }).a != 7;
  });

  var document = _global.document; // typeof document.createElement is 'object' in old IE

  var is = _isObject(document) && _isObject(document.createElement);

  var _domCreate = function (it) {
    return is ? document.createElement(it) : {};
  };

  var _ie8DomDefine = !_descriptors && !_fails(function () {
    return Object.defineProperty(_domCreate('div'), 'a', {
      get: function () {
        return 7;
      }
    }).a != 7;
  }); // 7.1.1 ToPrimitive(input [, PreferredType])
  // instead of the ES6 spec version, we didn't implement @@toPrimitive case
  // and the second argument - flag - preferred type is a string


  var _toPrimitive = function (it, S) {
    if (!_isObject(it)) {
      return it;
    }

    var fn, val;

    if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) {
      return val;
    }

    if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) {
      return val;
    }

    if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) {
      return val;
    }

    throw TypeError("Can't convert object to primitive value");
  };

  var dP = Object.defineProperty;
  var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
    _anObject(O);

    P = _toPrimitive(P, true);

    _anObject(Attributes);

    if (_ie8DomDefine) {
      try {
        return dP(O, P, Attributes);
      } catch (e) {
        /* empty */
      }
    }

    if ('get' in Attributes || 'set' in Attributes) {
      throw TypeError('Accessors not supported!');
    }

    if ('value' in Attributes) {
      O[P] = Attributes.value;
    }

    return O;
  };
  var _objectDp = {
    f: f
  };

  var _propertyDesc = function (bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };

  var _hide = _descriptors ? function (object, key, value) {
    return _objectDp.f(object, key, _propertyDesc(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };

  var hasOwnProperty = {}.hasOwnProperty;

  var _has = function (it, key) {
    return hasOwnProperty.call(it, key);
  };

  var id = 0;
  var px = Math.random();

  var _uid = function (key) {
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };

  var _library = false;

  var _shared = createCommonjsModule(function (module) {
    var SHARED = '__core-js_shared__';
    var store = _global[SHARED] || (_global[SHARED] = {});
    (module.exports = function (key, value) {
      return store[key] || (store[key] = value !== undefined ? value : {});
    })('versions', []).push({
      version: _core.version,
      mode: _library ? 'pure' : 'global',
      copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
    });
  });

  var _functionToString = _shared('native-function-to-string', Function.toString);

  var _redefine = createCommonjsModule(function (module) {
    var SRC = _uid('src');

    var TO_STRING = 'toString';

    var TPL = ('' + _functionToString).split(TO_STRING);

    _core.inspectSource = function (it) {
      return _functionToString.call(it);
    };

    (module.exports = function (O, key, val, safe) {
      var isFunction = typeof val == 'function';

      if (isFunction) {
        _has(val, 'name') || _hide(val, 'name', key);
      }

      if (O[key] === val) {
        return;
      }

      if (isFunction) {
        _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
      }

      if (O === _global) {
        O[key] = val;
      } else if (!safe) {
        delete O[key];

        _hide(O, key, val);
      } else if (O[key]) {
        O[key] = val;
      } else {
        _hide(O, key, val);
      } // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative

    })(Function.prototype, TO_STRING, function toString() {
      return typeof this == 'function' && this[SRC] || _functionToString.call(this);
    });
  });

  var _aFunction = function (it) {
    if (typeof it != 'function') {
      throw TypeError(it + ' is not a function!');
    }

    return it;
  }; // optional / simple context binding


  var _ctx = function (fn, that, length) {
    _aFunction(fn);

    if (that === undefined) {
      return fn;
    }

    switch (length) {
      case 1:
        return function (a) {
          return fn.call(that, a);
        };

      case 2:
        return function (a, b) {
          return fn.call(that, a, b);
        };

      case 3:
        return function (a, b, c) {
          return fn.call(that, a, b, c);
        };
    }

    return function () {
      return fn.apply(that, arguments);
    };
  };

  var PROTOTYPE = 'prototype';

  var $export = function (type, name, source) {
    var IS_FORCED = type & $export.F;
    var IS_GLOBAL = type & $export.G;
    var IS_STATIC = type & $export.S;
    var IS_PROTO = type & $export.P;
    var IS_BIND = type & $export.B;
    var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];
    var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});
    var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
    var key, own, out, exp;

    if (IS_GLOBAL) {
      source = name;
    }

    for (key in source) {
      // contains in native
      own = !IS_FORCED && target && target[key] !== undefined; // export native or passed

      out = (own ? target : source)[key]; // bind timers to global for call from export context

      exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out; // extend global

      if (target) {
        _redefine(target, key, out, type & $export.U);
      } // export


      if (exports[key] != out) {
        _hide(exports, key, exp);
      }

      if (IS_PROTO && expProto[key] != out) {
        expProto[key] = out;
      }
    }
  };

  _global.core = _core; // type bitmap

  $export.F = 1; // forced

  $export.G = 2; // global

  $export.S = 4; // static

  $export.P = 8; // proto

  $export.B = 16; // bind

  $export.W = 32; // wrap

  $export.U = 64; // safe

  $export.R = 128; // real proto method for `library`

  var _export = $export; // 7.1.4 ToInteger

  var ceil = Math.ceil;
  var floor = Math.floor;

  var _toInteger = function (it) {
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  }; // 7.2.1 RequireObjectCoercible(argument)


  var _defined = function (it) {
    if (it == undefined) {
      throw TypeError("Can't call method on  " + it);
    }

    return it;
  }; // true  -> String#at
  // false -> String#codePointAt


  var _stringAt = function (TO_STRING) {
    return function (that, pos) {
      var s = String(_defined(that));

      var i = _toInteger(pos);

      var l = s.length;
      var a, b;

      if (i < 0 || i >= l) {
        return TO_STRING ? '' : undefined;
      }

      a = s.charCodeAt(i);
      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
    };
  };

  var $at = _stringAt(false);

  _export(_export.P, 'String', {
    // 21.1.3.3 String.prototype.codePointAt(pos)
    codePointAt: function codePointAt(pos) {
      return $at(this, pos);
    }
  });

  var codePointAt = _core.String.codePointAt;
  var max = Math.max;
  var min = Math.min;

  var _toAbsoluteIndex = function (index, length) {
    index = _toInteger(index);
    return index < 0 ? max(index + length, 0) : min(index, length);
  };

  var fromCharCode = String.fromCharCode;
  var $fromCodePoint = String.fromCodePoint; // length should be 1, old FF problem

  _export(_export.S + _export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
    // 21.1.2.2 String.fromCodePoint(...codePoints)
    fromCodePoint: function fromCodePoint(x) {
      var arguments$1 = arguments; // eslint-disable-line no-unused-vars

      var res = [];
      var aLen = arguments.length;
      var i = 0;
      var code;

      while (aLen > i) {
        code = +arguments$1[i++];

        if (_toAbsoluteIndex(code, 0x10ffff) !== code) {
          throw RangeError(code + ' is not a valid code point');
        }

        res.push(code < 0x10000 ? fromCharCode(code) : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00));
      }

      return res.join('');
    }
  });

  var fromCodePoint = _core.String.fromCodePoint; // This is a generated file. Do not edit.

  var Space_Separator = /[\u1680\u2000-\u200A\u202F\u205F\u3000]/;
  var ID_Start = /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/;
  var ID_Continue = /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09FC\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF9\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDE00-\uDE3E\uDE47\uDE50-\uDE83\uDE86-\uDE99\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/;
  var unicode = {
    Space_Separator: Space_Separator,
    ID_Start: ID_Start,
    ID_Continue: ID_Continue
  };
  var util = {
    isSpaceSeparator: function isSpaceSeparator(c) {
      return typeof c === 'string' && unicode.Space_Separator.test(c);
    },
    isIdStartChar: function isIdStartChar(c) {
      return typeof c === 'string' && (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c === '$' || c === '_' || unicode.ID_Start.test(c));
    },
    isIdContinueChar: function isIdContinueChar(c) {
      return typeof c === 'string' && (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z' || c >= '0' && c <= '9' || c === '$' || c === '_' || c === '\u200C' || c === '\u200D' || unicode.ID_Continue.test(c));
    },
    isDigit: function isDigit(c) {
      return typeof c === 'string' && /[0-9]/.test(c);
    },
    isHexDigit: function isHexDigit(c) {
      return typeof c === 'string' && /[0-9A-Fa-f]/.test(c);
    }
  };
  var source;
  var parseState;
  var stack;
  var pos;
  var line;
  var column;
  var token;
  var key;
  var root;

  var parse = function parse(text, reviver) {
    source = String(text);
    parseState = 'start';
    stack = [];
    pos = 0;
    line = 1;
    column = 0;
    token = undefined;
    key = undefined;
    root = undefined;

    do {
      token = lex(); // This code is unreachable.
      // if (!parseStates[parseState]) {
      //     throw invalidParseState()
      // }

      parseStates[parseState]();
    } while (token.type !== 'eof');

    if (typeof reviver === 'function') {
      return internalize({
        '': root
      }, '', reviver);
    }

    return root;
  };

  function internalize(holder, name, reviver) {
    var value = holder[name];

    if (value != null && typeof value === 'object') {
      for (var key in value) {
        var replacement = internalize(value, key, reviver);

        if (replacement === undefined) {
          delete value[key];
        } else {
          value[key] = replacement;
        }
      }
    }

    return reviver.call(holder, name, value);
  }

  var lexState;
  var buffer;
  var doubleQuote;
  var sign;
  var c;

  function lex() {
    lexState = 'default';
    buffer = '';
    doubleQuote = false;
    sign = 1;

    for (;;) {
      c = peek(); // This code is unreachable.
      // if (!lexStates[lexState]) {
      //     throw invalidLexState(lexState)
      // }

      var token = lexStates[lexState]();

      if (token) {
        return token;
      }
    }
  }

  function peek() {
    if (source[pos]) {
      return String.fromCodePoint(source.codePointAt(pos));
    }
  }

  function read() {
    var c = peek();

    if (c === '\n') {
      line++;
      column = 0;
    } else if (c) {
      column += c.length;
    } else {
      column++;
    }

    if (c) {
      pos += c.length;
    }

    return c;
  }

  var lexStates = {
    default: function default$1() {
      switch (c) {
        case '\t':
        case '\v':
        case '\f':
        case ' ':
        case '\u00A0':
        case '\uFEFF':
        case '\n':
        case '\r':
        case '\u2028':
        case '\u2029':
          read();
          return;

        case '/':
          read();
          lexState = 'comment';
          return;

        case undefined:
          read();
          return newToken('eof');
      }

      if (util.isSpaceSeparator(c)) {
        read();
        return;
      } // This code is unreachable.
      // if (!lexStates[parseState]) {
      //     throw invalidLexState(parseState)
      // }


      return lexStates[parseState]();
    },
    comment: function comment() {
      switch (c) {
        case '*':
          read();
          lexState = 'multiLineComment';
          return;

        case '/':
          read();
          lexState = 'singleLineComment';
          return;
      }

      throw invalidChar(read());
    },
    multiLineComment: function multiLineComment() {
      switch (c) {
        case '*':
          read();
          lexState = 'multiLineCommentAsterisk';
          return;

        case undefined:
          throw invalidChar(read());
      }

      read();
    },
    multiLineCommentAsterisk: function multiLineCommentAsterisk() {
      switch (c) {
        case '*':
          read();
          return;

        case '/':
          read();
          lexState = 'default';
          return;

        case undefined:
          throw invalidChar(read());
      }

      read();
      lexState = 'multiLineComment';
    },
    singleLineComment: function singleLineComment() {
      switch (c) {
        case '\n':
        case '\r':
        case '\u2028':
        case '\u2029':
          read();
          lexState = 'default';
          return;

        case undefined:
          read();
          return newToken('eof');
      }

      read();
    },
    value: function value() {
      switch (c) {
        case '{':
        case '[':
          return newToken('punctuator', read());

        case 'n':
          read();
          literal('ull');
          return newToken('null', null);

        case 't':
          read();
          literal('rue');
          return newToken('boolean', true);

        case 'f':
          read();
          literal('alse');
          return newToken('boolean', false);

        case '-':
        case '+':
          if (read() === '-') {
            sign = -1;
          }

          lexState = 'sign';
          return;

        case '.':
          buffer = read();
          lexState = 'decimalPointLeading';
          return;

        case '0':
          buffer = read();
          lexState = 'zero';
          return;

        case '1':
        case '2':
        case '3':
        case '4':
        case '5':
        case '6':
        case '7':
        case '8':
        case '9':
          buffer = read();
          lexState = 'decimalInteger';
          return;

        case 'I':
          read();
          literal('nfinity');
          return newToken('numeric', Infinity);

        case 'N':
          read();
          literal('aN');
          return newToken('numeric', NaN);

        case '"':
        case "'":
          doubleQuote = read() === '"';
          buffer = '';
          lexState = 'string';
          return;
      }

      throw invalidChar(read());
    },
    identifierNameStartEscape: function identifierNameStartEscape() {
      if (c !== 'u') {
        throw invalidChar(read());
      }

      read();
      var u = unicodeEscape();

      switch (u) {
        case '$':
        case '_':
          break;

        default:
          if (!util.isIdStartChar(u)) {
            throw invalidIdentifier();
          }

          break;
      }

      buffer += u;
      lexState = 'identifierName';
    },
    identifierName: function identifierName() {
      switch (c) {
        case '$':
        case '_':
        case '\u200C':
        case '\u200D':
          buffer += read();
          return;

        case '\\':
          read();
          lexState = 'identifierNameEscape';
          return;
      }

      if (util.isIdContinueChar(c)) {
        buffer += read();
        return;
      }

      return newToken('identifier', buffer);
    },
    identifierNameEscape: function identifierNameEscape() {
      if (c !== 'u') {
        throw invalidChar(read());
      }

      read();
      var u = unicodeEscape();

      switch (u) {
        case '$':
        case '_':
        case '\u200C':
        case '\u200D':
          break;

        default:
          if (!util.isIdContinueChar(u)) {
            throw invalidIdentifier();
          }

          break;
      }

      buffer += u;
      lexState = 'identifierName';
    },
    sign: function sign$1() {
      switch (c) {
        case '.':
          buffer = read();
          lexState = 'decimalPointLeading';
          return;

        case '0':
          buffer = read();
          lexState = 'zero';
          return;

        case '1':
        case '2':
        case '3':
        case '4':
        case '5':
        case '6':
        case '7':
        case '8':
        case '9':
          buffer = read();
          lexState = 'decimalInteger';
          return;

        case 'I':
          read();
          literal('nfinity');
          return newToken('numeric', sign * Infinity);

        case 'N':
          read();
          literal('aN');
          return newToken('numeric', NaN);
      }

      throw invalidChar(read());
    },
    zero: function zero() {
      switch (c) {
        case '.':
          buffer += read();
          lexState = 'decimalPoint';
          return;

        case 'e':
        case 'E':
          buffer += read();
          lexState = 'decimalExponent';
          return;

        case 'x':
        case 'X':
          buffer += read();
          lexState = 'hexadecimal';
          return;
      }

      return newToken('numeric', sign * 0);
    },
    decimalInteger: function decimalInteger() {
      switch (c) {
        case '.':
          buffer += read();
          lexState = 'decimalPoint';
          return;

        case 'e':
        case 'E':
          buffer += read();
          lexState = 'decimalExponent';
          return;
      }

      if (util.isDigit(c)) {
        buffer += read();
        return;
      }

      return newToken('numeric', sign * Number(buffer));
    },
    decimalPointLeading: function decimalPointLeading() {
      if (util.isDigit(c)) {
        buffer += read();
        lexState = 'decimalFraction';
        return;
      }

      throw invalidChar(read());
    },
    decimalPoint: function decimalPoint() {
      switch (c) {
        case 'e':
        case 'E':
          buffer += read();
          lexState = 'decimalExponent';
          return;
      }

      if (util.isDigit(c)) {
        buffer += read();
        lexState = 'decimalFraction';
        return;
      }

      return newToken('numeric', sign * Number(buffer));
    },
    decimalFraction: function decimalFraction() {
      switch (c) {
        case 'e':
        case 'E':
          buffer += read();
          lexState = 'decimalExponent';
          return;
      }

      if (util.isDigit(c)) {
        buffer += read();
        return;
      }

      return newToken('numeric', sign * Number(buffer));
    },
    decimalExponent: function decimalExponent() {
      switch (c) {
        case '+':
        case '-':
          buffer += read();
          lexState = 'decimalExponentSign';
          return;
      }

      if (util.isDigit(c)) {
        buffer += read();
        lexState = 'decimalExponentInteger';
        return;
      }

      throw invalidChar(read());
    },
    decimalExponentSign: function decimalExponentSign() {
      if (util.isDigit(c)) {
        buffer += read();
        lexState = 'decimalExponentInteger';
        return;
      }

      throw invalidChar(read());
    },
    decimalExponentInteger: function decimalExponentInteger() {
      if (util.isDigit(c)) {
        buffer += read();
        return;
      }

      return newToken('numeric', sign * Number(buffer));
    },
    hexadecimal: function hexadecimal() {
      if (util.isHexDigit(c)) {
        buffer += read();
        lexState = 'hexadecimalInteger';
        return;
      }

      throw invalidChar(read());
    },
    hexadecimalInteger: function hexadecimalInteger() {
      if (util.isHexDigit(c)) {
        buffer += read();
        return;
      }

      return newToken('numeric', sign * Number(buffer));
    },
    string: function string() {
      switch (c) {
        case '\\':
          read();
          buffer += escape();
          return;

        case '"':
          if (doubleQuote) {
            read();
            return newToken('string', buffer);
          }

          buffer += read();
          return;

        case "'":
          if (!doubleQuote) {
            read();
            return newToken('string', buffer);
          }

          buffer += read();
          return;

        case '\n':
        case '\r':
          throw invalidChar(read());

        case '\u2028':
        case '\u2029':
          separatorChar(c);
          break;

        case undefined:
          throw invalidChar(read());
      }

      buffer += read();
    },
    start: function start() {
      switch (c) {
        case '{':
        case '[':
          return newToken('punctuator', read());
        // This code is unreachable since the default lexState handles eof.
        // case undefined:
        //     return newToken('eof')
      }

      lexState = 'value';
    },
    beforePropertyName: function beforePropertyName() {
      switch (c) {
        case '$':
        case '_':
          buffer = read();
          lexState = 'identifierName';
          return;

        case '\\':
          read();
          lexState = 'identifierNameStartEscape';
          return;

        case '}':
          return newToken('punctuator', read());

        case '"':
        case "'":
          doubleQuote = read() === '"';
          lexState = 'string';
          return;
      }

      if (util.isIdStartChar(c)) {
        buffer += read();
        lexState = 'identifierName';
        return;
      }

      throw invalidChar(read());
    },
    afterPropertyName: function afterPropertyName() {
      if (c === ':') {
        return newToken('punctuator', read());
      }

      throw invalidChar(read());
    },
    beforePropertyValue: function beforePropertyValue() {
      lexState = 'value';
    },
    afterPropertyValue: function afterPropertyValue() {
      switch (c) {
        case ',':
        case '}':
          return newToken('punctuator', read());
      }

      throw invalidChar(read());
    },
    beforeArrayValue: function beforeArrayValue() {
      if (c === ']') {
        return newToken('punctuator', read());
      }

      lexState = 'value';
    },
    afterArrayValue: function afterArrayValue() {
      switch (c) {
        case ',':
        case ']':
          return newToken('punctuator', read());
      }

      throw invalidChar(read());
    },
    end: function end() {
      // This code is unreachable since it's handled by the default lexState.
      // if (c === undefined) {
      //     read()
      //     return newToken('eof')
      // }
      throw invalidChar(read());
    }
  };

  function newToken(type, value) {
    return {
      type: type,
      value: value,
      line: line,
      column: column
    };
  }

  function literal(s) {
    for (var i = 0, list = s; i < list.length; i += 1) {
      var c = list[i];
      var p = peek();

      if (p !== c) {
        throw invalidChar(read());
      }

      read();
    }
  }

  function escape() {
    var c = peek();

    switch (c) {
      case 'b':
        read();
        return '\b';

      case 'f':
        read();
        return '\f';

      case 'n':
        read();
        return '\n';

      case 'r':
        read();
        return '\r';

      case 't':
        read();
        return '\t';

      case 'v':
        read();
        return '\v';

      case '0':
        read();

        if (util.isDigit(peek())) {
          throw invalidChar(read());
        }

        return '\0';

      case 'x':
        read();
        return hexEscape();

      case 'u':
        read();
        return unicodeEscape();

      case '\n':
      case '\u2028':
      case '\u2029':
        read();
        return '';

      case '\r':
        read();

        if (peek() === '\n') {
          read();
        }

        return '';

      case '1':
      case '2':
      case '3':
      case '4':
      case '5':
      case '6':
      case '7':
      case '8':
      case '9':
        throw invalidChar(read());

      case undefined:
        throw invalidChar(read());
    }

    return read();
  }

  function hexEscape() {
    var buffer = '';
    var c = peek();

    if (!util.isHexDigit(c)) {
      throw invalidChar(read());
    }

    buffer += read();
    c = peek();

    if (!util.isHexDigit(c)) {
      throw invalidChar(read());
    }

    buffer += read();
    return String.fromCodePoint(parseInt(buffer, 16));
  }

  function unicodeEscape() {
    var buffer = '';
    var count = 4;

    while (count-- > 0) {
      var c = peek();

      if (!util.isHexDigit(c)) {
        throw invalidChar(read());
      }

      buffer += read();
    }

    return String.fromCodePoint(parseInt(buffer, 16));
  }

  var parseStates = {
    start: function start() {
      if (token.type === 'eof') {
        throw invalidEOF();
      }

      push();
    },
    beforePropertyName: function beforePropertyName() {
      switch (token.type) {
        case 'identifier':
        case 'string':
          key = token.value;
          parseState = 'afterPropertyName';
          return;

        case 'punctuator':
          // This code is unreachable since it's handled by the lexState.
          // if (token.value !== '}') {
          //     throw invalidToken()
          // }
          pop();
          return;

        case 'eof':
          throw invalidEOF();
      } // This code is unreachable since it's handled by the lexState.
      // throw invalidToken()

    },
    afterPropertyName: function afterPropertyName() {
      // This code is unreachable since it's handled by the lexState.
      // if (token.type !== 'punctuator' || token.value !== ':') {
      //     throw invalidToken()
      // }
      if (token.type === 'eof') {
        throw invalidEOF();
      }

      parseState = 'beforePropertyValue';
    },
    beforePropertyValue: function beforePropertyValue() {
      if (token.type === 'eof') {
        throw invalidEOF();
      }

      push();
    },
    beforeArrayValue: function beforeArrayValue() {
      if (token.type === 'eof') {
        throw invalidEOF();
      }

      if (token.type === 'punctuator' && token.value === ']') {
        pop();
        return;
      }

      push();
    },
    afterPropertyValue: function afterPropertyValue() {
      // This code is unreachable since it's handled by the lexState.
      // if (token.type !== 'punctuator') {
      //     throw invalidToken()
      // }
      if (token.type === 'eof') {
        throw invalidEOF();
      }

      switch (token.value) {
        case ',':
          parseState = 'beforePropertyName';
          return;

        case '}':
          pop();
      } // This code is unreachable since it's handled by the lexState.
      // throw invalidToken()

    },
    afterArrayValue: function afterArrayValue() {
      // This code is unreachable since it's handled by the lexState.
      // if (token.type !== 'punctuator') {
      //     throw invalidToken()
      // }
      if (token.type === 'eof') {
        throw invalidEOF();
      }

      switch (token.value) {
        case ',':
          parseState = 'beforeArrayValue';
          return;

        case ']':
          pop();
      } // This code is unreachable since it's handled by the lexState.
      // throw invalidToken()

    },
    end: function end() {// This code is unreachable since it's handled by the lexState.
      // if (token.type !== 'eof') {
      //     throw invalidToken()
      // }
    }
  };

  function push() {
    var value;

    switch (token.type) {
      case 'punctuator':
        switch (token.value) {
          case '{':
            value = {};
            break;

          case '[':
            value = [];
            break;
        }

        break;

      case 'null':
      case 'boolean':
      case 'numeric':
      case 'string':
        value = token.value;
        break;
      // This code is unreachable.
      // default:
      //     throw invalidToken()
    }

    if (root === undefined) {
      root = value;
    } else {
      var parent = stack[stack.length - 1];

      if (Array.isArray(parent)) {
        parent.push(value);
      } else {
        parent[key] = value;
      }
    }

    if (value !== null && typeof value === 'object') {
      stack.push(value);

      if (Array.isArray(value)) {
        parseState = 'beforeArrayValue';
      } else {
        parseState = 'beforePropertyName';
      }
    } else {
      var current = stack[stack.length - 1];

      if (current == null) {
        parseState = 'end';
      } else if (Array.isArray(current)) {
        parseState = 'afterArrayValue';
      } else {
        parseState = 'afterPropertyValue';
      }
    }
  }

  function pop() {
    stack.pop();
    var current = stack[stack.length - 1];

    if (current == null) {
      parseState = 'end';
    } else if (Array.isArray(current)) {
      parseState = 'afterArrayValue';
    } else {
      parseState = 'afterPropertyValue';
    }
  } // This code is unreachable.
  // function invalidParseState () {
  //     return new Error(`JSON5: invalid parse state '${parseState}'`)
  // }
  // This code is unreachable.
  // function invalidLexState (state) {
  //     return new Error(`JSON5: invalid lex state '${state}'`)
  // }


  function invalidChar(c) {
    if (c === undefined) {
      return syntaxError("JSON5: invalid end of input at " + line + ":" + column);
    }

    return syntaxError("JSON5: invalid character '" + formatChar(c) + "' at " + line + ":" + column);
  }

  function invalidEOF() {
    return syntaxError("JSON5: invalid end of input at " + line + ":" + column);
  } // This code is unreachable.
  // function invalidToken () {
  //     if (token.type === 'eof') {
  //         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)
  //     }
  //     const c = String.fromCodePoint(token.value.codePointAt(0))
  //     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)
  // }


  function invalidIdentifier() {
    column -= 5;
    return syntaxError("JSON5: invalid identifier character at " + line + ":" + column);
  }

  function separatorChar(c) {
    console.warn("JSON5: '" + formatChar(c) + "' in strings is not valid ECMAScript; consider escaping");
  }

  function formatChar(c) {
    var replacements = {
      "'": "\\'",
      '"': '\\"',
      '\\': '\\\\',
      '\b': '\\b',
      '\f': '\\f',
      '\n': '\\n',
      '\r': '\\r',
      '\t': '\\t',
      '\v': '\\v',
      '\0': '\\0',
      '\u2028': '\\u2028',
      '\u2029': '\\u2029'
    };

    if (replacements[c]) {
      return replacements[c];
    }

    if (c < ' ') {
      var hexString = c.charCodeAt(0).toString(16);
      return '\\x' + ('00' + hexString).substring(hexString.length);
    }

    return c;
  }

  function syntaxError(message) {
    var err = new SyntaxError(message);
    err.lineNumber = line;
    err.columnNumber = column;
    return err;
  }

  var stringify = function stringify(value, replacer, space) {
    var stack = [];
    var indent = '';
    var propertyList;
    var replacerFunc;
    var gap = '';
    var quote;

    if (replacer != null && typeof replacer === 'object' && !Array.isArray(replacer)) {
      space = replacer.space;
      quote = replacer.quote;
      replacer = replacer.replacer;
    }

    if (typeof replacer === 'function') {
      replacerFunc = replacer;
    } else if (Array.isArray(replacer)) {
      propertyList = [];

      for (var i = 0, list = replacer; i < list.length; i += 1) {
        var v = list[i];
        var item = void 0;

        if (typeof v === 'string') {
          item = v;
        } else if (typeof v === 'number' || v instanceof String || v instanceof Number) {
          item = String(v);
        }

        if (item !== undefined && propertyList.indexOf(item) < 0) {
          propertyList.push(item);
        }
      }
    }

    if (space instanceof Number) {
      space = Number(space);
    } else if (space instanceof String) {
      space = String(space);
    }

    if (typeof space === 'number') {
      if (space > 0) {
        space = Math.min(10, Math.floor(space));
        gap = '          '.substr(0, space);
      }
    } else if (typeof space === 'string') {
      gap = space.substr(0, 10);
    }

    return serializeProperty('', {
      '': value
    });

    function serializeProperty(key, holder) {
      var value = holder[key];

      if (value != null) {
        if (typeof value.toJSON5 === 'function') {
          value = value.toJSON5(key);
        } else if (typeof value.toJSON === 'function') {
          value = value.toJSON(key);
        }
      }

      if (replacerFunc) {
        value = replacerFunc.call(holder, key, value);
      }

      if (value instanceof Number) {
        value = Number(value);
      } else if (value instanceof String) {
        value = String(value);
      } else if (value instanceof Boolean) {
        value = value.valueOf();
      }

      switch (value) {
        case null:
          return 'null';

        case true:
          return 'true';

        case false:
          return 'false';
      }

      if (typeof value === 'string') {
        return quoteString(value, false);
      }

      if (typeof value === 'number') {
        return String(value);
      }

      if (typeof value === 'object') {
        return Array.isArray(value) ? serializeArray(value) : serializeObject(value);
      }

      return undefined;
    }

    function quoteString(value) {
      var quotes = {
        "'": 0.1,
        '"': 0.2
      };
      var replacements = {
        "'": "\\'",
        '"': '\\"',
        '\\': '\\\\',
        '\b': '\\b',
        '\f': '\\f',
        '\n': '\\n',
        '\r': '\\r',
        '\t': '\\t',
        '\v': '\\v',
        '\0': '\\0',
        '\u2028': '\\u2028',
        '\u2029': '\\u2029'
      };
      var product = '';

      for (var i = 0; i < value.length; i++) {
        var c = value[i];

        switch (c) {
          case "'":
          case '"':
            quotes[c]++;
            product += c;
            continue;

          case '\0':
            if (util.isDigit(value[i + 1])) {
              product += '\\x00';
              continue;
            }

        }

        if (replacements[c]) {
          product += replacements[c];
          continue;
        }

        if (c < ' ') {
          var hexString = c.charCodeAt(0).toString(16);
          product += '\\x' + ('00' + hexString).substring(hexString.length);
          continue;
        }

        product += c;
      }

      var quoteChar = quote || Object.keys(quotes).reduce(function (a, b) {
        return quotes[a] < quotes[b] ? a : b;
      });
      product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);
      return quoteChar + product + quoteChar;
    }

    function serializeObject(value) {
      if (stack.indexOf(value) >= 0) {
        throw TypeError('Converting circular structure to JSON5');
      }

      stack.push(value);
      var stepback = indent;
      indent = indent + gap;
      var keys = propertyList || Object.keys(value);
      var partial = [];

      for (var i = 0, list = keys; i < list.length; i += 1) {
        var key = list[i];
        var propertyString = serializeProperty(key, value);

        if (propertyString !== undefined) {
          var member = serializeKey(key) + ':';

          if (gap !== '') {
            member += ' ';
          }

          member += propertyString;
          partial.push(member);
        }
      }

      var final;

      if (partial.length === 0) {
        final = '{}';
      } else {
        var properties;

        if (gap === '') {
          properties = partial.join(',');
          final = '{' + properties + '}';
        } else {
          var separator = ',\n' + indent;
          properties = partial.join(separator);
          final = '{\n' + indent + properties + ',\n' + stepback + '}';
        }
      }

      stack.pop();
      indent = stepback;
      return final;
    }

    function serializeKey(key) {
      if (key.length === 0) {
        return quoteString(key, true);
      }

      var firstChar = String.fromCodePoint(key.codePointAt(0));

      if (!util.isIdStartChar(firstChar)) {
        return quoteString(key, true);
      }

      for (var i = firstChar.length; i < key.length; i++) {
        if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {
          return quoteString(key, true);
        }
      }

      return key;
    }

    function serializeArray(value) {
      if (stack.indexOf(value) >= 0) {
        throw TypeError('Converting circular structure to JSON5');
      }

      stack.push(value);
      var stepback = indent;
      indent = indent + gap;
      var partial = [];

      for (var i = 0; i < value.length; i++) {
        var propertyString = serializeProperty(String(i), value);
        partial.push(propertyString !== undefined ? propertyString : 'null');
      }

      var final;

      if (partial.length === 0) {
        final = '[]';
      } else {
        if (gap === '') {
          var properties = partial.join(',');
          final = '[' + properties + ']';
        } else {
          var separator = ',\n' + indent;
          var properties$1 = partial.join(separator);
          final = '[\n' + indent + properties$1 + ',\n' + stepback + ']';
        }
      }

      stack.pop();
      indent = stepback;
      return final;
    }
  };

  var JSON5 = {
    parse: parse,
    stringify: stringify
  };
  var lib = JSON5;
  var es5 = lib;
  return es5;
});

/***/ }),

/***/ 5566:
/***/ ((module) => {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var runtime = function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.

  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }

  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function (obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.

    generator._invoke = makeInvokeMethod(innerFn, self, context);
    return generator;
  }

  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.

  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.

  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.

  function Generator() {}

  function GeneratorFunction() {}

  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.


  var IteratorPrototype = {};

  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"); // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
    // do is to check its .name property.
    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  exports.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }

    genFun.prototype = Object.create(Gp);
    return genFun;
  }; // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.


  exports.awrap = function (arg) {
    return {
      __await: arg
    };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);

      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;

        if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function (unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function (error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = // If enqueue has been called before, then we want to wait until
      // all previous Promises have been resolved before calling invoke,
      // so that results are always delivered in the correct order. If
      // enqueue has not been called before, then it is important to
      // call invoke immediately, without waiting on a callback to fire,
      // so that the async generator function has the opportunity to do
      // any necessary setup in a predictable way. This predictability
      // is why the Promise constructor synchronously invokes its
      // executor callback, and why async functions synchronously
      // execute code before the first await. Since we implement simple
      // async functions in terms of async generators, it is especially
      // important to get this right, even though it requires care.
      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
      // invocations of the iterator.
      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    } // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).


    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);

  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };

  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.

  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
    : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;
    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        } // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume


        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;

        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);

          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;
        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);
        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;
        var record = tryCatch(innerFn, self, context);

        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };
        } else if (record.type === "throw") {
          state = GenStateCompleted; // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.

          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  } // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.


  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];

    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (!info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).

      context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.

      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }
    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    } // The delegate iterator is finished, so forget it and continue with
    // the outer generator.


    context.delegate = null;
    return ContinueSentinel;
  } // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.


  defineIteratorMethods(Gp);
  define(Gp, toStringTagSymbol, "Generator"); // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.

  Gp[iteratorSymbol] = function () {
    return this;
  };

  Gp.toString = function () {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{
      tryLoc: "root"
    }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function (object) {
    var keys = [];

    for (var key in object) {
      keys.push(key);
    }

    keys.reverse(); // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.

    return function next() {
      while (keys.length) {
        var key = keys.pop();

        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      } // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.


      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];

      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;
          return next;
        };

        return next.next = next;
      }
    } // Return an iterator with no values.


    return {
      next: doneResult
    };
  }

  exports.values = values;

  function doneResult() {
    return {
      value: undefined,
      done: true
    };
  }

  Context.prototype = {
    constructor: Context,
    reset: function (skipTempReset) {
      this.prev = 0;
      this.next = 0; // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;
      this.method = "next";
      this.arg = undefined;
      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },
    stop: function () {
      this.done = true;
      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;

      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },
    dispatchException: function (exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;

      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },
    abrupt: function (type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },
    complete: function (record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },
    finish: function (finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },
    "catch": function (tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;

          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }

          return thrown;
        }
      } // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.


      throw new Error("illegal catch attempt");
    },
    delegateYield: function (iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  }; // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.

  return exports;
}( // If this script is executing as a CommonJS module, use module.exports
// as the regeneratorRuntime namespace. Otherwise create a new empty
// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
 true ? module.exports : 0);

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}

/***/ }),

/***/ 1857:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, "/* Used to detect in JavaScript if apps have loaded styles or not. */\n:root {\n  --reach-menu-button: 1;\n}\n\n[data-reach-menu] {\n  position: relative;\n}\n\n[data-reach-menu-popover] {\n  display: block;\n  position: absolute;\n}\n\n[data-reach-menu-popover][hidden] {\n  display: none;\n}\n\n[data-reach-menu-list],\n[data-reach-menu-items] {\n  display: block;\n  white-space: nowrap;\n  border: solid 1px hsla(0, 0%, 0%, 0.25);\n  background: hsla(0, 100%, 100%, 0.99);\n  outline: none;\n  padding: 1rem 0;\n  font-size: 85%;\n}\n\n[data-reach-menu-item] {\n  display: block;\n  user-select: none;\n}\n\n/*\n The dom structure of a MenuLink is reach-menu-item > a,\n so to target all items we can use `data-reach-menu-item`\n*/\n[data-reach-menu-item] {\n  /*\n    These are styled in one rule instead of something like a[data-reach-menu-item]\n    and li[data-reach-menu-item] so that apps don't have to fight specificity and\n    can style both li and a menu items with one rule,\n    ie: `[data-selected] { background: red; }`.\n    Otherwise they'd have to define two styles, one for a and one for li.\n  */\n\n  /* reach-menu-item */\n  cursor: pointer;\n\n  /* a */\n  display: block;\n  color: inherit;\n  font: inherit;\n  text-decoration: initial;\n\n  /* both */\n  padding: 5px 20px;\n}\n\n/* pseudo pseudo selector */\n[data-reach-menu-item][data-selected] {\n  background: hsl(211, 81%, 36%);\n  color: white;\n  outline: none;\n}\n\n[data-reach-menu-item][aria-disabled] {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n", ""]);

// exports


/***/ }),

/***/ 800:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ":root {\n  --reach-tooltip: 1;\n}\n\n[data-reach-tooltip] {\n  z-index: 1;\n  pointer-events: none;\n  position: absolute;\n  padding: 0.25em 0.5em;\n  box-shadow: 2px 2px 10px hsla(0, 0%, 0%, 0.1);\n  white-space: nowrap;\n  font-size: 85%;\n  background: #f0f0f0;\n  color: #444;\n  border: solid 1px #ccc;\n}\n", ""]);

// exports


/***/ }),

/***/ 5546:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".ContextMenu___3Zn8W {\n  position: absolute;\n  background-color: var(--color-context-background);\n  box-shadow: 1px 1px 2px var(--color-shadow);\n  border-radius: 0.25rem;\n  overflow: hidden;\n  z-index: 10000002;\n  user-select: none;\n}\n", ""]);

// exports
exports.locals = {
	"ContextMenu": "ContextMenu___3Zn8W"
};

/***/ }),

/***/ 1914:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".ContextMenuItem___21C_r {\n  display: flex;\n  align-items: center;\n  color: var(--color-context-text);\n  padding: 0.5rem 0.75rem;\n  cursor: default;\n  border-top: 1px solid var(--color-context-border);\n  font-family: var(--font-family-sans);\n  font-size: var(--font-size-sans-normal);\n}\n\n.ContextMenuItem___21C_r:first-of-type {\n  border-top: none;\n}\n\n.ContextMenuItem___21C_r:hover,\n.ContextMenuItem___21C_r:focus {\n  outline: 0;\n  background-color: var(--color-context-background-hover);\n}\n\n.ContextMenuItem___21C_r:active {\n  background-color: var(--color-context-background-selected);\n  color: var(--color-context-text-selected);\n}\n", ""]);

// exports
exports.locals = {
	"ContextMenuItem": "ContextMenuItem___21C_r"
};

/***/ }),

/***/ 2439:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Button___1-PiG {\n  border: none;\n  background: var(--color-button-background);\n  color: var(--color-button);\n  padding: 0;\n  border-radius: 0.25rem;\n  flex: 0 0 auto;\n  cursor: pointer;\n}\n.ButtonContent___2mZ9q {\n  display: inline-flex;\n  align-items: center;\n  border-radius: 0.25rem;\n  padding: 0.25rem;\n}\n\n.Button___1-PiG:hover {\n  color: var(--color-button-hover);\n}\n.Button___1-PiG:active {\n  color: var(--color-button-focus);\n  outline: none;\n}\n.Button___1-PiG:focus,\n.ButtonContent___2mZ9q:focus {\n  outline: none;\n}\n\n.Button___1-PiG:focus > .ButtonContent___2mZ9q {\n  background: var(--color-button-background-focus);\n}\n\n.Button___1-PiG:disabled,\n.Button___1-PiG:disabled:active {\n  background: var(--color-button-background);\n  color: var(--color-button-disabled);\n  cursor: default;\n}\n", ""]);

// exports
exports.locals = {
	"Button": "Button___1-PiG",
	"ButtonContent": "ButtonContent___2mZ9q"
};

/***/ }),

/***/ 3499:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".ButtonIcon___1AgYV {\n  width: 1rem;\n  height: 1rem;\n  fill: currentColor;\n}\n", ""]);

// exports
exports.locals = {
	"ButtonIcon": "ButtonIcon___1AgYV"
};

/***/ }),

/***/ 7827:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Badge___1D92d {\n  display: inline-block;\n  background-color: var(--color-component-badge-background);\n  color: var(--color-text);\n  padding: 0.125rem 0.25rem;\n  line-height: normal;\n  border-radius: 0.125rem;\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-small);\n}\n", ""]);

// exports
exports.locals = {
	"Badge": "Badge___1D92d"
};

/***/ }),

/***/ 5584:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Components___MlQHS {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  background-color: var(--color-background);\n  color: var(--color-text);\n  font-family: var(--font-family-sans);\n}\n\n.Components___MlQHS, .Components___MlQHS * {\n  box-sizing: border-box;\n  -webkit-font-smoothing: var(--font-smoothing);\n}\n\n.TreeWrapper___2uPTC {\n  flex: 0 0 var(--horizontal-resize-percentage);\n  overflow: auto;\n}\n\n.InspectedElementWrapper___Ay-WL {\n  flex: 1 1 35%;\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n.ResizeBarWrapper___2jVIz {\n  flex: 0 0 0px;\n  position: relative;\n}\n\n.ResizeBar___1o6VK {\n  position: absolute;\n  left: -2px;\n  width: 5px;\n  height: 100%;\n  cursor: ew-resize;\n}\n\n@media screen and (max-width: 600px) {\n  .Components___MlQHS {\n    flex-direction: column;\n  }\n\n  .TreeWrapper___2uPTC {\n    flex: 0 0 var(--vertical-resize-percentage);\n  }\n\n  .InspectedElementWrapper___Ay-WL {\n    flex: 1 1 50%;\n  }\n\n  .ResizeBar___1o6VK {\n    top: -2px;\n    left: 0;\n    width: 100%;\n    height: 5px;\n    cursor: ns-resize;\n  }\n}\n\n.Loading___Slif- {\n  height: 100%;\n  padding-left: 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-sans-large);\n  color: var(--color-dim);\n  border-left: 1px solid var(--color-border);\n}\n", ""]);

// exports
exports.locals = {
	"Components": "Components___MlQHS",
	"TreeWrapper": "TreeWrapper___2uPTC",
	"InspectedElementWrapper": "InspectedElementWrapper___Ay-WL",
	"ResizeBarWrapper": "ResizeBarWrapper___2jVIz",
	"ResizeBar": "ResizeBar___1o6VK",
	"Loading": "Loading___Slif-"
};

/***/ }),

/***/ 7304:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Input___2v7pX {\n  flex: 0 1 auto;\n  box-shadow: 0px 1px 3px transparent;\n  color: var(--color-text);\n}\n.Input___2v7pX:focus {\n  color: var(--color-text);\n  box-shadow: 0px 1px 3px var(--color-shadow);\n}", ""]);

// exports
exports.locals = {
	"Input": "Input___2v7pX"
};

/***/ }),

/***/ 9318:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Checkbox___S8zDe {\n  flex: 0 0 auto;\n  align-self: center;\n  margin: 0 0.25rem;\n}\n\n.Input___54okB {\n  flex: 1 1;\n  background: none;\n  border: 1px solid transparent;\n  color: var(--color-attribute-editable-value);\n  border-radius: 0.125rem;\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n}\n\n.Invalid___AR4Hd {\n  flex: 1 1;\n  background: none;\n  border: 1px solid transparent;\n  color: var(--color-attribute-editable-value);\n  border-radius: 0.125rem;\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n  background-color: var(--color-background-invalid);\n  color: var(--color-text-invalid);\n\n  --color-border: var(--color-text-invalid);\n}\n\n.Input___54okB:focus,\n.Invalid___AR4Hd:focus {\n  background-color: var(--color-button-background-focus);\n  outline: none;\n}\n", ""]);

// exports
exports.locals = {
	"Checkbox": "Checkbox___S8zDe",
	"Input": "Input___54okB",
	"Invalid": "Invalid___AR4Hd"
};

/***/ }),

/***/ 2668:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Element___1PGUo,\n.InactiveSelectedElement___3H2V0,\n.SelectedElement___2BZuq,\n.HoveredElement___4tCuC {\n  color: var(--color-component-name);\n}\n.HoveredElement___4tCuC {\n  background-color: var(--color-background-hover);\n}\n.InactiveSelectedElement___3H2V0 {\n  background-color: var(--color-background-inactive);\n}\n\n.Wrapper___1kRcF {\n  padding: 0 0.25rem;\n  white-space: pre;\n  height: var(--line-height-data);\n  line-height: var(--line-height-data);\n  display: inline-flex;\n  align-items: center;\n  cursor: default;\n  user-select: none;\n}\n\n.SelectedElement___2BZuq {\n  background-color: var(--color-background-selected);\n  color: var(--color-text-selected);\n\n  /* Invert colors */\n  --color-component-name: var(--color-component-name-inverted);\n  --color-text: var(--color-text-selected);\n  --color-component-badge-background: var(\n    --color-component-badge-background-inverted\n  );\n  --color-forget-badge-background: var(--color-forget-badge-background-inverted);\n  --color-component-badge-count: var(--color-component-badge-count-inverted);\n  --color-attribute-name: var(--color-attribute-name-inverted);\n  --color-attribute-value: var(--color-attribute-value-inverted);\n  --color-expand-collapse-toggle: var(--color-component-name-inverted);\n}\n\n.KeyName___iOoVX {\n  color: var(--color-attribute-name);\n}\n\n.KeyValue___2hQzO {\n  color: var(--color-attribute-value);\n  user-select: text;\n  max-width: 100px;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n}\n\n.Highlight___OJ7Ox {\n  background-color: var(--color-search-match);\n}\n.CurrentHighlight___3RWa2 {\n  background-color: var(--color-search-match-current);\n}\n\n.ExpandCollapseToggle___3CxPD {\n  display: inline-flex;\n  width: 1rem;\n  height: 1rem;\n  flex: 0 0 1rem;\n  color: var(--color-expand-collapse-toggle);\n}\n\n.BadgesBlock___3slng {\n  margin-left: 0.25rem;\n}\n\n.ErrorIcon___2HE8O,\n.ErrorIconContrast___25w80,\n.StrictMode___3TX6u,\n.StrictModeContrast___f70us,\n.WarningIcon___3s2DR,\n.WarningIconContrast___12tJE {\n  height: 0.75rem !important;\n  width: 0.75rem !important;\n  margin-left: 0.25rem;\n}\n.ErrorIcon___2HE8O {\n  color: var(--color-console-error-icon);\n}\n.StrictMode___3TX6u {\n  color: var(--color-dimmer);\n}\n.WarningIcon___3s2DR {\n  color: var(--color-console-warning-icon);\n}\n.ErrorIconContrast___25w80, .WarningIconContrast___12tJE {\n  color: var(--color-component-name);\n}\n.StrictModeContrast___f70us {\n  color: var(--color-text);\n}\n", ""]);

// exports
exports.locals = {
	"Element": "Element___1PGUo",
	"InactiveSelectedElement": "InactiveSelectedElement___3H2V0",
	"SelectedElement": "SelectedElement___2BZuq",
	"HoveredElement": "HoveredElement___4tCuC",
	"Wrapper": "Wrapper___1kRcF",
	"KeyName": "KeyName___iOoVX",
	"KeyValue": "KeyValue___2hQzO",
	"Highlight": "Highlight___OJ7Ox",
	"CurrentHighlight": "CurrentHighlight___3RWa2",
	"ExpandCollapseToggle": "ExpandCollapseToggle___3CxPD",
	"BadgesBlock": "BadgesBlock___3slng",
	"ErrorIcon": "ErrorIcon___2HE8O",
	"ErrorIconContrast": "ErrorIconContrast___25w80",
	"StrictMode": "StrictMode___3TX6u",
	"StrictModeContrast": "StrictModeContrast___f70us",
	"WarningIcon": "WarningIcon___3s2DR",
	"WarningIconContrast": "WarningIconContrast___12tJE"
};

/***/ }),

/***/ 6237:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Root___1QJSV {\n  display: inline-flex;\n  align-items: center;\n}\n\n.Root___1QJSV *:not(:first-child) {\n  margin-left: 0.25rem;\n}\n\n.ExtraLabel___1iRgy {\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-small);\n  color: var(--color-component-badge-count);\n}\n", ""]);

// exports
exports.locals = {
	"Root": "Root___1QJSV",
	"ExtraLabel": "ExtraLabel___1iRgy"
};

/***/ }),

/***/ 1102:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".ExpandCollapseToggle___1eSq5 {\n  flex: 0 0 1rem;\n  width: 1rem;\n  height: 1rem;\n  padding: 0;\n  color: var(--color-expand-collapse-toggle);\n}\n", ""]);

// exports
exports.locals = {
	"ExpandCollapseToggle": "ExpandCollapseToggle___1eSq5"
};

/***/ }),

/***/ 7596:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Root___1SOz8 {\n  background-color: var(--color-forget-badge-background);\n  color: var(--color-forget-text);\n  padding-right: 1.75em;\n  position: relative;\n}\n\n.Root___1SOz8::after {\n  bottom: 0;\n  content: '\\2728';\n  position: absolute;\n  right: 0.25em;\n}\n\n.ForgetToggle___1uQnC {\n  display: flex;\n}\n\n.ForgetToggle___1uQnC > span { /* targets .ToggleContent */\n  padding: 0;\n}\n", ""]);

// exports
exports.locals = {
	"Root": "Root___1SOz8",
	"ForgetToggle": "ForgetToggle___1uQnC"
};

/***/ }),

/***/ 4158:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Root___3cj5Y {\n  display: inline-flex;\n  align-items: center;\n}\n\n.Root___3cj5Y *:not(:first-child) {\n  margin-left: 0.25rem;\n}\n\n.ExtraLabel___1PNYs {\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-small);\n  color: var(--color-component-badge-count);\n}\n", ""]);

// exports
exports.locals = {
	"Root": "Root___3cj5Y",
	"ExtraLabel": "ExtraLabel___1PNYs"
};

/***/ }),

/***/ 4427:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".InspectedElement___gy6ot {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n  border-left: 1px solid var(--color-border);\n  border-top: 1px solid var(--color-border);\n}\n\n.TitleRow___2UUrj {\n  flex: 0 0 42px;\n  display: flex;\n  align-items: center;\n  font-size: var(--font-size-monospace-large);\n  border-bottom: 1px solid var(--color-border);\n  padding: 0.5rem;\n}\n\n.Key___1eadz {\n  flex: 0 1 auto;\n  padding-left: 0.25rem;\n  padding-right: 0.125rem;\n  line-height: 1rem;\n  border-top-left-radius: 0.125rem;\n  border-bottom-left-radius: 0.125rem;\n  display: inline-block;\n  background-color: var(--color-component-badge-background);\n  color: var(--color-text);\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-small);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n}\n\n.KeyArrow___2TKpc {\n  height: 1rem;\n  width: 1rem;\n  margin-right: -0.25rem;\n  border: 0.5rem solid transparent;\n  border-left: 0.5rem solid var(--color-component-badge-background);\n}\n\n.SelectedComponentName___3ByrZ {\n  flex: 1 1 auto;\n  overflow: hidden;\n  display: flex;\n  padding: 0.25rem 0;\n  height: 100%;\n  align-items: flex-end;\n}\n\n.ComponentName___23q5J {\n  color: var(--color-component-name);\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n}\n\n.StrictModeNonCompliantComponentName___2soUc {\n  color: var(--color-console-error-icon);\n}\n\n.Loading___1cYSg {\n  padding: 0.25rem;\n  color: var(--color-dimmer);\n  font-style: italic;\n  border-left: 1px solid var(--color-border);\n}\n\n.StrictModeNonCompliant___2P55H {\n  display: inline-flex;\n  padding: 0.25rem;\n  color: var(--color-console-error-icon);\n}\n", ""]);

// exports
exports.locals = {
	"InspectedElement": "InspectedElement___gy6ot",
	"TitleRow": "TitleRow___2UUrj",
	"Key": "Key___1eadz",
	"KeyArrow": "KeyArrow___2TKpc",
	"SelectedComponentName": "SelectedComponentName___3ByrZ",
	"ComponentName": "ComponentName___23q5J",
	"StrictModeNonCompliantComponentName": "StrictModeNonCompliantComponentName___2soUc",
	"Loading": "Loading___1cYSg",
	"StrictModeNonCompliant": "StrictModeNonCompliant___2P55H"
};

/***/ }),

/***/ 548:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Root___16YHd {\n  user-select: none;\n  display: inline-flex;\n}\n\n.Root___16YHd *:not(:first-child) {\n  margin-left: 0.25rem;\n}\n", ""]);

// exports
exports.locals = {
	"Root": "Root___16YHd"
};

/***/ }),

/***/ 9993:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Wrapper___15kcB {\n  height: 100%;\n}", ""]);

// exports
exports.locals = {
	"Wrapper": "Wrapper___15kcB"
};

/***/ }),

/***/ 4576:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".ErrorTree___OauA_, .WarningTree___2O5xr {\n  padding: 0.25rem 0 0 0;\n}\n\n.HeaderRow___2Y3QM {\n  padding: 0 0.25rem;\n}\n\n.HeaderRow___2Y3QM {\n  padding: 0 0.25rem;\n}\n\n.Error___CORL1, .Warning___zqCFY {\n  padding: 0 0.5rem;\n  display: flex;\n  align-items: center;\n}\n\n.Error___CORL1 {\n  border-top: 1px solid var(--color-console-error-border);\n  background-color: var(--color-console-error-background);\n  color: var(--color-error-text);\n  padding: 0 0.5rem;\n}\n\n.Warning___zqCFY {\n  border-top: 1px solid var(--color-console-warning-border);\n  background-color: var(--color-console-warning-background);\n  color: var(--color-warning-text);\n  padding: 0 0.5rem;\n}\n\n.Message___Ky3Dl {\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.ErrorBadge___MKpI8,\n.WarningBadge___22U6H {\n  display: inline-block;\n  width: 0.75rem;\n  height: 0.75rem;\n  flex: 0 0 0.75rem;\n  line-height: 0.75rem;\n  text-align: center;\n  border-radius: 0.25rem;\n  margin-right: 0.25rem;\n  font-size: var(--font-size-monospace-small);\n}\n\n.ErrorBadge___MKpI8 {\n  background-color: var(--color-console-error-icon);\n  color: var(--color-console-error-badge-text);\n}\n\n.WarningBadge___22U6H {\n  background-color: var(--color-console-warning-icon);\n  color: var(--color-console-warning-badge-text);\n}\n", ""]);

// exports
exports.locals = {
	"ErrorTree": "ErrorTree___OauA_",
	"WarningTree": "WarningTree___2O5xr",
	"HeaderRow": "HeaderRow___2Y3QM",
	"Error": "Error___CORL1",
	"Warning": "Warning___zqCFY",
	"Message": "Message___Ky3Dl",
	"ErrorBadge": "ErrorBadge___MKpI8",
	"WarningBadge": "WarningBadge___22U6H"
};

/***/ }),

/***/ 1354:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Hook___SbvM_ {\n}\n\n.Children___1f8xt {\n  padding-left: 1rem;\n}\n\n.HeaderRow___37mMe {\n  display: flex;\n  align-items: center;\n}\n\n.Header___9n-jL {\n  flex: 1 1;\n  font-family: var(--font-family-sans);\n}\n\n.NameValueRow___1dbuI {\n  display: flex;\n}\n\n.Name___3oYR1,\n.NameAnonymous___W-cy2 {\n  flex: 0 0 auto;\n  cursor: default;\n}\n.Name___3oYR1 {\n  color: var(--color-dim);\n}\n.NameAnonymous___W-cy2 {\n  color: var(--color-dimmer);\n}\n\n.EditableName___1m4Hy {\n  color: var(--color-attribute-name);\n  flex: 0 0 auto;\n  cursor: default;\n}\n.EditableName___1m4Hy:after,\n.Name___3oYR1:after {\n  color: var(--color-text);\n  content: ': ';\n  margin-right: 0.5rem;\n}\n\n.Value___3tDyC {\n  color: var(--color-attribute-value);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  cursor: default;\n  white-space: nowrap;\n}\n\n.None___dHntG {\n  color: var(--color-dimmer);\n  font-style: italic;\n}\n\n.TruncationIndicator___fImBc {\n  color: var(--color-dimmer);\n}\n\n.ExpandCollapseToggleSpacer___2RAvX {\n  flex: 0 0 1rem;\n  width: 1rem;\n}\n\n.PrimitiveHookNumber___1ZHtG {\n  background-color: var(--color-primitive-hook-badge-background);\n  color: var(--color-primitive-hook-badge-text);\n  font-size: var(--font-size-monospace-small);\n  margin-right: 0.25rem;\n  border-radius: 0.125rem;\n  padding: 0.125rem 0.25rem;\n}\n\n.HookName___3Pr8I {\n  color: var(--color-component-name);\n}\n\n.ToggleError___2AMCP {\n  color: var(--color-error-text);\n}\n", ""]);

// exports
exports.locals = {
	"Hook": "Hook___SbvM_",
	"Children": "Children___1f8xt",
	"HeaderRow": "HeaderRow___37mMe",
	"Header": "Header___9n-jL",
	"NameValueRow": "NameValueRow___1dbuI",
	"Name": "Name___3oYR1",
	"NameAnonymous": "NameAnonymous___W-cy2",
	"EditableName": "EditableName___1m4Hy",
	"Value": "Value___3tDyC",
	"None": "None___dHntG",
	"TruncationIndicator": "TruncationIndicator___fImBc",
	"ExpandCollapseToggleSpacer": "ExpandCollapseToggleSpacer___2RAvX",
	"PrimitiveHookNumber": "PrimitiveHookNumber___1ZHtG",
	"HookName": "HookName___3Pr8I",
	"ToggleError": "ToggleError___2AMCP"
};

/***/ }),

/***/ 531:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".HeaderRow___3I5kU {\n  display: flex;\n  align-items: center;\n}\n\n.Header___2LZLy {\n  display: flex;\n  align-items: center;\n  flex: 1 1;\n  font-family: var(--font-family-sans);\n}\n\n.Item___3t7sh {\n  display: flex;\n}\n\n.Name___6619F {\n  color: var(--color-attribute-name);\n  flex: 0 0 auto;\n}\n.Name___6619F:after {\n  content: ': ';\n  color: var(--color-text);\n  margin-right: 0.5rem;\n}\n\n.Value___na2y1 {\n  color: var(--color-attribute-value);\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.None___1ezJC {\n  color: var(--color-dimmer);\n  font-style: italic;\n}\n\n.Empty___2hAqe {\n  color: var(--color-dimmer);\n  font-style: italic;\n  padding-left: 0.75rem;\n}\n\n.ToggleSuspenseRow___3Abo4 {\n  padding-left: 1rem;\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n}\n\n.EditableValue___2B5lx {\n  min-width: 1rem;\n}\n", ""]);

// exports
exports.locals = {
	"HeaderRow": "HeaderRow___3I5kU",
	"Header": "Header___2LZLy",
	"Item": "Item___3t7sh",
	"Name": "Name___6619F",
	"Value": "Value___na2y1",
	"None": "None___1ezJC",
	"Empty": "Empty___2hAqe",
	"ToggleSuspenseRow": "ToggleSuspenseRow___3Abo4",
	"EditableValue": "EditableValue___2B5lx"
};

/***/ }),

/***/ 8716:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".SourceHeaderRow___11O5s {\n  display: flex;\n  align-items: center;\n  min-height: 24px;\n}\n\n.SourceHeader___z9MSo {\n  flex: 1 1;\n  font-family: var(--font-family-sans);\n}\n\n.SourceOneLiner____wx6W {\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n  margin-left: 1rem;\n}\n", ""]);

// exports
exports.locals = {
	"SourceHeaderRow": "SourceHeaderRow___11O5s",
	"SourceHeader": "SourceHeader___z9MSo",
	"SourceOneLiner": "SourceOneLiner____wx6W"
};

/***/ }),

/***/ 4045:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Source___DuiDm {\n  color: var(--color-dim);\n  margin-left: 1rem;\n  overflow: auto;\n  text-overflow: ellipsis;\n}", ""]);

// exports
exports.locals = {
	"Source": "Source___DuiDm"
};

/***/ }),

/***/ 7170:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".OwnersHeader___3Yv3d {\n  font-family: var(--font-family-sans);\n}\n\n.Owner___3pCT- {\n  color: var(--color-component-name);\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n}\n\n.InspectedElement___AIaEa {\n  overflow-x: hidden;\n  overflow-y: auto;\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n  line-height: var(--line-height-data);\n}\n\n.InspectedElementSection___cKzj1:not(:empty) {\n  padding: 0.25rem;\n\n  &:not(:last-of-type) {\n    border-bottom: 1px solid var(--color-border);\n  }\n}\n\n.Owner___3pCT- {\n  border-radius: 0.25rem;\n  padding: 0.125rem 0.25rem;\n  background: none;\n  border: none;\n  display: block;\n}\n.Owner___3pCT-:focus {\n  outline: none;\n  background-color: var(--color-button-background-focus);\n}\n\n.NotInStore___1AhKj {\n  color: var(--color-dim);\n  cursor: default;\n}\n\n.OwnerButton___1ZvI9 {\n  cursor: pointer;\n  width: 100%;\n  padding: 0;\n}\n\n.OwnerContent___1S1aF {\n  display: flex;\n  align-items: center;\n  padding-left: 1rem;\n  width: 100%;\n  border-radius: 0.25rem;\n}\n\n.OwnerContent___1S1aF:hover {\n  background-color: var(--color-background-hover);\n}\n\n.OwnersMetaField___ot46- {\n  padding-left: 1.25rem;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n", ""]);

// exports
exports.locals = {
	"OwnersHeader": "OwnersHeader___3Yv3d",
	"Owner": "Owner___3pCT-",
	"InspectedElement": "InspectedElement___AIaEa",
	"InspectedElementSection": "InspectedElementSection___cKzj1",
	"NotInStore": "NotInStore___1AhKj",
	"OwnerButton": "OwnerButton___1ZvI9",
	"OwnerContent": "OwnerContent___1S1aF",
	"OwnersMetaField": "OwnersMetaField___ot46-"
};

/***/ }),

/***/ 2006:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Item___2n2qv:not([hidden]) {\n  display: flex;\n}\n\n.Name___3LSJX {\n  color: var(--color-attribute-name-not-editable);\n  flex: 0 0 auto;\n  cursor: default;\n}\n\n.EditableName___2TyRo {\n  color: var(--color-attribute-name);\n  flex: 0 0 auto;\n  cursor: default;\n}\n\n.AfterName___1HlGw {\n  color: var(--color-text);\n  margin-right: 0.5rem;\n}\n\n.Value___7p123 {\n  color: var(--color-attribute-value);\n  white-space: pre;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  cursor: default;\n  flex: 1;\n}\n\n.Link___35OsV {\n  color: var(--color-link);\n  white-space: pre;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex: 1;\n  cursor: pointer;\n  border-radius: 0.125rem;\n  padding: 0px 2px;\n}\n\n.Link___35OsV:hover {\n  background-color: var(--color-background-hover);\n}\n\n\n.ExpandCollapseToggleSpacer___3KNWO {\n  flex: 0 0 1rem;\n  width: 1rem;\n}\n\n.DeleteArrayItemButton___1R-pd {\n  padding: 0;\n  margin-right: 0.125rem;\n}\n\n.HookName___1ZjVf {\n  color: var(--color-component-name);\n}", ""]);

// exports
exports.locals = {
	"Item": "Item___2n2qv",
	"Name": "Name___3LSJX",
	"EditableName": "EditableName___2TyRo",
	"AfterName": "AfterName___1HlGw",
	"Value": "Value___7p123",
	"Link": "Link___35OsV",
	"ExpandCollapseToggleSpacer": "ExpandCollapseToggleSpacer___3KNWO",
	"DeleteArrayItemButton": "DeleteArrayItemButton___1R-pd",
	"HookName": "HookName___1ZjVf"
};

/***/ }),

/***/ 9373:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".ContextMenuItemContent___2tDzo {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 0.5rem;\n}\n", ""]);

// exports
exports.locals = {
	"ContextMenuItemContent": "ContextMenuItemContent___2tDzo"
};

/***/ }),

/***/ 9002:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Icon___2CecY {\n  width: 1rem;\n  height: 1rem;\n  fill: currentColor;\n}\n", ""]);

// exports
exports.locals = {
	"Icon": "Icon___2CecY"
};

/***/ }),

/***/ 6144:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Input___2Lqoc {\n  min-width: 0.5rem;\n  flex: 1 1 auto;\n  border: none;\n  background: transparent;\n  outline: none;\n  padding: 0;\n  border: none;\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n}\n\n.Input___2Lqoc:focus {\n  border-color: var(--color-border);\n}\n", ""]);

// exports
exports.locals = {
	"Input": "Input___2Lqoc"
};

/***/ }),

/***/ 6531:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".LayoutViewer___215Ad {\n  padding: 0.25rem;\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-small);\n}\n\n.Header___YXSRg {\n  font-family: var(--font-family-sans);\n}\n\n.DashedBox___i8dxS,\n.SolidBox___1W-UG {\n  flex: 1 1 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-width: 1px;\n  border-color: var(--color-dim);\n  padding: 0.25rem;\n  margin: 0.25rem;\n}\n.DashedBox___i8dxS {\n  border-style: dashed;\n}\n.SolidBox___1W-UG {\n  border-style: solid;\n}\n\n.LabelRow___2SQOh {\n  width: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.Label___IskVY {\n  position: absolute;\n  left: 0.5rem;\n  flex: 1 0 100px;\n  color: var(--color-attribute-name);\n}\n\n.BoxRow___2_1as {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n", ""]);

// exports
exports.locals = {
	"LayoutViewer": "LayoutViewer___215Ad",
	"Header": "Header___YXSRg",
	"DashedBox": "DashedBox___i8dxS",
	"SolidBox": "SolidBox___1W-UG",
	"LabelRow": "LabelRow___2SQOh",
	"Label": "Label___IskVY",
	"BoxRow": "BoxRow___2_1as"
};

/***/ }),

/***/ 3308:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".StyleEditor___1RvzE {\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n  padding: 0.25rem;\n}\n\n.HeaderRow___xyA6t {\n  display: flex;\n  align-items: center;\n}\n\n.Header___2SGfE {\n  flex: 1 1;\n}\n\n.Brackets___2zA4K {\n  font-family: var(--font-family-sans);\n  font-size: var(--font-size-sans-small);\n}\n\n.Row___3v8mp {\n  white-space: nowrap;\n  padding-left: 1rem;\n  display: flex;\n  align-items: center;\n}\n\n.Invalid___3ogBH {\n  background-color: var(--color-background-invalid);\n  color: var(--color-text-invalid);\n\n  --color-border: var(--color-text-invalid);\n}\n.Attribute___2yC0c {\n  color: var(--color-attribute-name);\n}\n\n.Value___1yJUg {\n  color: var(--color-attribute-value);\n}\n\n.Input___3Zdnf {\n  flex: 0 1 auto;\n  padding: 1px;\n  box-shadow: 0px 1px 3px transparent;\n}\n.Input___3Zdnf:focus {\n  color: var(--color-text);\n  box-shadow: 0px 1px 3px var(--color-shadow);\n}\n\n", ""]);

// exports
exports.locals = {
	"StyleEditor": "StyleEditor___1RvzE",
	"HeaderRow": "HeaderRow___xyA6t",
	"Header": "Header___2SGfE",
	"Brackets": "Brackets___2zA4K",
	"Row": "Row___3v8mp",
	"Invalid": "Invalid___3ogBH",
	"Attribute": "Attribute___2yC0c",
	"Value": "Value___1yJUg",
	"Input": "Input___3Zdnf"
};

/***/ }),

/***/ 3741:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Stack___2ZEoS > *:not(:first-child) {\n  border-top: 1px solid var(--color-border);\n}\n", ""]);

// exports
exports.locals = {
	"Stack": "Stack___2ZEoS"
};

/***/ }),

/***/ 2258:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Toggle___2JmPv {\n  display: flex;\n}\n\n.Toggle___2JmPv > span { /* targets .ToggleContent */\n  padding: 0;\n}\n\n.Badge___3Nnpi {\n  cursor: help;\n}\n", ""]);

// exports
exports.locals = {
	"Toggle": "Toggle___2JmPv",
	"Badge": "Badge___3Nnpi"
};

/***/ }),

/***/ 8739:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".NewArrayValue___3rHoU {\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n}\n\n.EditableName___3OJ36 {\n  margin-left: 1rem;\n}\n\n.Invalid___1sVw9 {\n  background-color: var(--color-background-invalid);\n  color: var(--color-text-invalid) !important;\n}\n\n.Invalid___1sVw9:focus {\n  background-color: var(--color-button-background-focus);\n}", ""]);

// exports
exports.locals = {
	"NewArrayValue": "NewArrayValue___3rHoU",
	"EditableName": "EditableName___3OJ36",
	"Invalid": "Invalid___1sVw9"
};

/***/ }),

/***/ 8797:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".NewKeyValue___34r7B {\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n}\n\n.EditableName___2W--L {\n  margin-left: 1rem;\n}\n\n.EditableValue___16Q0K {\n  min-width: 1rem;\n}\n", ""]);

// exports
exports.locals = {
	"NewKeyValue": "NewKeyValue___34r7B",
	"EditableName": "EditableName___2W--L",
	"EditableValue": "EditableValue___16Q0K"
};

/***/ }),

/***/ 1908:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".OwnerStack___32qwj {\n  max-width: 100%;\n  overflow-x: auto;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.Component___3e3s7,\n.Component___3e3s7[data-reach-menu-item] {\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n  user-select: none;\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n}\n\n.Component___3e3s7[data-reach-menu-item][data-selected],\n.Component___3e3s7[data-reach-menu-item][data-selected]:hover {\n  color: var(--color-text-selected);\n  background: var(--color-background-selected);\n}\n.Component___3e3s7[data-reach-menu-item][data-selected]:focus {\n  outline: none;\n}\n\n.Bar___3G3dX {\n  display: flex;\n  flex: 1 1 auto;\n  overflow-x: auto;\n}\n\n.VRule___IJYKJ {\n  flex: 0 0 auto;\n  height: 20px;\n  width: 1px;\n  background-color: var(--color-border);\n  margin: 0 0.5rem;\n}\n\n.MenuButton___3te3U {\n  border-radius: 0.25rem;\n  display: inline-flex;\n  align-items: center;\n  padding: 0;\n  flex: 0 0 auto;\n  border: none;\n  background: var(--color-button-background);\n  color: var(--color-button);\n}\n.MenuButtonContent___3VvHH {\n  display: inline-flex;\n  align-items: center;\n  border-radius: 0.25rem;\n  padding: 0.25rem;\n}\n.MenuButton___3te3U:hover {\n  color: var(--color-button-hover);\n}\n.MenuButton___3te3U[aria-expanded='true'],\n.MenuButton___3te3U[aria-expanded='true']:active {\n  color: var(--color-button-active);\n  outline: none;\n}\n\n.MenuButton___3te3U:focus,\n.MenuButtonContent___3VvHH:focus {\n  outline: none;\n}\n.MenuButton___3te3U:focus > .MenuButtonContent___3VvHH {\n  background: var(--color-button-background-focus);\n}\n\n.Modal___8b8bs[data-reach-menu-list] {\n  display: inline-flex;\n  flex-direction: column;\n  background-color: var(--color-background);\n  color: var(--color-button);\n  padding: 0.25rem 0;\n  padding-right: 0;\n  border: 1px solid var(--color-border);\n  border-radius: 0.25rem;\n  max-height: 10rem;\n  overflow: auto;\n\n  /* Make sure this is above the DevTools, which are above the Overlay */\n  z-index: 10000002;\n  position: relative;\n\n  /* Reach UI tries to set its own :( */\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n}\n\n.NotInStore___3Y2P2,\n.NotInStore___3Y2P2:hover {\n  color: var(--color-dimmest);\n}\n\n.BadgesBlock___3JijI {\n  margin-left: 0.25rem;\n}\n", ""]);

// exports
exports.locals = {
	"OwnerStack": "OwnerStack___32qwj",
	"Component": "Component___3e3s7",
	"Bar": "Bar___3G3dX",
	"VRule": "VRule___IJYKJ",
	"MenuButton": "MenuButton___3te3U",
	"MenuButtonContent": "MenuButtonContent___3VvHH",
	"Modal": "Modal___8b8bs",
	"NotInStore": "NotInStore___3Y2P2",
	"BadgesBlock": "BadgesBlock___3JijI"
};

/***/ }),

/***/ 9772:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Active___3Y5D2,\n.Inactive___2Ddkx {\n  position: absolute;\n  left: 0;\n  width: 100%;\n  z-index: 0;\n  pointer-events: none;\n}\n\n.Active___3Y5D2 {\n  background-color: var(--color-selected-tree-highlight-active);\n}\n\n.Inactive___2Ddkx {\n  background-color: var(--color-selected-tree-highlight-inactive);\n}\n", ""]);

// exports
exports.locals = {
	"Active": "Active___3Y5D2",
	"Inactive": "Inactive___2Ddkx"
};

/***/ }),

/***/ 3415:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".root___2g2n_ {\n  border-radius: 0.25rem;\n  animation: pulse___20gcg 2s infinite;\n}\n\n@keyframes pulse___20gcg {\n  0%, 100% {\n    background-color: var(--color-dim);\n  }\n  50% {\n    background-color: var(--color-dimmest)\n  }\n}\n", ""]);

// exports
exports.locals = {
	"root": "root___2g2n_",
	"pulse": "pulse___20gcg"
};

/***/ }),

/***/ 2143:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Tree___3Pjje {\n  position: relative;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  border-top: 1px solid var(--color-border);\n\n  /* Default size will be adjusted by Tree after scrolling */\n  --indentation-size: 12px;\n}\n\n.List___qlOJG {\n  overflow-x: hidden !important;\n}\n\n.InnerElementType___1csGF {\n  overflow-x: hidden;\n}\n\n.SearchInput___1Q2I_ {\n  flex: 0 0 42px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid var(--color-border);\n  padding: 0.5rem;\n}\n\n.AutoSizerWrapper___3IcMr {\n  width: 100%;\n  overflow: hidden;\n  flex: 1 0 auto;\n}\n.AutoSizerWrapper___3IcMr:focus {\n  outline: none;\n}\n\n.List___qlOJG {\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n  line-height: var(--line-height-data);\n}\n\n.VRule___3yG5q {\n  height: 20px;\n  width: 1px;\n  flex: 0 0 1px;\n  margin: 0 0.5rem;\n  background-color: var(--color-border);\n}\n\n.Loading___TrqnR {\n  height: 100%;\n  padding-left: 0.5rem;\n  display: flex;\n  align-items: center;\n  flex: 1;\n  justify-content: flex-start;\n  font-size: var(--font-size-sans-large);\n  color: var(--color-dim);\n}\n\n.IconAndCount___1CZUm {\n  display: flex;\n  align-items: center;\n  font-size: var(--font-size-sans-normal);\n}\n\n.ErrorIcon___1SNsZ, .WarningIcon___23GHe {\n  width: 0.75rem;\n  height: 0.75rem;\n  margin-left: 0.25rem;\n  margin-right: 0.25rem;\n  flex: 0 0 auto;\n}\n.ErrorIcon___1SNsZ {\n  color: var(--color-console-error-icon);\n}\n.WarningIcon___23GHe {\n  color: var(--color-console-warning-icon);\n}\n\n.ZeroElementsNotice___1e7ln {\n  padding-left: 1em;\n  opacity: 0;\n  animation: fadeIn___3yIM4 0.5s forwards;\n  animation-delay: 2s;\n}\n@keyframes fadeIn___3yIM4 {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.Link___wwMB5 {\n  color: var(--color-button-active);\n}", ""]);

// exports
exports.locals = {
	"Tree": "Tree___3Pjje",
	"List": "List___qlOJG",
	"InnerElementType": "InnerElementType___1csGF",
	"SearchInput": "SearchInput___1Q2I_",
	"AutoSizerWrapper": "AutoSizerWrapper___3IcMr",
	"VRule": "VRule___3yG5q",
	"Loading": "Loading___TrqnR",
	"IconAndCount": "IconAndCount___1CZUm",
	"ErrorIcon": "ErrorIcon___1SNsZ",
	"WarningIcon": "WarningIcon___23GHe",
	"ZeroElementsNotice": "ZeroElementsNotice___1e7ln",
	"fadeIn": "fadeIn___3yIM4",
	"Link": "Link___wwMB5"
};

/***/ }),

/***/ 1656:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Tooltip___2QcDY {\n  border: none;\n  border-radius: 0.25rem;\n  padding: 0.25rem 0.5rem;\n  font-family: var(--font-family-sans);\n  font-size: 12px;\n  background-color: var(--color-tooltip-background);\n  color: var(--color-tooltip-text);\n  box-shadow: 1px 1px 2px var(--color-shadow);\n\n  /* Make sure this is above the DevTools, which are above the Overlay */\n  z-index: 10000002;\n}\n", ""]);

// exports
exports.locals = {
	"Tooltip": "Tooltip___2QcDY"
};

/***/ }),

/***/ 5195:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".DevTools___NAxvy {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: var(--color-background);\n  color: var(--color-text);\n}\n\n.TabBar___2aDHU {\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  padding: 0 0.5rem;\n  background-color: var(--color-background);\n  border-top: 1px solid var(--color-border);\n  font-family: var(--font-family-sans);\n  font-size: var(--font-size-sans-large);\n  user-select: none;\n\n  /* Electron drag area */\n  -webkit-app-region: drag;\n}\n\n.Spacer___1VPRF {\n  flex: 1;\n}\n\n.TabContent___27Qz1 {\n  flex: 1 1 100%;\n  overflow: auto;\n  -webkit-app-region: no-drag;\n}\n\n.DevToolsVersion___3_3UD {\n  font-size: var(--font-size-sans-normal);\n  margin-right: 0.5rem;\n}\n\n.DevToolsVersion___3_3UD:before {\n  font-size: var(--font-size-sans-large);\n  content: 'DevTools ';\n}\n\n@media screen and (max-width: 400px) {\n  .DevToolsVersion___3_3UD:before {\n    content: '';\n  }\n}\n\n@media screen and (max-width: 300px) {\n  .DevToolsVersion___3_3UD {\n    display: none;\n  }\n}\n\n.DevTools___NAxvy, .DevTools___NAxvy * {\n  box-sizing: border-box;\n  -webkit-font-smoothing: var(--font-smoothing);\n}\n", ""]);

// exports
exports.locals = {
	"DevTools": "DevTools___NAxvy",
	"TabBar": "TabBar___2aDHU",
	"Spacer": "Spacer___1VPRF",
	"TabContent": "TabContent___27Qz1",
	"DevToolsVersion": "DevToolsVersion___3_3UD"
};

/***/ }),

/***/ 1445:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".GitHubLinkRow___1Ubg1 {\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: auto;\n  padding: 0.25rem 0.5rem;\n  background: var(--color-console-warning-background);\n  color: var(--color-text);\n  border-bottom: 1px solid var(--color-console-warning-border);\n  border-top: 1px solid var(--color-console-warning-border);\n}\n\n.WorkplaceGroupRow___2bkPD {\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: auto;\n  padding: 0.25rem 0.5rem;\n  background: var(--color-background-hover);\n  border-bottom: 1px solid var(--color-border);\n}\n\n.ErrorBoundary___2iFtc {\n  height: 100%;\n  width: 100%;\n  background-color: var(--color-background);\n  display: flex;\n  flex-direction: column;\n  border: 1px solid var(--color-border);\n}\n\n.ErrorInfo___3rbAr {\n  padding: 0.5rem;\n  overflow: auto;\n}\n\n.HeaderRow___1yCa9 {\n  display: flex;\n  flex-direction: row;\n  font-size: var(--font-size-sans-large);\n  font-weight: bold;\n}\n\n.ErrorHeader___Ck9BV,\n.TimeoutHeader___2_O9L {\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  min-width: 0;\n}\n\n.ErrorHeader___Ck9BV {\n  color: var(--color-error-text);\n}\n.TimeoutHeader___2_O9L {\n  color: var(--color-text);\n}\n\n.ErrorStack___xWW5M,\n.TimeoutStack___31pZb {\n  margin-top: 0.5rem;\n  white-space: pre-wrap;\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n  -webkit-font-smoothing: initial;\n  border-radius: 0.25rem;\n  padding: 0.5rem;\n  overflow: auto;\n}\n\n.ErrorStack___xWW5M {\n  background-color: var(--color-error-background);\n  border: 1px solid var(--color-error-border);\n  color: var(--color-error-text);\n}\n\n.TimeoutStack___31pZb {\n  background-color: var(--color-console-warning-background);\n  color: var(--color-console-warning-text);\n  border: var(--color-console-warning-border)\n}\n\n.LoadingIcon___2Ox_q {\n  margin-right: 0.25rem;\n}\n\n.ReportIcon___163qD {\n  margin-right: 0.25rem;\n}\n\n.ReportLink___1RRG6 {\n  color: var(--color-link);\n}\n\n.FacebookOnly___1Q5yi {\n  margin-left: 0.25rem;\n}\n\n.ReproSteps___21X2x {\n  margin-left: 0.25rem;\n  color: var(--color-console-warning-text);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  min-width: 0;\n}\n\n.UpdateExistingIssuePrompt___1AP89 {\n  margin-right: 0.25rem;\n  color: var(--color-console-warning-text);\n}\n\n.CloseButton___19JNk {\n  font-weight: bold;\n}\n\n.CloseButtonIcon___Fp6qN {\n  margin-left: 0.25rem;\n}\n\n.InfoBox___9MO75 {\n  margin-top: 0.5rem;\n  background: var(--color-console-warning-background);\n  border: 1px solid var(--color-console-warning-border);\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.5rem;\n  color: var(--color-console-warning-text);\n}", ""]);

// exports
exports.locals = {
	"GitHubLinkRow": "GitHubLinkRow___1Ubg1",
	"WorkplaceGroupRow": "WorkplaceGroupRow___2bkPD",
	"ErrorBoundary": "ErrorBoundary___2iFtc",
	"ErrorInfo": "ErrorInfo___3rbAr",
	"HeaderRow": "HeaderRow___1yCa9",
	"ErrorHeader": "ErrorHeader___Ck9BV",
	"TimeoutHeader": "TimeoutHeader___2_O9L",
	"ErrorStack": "ErrorStack___xWW5M",
	"TimeoutStack": "TimeoutStack___31pZb",
	"LoadingIcon": "LoadingIcon___2Ox_q",
	"ReportIcon": "ReportIcon___163qD",
	"ReportLink": "ReportLink___1RRG6",
	"FacebookOnly": "FacebookOnly___1Q5yi",
	"ReproSteps": "ReproSteps___21X2x",
	"UpdateExistingIssuePrompt": "UpdateExistingIssuePrompt___1AP89",
	"CloseButton": "CloseButton___19JNk",
	"CloseButtonIcon": "CloseButtonIcon___Fp6qN",
	"InfoBox": "InfoBox___9MO75"
};

/***/ }),

/***/ 7927:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Icon___v5HwN {\n  width: 1rem;\n  height: 1rem;\n  fill: currentColor;\n}\n", ""]);

// exports
exports.locals = {
	"Icon": "Icon___v5HwN"
};

/***/ }),

/***/ 6970:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Background___39iOi {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: center;\n  padding: 1rem;\n  background-color: var(--color-modal-background);\n  overflow: auto;\n}\n\n.Dialog___2XI77 {\n  position: relative;\n  z-index: 3;\n  margin: 0 0.25rem;\n  width: 25rem;\n  min-width: 20rem;\n  max-width: 100%;\n  display: inline-block;\n  background-color: var(--color-background);\n  box-shadow: 0 2px 4px var(--color-shadow);\n  padding: 0.5rem;\n  border: 1px solid var(--color-border);\n  border-radius: 0.25rem;\n  font-size: var(--font-size-sans-normal);\n}\n\n.Title___1FtK3 {\n  font-size: var(--font-size-sans-large);\n  margin-bottom: 0.5rem;\n}\n\n.Buttons___3N6w8 {\n  text-align: right;\n  margin-top: 0.5rem;\n}\n\n.Button___3JNc2 {\n  font-size: var(--font-size-sans-large);\n}\n", ""]);

// exports
exports.locals = {
	"Background": "Background___39iOi",
	"Dialog": "Dialog___2XI77",
	"Title": "Title___1FtK3",
	"Buttons": "Buttons___3N6w8",
	"Button": "Button___3JNc2"
};

/***/ }),

/***/ 6394:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Group___2hArG {\n  transition: all ease-in-out 250ms;\n}\n\n.Rect___fBfs_ {\n  cursor: pointer;\n  stroke: var(--color-background);\n  transition: all ease-in-out 250ms;\n}\n\n.ForeignObject___2EdVc {\n  pointer-events: none;\n  transition: all ease-in-out 250ms;\n}\n\n.Div___1Pgrm {\n  pointer-events: none;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  font-family: var(--font-family-sans);\n  font-size: var(--font-size-sans-normal);\n  margin-left: 0.25rem;\n  margin-right: 0.25rem;\n  line-height: 1.5;\n  padding: 0 0 0;\n  font-weight: 400;\n  color: var(--color-commit-gradient-text);\n  text-align: left;\n  transition: all ease-in-out 250ms;\n}\n", ""]);

// exports
exports.locals = {
	"Group": "Group___2hArG",
	"Rect": "Rect___fBfs_",
	"ForeignObject": "ForeignObject___2EdVc",
	"Div": "Div___1Pgrm"
};

/***/ }),

/***/ 1707:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Container___WYOTp {\n  width: 100%;\n  flex: 1;\n  padding: 0.5rem;\n}\n\n.PatternPath___2kgd1 {\n  stroke: var(--color-commit-did-not-render-pattern);\n  stroke-width: 1;\n}\n", ""]);

// exports
exports.locals = {
	"Container": "Container___WYOTp",
	"PatternPath": "PatternPath___2kgd1"
};

/***/ }),

/***/ 4721:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Container___2D32U {\n  width: 100%;\n  flex: 1;\n  padding: 0.5rem;\n}\n", ""]);

// exports
exports.locals = {
	"Container": "Container___2D32U"
};

/***/ }),

/***/ 3403:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Toolbar___3u3I_ {\n  padding: 0.25rem 0;\n  flex: 0 0 auto;\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n}\n\n.BadgesContainer___2NGL4 {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n}\n\n.BadgesContainer___2NGL4:not(:empty) {\n  padding-bottom: 0.25rem;\n  border-bottom: 1px solid var(--color-border);\n}\n\n.Content___3i3NJ {\n  user-select: none;\n  overflow-y: auto;\n}\n\n.Component___Y5kFG {\n  flex: 1;\n  font-weight: bold;\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n  white-space: nowrap;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  padding-bottom: 0.25rem;\n  border-bottom: 1px solid var(--color-border);\n}\n\n.CurrentCommit___21fVV {\n  display: block;\n  width: 100%;\n  text-align: left;\n  background: none;\n  border: none;\n}\n", ""]);

// exports
exports.locals = {
	"Toolbar": "Toolbar___3u3I_",
	"BadgesContainer": "BadgesContainer___2NGL4",
	"Content": "Content___3i3NJ",
	"Component": "Component___Y5kFG",
	"CurrentCommit": "CurrentCommit___21fVV"
};

/***/ }),

/***/ 7144:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".NoCommitData___2oJ_z {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.Header___1oGeD {\n  font-size: var(--font-size-sans-large);\n  margin-bottom: 0.5rem;\n}\n\n.FilterMessage___1Yg5n {\n  display: flex;\n  align-items: center;\n}\n", ""]);

// exports
exports.locals = {
	"NoCommitData": "NoCommitData___2oJ_z",
	"Header": "Header___1oGeD",
	"FilterMessage": "FilterMessage___1Yg5n"
};

/***/ }),

/***/ 1853:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Profiler___20Ry4 {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  font-family: var(--font-family-sans);\n  font-size: var(--font-size-sans-normal);\n  background-color: var(--color-background);\n  color: var(--color-text);\n}\n\n.Profiler___20Ry4, .Profiler___20Ry4 * {\n  box-sizing: border-box;\n  -webkit-font-smoothing: var(--font-smoothing);\n}\n\n.LeftColumn___3I7-I {\n  display: flex;\n  flex-direction: column;\n  flex: 2 1 200px;\n  border-top: 1px solid var(--color-border);\n}\n\n.RightColumn___3smXD {\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 100px;\n  max-width: 300px;\n  overflow-x: hidden;\n  border-left: 1px solid var(--color-border);\n  border-top: 1px solid var(--color-border);\n}\n\n.Content___1LjDy {\n  position: relative;\n  flex: 1 1 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.Column___3WWtw {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0 1rem;\n}\n\n.Paragraph___1HLty {\n  text-align: center;\n}\n\n.Row___1RpSu {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n.LearnMoreRow___3lYIu {\n  margin-top: 1rem;\n  color: var(--color-dim);\n  font-size: var(--font-size-sans-small);\n}\n\n.Header___QyJw2 {\n  font-size: var(--font-size-sans-large);\n  margin-bottom: 0.5rem;\n}\n\n.Toolbar___30kHu {\n  height: 2.25rem;\n  padding: 0 0.25rem;\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid var(--color-border);\n}\n\n.VRule___2y9G3 {\n  height: 20px;\n  width: 1px;\n  border-left: 1px solid var(--color-border);\n  padding-left: 0.25rem;\n  margin-left: 0.25rem;\n}\n\n.Spacer___1sezP {\n  flex: 1;\n}\n\n.StopRecordingButton___1-ElU {\n  font-size: var(--font-size-sans-large);\n  padding: 0.5rem;\n}\n\n.ContentFallback___2Ata2 {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-sans-large);\n  color: var(--color-dim);\n}\n\n.SnapshotSelectorFallback___3fsFv {\n  height: 100%;\n  padding-left: 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: var(--font-size-sans-large);\n  color: var(--color-dim);\n}\n\n.Link___mZ2LE {\n  color: var(--color-button);\n}\n\n.TimelineSearchInputContainer___33BJF {\n  flex: 1 1;\n  display: flex;\n  align-items: center;\n}\n\n.LearnMoreLink___7A9ws {\n  color: var(--color-link);\n  margin-left: 0.25rem;\n  margin-right: 0.25rem;\n}", ""]);

// exports
exports.locals = {
	"Profiler": "Profiler___20Ry4",
	"LeftColumn": "LeftColumn___3I7-I",
	"RightColumn": "RightColumn___3smXD",
	"Content": "Content___1LjDy",
	"Column": "Column___3WWtw",
	"Paragraph": "Paragraph___1HLty",
	"Row": "Row___1RpSu",
	"LearnMoreRow": "LearnMoreRow___3lYIu",
	"Header": "Header___QyJw2",
	"Toolbar": "Toolbar___30kHu",
	"VRule": "VRule___2y9G3",
	"Spacer": "Spacer___1sezP",
	"StopRecordingButton": "StopRecordingButton___1-ElU",
	"ContentFallback": "ContentFallback___2Ata2",
	"SnapshotSelectorFallback": "SnapshotSelectorFallback___3fsFv",
	"Link": "Link___mZ2LE",
	"TimelineSearchInputContainer": "TimelineSearchInputContainer___33BJF",
	"LearnMoreLink": "LearnMoreLink___7A9ws"
};

/***/ }),

/***/ 7419:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".VRule___2XiHw {\n  height: 20px;\n  width: 1px;\n  border-left: 1px solid var(--color-border);\n  padding-left: 0.25rem;\n  margin-left: 0.25rem;\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications\n */\n.Input___2GKA7 {\n  position: absolute !important;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  clip: rect(1px, 1px, 1px, 1px);\n}\n\n.ErrorMessage___3yR0b {\n  margin: 0.5rem 0;\n  color: var(--color-dim);\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n}\n", ""]);

// exports
exports.locals = {
	"VRule": "VRule___2XiHw",
	"Input": "Input___2GKA7",
	"ErrorMessage": "ErrorMessage___3yR0b"
};

/***/ }),

/***/ 1780:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".ActiveRecordToggle___1Cpcb {\n  color: var(--color-record-active);\n}\n.ActiveRecordToggle___1Cpcb:hover {\n  color: var(--color-record-active);\n}\n.ActiveRecordToggle___1Cpcb:focus {\n  color: var(--color-record-active);\n}\n.ActiveRecordToggle___1Cpcb:active {\n  color: var(--color-record-hover);\n}\n\n.InactiveRecordToggle___2CUtF {\n  color: var(--color-record-inactive);\n}\n.InactiveRecordToggle___2CUtF:hover {\n  color: var(--color-record-hover);\n}\n.InactiveRecordToggle___2CUtF:focus {\n  color: var(--color-record-inactive);\n}\n.InactiveRecordToggle___2CUtF:active {\n  color: var(--color-record-hover);\n}\n\n.DisabledRecordToggle___gcsbF {\n  color: var(--color-button-disabled);\n}\n.DisabledRecordToggle___gcsbF:hover {\n  color: var(--color-button-disabled);\n}\n.DisabledRecordToggle___gcsbF:focus {\n  color: var(--color-button-disabled);\n}\n.DisabledRecordToggle___gcsbF:active {\n  color: var(--color-button-disabled);\n}\n", ""]);

// exports
exports.locals = {
	"ActiveRecordToggle": "ActiveRecordToggle___1Cpcb",
	"InactiveRecordToggle": "InactiveRecordToggle___2CUtF",
	"DisabledRecordToggle": "DisabledRecordToggle___gcsbF"
};

/***/ }),

/***/ 9825:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Spacer___1c3sH {\n  flex: 1;\n}\n", ""]);

// exports
exports.locals = {
	"Spacer": "Spacer___1c3sH"
};

/***/ }),

/***/ 4770:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Toolbar___CuJgF {\n  height: 2.25rem;\n  padding: 0 0.5rem;\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid var(--color-border);\n}\n\n.Content___2tGS0 {\n  padding: 0.5rem;\n  user-select: none;\n  overflow: auto;\n}\n\n.List___2AC9R {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.ListItem___2wzT0 {\n  margin: 0 0 0.5rem;\n}\n\n.Label___3KINM {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: bold;\n}\n\n.Value___3wrFP {\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n}\n\n.NothingSelected___2Sj9L {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: var(--color-dim);\n}\n\n.DurationsList___19XUj {\n  list-style: none;\n  margin: 0.25rem 0 0 0;\n  padding: 0;\n  background: var(--color-background-inactive);\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.25rem;\n}\n\n.DurationsListItem___2UKVV {\n  margin: 0.25rem 0 0 0;\n}\n.DurationsListItem___2UKVV:first-of-type {\n  margin: 0;\n}\n", ""]);

// exports
exports.locals = {
	"Toolbar": "Toolbar___CuJgF",
	"Content": "Content___2tGS0",
	"List": "List___2AC9R",
	"ListItem": "ListItem___2wzT0",
	"Label": "Label___3KINM",
	"Value": "Value___3wrFP",
	"NothingSelected": "NothingSelected___2Sj9L",
	"DurationsList": "DurationsList___19XUj",
	"DurationsListItem": "DurationsListItem___2UKVV"
};

/***/ }),

/***/ 2770:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Toolbar___1anMW {\n  height: 2.25rem;\n  padding: 0 0.5rem;\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid var(--color-border);\n}\n\n.Content___3KVRW {\n  padding: 0.5rem;\n  user-select: none;\n  overflow: auto;\n}\n\n.List___DLnbX {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.ListItem___3Uw7N {\n  flex: 1 1;\n  margin: 0 0 0.5rem;\n}\n\n.Label___9ImgF {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: bold;\n  flex: 1 1;\n}\n\n.Value___1E_uv {\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n}\n\n.Row___327lN {  \n  display: flex;  \n  flex-direction: row;  \n  align-items: center;\n  border-top: 1px solid var(--color-border);\n} \n\n.UnclickableSource___3Kp1w,\n.ClickableSource___1ExdQ {\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-family: var(--font-family-sans);\n  font-size: var(--font-size-sans-normal);\n}\n\n.UnclickableSource___3Kp1w {\n  color: var(--color-dim);\n}\n\n.ClickableSource___1ExdQ {\n  color: var(--color-text);\n}\n\n.ClickableSource___1ExdQ:focus,\n.ClickableSource___1ExdQ:hover {\n  background-color: var(--color-background-hover);\n}\n", ""]);

// exports
exports.locals = {
	"Toolbar": "Toolbar___1anMW",
	"Content": "Content___3KVRW",
	"List": "List___DLnbX",
	"ListItem": "ListItem___3Uw7N",
	"Label": "Label___9ImgF",
	"Value": "Value___1E_uv",
	"Row": "Row___327lN",
	"UnclickableSource": "UnclickableSource___3Kp1w",
	"ClickableSource": "ClickableSource___1ExdQ"
};

/***/ }),

/***/ 9414:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Toolbar___2uBS2 {\n  height: 2.25rem;\n  padding: 0 0.5rem;\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid var(--color-border);\n}\n\n.Content___1WAA9 {\n  padding: 0.5rem;\n  user-select: none;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.Component___1oc9o {\n  flex: 1;\n  color: var(--color-component-name);\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n  white-space: nowrap;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n}\n\n.Label___buTyu {\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n}\n\n.CurrentCommit___2ZAl5,\n.Commit___2PAr5 {\n  display: block;\n  width: 100%;\n  text-align: left;\n  background: none;\n  border: none;\n  padding: 0.25rem 0.5rem;\n  color: var(--color-text);\n}\n\n.Commit___2PAr5:focus,\n.Commit___2PAr5:hover {\n  outline: none;\n  background-color: var(--color-background-hover);\n}\n\n.CurrentCommit___2ZAl5 {\n  background-color: var(--color-background-selected);\n  color: var(--color-text-selected);\n}\n\n.CurrentCommit___2ZAl5:focus {\n  outline: none;\n}\n", ""]);

// exports
exports.locals = {
	"Toolbar": "Toolbar___2uBS2",
	"Content": "Content___1WAA9",
	"Component": "Component___1oc9o",
	"Label": "Label___buTyu",
	"CurrentCommit": "CurrentCommit___2ZAl5",
	"Commit": "Commit___2PAr5"
};

/***/ }),

/***/ 7012:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".List___1_Mwa {\n  /**\n   * The decision to suppress the default (horizontal) scroll bars is intentional.\n   * The snapshot selector is small enough that the scrollbar renders it essentially useless.\n   * There are two alternative navigation mechanisms (arrow keys and arrow buttons).\n   * If necessary, we could also expand the click-and-drag mechanism to scroll.\n   */\n  overflow-x: hidden !important;\n}\n\n.Tooltip___2j_4b {\n  margin-top: 2.5rem;\n}\n\n.TooltipList___26ss7 {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.TooltipListItem___3xWli {\n  display: flex;\n}\n\n.TooltipLabel___2xbrN {\n  font-weight: bold;\n  margin-right: 0.25rem;\n}\n.TooltipLabel___2xbrN:after {\n  content: ':';\n}\n\n.TooltipValue___1nc1C {\n  flex-grow: 1;\n  text-align: end;\n}\n\n.DurationsWrapper___10A0R {\n  flex-grow: 1;\n}\n\n.DurationsList___NtAHH {\n  list-style: none;\n  margin: 0 0 0 1rem;\n  padding: 0;\n}\n\n.DurationsListItem___Q0jav {\n  display: flex;\n}\n\n.DurationsLabel___XxynS {\n  margin-right: 0.25rem;\n}\n.DurationsLabel___XxynS:after {\n  content: ':';\n}\n\n.DurationsValue___1FRM8 {\n  flex-grow: 1;\n  text-align: end;\n}", ""]);

// exports
exports.locals = {
	"List": "List___1_Mwa",
	"Tooltip": "Tooltip___2j_4b",
	"TooltipList": "TooltipList___26ss7",
	"TooltipListItem": "TooltipListItem___3xWli",
	"TooltipLabel": "TooltipLabel___2xbrN",
	"TooltipValue": "TooltipValue___1nc1C",
	"DurationsWrapper": "DurationsWrapper___10A0R",
	"DurationsList": "DurationsList___NtAHH",
	"DurationsListItem": "DurationsListItem___Q0jav",
	"DurationsLabel": "DurationsLabel___XxynS",
	"DurationsValue": "DurationsValue___1FRM8"
};

/***/ }),

/***/ 8526:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Outer___2YMUU {\n  user-select: none;\n  cursor: pointer;\n  border-bottom: 3px solid transparent;\n  padding-top: 4px;\n  padding-bottom: 1px;\n  display: flex;\n  align-items: flex-end;\n}\n.Outer___2YMUU:hover {\n  background-color: var(--color-background);\n}\n\n.Inner___TFCLU,\n.InnerSelected___2Qf2T {\n  width: 100%;\n  min-height: 2px;\n  background-color: var(--color-commit-did-not-render-fill);\n  color: var(--color-commit-did-not-render-fill-text);\n}\n\n.InnerSelected___2Qf2T {\n  background-color: var(--color-button-active);\n}", ""]);

// exports
exports.locals = {
	"Outer": "Outer___2YMUU",
	"Inner": "Inner___TFCLU",
	"InnerSelected": "InnerSelected___2Qf2T"
};

/***/ }),

/***/ 8735:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Button___7tgtJ {\n  flex: 0 0 auto;\n  margin-left: 0.25rem;\n}\n\n.Commits___2KF5W {\n  height: 100%;\n  min-width: 30px;\n  margin-left: 0.25rem;\n  overflow: visible;\n}\n.Commits___2KF5W:focus {\n  outline: none;\n  background-color: var(--color-button-background-focus);\n}\n\n.IndexLabel___36CS7 {\n  flex: 0 0 auto;\n  white-space: nowrap;\n  font-family: var(--font-family-monospace);\n  margin-left: 0.25rem;\n}\n\n.NoCommits___3GzV1 {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--color-dim);\n}\n\n.Input___2QoRI {\n  background: none;\n  font-size: var(--font-size-sans-normal);\n  text-align: right;\n  font-family: var(--font-family-monospace);\n  border: 1px solid transparent;\n  border-radius: 0.125rem;\n  padding: 0.125rem;\n  color: var(--color-attribute-editable-value);\n}\n\n.Input___2QoRI:focus {\n  background-color: var(--color-button-background-focus);\n  outline: none;\n}\n", ""]);

// exports
exports.locals = {
	"Button": "Button___7tgtJ",
	"Commits": "Commits___2KF5W",
	"IndexLabel": "IndexLabel___36CS7",
	"NoCommits": "NoCommits___3GzV1",
	"Input": "Input___2QoRI"
};

/***/ }),

/***/ 3956:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Tooltip___NP68S {\n  position: absolute;\n  pointer-events: none;\n  border: none;\n  border-radius: 0.25rem;\n  padding: 0.25rem 0.5rem;\n  font-family: var(--font-family-sans);\n  font-size: 12px;\n  background-color: var(--color-tooltip-background);\n  color: var(--color-tooltip-text);\n  opacity: 1;\n  white-space: nowrap;\n  /* Make sure this is above the DevTools, which are above the Overlay */\n  z-index: 10000002;\n}\n\n.Tooltip___NP68S.hidden___3rGbV {\n  opacity: 0;\n}\n\n\n.Container___3aJAm {\n  width: -moz-max-content;\n  width: -webkit-max-content;\n}\n", ""]);

// exports
exports.locals = {
	"Tooltip": "Tooltip___NP68S",
	"hidden": "hidden___3rGbV",
	"Container": "Container___3aJAm"
};

/***/ }),

/***/ 523:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Updaters___ykaBk {\n  margin: 0 0 0.5rem;\n}\n\n.NoUpdaters___2ZO7w,\n.Updater___f5nQz,\n.UnmountedUpdater___2Smse {\n  display: block;\n  width: 100%;\n  text-align: left;\n  background: none;\n  border: none;\n  padding: 0.25rem 0.5rem;\n  color: var(--color-text);\n}\n.Updater___f5nQz:focus,\n.Updater___f5nQz:hover {\n  outline: none;\n  background-color: var(--color-background-hover);\n}\n\n.NoUpdaters___2ZO7w,\n.UnmountedUpdater___2Smse {\n  color: var(--color-dim);\n}\n", ""]);

// exports
exports.locals = {
	"Updaters": "Updaters___ykaBk",
	"NoUpdaters": "NoUpdaters___2ZO7w",
	"Updater": "Updater___f5nQz",
	"UnmountedUpdater": "UnmountedUpdater___2Smse"
};

/***/ }),

/***/ 6061:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Item___2hxYk {\n  margin-top: 0.25rem;\n}\n\n.Key___1tUd1 {\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-small);\n  line-height: 1;\n}\n\n.Key___1tUd1:first-of-type::before {\n  content: ' (';\n}\n\n.Key___1tUd1::after {\n  content: ', ';\n}\n\n.Key___1tUd1:last-of-type::after {\n  content: ')';\n}\n\n.Label___2zyeV {\n  font-weight: bold;\n}\n", ""]);

// exports
exports.locals = {
	"Item": "Item___2hxYk",
	"Key": "Key___1tUd1",
	"Label": "Label___2zyeV"
};

/***/ }),

/***/ 3199:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".ReactLogo___O8zf5 {\n  width: 1.75rem;\n  height: 1.75rem;\n  margin: 0 0.75rem 0 0.25rem;\n  color: var(--color-button-active);\n}\n", ""]);

// exports
exports.locals = {
	"ReactLogo": "ReactLogo___O8zf5"
};

/***/ }),

/***/ 4041:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".SearchInput___5BLz9 {\n  flex: 1 1;\n  display: flex;\n  align-items: center;\n}\n\n.Input___15H-Z {\n  flex: 1 1 100px;\n  width: 100px;\n  font-size: var(--font-size-sans-large);\n  outline: none;\n  border: none;\n  background-color: var(--color-background);\n  color: var(--color-text);\n  padding-left: 1.5rem;\n  margin-left: -1rem;\n}\n\n.InputIcon___2jd-q {\n  pointer-events: none;\n  z-index: 2;\n  color: var(--color-dimmer);\n}\n\n.IndexLabel___98Dk_ {\n  color: var(--color-dim);\n  font-size: var(--font-size-sans-normal);\n  white-space: pre;\n}\n\n.LeftVRule___B5avU{\n  height: 20px;\n  width: 1px;\n  background-color: var(--color-border);\n}\n.LeftVRule___B5avU {\n  margin: 0 0.25rem 0 0.5rem;\n}\n", ""]);

// exports
exports.locals = {
	"SearchInput": "SearchInput___5BLz9",
	"Input": "Input___15H-Z",
	"InputIcon": "InputIcon___2jd-q",
	"IndexLabel": "IndexLabel___98Dk_",
	"LeftVRule": "LeftVRule___B5avU"
};

/***/ }),

/***/ 5543:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Background___3ncIs {\n  position: absolute;\n  z-index: 3;\n  width: 100%;\n  top: 0;\n  bottom: 0;\n  background-color: var(--color-modal-background);\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  font-size: var(--font-size-sans-normal);\n  padding: 1rem;\n}\n\n.Modal___rU10h {\n  display: flex;\n  flex-direction: column;\n  flex: 0 1 auto;\n  max-height: 100%;\n  background-color: var(--color-background);\n  border: 1px solid var(--color-border);\n  box-shadow: 0 2px 4px var(--color-shadow);\n  border-radius: 0.25rem;\n  overflow: auto;\n  width: 410px;\n  max-width: 100%;\n}\n\n.Spacer___3_C0y {\n  flex: 1;\n}\n\n.Tabs___3mQky {\n  display: flex;\n  flex-direction: row;\n  border-bottom: 1px solid var(--color-border);\n  padding-right: 0.25rem;\n  flex: 0 0 auto;\n}\n\n.Content___2YU9A {\n  padding: 0.5rem;\n  flex: 0 1 auto;\n  overflow: auto;\n}", ""]);

// exports
exports.locals = {
	"Background": "Background___3ncIs",
	"Modal": "Modal___rU10h",
	"Spacer": "Spacer___3_C0y",
	"Tabs": "Tabs___3mQky",
	"Content": "Content___2YU9A"
};

/***/ }),

/***/ 3785:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Settings___29B2k {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  font-family: var(--font-family-sans);\n  font-size: var(--font-size-sans-normal);\n}\n\n.Setting___1NJgU {\n  margin-bottom: 0.5rem;\n}\n.Setting___1NJgU:last-of-type {\n  margin-bottom: 0;\n}\n\n.OpenInURLSetting___2eTwK {\n  margin: 0.5rem 0;\n}\n\n.OptionGroup___2ZgHP {\n  display: inline-flex;\n  flex-direction: row;\n  align-items: center;\n  user-select: none;\n  margin: 0 1rem 0.5rem 0;\n}\n.OptionGroup___2ZgHP:last-of-type {\n  margin-right: 0;\n}\n\n.RadioLabel___1oyOB {\n  display: inline;\n  margin-right: 0.5rem;\n}\n\n.Spacer___1rTaV {\n  height: 0.5rem;\n}\n\n.CheckboxOption___2XWVZ {\n  display: block;\n  padding: 0 0 0.5rem;\n}\n\n.HRule___1h4ad {\n  height: 1px;\n  background-color: var(--color-border);\n  width: 100%;\n  border: none;\n  margin: 0.5rem 0;\n}\n\n.Header___NGIlt {\n  font-size: var(--font-size-sans-large);\n  margin-top: 0.5rem;\n}\n\n.ButtonIcon___3ZAjp {\n  margin-right: 0.25rem;\n}\n\n.NoFiltersCell___1WYR2 {\n  padding: 0.25rem 0;\n  color: var(--color-dim);\n}\n\n.Table___2srES {\n  min-width: 20rem;\n  margin-top: 0.5rem;\n  border-spacing: 0;\n}\n\n.TableRow___3kYuW {\n  padding-bottom: 0.5rem;\n}\n\n.TableCell___1yj52 {\n  padding: 0;\n  padding-right: 0.5rem;\n}\n.TableCell___1yj52:last-of-type {\n  text-align: right;\n  padding-right: 0;\n}\n\n.Input___I9AdA {\n  border: 1px solid var(--color-border);\n  border-radius: 0.125rem;\n  padding: 0.125rem;\n  margin-left: .5rem;\n}\n\n.InvalidRegExp___35lmE,\n.InvalidRegExp___35lmE:active,\n.InvalidRegExp___35lmE:focus,\n.InvalidRegExp___35lmE:hover {\n  color: var(--color-value-invalid);\n}\n\n.ToggleOffInvalid___2Rg2K,\n.ToggleOnInvalid___1Kamt,\n.ToggleOff___3cr6E,\n.ToggleOn___3KAVB {\n  border-radius: 0.75rem;\n  width: 1rem;\n  height: 0.625rem;\n  display: flex;\n  align-items: center;\n  padding: 0.125rem;\n}\n.ToggleOffInvalid___2Rg2K {\n  background-color: var(--color-toggle-background-invalid);\n  justify-content: flex-start;\n}\n.ToggleOnInvalid___1Kamt {\n  background-color: var(--color-toggle-background-invalid);\n  justify-content: flex-end;\n}\n.ToggleOff___3cr6E {\n  background-color: var(--color-toggle-background-off);\n  justify-content: flex-start;\n}\n.ToggleOn___3KAVB {\n  background-color: var(--color-toggle-background-on);\n  justify-content: flex-end;\n}\n\n.ToggleInsideOff___1pXcm,\n.ToggleInsideOn___3kEsU {\n  border-radius: 0.375rem;\n  width: 0.375rem;\n  height: 0.375rem;\n  background-color: var(--color-toggle-text);\n}\n\n.ReleaseNotes___q8NY1 {\n  width: 100%;\n  background-color: var(--color-background-hover);\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.25rem;\n}\n\n.ReleaseNotesLink___2gjE8, .StrictModeLink___RM2Yt {\n  color: var(--color-button-active);\n}\n\n.Warning___3xUvj {\n  color: var(--color-error-text);\n}\n\n.VersionsList___35cmE {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.Setting___1NJgU .Setting___1NJgU {\n  margin-left: 1rem;\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.Setting___1NJgU label:has(input:disabled) {\n  opacity: 0.5;\n  cursor: default;\n}\n", ""]);

// exports
exports.locals = {
	"Settings": "Settings___29B2k",
	"Setting": "Setting___1NJgU",
	"OpenInURLSetting": "OpenInURLSetting___2eTwK",
	"OptionGroup": "OptionGroup___2ZgHP",
	"RadioLabel": "RadioLabel___1oyOB",
	"Spacer": "Spacer___1rTaV",
	"CheckboxOption": "CheckboxOption___2XWVZ",
	"HRule": "HRule___1h4ad",
	"Header": "Header___NGIlt",
	"ButtonIcon": "ButtonIcon___3ZAjp",
	"NoFiltersCell": "NoFiltersCell___1WYR2",
	"Table": "Table___2srES",
	"TableRow": "TableRow___3kYuW",
	"TableCell": "TableCell___1yj52",
	"Input": "Input___I9AdA",
	"InvalidRegExp": "InvalidRegExp___35lmE",
	"ToggleOffInvalid": "ToggleOffInvalid___2Rg2K",
	"ToggleOnInvalid": "ToggleOnInvalid___1Kamt",
	"ToggleOff": "ToggleOff___3cr6E",
	"ToggleOn": "ToggleOn___3KAVB",
	"ToggleInsideOff": "ToggleInsideOff___1pXcm",
	"ToggleInsideOn": "ToggleInsideOn___3kEsU",
	"ReleaseNotes": "ReleaseNotes___q8NY1",
	"ReleaseNotesLink": "ReleaseNotesLink___2gjE8",
	"StrictModeLink": "StrictModeLink___RM2Yt",
	"Warning": "Warning___3xUvj",
	"VersionsList": "VersionsList___35cmE"
};

/***/ }),

/***/ 5297:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Tab___20JoC,\n.TabCurrent___b4c3L,\n.TabDisabled___l1-ZF {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border-top: 3px solid transparent;\n  border-bottom: 3px solid transparent;\n  user-select: none;\n  color: var(--color-text);\n\n  /* Hide radio buttons for Firefox too */\n  position:  relative;\n\n  /* Electron drag area */\n  -webkit-app-region: no-drag;\n}\n.Tab___20JoC:hover,\n.TabCurrent___b4c3L:hover {\n  background-color: var(--color-background-hover);\n}\n.Tab___20JoC:focus-within,\n.TabCurrent___b4c3L:focus-within {\n  background-color: var(--color-background-hover);\n}\n\n.TabCurrent___b4c3L {\n  border-bottom: 3px solid var(--color-tab-selected-border);\n}\n\n.TabDisabled___l1-ZF {\n  color: var(--color-dim);\n  cursor: default;\n}\n\n.TabSizeNavigation___2GG1g {\n  font-size: var(--font-size-sans-large);\n  padding: 0.5rem 1rem;\n}\n.TabSizeProfiler___2wFBf {\n  font-size: var(--font-size-sans-normal);\n  padding: 0.25rem 0.5rem;\n}\n.TabSizeSettings___3V4f9 {\n  font-size: var(--font-size-sans-normal);\n  padding: 0.25rem 0.5rem;\n}\n\n.Input___2unCl {\n  width: 0;\n  margin: 0;\n  opacity: 0;\n\n  /* Hide radio buttons for Firefox too */\n  position:  absolute;\n}\n\n.IconSizeNavigation___mZIpl,\n.IconSizeProfiler___1jYXs,\n.IconSizeSettings___1HNRk {\n  margin-right: 0.5rem;\n  color: var(--color-button-active);\n}\n\n.IconDisabled___17Sd2 {\n  color: var(--color-dim);\n}\n\n.IconSizeNavigation___mZIpl {\n  width: 1.5rem;\n  height: 1.5rem;\n}\n.IconSizeProfiler___1jYXs {\n  width: 1rem;\n  height: 1rem;\n}\n.IconSizeSettings___1HNRk {\n  width: 1rem;\n  height: 1rem;\n}\n\n.TabLabelNavigation___2q3j3,\n.TabLabelProfiler___2QHeh,\n.TabLabelSettings___1pDKr {\n}\n\n.VRule___QpkmZ {\n  height: 20px;\n  width: 1px;\n  border-left: 1px solid var(--color-border);\n  padding-left: 0.25rem;\n  margin-left: 0.25rem;\n}\n\n@media screen and (max-width: 525px) {\n  .IconSizeNavigation___mZIpl {\n    margin-right: 0;\n  }\n\n  .TabLabelNavigation___2q3j3 {\n    display: none;\n  }\n}\n\n@media screen and (max-width: 900px) {\n  .TabLabelProfiler___2QHeh {\n    display: none;\n  }\n\n  .IconSizeProfiler___1jYXs {\n    margin-right: 0;\n  }\n}\n\n@media screen and (max-width: 400px) {\n  .TabLabelSettings___1pDKr {\n    display: none;\n  }\n\n  .IconSizeSettings___1HNRk {\n    margin-right: 0;\n  }\n}\n", ""]);

// exports
exports.locals = {
	"Tab": "Tab___20JoC",
	"TabCurrent": "TabCurrent___b4c3L",
	"TabDisabled": "TabDisabled___l1-ZF",
	"TabSizeNavigation": "TabSizeNavigation___2GG1g",
	"TabSizeProfiler": "TabSizeProfiler___2wFBf",
	"TabSizeSettings": "TabSizeSettings___3V4f9",
	"Input": "Input___2unCl",
	"IconSizeNavigation": "IconSizeNavigation___mZIpl",
	"IconSizeProfiler": "IconSizeProfiler___1jYXs",
	"IconSizeSettings": "IconSizeSettings___1HNRk",
	"IconDisabled": "IconDisabled___17Sd2",
	"TabLabelNavigation": "TabLabelNavigation___2q3j3",
	"TabLabelProfiler": "TabLabelProfiler___2QHeh",
	"TabLabelSettings": "TabLabelSettings___1pDKr",
	"VRule": "VRule___QpkmZ"
};

/***/ }),

/***/ 9519:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".ToggleDisabled___iQeZ3,\n.ToggleOn___3XJTo,\n.ToggleOff___142SC {\n  background: var(--color-button-background);\n  border: none;\n  border-radius: 0.25rem;\n  padding: 0;\n  flex: 0 0 auto;\n}\n\n.ToggleContent___1C-vg {\n  display: inline-flex;\n  align-items: center;\n  border-radius: 0.25rem;\n  padding: 0.25rem;\n}\n\n.ToggleOff___142SC {\n  border: none;\n  background: var(--color-button-background);\n  color: var(--color-button);\n}\n.ToggleOff___142SC:hover {\n  color: var(--color-button-hover);\n}\n\n.ToggleOn___3XJTo,\n.ToggleOn___3XJTo:active {\n  color: var(--color-button-active);\n  outline: none;\n}\n\n.ToggleOn___3XJTo:focus,\n.ToggleOff___142SC:focus,\n.ToggleContent___1C-vg:focus {\n  outline: none;\n}\n\n.ToggleOn___3XJTo:focus > .ToggleContent___1C-vg,\n.ToggleOff___142SC:focus > .ToggleContent___1C-vg {\n  background: var(--color-button-background-focus);\n}\n\n.ToggleDisabled___iQeZ3 {\n  background: var(--color-button-background);\n  color: var(--color-button-disabled);\n  cursor: default;\n}\n", ""]);

// exports
exports.locals = {
	"ToggleDisabled": "ToggleDisabled___iQeZ3",
	"ToggleOn": "ToggleOn___3XJTo",
	"ToggleOff": "ToggleOff___142SC",
	"ToggleContent": "ToggleContent___1C-vg"
};

/***/ }),

/***/ 8462:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Column___3s3y6 { \n  display: flex;  \n  flex-direction: column; \n} \n\n.Title___2c8MM {  \n  font-size: var(--font-size-sans-large); \n  margin-bottom: 0.5rem;  \n} \n\n.Version___34HO3 {\n  color: var(--color-bridge-version-number);\n  font-weight: bold;\n}\n\n.NpmCommand___2lHg1 {\n  display: flex;\n  justify-content: space-between;\n  padding: 0.25rem 0.25rem 0.25rem 0.5rem;\n  background-color: var(--color-bridge-version-npm-background);\n  color: var(--color-bridge-version-npm-text);\n  margin: 0;\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-large);\n}\n\n.Paragraph___3H72v {\n  margin: 0.5rem 0;\n}\n\n.Link___5TAEG {\n  color: var(--color-link);\n}", ""]);

// exports
exports.locals = {
	"Column": "Column___3s3y6",
	"Title": "Title___2c8MM",
	"Version": "Version___34HO3",
	"NpmCommand": "NpmCommand___2lHg1",
	"Paragraph": "Paragraph___3H72v",
	"Link": "Link___5TAEG"
};

/***/ }),

/***/ 9043:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Row___3IwJ6 {  \n  display: flex;  \n  flex-direction: row;  \n  align-items: center;  \n} \n\n.Title___1PTyg {  \n  font-size: var(--font-size-sans-large); \n  margin-bottom: 0.5rem;  \n} \n\n.ReleaseNotesLink___2_Y38 { \n  color: var(--color-button-active);  \n}", ""]);

// exports
exports.locals = {
	"Row": "Row___3IwJ6",
	"Title": "Title___1PTyg",
	"ReleaseNotesLink": "ReleaseNotesLink___2_Y38"
};

/***/ }),

/***/ 3438:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Command___2iS3V {\n  background-color: var(--color-dimmest);\n  padding: 0.25rem 0.5rem;\n  display: block;\n  border-radius: 0.125rem;\n}\n", ""]);

// exports
exports.locals = {
	"Command": "Command___2iS3V"
};

/***/ }),

/***/ 5156:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ":root {\n  /* Font smoothing */\n  --font-smoothing: auto;\n\n  /* GitHub.com system fonts */\n  --font-family-monospace: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo,\n    Courier, monospace;\n  --font-family-sans: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica,\n    Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;\n}\n", ""]);

// exports


/***/ }),

/***/ 4163:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".CanvasPage___1bMJ5 {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n", ""]);

// exports
exports.locals = {
	"CanvasPage": "CanvasPage___1bMJ5"
};

/***/ }),

/***/ 2243:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Tooltip___zx7EV {\n  position: fixed;\n}\n\n.TooltipSection___1ymuA,\n.TooltipWarningSection___3NM2z,\n.SingleLineTextSection___Xt1VX {\n  display: block;\n  border-radius: 0.125rem;\n  padding: 0.25rem;\n  user-select: none;\n  pointer-events: none;\n  background-color: var(--color-tooltip-background);\n  box-shadow: 1px 1px 2px var(--color-shadow);\n  color: var(--color-tooltip-text);\n  font-size: 11px;\n}\n.TooltipWarningSection___3NM2z {\n  margin-top: 0.25rem;\n  background-color: var(--color-warning-background);\n}\n.TooltipSection___1ymuA,\n.TooltipWarningSection___3NM2z {\n  max-width: 300px;\n}\n.SingleLineTextSection___Xt1VX {\n  white-space: nowrap;\n}\n\n.Divider___3WRJj {\n  height: 1px;\n  background-color: #aaa;\n  margin: 0.25rem 0;\n}\n\n.DetailsGrid___2geMz {\n  display: grid;\n  padding-top: 5px;\n  grid-gap: 2px 5px;\n  grid-template-columns: min-content auto;\n}\n\n.DetailsGridLabel___Vo1pu {\n  color: var(--color-dim);\n  text-align: right;\n  white-space: nowrap;\n}\n\n.DetailsGridLongValue___3vEFb {\n  word-break: break-all;\n  max-height: 50vh;\n  overflow: hidden;\n}\n\n.FlamechartStackFrameName___15Syk {\n  word-break: break-word;\n}\n\n.ComponentName___M_PGg {\n  font-weight: bold;\n  word-break: break-word;\n  margin-right: 0.25rem;\n}\n\n.ReactMeasureLabel___rpyRN {\n}\n\n.UserTimingLabel___1Fpxr {\n  word-break: break-word;\n}\n\n.NativeEventName___HXtAH {\n  font-weight: bold;\n  word-break: break-word;\n  margin-right: 0.25rem;\n}\n\n.WarningText___cf1lY {\n  color: var(--color-warning-text-color);\n}\n\n.Image___3nrFz {\n  border: 1px solid var(--color-border);\n}\n\n.DimText___asq74 {\n  color: var(--color-dim);\n}", ""]);

// exports
exports.locals = {
	"Tooltip": "Tooltip___zx7EV",
	"TooltipSection": "TooltipSection___1ymuA",
	"TooltipWarningSection": "TooltipWarningSection___3NM2z",
	"SingleLineTextSection": "SingleLineTextSection___Xt1VX",
	"Divider": "Divider___3WRJj",
	"DetailsGrid": "DetailsGrid___2geMz",
	"DetailsGridLabel": "DetailsGridLabel___Vo1pu",
	"DetailsGridLongValue": "DetailsGridLongValue___3vEFb",
	"FlamechartStackFrameName": "FlamechartStackFrameName___15Syk",
	"ComponentName": "ComponentName___M_PGg",
	"ReactMeasureLabel": "ReactMeasureLabel___rpyRN",
	"UserTimingLabel": "UserTimingLabel___1Fpxr",
	"NativeEventName": "NativeEventName___HXtAH",
	"WarningText": "WarningText___cf1lY",
	"Image": "Image___3nrFz",
	"DimText": "DimText___asq74"
};

/***/ }),

/***/ 7010:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Content___2QeJf {\n  width: 100%;\n  position: relative;\n  flex: 1 1 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n\n.ErrorMessage___1LWbq {\n  margin: 0.5rem 0;\n  color: var(--color-dim);\n  font-family: var(--font-family-monospace);\n  font-size: var(--font-size-monospace-normal);\n}\n\n.Row___1Veyi {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex-flow: wrap;\n}\n\n.EmptyStateContainer___2OQbO {\n  text-align: center;\n}\n\n.Header___2vzMq {\n  font-size: var(--font-size-sans-large);\n  margin-bottom: 0.5rem;\n}\n", ""]);

// exports
exports.locals = {
	"Content": "Content___2QeJf",
	"ErrorMessage": "ErrorMessage___1LWbq",
	"Row": "Row___1Veyi",
	"EmptyStateContainer": "EmptyStateContainer___2OQbO",
	"Header": "Header___2vzMq"
};

/***/ }),

/***/ 8970:
/***/ ((module, exports, __webpack_require__) => {

exports = module.exports = __webpack_require__(9843)(false);
// imports


// module
exports.push([module.id, ".Column___5Ol48 {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 0 1rem;\n}\n\n.Header___322Sm {\n  font-size: var(--font-size-sans-large);\n  margin-bottom: 0.5rem;\n}\n\n.Paragraph___22fN5 {\n  text-align: center;\n  margin: 0;\n}\n\n.Link___36nzP {\n  color: var(--color-link);\n}\n\n.LearnMoreRow___aWp1e {\n  margin-top: 1rem;\n  color: var(--color-dim);\n  font-size: var(--font-size-sans-small);\n}\n\n.Code___19uUo {\n  color: var(--color-bridge-version-number);\n}\n\n.MetaGKRow___1tKC1 {\n  background: var(--color-background-hover);\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.25rem;\n  margin-top: 1rem;\n}", ""]);

// exports
exports.locals = {
	"Column": "Column___5Ol48",
	"Header": "Header___322Sm",
	"Paragraph": "Paragraph___22fN5",
	"Link": "Link___36nzP",
	"LearnMoreRow": "LearnMoreRow___aWp1e",
	"Code": "Code___19uUo",
	"MetaGKRow": "MetaGKRow___1tKC1"
};

/***/ }),

/***/ 9026:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(1857);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 5714:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(800);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 821:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(5546);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 2568:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(1914);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 2709:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(2439);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 8710:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(3499);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 2423:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(7827);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 3975:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(5584);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 9206:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(7304);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 9328:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(9318);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 6774:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(2668);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 5732:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(6237);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 9870:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(1102);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 1390:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(7596);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 6720:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(4158);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 8155:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(4427);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 3142:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(548);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 5893:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(9993);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 7754:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(4576);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 9520:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(1354);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 7894:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(531);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 4373:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(8716);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 3002:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(4045);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 1265:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(7170);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 53:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(2006);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 701:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(9373);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 3770:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(9002);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 3194:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(6144);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 7247:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(6531);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 6454:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(3308);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 7665:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(3741);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 8533:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(2258);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 9963:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(8739);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 1085:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(8797);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 2916:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(1908);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 563:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(9772);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 1477:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(3415);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 6764:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(2143);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 1463:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(1656);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 5167:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(5195);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 2726:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(1445);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 9086:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(7927);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 3942:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(6970);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 6148:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(6394);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 3541:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(1707);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 9363:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(4721);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 36:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(3403);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 9752:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(7144);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 7852:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(1853);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 5495:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(7419);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 2841:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(1780);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 699:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(9825);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 883:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(4770);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 7739:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(2770);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 4073:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(9414);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 644:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(7012);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 6386:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(8526);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 359:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(8735);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 9606:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(3956);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 4461:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(523);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 7295:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(6061);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 4306:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(3199);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 2530:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(4041);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 8272:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(5543);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 1654:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(3785);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 223:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(5297);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 7712:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(9519);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 1792:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(8462);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 7357:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(9043);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 1322:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(3438);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 2932:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(5156);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 7138:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(4163);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 2874:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(2243);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 3234:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(7010);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 778:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {


var content = __webpack_require__(8970);

if(typeof content === 'string') content = [[module.id, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(2379)(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 2379:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target, parent) {
  if (parent){
    return parent.querySelector(target);
  }
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target, parent) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target, parent);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(6508);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertAt.before, target);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	if(options.attrs.nonce === undefined) {
		var nonce = getNonce();
		if (nonce) {
			options.attrs.nonce = nonce;
		}
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function getNonce() {
	if (false) {}

	return __webpack_require__.nc;
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = typeof options.transform === 'function'
		 ? options.transform(obj.css) 
		 : options.transform.default(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		id: moduleId,
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/compat get default export */
/******/ (() => {
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = (module) => {
/******/ 		var getter = module && module.__esModule ?
/******/ 			() => (module['default']) :
/******/ 			() => (module);
/******/ 		__webpack_require__.d(getter, { a: getter });
/******/ 		return getter;
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/nonce */
/******/ (() => {
/******/ 	__webpack_require__.nc = undefined;
/******/ })();
/******/ 
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "EH": () => (/* binding */ createBridge),
  "MT": () => (/* binding */ createStore),
  "j2": () => (/* binding */ initialize),
  "l3": () => (/* reexport */ prepareProfilingDataExport),
  "TV": () => (/* reexport */ prepareProfilingDataFrontendFromExport)
});

// NAMESPACE OBJECT: ../react-devtools-timeline/src/import-worker/importFile.js
var importFile_namespaceObject = {};
__webpack_require__.r(importFile_namespaceObject);
__webpack_require__.d(importFile_namespaceObject, {
  "importFile": () => (importFile)
});

// NAMESPACE OBJECT: ../react-devtools-timeline/src/import-worker/importFile.worker.js
var importFile_worker_namespaceObject = {};
__webpack_require__.r(importFile_worker_namespaceObject);

;// CONCATENATED MODULE: external "react"
var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var y = x => () => x
const external_react_namespaceObject = x({ ["Children"]: () => __WEBPACK_EXTERNAL_MODULE_react__.Children, ["Component"]: () => __WEBPACK_EXTERNAL_MODULE_react__.Component, ["Fragment"]: () => __WEBPACK_EXTERNAL_MODULE_react__.Fragment, ["PureComponent"]: () => __WEBPACK_EXTERNAL_MODULE_react__.PureComponent, ["Suspense"]: () => __WEBPACK_EXTERNAL_MODULE_react__.Suspense, ["__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED"]: () => __WEBPACK_EXTERNAL_MODULE_react__.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, ["cloneElement"]: () => __WEBPACK_EXTERNAL_MODULE_react__.cloneElement, ["createContext"]: () => __WEBPACK_EXTERNAL_MODULE_react__.createContext, ["createElement"]: () => __WEBPACK_EXTERNAL_MODULE_react__.createElement, ["createRef"]: () => __WEBPACK_EXTERNAL_MODULE_react__.createRef, ["forwardRef"]: () => __WEBPACK_EXTERNAL_MODULE_react__.forwardRef, ["memo"]: () => __WEBPACK_EXTERNAL_MODULE_react__.memo, ["startTransition"]: () => __WEBPACK_EXTERNAL_MODULE_react__.startTransition, ["unstable_getCacheForType"]: () => __WEBPACK_EXTERNAL_MODULE_react__.unstable_getCacheForType, ["unstable_useCacheRefresh"]: () => __WEBPACK_EXTERNAL_MODULE_react__.unstable_useCacheRefresh, ["use"]: () => __WEBPACK_EXTERNAL_MODULE_react__.use, ["useCallback"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useCallback, ["useContext"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useContext, ["useDeferredValue"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useDeferredValue, ["useEffect"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useEffect, ["useImperativeHandle"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useImperativeHandle, ["useLayoutEffect"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useLayoutEffect, ["useMemo"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useMemo, ["useReducer"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useReducer, ["useRef"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useRef, ["useState"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useState, ["useSyncExternalStore"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useSyncExternalStore, ["useTransition"]: () => __WEBPACK_EXTERNAL_MODULE_react__.useTransition });
;// CONCATENATED MODULE: ../react-devtools-shared/src/events.js
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
class EventEmitter {
  constructor() {
    _defineProperty(this, "listenersMap", new Map());
  }

  addListener(event, listener) {
    const listeners = this.listenersMap.get(event);

    if (listeners === undefined) {
      this.listenersMap.set(event, [listener]);
    } else {
      const index = listeners.indexOf(listener);

      if (index < 0) {
        listeners.push(listener);
      }
    }
  }

  emit(event, ...args) {
    const listeners = this.listenersMap.get(event);

    if (listeners !== undefined) {
      if (listeners.length === 1) {
        // No need to clone or try/catch
        const listener = listeners[0];
        listener.apply(null, args);
      } else {
        let didThrow = false;
        let caughtError = null;
        const clonedListeners = Array.from(listeners);

        for (let i = 0; i < clonedListeners.length; i++) {
          const listener = clonedListeners[i];

          try {
            listener.apply(null, args);
          } catch (error) {
            if (caughtError === null) {
              didThrow = true;
              caughtError = error;
            }
          }
        }

        if (didThrow) {
          throw caughtError;
        }
      }
    }
  }

  removeAllListeners() {
    this.listenersMap.clear();
  }

  removeListener(event, listener) {
    const listeners = this.listenersMap.get(event);

    if (listeners !== undefined) {
      const index = listeners.indexOf(listener);

      if (index >= 0) {
        listeners.splice(index, 1);
      }
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-shared/src/bridge.js
function bridge_defineProperty(obj, key, value) { key = bridge_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function bridge_toPropertyKey(t) { var i = bridge_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function bridge_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
 // This message specifies the version of the DevTools protocol currently supported by the backend,
// as well as the earliest NPM version (e.g. "4.13.0") that protocol is supported by on the frontend.
// This enables an older frontend to display an upgrade message to users for a newer, unsupported backend.

// Bump protocol version whenever a backwards breaking change is made
// in the messages sent between BackendBridge and FrontendBridge.
// This mapping is embedded in both frontend and backend builds.
//
// The backend protocol will always be the latest entry in the BRIDGE_PROTOCOL array.
//
// When an older frontend connects to a newer backend,
// the backend can send the minNpmVersion and the frontend can display an NPM upgrade prompt.
//
// When a newer frontend connects with an older protocol version,
// the frontend can use the embedded minNpmVersion/maxNpmVersion values to display a downgrade prompt.
const BRIDGE_PROTOCOL = [// This version technically never existed,
// but a backwards breaking change was added in 4.11,
// so the safest guess to downgrade the frontend would be to version 4.10.
{
  version: 0,
  minNpmVersion: '"<4.11.0"',
  maxNpmVersion: '"<4.11.0"'
}, // Versions 4.11.x – 4.12.x contained the backwards breaking change,
// but we didn't add the "fix" of checking the protocol version until 4.13,
// so we don't recommend downgrading to 4.11 or 4.12.
{
  version: 1,
  minNpmVersion: '4.13.0',
  maxNpmVersion: '4.21.0'
}, // Version 2 adds a StrictMode-enabled and supports-StrictMode bits to add-root operation.
{
  version: 2,
  minNpmVersion: '4.22.0',
  maxNpmVersion: null
}];
const currentBridgeProtocol = BRIDGE_PROTOCOL[BRIDGE_PROTOCOL.length - 1];

class Bridge extends EventEmitter {
  constructor(wall) {
    super();

    bridge_defineProperty(this, "_isShutdown", false);

    bridge_defineProperty(this, "_messageQueue", []);

    bridge_defineProperty(this, "_scheduledFlush", false);

    bridge_defineProperty(this, "_wallUnlisten", null);

    bridge_defineProperty(this, "_flush", () => {
      // This method is used after the bridge is marked as destroyed in shutdown sequence,
      // so we do not bail out if the bridge marked as destroyed.
      // It is a private method that the bridge ensures is only called at the right times.
      try {
        if (this._messageQueue.length) {
          for (let i = 0; i < this._messageQueue.length; i += 2) {
            this._wall.send(this._messageQueue[i], ...this._messageQueue[i + 1]);
          }

          this._messageQueue.length = 0;
        }
      } finally {
        // We set this at the end in case new messages are added synchronously above.
        // They're already handled so they shouldn't queue more flushes.
        this._scheduledFlush = false;
      }
    });

    bridge_defineProperty(this, "overrideValueAtPath", ({
      id,
      path,
      rendererID,
      type,
      value
    }) => {
      switch (type) {
        case 'context':
          this.send('overrideContext', {
            id,
            path,
            rendererID,
            wasForwarded: true,
            value
          });
          break;

        case 'hooks':
          this.send('overrideHookState', {
            id,
            path,
            rendererID,
            wasForwarded: true,
            value
          });
          break;

        case 'props':
          this.send('overrideProps', {
            id,
            path,
            rendererID,
            wasForwarded: true,
            value
          });
          break;

        case 'state':
          this.send('overrideState', {
            id,
            path,
            rendererID,
            wasForwarded: true,
            value
          });
          break;
      }
    });

    this._wall = wall;
    this._wallUnlisten = wall.listen(message => {
      if (message && message.event) {
        this.emit(message.event, message.payload);
      }
    }) || null; // Temporarily support older standalone front-ends sending commands to newer embedded backends.
    // We do this because React Native embeds the React DevTools backend,
    // but cannot control which version of the frontend users use.

    this.addListener('overrideValueAtPath', this.overrideValueAtPath);
  } // Listening directly to the wall isn't advised.
  // It can be used to listen for legacy (v3) messages (since they use a different format).


  get wall() {
    return this._wall;
  }

  send(event, ...payload) {
    if (this._isShutdown) {
      console.warn(`Cannot send message "${event}" through a Bridge that has been shutdown.`);
      return;
    } // When we receive a message:
    // - we add it to our queue of messages to be sent
    // - if there hasn't been a message recently, we set a timer for 0 ms in
    //   the future, allowing all messages created in the same tick to be sent
    //   together
    // - if there *has* been a message flushed in the last BATCH_DURATION ms
    //   (or we're waiting for our setTimeout-0 to fire), then _timeoutID will
    //   be set, and we'll simply add to the queue and wait for that


    this._messageQueue.push(event, payload);

    if (!this._scheduledFlush) {
      this._scheduledFlush = true; // $FlowFixMe

      if (typeof devtoolsJestTestScheduler === 'function') {
        // This exists just for our own jest tests.
        // They're written in such a way that we can neither mock queueMicrotask
        // because then we break React DOM and we can't not mock it because then
        // we can't synchronously flush it. So they need to be rewritten.
        // $FlowFixMe
        devtoolsJestTestScheduler(this._flush); // eslint-disable-line no-undef
      } else {
        queueMicrotask(this._flush);
      }
    }
  }

  shutdown() {
    if (this._isShutdown) {
      console.warn('Bridge was already shutdown.');
      return;
    } // Queue the shutdown outgoing message for subscribers.


    this.emit('shutdown');
    this.send('shutdown'); // Mark this bridge as destroyed, i.e. disable its public API.

    this._isShutdown = true; // Disable the API inherited from EventEmitter that can add more listeners and send more messages.
    // $FlowFixMe[cannot-write] This property is not writable.

    this.addListener = function () {}; // $FlowFixMe[cannot-write] This property is not writable.


    this.emit = function () {}; // NOTE: There's also EventEmitter API like `on` and `prependListener` that we didn't add to our Flow type of EventEmitter.
    // Unsubscribe this bridge incoming message listeners to be sure, and so they don't have to do that.


    this.removeAllListeners(); // Stop accepting and emitting incoming messages from the wall.

    const wallUnlisten = this._wallUnlisten;

    if (wallUnlisten) {
      wallUnlisten();
    } // Synchronously flush all queued outgoing messages.
    // At this step the subscribers' code may run in this call stack.


    do {
      this._flush();
    } while (this._messageQueue.length);
  } // Temporarily support older standalone backends by forwarding "overrideValueAtPath" commands
  // to the older message types they may be listening to.


}

/* harmony default export */ const bridge = (Bridge);
// EXTERNAL MODULE: ../../node_modules/clipboard-js/clipboard.js
var clipboard = __webpack_require__(3811);
// EXTERNAL MODULE: ../../node_modules/util/util.js
var util = __webpack_require__(3082);
;// CONCATENATED MODULE: ../react-devtools-shared/src/constants.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
const CHROME_WEBSTORE_EXTENSION_ID = 'fmkadmapgofadopljbjfkapdkoienihi';
const INTERNAL_EXTENSION_ID = 'dnjnjgbfilfphmojnmhliehogmojhclc';
const LOCAL_EXTENSION_ID = 'ikiahnapldjmdmpkmfhjdjilojjhgcbf'; // Flip this flag to true to enable verbose console debug logging.

const __DEBUG__ = false; // Flip this flag to true to enable performance.mark() and performance.measure() timings.

const constants_PERFORMANCE_PROFILE_ = false;
const constants_TREE_OPERATION_ADD = 1;
const constants_TREE_OPERATION_REMOVE = 2;
const constants_TREE_OPERATION_REORDER_CHILDREN = 3;
const constants_TREE_OPERATION_UPDATE_TREE_BASE_DURATION = 4;
const constants_TREE_OPERATION_UPDATE_ERRORS_OR_WARNINGS = 5;
const constants_TREE_OPERATION_REMOVE_ROOT = 6;
const constants_TREE_OPERATION_SET_SUBTREE_MODE = 7;
const PROFILING_FLAG_BASIC_SUPPORT = 0b01;
const PROFILING_FLAG_TIMELINE_SUPPORT = 0b10;
const LOCAL_STORAGE_DEFAULT_TAB_KEY = 'React::DevTools::defaultTab';
const LOCAL_STORAGE_COMPONENT_FILTER_PREFERENCES_KEY = 'React::DevTools::componentFilters';
const SESSION_STORAGE_LAST_SELECTION_KEY = 'React::DevTools::lastSelection';
const LOCAL_STORAGE_OPEN_IN_EDITOR_URL = 'React::DevTools::openInEditorUrl';
const LOCAL_STORAGE_OPEN_IN_EDITOR_URL_PRESET = 'React::DevTools::openInEditorUrlPreset';
const LOCAL_STORAGE_PARSE_HOOK_NAMES_KEY = 'React::DevTools::parseHookNames';
const constants_SESSION_STORAGE_RECORD_CHANGE_DESCRIPTIONS_KEY = 'React::DevTools::recordChangeDescriptions';
const constants_SESSION_STORAGE_RECORD_TIMELINE_KEY = 'React::DevTools::recordTimeline';
const constants_SESSION_STORAGE_RELOAD_AND_PROFILE_KEY = 'React::DevTools::reloadAndProfile';
const LOCAL_STORAGE_BROWSER_THEME = 'React::DevTools::theme';
const LOCAL_STORAGE_TRACE_UPDATES_ENABLED_KEY = 'React::DevTools::traceUpdatesEnabled';
const LOCAL_STORAGE_SUPPORTS_PROFILING_KEY = 'React::DevTools::supportsProfiling';
const PROFILER_EXPORT_VERSION = 5;
const FIREFOX_CONSOLE_DIMMING_COLOR = 'color: rgba(124, 124, 124, 0.75)';
const ANSI_STYLE_DIMMING_TEMPLATE = '\x1b[2;38;2;124;124;124m%s\x1b[0m';
const ANSI_STYLE_DIMMING_TEMPLATE_WITH_COMPONENT_STACK = '\x1b[2;38;2;124;124;124m%s %o\x1b[0m';
;// CONCATENATED MODULE: ../react-devtools-shared/src/frontend/types.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/**
 * WARNING:
 * This file contains types that are designed for React DevTools UI and how it interacts with the backend.
 * They might be used in different versions of DevTools backends.
 * Be mindful of backwards compatibility when making changes.
 */
// WARNING
// The values below are referenced by ComponentFilters (which are saved via localStorage).
// Do not change them or it will break previously saved user customizations.
// If new element types are added, use new numbers rather than re-ordering existing ones.
//
// Changing these types is also a backwards breaking change for the standalone shell,
// since the frontend and backend must share the same values-
// and the backend is embedded in certain environments (like React Native).
const ElementTypeClass = 1;
const ElementTypeContext = 2;
const ElementTypeFunction = 5;
const ElementTypeForwardRef = 6;
const ElementTypeHostComponent = 7;
const ElementTypeMemo = 8;
const ElementTypeOtherOrUnknown = 9;
const ElementTypeProfiler = 10;
const types_ElementTypeRoot = 11;
const ElementTypeSuspense = 12;
const ElementTypeSuspenseList = 13;
const ElementTypeTracingMarker = 14;
const ElementTypeVirtual = 15;
const ElementTypeViewTransition = 16;
const ElementTypeActivity = 17; // Different types of elements displayed in the Elements tree.
// These types may be used to visually distinguish types,
// or to enable/disable certain functionality.

// WARNING
// The values below are referenced by ComponentFilters (which are saved via localStorage).
// Do not change them or it will break previously saved user customizations.
// If new filter types are added, use new numbers rather than re-ordering existing ones.
const ComponentFilterElementType = 1;
const ComponentFilterDisplayName = 2;
const ComponentFilterLocation = 3;
const ComponentFilterHOC = 4;
const ComponentFilterEnvironmentName = 5; // Hide all elements of types in this Set.
// We hide host components only by default.
// Hide all elements with displayNames or paths matching one or more of the RegExps in this Set.
// Path filters are only used when elements include debug source location.
// Map of hook source ("<filename>:<line-number>:<column-number>") to name.
// Hook source is used instead of the hook itself because the latter is not stable between element inspections.
// We use a Map rather than an Array because of nested hooks and traversal ordering.

const StrictMode = 1; // Each element on the frontend corresponds to an ElementID (e.g. a Fiber) on the backend.
// Some of its information (e.g. id, type, displayName) come from the backend.
// Other bits (e.g. weight and depth) are computed on the frontend for windowing and display purposes.
// Elements are updated on a push basis– meaning the backend pushes updates to the frontend when needed.
// TODO: Add profiling type
// EXTERNAL MODULE: ../../node_modules/lru-cache/index.js
var lru_cache = __webpack_require__(4730);
var lru_cache_default = /*#__PURE__*/__webpack_require__.n(lru_cache);
;// CONCATENATED MODULE: ../shared/ReactFeatureFlags.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
// -----------------------------------------------------------------------------
// Land or remove (zero effort)
//
// Flags that can likely be deleted or landed without consequences
// -----------------------------------------------------------------------------
// None
// -----------------------------------------------------------------------------
// Killswitch
//
// Flags that exist solely to turn off a change in case it causes a regression
// when it rolls out to prod. We should remove these as soon as possible.
// -----------------------------------------------------------------------------
const enableHydrationLaneScheduling = true; // -----------------------------------------------------------------------------
// Land or remove (moderate effort)
//
// Flags that can be probably deleted or landed, but might require extra effort
// like migrating internal callers or performance testing.
// -----------------------------------------------------------------------------
// TODO: Finish rolling out in www

const favorSafetyOverHydrationPerf = true; // Need to remove didTimeout argument from Scheduler before landing

const disableSchedulerTimeoutInWorkLoop = false; // TODO: Land at Meta before removing.

const disableDefaultPropsExceptForClasses = true; // -----------------------------------------------------------------------------
// Slated for removal in the future (significant effort)
//
// These are experiments that didn't work out, and never shipped, but we can't
// delete from the codebase until we migrate internal callers.
// -----------------------------------------------------------------------------
// Add a callback property to suspense to notify which promises are currently
// in the update queue. This allows reporting and tracing of what is causing
// the user to see a loading state.
//
// Also allows hydration callbacks to fire when a dehydrated boundary gets
// hydrated or deleted.
//
// This will eventually be replaced by the Transition Tracing proposal.

const enableSuspenseCallback = false; // Experimental Scope support.

const enableScopeAPI = false; // Experimental Create Event Handle API.

const enableCreateEventHandleAPI = false; // Support legacy Primer support on internal FB www

const enableLegacyFBSupport = false; // -----------------------------------------------------------------------------
// Ongoing experiments
//
// These are features that we're either actively exploring or are reasonably
// likely to include in an upcoming release.
// -----------------------------------------------------------------------------
// Yield to the browser event loop and not just the scheduler event loop before passive effects.
// Fix gated tests that fail with this flag enabled before turning it back on.

const enableYieldingBeforePassive = false; // Experiment to intentionally yield less to block high framerate animations.

const enableThrottledScheduling = false;
const enableLegacyCache = (/* unused pure expression or super */ null && (true));
const enableAsyncIterableChildren = (/* unused pure expression or super */ null && (true));
const enableTaint = (/* unused pure expression or super */ null && (true));
const enablePostpone = (/* unused pure expression or super */ null && (true));
const enableHalt = (/* unused pure expression or super */ null && (true));
const enableViewTransition = (/* unused pure expression or super */ null && (true));
const enableGestureTransition = (/* unused pure expression or super */ null && (true));
const enableScrollEndPolyfill = (/* unused pure expression or super */ null && (true));
const enableSuspenseyImages = (/* unused pure expression or super */ null && (true));
/**
 * Switches the Fabric API from doing layout in commit work instead of complete work.
 */

const enableFabricCompleteRootInCommitPhase = false;
/**
 * Switches Fiber creation to a simple object instead of a constructor.
 */

const enableObjectFiber = false;
const enableTransitionTracing = false; // FB-only usage. The new API has different semantics.

const enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber

const enableSuspenseAvoidThisFallback = false;
const enableCPUSuspense = (/* unused pure expression or super */ null && (true)); // Test this at Meta before enabling.

const enableNoCloningMemoCache = false;
const enableUseEffectEventHook = (/* unused pure expression or super */ null && (true)); // Test in www before enabling in open source.
// Enables DOM-server to stream its instruction set as data-attributes
// (handled with an MutationObserver) instead of inline-scripts

const enableFizzExternalRuntime = (/* unused pure expression or super */ null && (true));
const alwaysThrottleRetries = true;
const passChildrenWhenCloningPersistedNodes = false;
/**
 * Enables a new Fiber flag used in persisted mode to reduce the number
 * of cloned host components.
 */

const enablePersistedModeClonedFlag = false;
const enableShallowPropDiffing = false;
const enableSiblingPrerendering = true;
/**
 * Enables an expiration time for retry lanes to avoid starvation.
 */

const enableRetryLaneExpiration = false;
const retryLaneExpirationMs = 5000;
const syncLaneExpirationMs = 250;
const transitionLaneExpirationMs = 5000;
/**
 * Enables a new error detection for infinite render loops from updates caused
 * by setState or similar outside of the component owning the state.
 */

const enableInfiniteRenderLoopDetection = false;
const enableFastAddPropertiesInDiffing = true;
const enableLazyPublicInstanceInFabric = false;
const enableFragmentRefs = (/* unused pure expression or super */ null && (true)); // -----------------------------------------------------------------------------
// Ready for next major.
//
// Alias __NEXT_MAJOR__ to __EXPERIMENTAL__ for easier skimming.
// -----------------------------------------------------------------------------
// TODO: Anything that's set to `true` in this section should either be cleaned
// up (if it's on everywhere, including Meta and RN builds) or moved to a
// different section of this file.
// const __NEXT_MAJOR__ = __EXPERIMENTAL__;
// Renames the internal symbol for elements since they have changed signature/constructor

const renameElementSymbol = true;
/**
 * Enables a fix to run insertion effect cleanup on hidden subtrees.
 */

const enableHiddenSubtreeInsertionEffectCleanup = false;
/**
 * Removes legacy style context defined using static `contextTypes` and consumed with static `childContextTypes`.
 */

const disableLegacyContext = true;
/**
 * Removes legacy style context just from function components.
 */

const disableLegacyContextForFunctionComponents = true; // Enable the moveBefore() alternative to insertBefore(). This preserves states of moves.

const enableMoveBefore = (/* unused pure expression or super */ null && (true)); // Disabled caching behavior of `react/cache` in client runtimes.

const disableClientCache = true; // Warn on any usage of ReactTestRenderer

const enableReactTestRendererWarning = true; // Disables legacy mode
// This allows us to land breaking changes to remove legacy mode APIs in experimental builds
// before removing them in stable in the next Major

const disableLegacyMode = true; // Make <Context> equivalent to <Context.Provider> instead of <Context.Consumer>

const enableRenderableContext = true; // -----------------------------------------------------------------------------
// Chopping Block
//
// Planned feature deprecations and breaking changes. Sorted roughly in order of
// when we plan to enable them.
// -----------------------------------------------------------------------------
// -----------------------------------------------------------------------------
// React DOM Chopping Block
//
// Similar to main Chopping Block but only flags related to React DOM. These are
// grouped because we will likely batch all of them into a single major release.
// -----------------------------------------------------------------------------
// Disable support for comment nodes as React DOM containers. Already disabled
// in open source, but www codebase still relies on it. Need to remove.

const disableCommentsAsDOMContainers = true;
const enableTrustedTypesIntegration = false; // Prevent the value and checked attributes from syncing with their related
// DOM properties

const disableInputAttributeSyncing = false; // Disables children for <textarea> elements

const disableTextareaChildren = false; // -----------------------------------------------------------------------------
// Debugging and DevTools
// -----------------------------------------------------------------------------
// Gather advanced timing metrics for Profiler subtrees.

const enableProfilerTimer = (/* unused pure expression or super */ null && (false)); // Adds performance.measure() marks using Chrome extensions to allow formatted
// Component rendering tracks to show up in the Performance tab.
// This flag will be used for both Server Component and Client Component tracks.
// All calls should also be gated on enableProfilerTimer.

const enableComponentPerformanceTrack = true; // Adds user timing marks for e.g. state updates, suspense, and work loop stuff,
// for an experimental timeline tool.

const enableSchedulingProfiler = !enableComponentPerformanceTrack && false; // Record durations for commit and passive effects phases.

const enableProfilerCommitHooks = (/* unused pure expression or super */ null && (false)); // Phase param passed to onRender callback differentiates between an "update" and a "cascading-update".

const enableProfilerNestedUpdatePhase = (/* unused pure expression or super */ null && (false));
const enableAsyncDebugInfo = (/* unused pure expression or super */ null && (true)); // Track which Fiber(s) schedule render work.

const enableUpdaterTracking = (/* unused pure expression or super */ null && (false)); // Internal only.

const enableDO_NOT_USE_disableStrictPassiveEffect = false;
const ownerStackLimit = 1e4;
;// CONCATENATED MODULE: ../shared/ReactSymbols.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
 // ATTENTION
// When adding new symbols to this file,
// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
// The Symbol used to tag the ReactElement-like types.

const REACT_LEGACY_ELEMENT_TYPE = Symbol.for('react.element');
const REACT_ELEMENT_TYPE = renameElementSymbol ? Symbol.for('react.transitional.element') : REACT_LEGACY_ELEMENT_TYPE;
const REACT_PORTAL_TYPE = Symbol.for('react.portal');
const REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');
const REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');
const REACT_PROFILER_TYPE = Symbol.for('react.profiler');
const REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext

const REACT_CONSUMER_TYPE = Symbol.for('react.consumer');
const REACT_CONTEXT_TYPE = Symbol.for('react.context');
const REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');
const REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');
const REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');
const REACT_MEMO_TYPE = Symbol.for('react.memo');
const REACT_LAZY_TYPE = Symbol.for('react.lazy');
const REACT_SCOPE_TYPE = Symbol.for('react.scope');
const REACT_ACTIVITY_TYPE = Symbol.for('react.activity');
const REACT_LEGACY_HIDDEN_TYPE = Symbol.for('react.legacy_hidden');
const REACT_TRACING_MARKER_TYPE = Symbol.for('react.tracing_marker');
const REACT_MEMO_CACHE_SENTINEL = Symbol.for('react.memo_cache_sentinel');
const REACT_POSTPONE_TYPE = Symbol.for('react.postpone');
const REACT_VIEW_TRANSITION_TYPE = Symbol.for('react.view_transition');
const MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
const FAUX_ITERATOR_SYMBOL = '@@iterator';
function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }

  const maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }

  return null;
}
const ASYNC_ITERATOR = Symbol.asyncIterator;
;// CONCATENATED MODULE: ../react-devtools-shared/src/storage.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
function localStorageGetItem(key) {
  try {
    return localStorage.getItem(key);
  } catch (error) {
    return null;
  }
}
function localStorageRemoveItem(key) {
  try {
    localStorage.removeItem(key);
  } catch (error) {}
}
function localStorageSetItem(key, value) {
  try {
    return localStorage.setItem(key, value);
  } catch (error) {}
}
function storage_sessionStorageGetItem(key) {
  try {
    return sessionStorage.getItem(key);
  } catch (error) {
    return null;
  }
}
function storage_sessionStorageRemoveItem(key) {
  try {
    sessionStorage.removeItem(key);
  } catch (error) {}
}
function storage_sessionStorageSetItem(key, value) {
  try {
    return sessionStorage.setItem(key, value);
  } catch (error) {}
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/hydration.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

const meta = {
  inspectable: Symbol('inspectable'),
  inspected: Symbol('inspected'),
  name: Symbol('name'),
  preview_long: Symbol('preview_long'),
  preview_short: Symbol('preview_short'),
  readonly: Symbol('readonly'),
  size: Symbol('size'),
  type: Symbol('type'),
  unserializable: Symbol('unserializable')
}; // Typed arrays and other complex iteratable objects (e.g. Map, Set, ImmutableJS) need special handling.
// These objects can't be serialized without losing type information,
// so a "Unserializable" type wrapper is used (with meta-data keys) to send nested values-
// while preserving the original type and name.

// This threshold determines the depth at which the bridge "dehydrates" nested data.
// Dehydration means that we don't serialize the data for e.g. postMessage or stringify,
// unless the frontend explicitly requests it (e.g. a user clicks to expand a props object).
//
// Reducing this threshold will improve the speed of initial component inspection,
// but may decrease the responsiveness of expanding objects/arrays to inspect further.
const LEVEL_THRESHOLD = 2;
/**
 * Generate the dehydrated metadata for complex object instances
 */

function createDehydrated(type, inspectable, data, cleaned, path) {
  cleaned.push(path);
  const dehydrated = {
    inspectable,
    type,
    preview_long: formatDataForPreview(data, true),
    preview_short: formatDataForPreview(data, false),
    name: typeof data.constructor !== 'function' || typeof data.constructor.name !== 'string' || data.constructor.name === 'Object' ? '' : data.constructor.name
  };

  if (type === 'array' || type === 'typed_array') {
    dehydrated.size = data.length;
  } else if (type === 'object') {
    dehydrated.size = Object.keys(data).length;
  }

  if (type === 'iterator' || type === 'typed_array') {
    dehydrated.readonly = true;
  }

  return dehydrated;
}
/**
 * Strip out complex data (instances, functions, and data nested > LEVEL_THRESHOLD levels deep).
 * The paths of the stripped out objects are appended to the `cleaned` list.
 * On the other side of the barrier, the cleaned list is used to "re-hydrate" the cleaned representation into
 * an object with symbols as attributes, so that a sanitized object can be distinguished from a normal object.
 *
 * Input: {"some": {"attr": fn()}, "other": AnInstance}
 * Output: {
 *   "some": {
 *     "attr": {"name": the fn.name, type: "function"}
 *   },
 *   "other": {
 *     "name": "AnInstance",
 *     "type": "object",
 *   },
 * }
 * and cleaned = [["some", "attr"], ["other"]]
 */


function hydration_dehydrate(data, cleaned, unserializable, path, isPathAllowed, level = 0) {
  const type = getDataType(data);
  let isPathAllowedCheck;

  switch (type) {
    case 'html_element':
      cleaned.push(path);
      return {
        inspectable: false,
        preview_short: formatDataForPreview(data, false),
        preview_long: formatDataForPreview(data, true),
        name: data.tagName,
        type
      };

    case 'function':
      cleaned.push(path);
      return {
        inspectable: false,
        preview_short: formatDataForPreview(data, false),
        preview_long: formatDataForPreview(data, true),
        name: typeof data.name === 'function' || !data.name ? 'function' : data.name,
        type
      };

    case 'string':
      isPathAllowedCheck = isPathAllowed(path);

      if (isPathAllowedCheck) {
        return data;
      } else {
        return data.length <= 500 ? data : data.slice(0, 500) + '...';
      }

    case 'bigint':
      cleaned.push(path);
      return {
        inspectable: false,
        preview_short: formatDataForPreview(data, false),
        preview_long: formatDataForPreview(data, true),
        name: data.toString(),
        type
      };

    case 'symbol':
      cleaned.push(path);
      return {
        inspectable: false,
        preview_short: formatDataForPreview(data, false),
        preview_long: formatDataForPreview(data, true),
        name: data.toString(),
        type
      };
    // React Elements aren't very inspector-friendly,
    // and often contain private fields or circular references.

    case 'react_element':
      cleaned.push(path);
      return {
        inspectable: false,
        preview_short: formatDataForPreview(data, false),
        preview_long: formatDataForPreview(data, true),
        name: getDisplayNameForReactElement(data) || 'Unknown',
        type
      };
    // ArrayBuffers error if you try to inspect them.

    case 'array_buffer':
    case 'data_view':
      cleaned.push(path);
      return {
        inspectable: false,
        preview_short: formatDataForPreview(data, false),
        preview_long: formatDataForPreview(data, true),
        name: type === 'data_view' ? 'DataView' : 'ArrayBuffer',
        size: data.byteLength,
        type
      };

    case 'array':
      isPathAllowedCheck = isPathAllowed(path);

      if (level >= LEVEL_THRESHOLD && !isPathAllowedCheck) {
        return createDehydrated(type, true, data, cleaned, path);
      }

      const arr = [];

      for (let i = 0; i < data.length; i++) {
        arr[i] = dehydrateKey(data, i, cleaned, unserializable, path.concat([i]), isPathAllowed, isPathAllowedCheck ? 1 : level + 1);
      }

      return arr;

    case 'html_all_collection':
    case 'typed_array':
    case 'iterator':
      isPathAllowedCheck = isPathAllowed(path);

      if (level >= LEVEL_THRESHOLD && !isPathAllowedCheck) {
        return createDehydrated(type, true, data, cleaned, path);
      } else {
        const unserializableValue = {
          unserializable: true,
          type: type,
          readonly: true,
          size: type === 'typed_array' ? data.length : undefined,
          preview_short: formatDataForPreview(data, false),
          preview_long: formatDataForPreview(data, true),
          name: typeof data.constructor !== 'function' || typeof data.constructor.name !== 'string' || data.constructor.name === 'Object' ? '' : data.constructor.name
        }; // TRICKY
        // Don't use [...spread] syntax for this purpose.
        // This project uses @babel/plugin-transform-spread in "loose" mode which only works with Array values.
        // Other types (e.g. typed arrays, Sets) will not spread correctly.

        Array.from(data).forEach((item, i) => unserializableValue[i] = hydration_dehydrate(item, cleaned, unserializable, path.concat([i]), isPathAllowed, isPathAllowedCheck ? 1 : level + 1));
        unserializable.push(path);
        return unserializableValue;
      }

    case 'opaque_iterator':
      cleaned.push(path);
      return {
        inspectable: false,
        preview_short: formatDataForPreview(data, false),
        preview_long: formatDataForPreview(data, true),
        name: data[Symbol.toStringTag],
        type
      };

    case 'date':
      cleaned.push(path);
      return {
        inspectable: false,
        preview_short: formatDataForPreview(data, false),
        preview_long: formatDataForPreview(data, true),
        name: data.toString(),
        type
      };

    case 'regexp':
      cleaned.push(path);
      return {
        inspectable: false,
        preview_short: formatDataForPreview(data, false),
        preview_long: formatDataForPreview(data, true),
        name: data.toString(),
        type
      };

    case 'object':
      isPathAllowedCheck = isPathAllowed(path);

      if (level >= LEVEL_THRESHOLD && !isPathAllowedCheck) {
        return createDehydrated(type, true, data, cleaned, path);
      } else {
        const object = {};
        getAllEnumerableKeys(data).forEach(key => {
          const name = key.toString();
          object[name] = dehydrateKey(data, key, cleaned, unserializable, path.concat([name]), isPathAllowed, isPathAllowedCheck ? 1 : level + 1);
        });
        return object;
      }

    case 'class_instance':
      isPathAllowedCheck = isPathAllowed(path);

      if (level >= LEVEL_THRESHOLD && !isPathAllowedCheck) {
        return createDehydrated(type, true, data, cleaned, path);
      }

      const value = {
        unserializable: true,
        type,
        readonly: true,
        preview_short: formatDataForPreview(data, false),
        preview_long: formatDataForPreview(data, true),
        name: typeof data.constructor !== 'function' || typeof data.constructor.name !== 'string' ? '' : data.constructor.name
      };
      getAllEnumerableKeys(data).forEach(key => {
        const keyAsString = key.toString();
        value[keyAsString] = hydration_dehydrate(data[key], cleaned, unserializable, path.concat([keyAsString]), isPathAllowed, isPathAllowedCheck ? 1 : level + 1);
      });
      unserializable.push(path);
      return value;

    case 'infinity':
    case 'nan':
    case 'undefined':
      // Some values are lossy when sent through a WebSocket.
      // We dehydrate+rehydrate them to preserve their type.
      cleaned.push(path);
      return {
        type
      };

    default:
      return data;
  }
}

function dehydrateKey(parent, key, cleaned, unserializable, path, isPathAllowed, level = 0) {
  try {
    return hydration_dehydrate(parent[key], cleaned, unserializable, path, isPathAllowed, level);
  } catch (error) {
    let preview = '';

    if (typeof error === 'object' && error !== null && typeof error.stack === 'string') {
      preview = error.stack;
    } else if (typeof error === 'string') {
      preview = error;
    }

    cleaned.push(path);
    return {
      inspectable: false,
      preview_short: '[Exception]',
      preview_long: preview ? '[Exception: ' + preview + ']' : '[Exception]',
      name: preview,
      type: 'unknown'
    };
  }
}

function hydration_fillInPath(object, data, path, value) {
  const target = getInObject(object, path);

  if (target != null) {
    if (!target[meta.unserializable]) {
      delete target[meta.inspectable];
      delete target[meta.inspected];
      delete target[meta.name];
      delete target[meta.preview_long];
      delete target[meta.preview_short];
      delete target[meta.readonly];
      delete target[meta.size];
      delete target[meta.type];
    }
  }

  if (value !== null && data.unserializable.length > 0) {
    const unserializablePath = data.unserializable[0];
    let isMatch = unserializablePath.length === path.length;

    for (let i = 0; i < path.length; i++) {
      if (path[i] !== unserializablePath[i]) {
        isMatch = false;
        break;
      }
    }

    if (isMatch) {
      upgradeUnserializable(value, value);
    }
  }

  setInObject(object, path, value);
}
function hydrate(object, cleaned, unserializable) {
  cleaned.forEach(path => {
    const length = path.length;
    const last = path[length - 1];
    const parent = getInObject(object, path.slice(0, length - 1));

    if (!parent || !parent.hasOwnProperty(last)) {
      return;
    }

    const value = parent[last];

    if (!value) {
      return;
    } else if (value.type === 'infinity') {
      parent[last] = Infinity;
    } else if (value.type === 'nan') {
      parent[last] = NaN;
    } else if (value.type === 'undefined') {
      parent[last] = undefined;
    } else {
      // Replace the string keys with Symbols so they're non-enumerable.
      const replaced = {};
      replaced[meta.inspectable] = !!value.inspectable;
      replaced[meta.inspected] = false;
      replaced[meta.name] = value.name;
      replaced[meta.preview_long] = value.preview_long;
      replaced[meta.preview_short] = value.preview_short;
      replaced[meta.size] = value.size;
      replaced[meta.readonly] = !!value.readonly;
      replaced[meta.type] = value.type;
      parent[last] = replaced;
    }
  });
  unserializable.forEach(path => {
    const length = path.length;
    const last = path[length - 1];
    const parent = getInObject(object, path.slice(0, length - 1));

    if (!parent || !parent.hasOwnProperty(last)) {
      return;
    }

    const node = parent[last];
    const replacement = { ...node
    };
    upgradeUnserializable(replacement, node);
    parent[last] = replacement;
  });
  return object;
}

function upgradeUnserializable(destination, source) {
  Object.defineProperties(destination, {
    // $FlowFixMe[invalid-computed-prop]
    [meta.inspected]: {
      configurable: true,
      enumerable: false,
      value: !!source.inspected
    },
    // $FlowFixMe[invalid-computed-prop]
    [meta.name]: {
      configurable: true,
      enumerable: false,
      value: source.name
    },
    // $FlowFixMe[invalid-computed-prop]
    [meta.preview_long]: {
      configurable: true,
      enumerable: false,
      value: source.preview_long
    },
    // $FlowFixMe[invalid-computed-prop]
    [meta.preview_short]: {
      configurable: true,
      enumerable: false,
      value: source.preview_short
    },
    // $FlowFixMe[invalid-computed-prop]
    [meta.size]: {
      configurable: true,
      enumerable: false,
      value: source.size
    },
    // $FlowFixMe[invalid-computed-prop]
    [meta.readonly]: {
      configurable: true,
      enumerable: false,
      value: !!source.readonly
    },
    // $FlowFixMe[invalid-computed-prop]
    [meta.type]: {
      configurable: true,
      enumerable: false,
      value: source.type
    },
    // $FlowFixMe[invalid-computed-prop]
    [meta.unserializable]: {
      configurable: true,
      enumerable: false,
      value: !!source.unserializable
    }
  });
  delete destination.inspected;
  delete destination.name;
  delete destination.preview_long;
  delete destination.preview_short;
  delete destination.size;
  delete destination.readonly;
  delete destination.type;
  delete destination.unserializable;
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/isArray.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
const isArray_isArray = Array.isArray;
/* harmony default export */ const src_isArray = (isArray_isArray);
;// CONCATENATED MODULE: ../shared/isArray.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
const isArrayImpl = Array.isArray;

function shared_isArray_isArray(a) {
  return isArrayImpl(a);
}

/* harmony default export */ const shared_isArray = (shared_isArray_isArray);
;// CONCATENATED MODULE: ../react-devtools-shared/src/backend/utils/index.js
/**
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




 // TODO: update this to the first React version that has a corresponding DevTools backend

const FIRST_DEVTOOLS_BACKEND_LOCKSTEP_VER = '999.9.9';
function hasAssignedBackend(version) {
  if (version == null || version === '') {
    return false;
  }

  return gte(version, FIRST_DEVTOOLS_BACKEND_LOCKSTEP_VER);
}
function cleanForBridge(data, isPathAllowed, path = []) {
  if (data !== null) {
    const cleanedPaths = [];
    const unserializablePaths = [];
    const cleanedData = dehydrate(data, cleanedPaths, unserializablePaths, path, isPathAllowed);
    return {
      data: cleanedData,
      cleaned: cleanedPaths,
      unserializable: unserializablePaths
    };
  } else {
    return null;
  }
}
function copyWithDelete(obj, path, index = 0) {
  const key = path[index];
  const updated = isArray(obj) ? obj.slice() : { ...obj
  };

  if (index + 1 === path.length) {
    if (isArray(updated)) {
      updated.splice(key, 1);
    } else {
      delete updated[key];
    }
  } else {
    // $FlowFixMe[incompatible-use] number or string is fine here
    updated[key] = copyWithDelete(obj[key], path, index + 1);
  }

  return updated;
} // This function expects paths to be the same except for the final value.
// e.g. ['path', 'to', 'foo'] and ['path', 'to', 'bar']

function copyWithRename(obj, oldPath, newPath, index = 0) {
  const oldKey = oldPath[index];
  const updated = isArray(obj) ? obj.slice() : { ...obj
  };

  if (index + 1 === oldPath.length) {
    const newKey = newPath[index]; // $FlowFixMe[incompatible-use] number or string is fine here

    updated[newKey] = updated[oldKey];

    if (isArray(updated)) {
      updated.splice(oldKey, 1);
    } else {
      delete updated[oldKey];
    }
  } else {
    // $FlowFixMe[incompatible-use] number or string is fine here
    updated[oldKey] = copyWithRename(obj[oldKey], oldPath, newPath, index + 1);
  }

  return updated;
}
function copyWithSet(obj, path, value, index = 0) {
  if (index >= path.length) {
    return value;
  }

  const key = path[index];
  const updated = isArray(obj) ? obj.slice() : { ...obj
  }; // $FlowFixMe[incompatible-use] number or string is fine here

  updated[key] = copyWithSet(obj[key], path, value, index + 1);
  return updated;
}
function getEffectDurations(root) {
  // Profiling durations are only available for certain builds.
  // If available, they'll be stored on the HostRoot.
  let effectDuration = null;
  let passiveEffectDuration = null;
  const hostRoot = root.current;

  if (hostRoot != null) {
    const stateNode = hostRoot.stateNode;

    if (stateNode != null) {
      effectDuration = stateNode.effectDuration != null ? stateNode.effectDuration : null;
      passiveEffectDuration = stateNode.passiveEffectDuration != null ? stateNode.passiveEffectDuration : null;
    }
  }

  return {
    effectDuration,
    passiveEffectDuration
  };
}
function serializeToString(data) {
  if (data === undefined) {
    return 'undefined';
  }

  if (typeof data === 'function') {
    return data.toString();
  }

  const cache = new Set(); // Use a custom replacer function to protect against circular references.

  return JSON.stringify(data, (key, value) => {
    if (typeof value === 'object' && value !== null) {
      if (cache.has(value)) {
        return;
      }

      cache.add(value);
    }

    if (typeof value === 'bigint') {
      return value.toString() + 'n';
    }

    return value;
  }, 2);
}

function safeToString(val) {
  try {
    return String(val);
  } catch (err) {
    if (typeof val === 'object') {
      // An object with no prototype and no `[Symbol.toPrimitive]()`, `toString()`, and `valueOf()` methods would throw.
      // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#string_coercion
      return '[object Object]';
    }

    throw err;
  }
} // based on https://github.com/tmpfs/format-util/blob/0e62d430efb0a1c51448709abd3e2406c14d8401/format.js#L1
// based on https://developer.mozilla.org/en-US/docs/Web/API/console#Using_string_substitutions
// Implements s, d, i and f placeholders


function formatConsoleArgumentsToSingleString(maybeMessage, ...inputArgs) {
  const args = inputArgs.slice();
  let formatted = safeToString(maybeMessage); // If the first argument is a string, check for substitutions.

  if (typeof maybeMessage === 'string') {
    if (args.length) {
      const REGEXP = /(%?)(%([jds]))/g; // $FlowFixMe[incompatible-call]

      formatted = formatted.replace(REGEXP, (match, escaped, ptn, flag) => {
        let arg = args.shift();

        switch (flag) {
          case 's':
            // $FlowFixMe[unsafe-addition]
            arg += '';
            break;

          case 'd':
          case 'i':
            arg = parseInt(arg, 10).toString();
            break;

          case 'f':
            arg = parseFloat(arg).toString();
            break;
        }

        if (!escaped) {
          return arg;
        }

        args.unshift(arg);
        return match;
      });
    }
  } // Arguments that remain after formatting.


  if (args.length) {
    for (let i = 0; i < args.length; i++) {
      formatted += ' ' + safeToString(args[i]);
    }
  } // Update escaped %% values.


  formatted = formatted.replace(/%{2,2}/g, '%');
  return String(formatted);
}
function utils_isSynchronousXHRSupported() {
  return !!(window.document && window.document.featurePolicy && window.document.featurePolicy.allowsFeature('sync-xhr'));
}
function gt(a = '', b = '') {
  return compareVersions(a, b) === 1;
}
function gte(a = '', b = '') {
  return compareVersions(a, b) > -1;
}
const isReactNativeEnvironment = () => {
  // We've been relying on this for such a long time
  // We should probably define the client for DevTools on the backend side and share it with the frontend
  return window.document == null;
};

function extractLocation(url) {
  if (url.indexOf(':') === -1) {
    return null;
  } // remove any parentheses from start and end


  const withoutParentheses = url.replace(/^\(+/, '').replace(/\)+$/, '');
  const locationParts = /(at )?(.+?)(?::(\d+))?(?::(\d+))?$/.exec(withoutParentheses);

  if (locationParts == null) {
    return null;
  }

  const [,, sourceURL, line, column] = locationParts;
  return {
    sourceURL,
    line,
    column
  };
}

const CHROME_STACK_REGEXP = /^\s*at .*(\S+:\d+|\(native\))/m;

function parseSourceFromChromeStack(stack) {
  const frames = stack.split('\n'); // eslint-disable-next-line no-for-of-loops/no-for-of-loops

  for (const frame of frames) {
    const sanitizedFrame = frame.trim();
    const locationInParenthesesMatch = sanitizedFrame.match(/ (\(.+\)$)/);
    const possibleLocation = locationInParenthesesMatch ? locationInParenthesesMatch[1] : sanitizedFrame;
    const location = extractLocation(possibleLocation); // Continue the search until at least sourceURL is found

    if (location == null) {
      continue;
    }

    const {
      sourceURL,
      line = '1',
      column = '1'
    } = location;
    return {
      sourceURL,
      line: parseInt(line, 10),
      column: parseInt(column, 10)
    };
  }

  return null;
}

function parseSourceFromFirefoxStack(stack) {
  const frames = stack.split('\n'); // eslint-disable-next-line no-for-of-loops/no-for-of-loops

  for (const frame of frames) {
    const sanitizedFrame = frame.trim();
    const frameWithoutFunctionName = sanitizedFrame.replace(/((.*".+"[^@]*)?[^@]*)(?:@)/, '');
    const location = extractLocation(frameWithoutFunctionName); // Continue the search until at least sourceURL is found

    if (location == null) {
      continue;
    }

    const {
      sourceURL,
      line = '1',
      column = '1'
    } = location;
    return {
      sourceURL,
      line: parseInt(line, 10),
      column: parseInt(column, 10)
    };
  }

  return null;
}

function parseSourceFromComponentStack(componentStack) {
  if (componentStack.match(CHROME_STACK_REGEXP)) {
    return parseSourceFromChromeStack(componentStack);
  }

  return parseSourceFromFirefoxStack(componentStack);
} // 0.123456789 => 0.123
// Expects high-resolution timestamp in milliseconds, like from performance.now()
// Mainly used for optimizing the size of serialized profiling payload

function formatDurationToMicrosecondsGranularity(duration) {
  return Math.round(duration * 1000) / 1000;
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/utils.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */









 // $FlowFixMe[method-unbinding]

const utils_hasOwnProperty = Object.prototype.hasOwnProperty;
const cachedDisplayNames = new WeakMap(); // On large trees, encoding takes significant time.
// Try to reuse the already encoded strings.

const encodedStringCache = new (lru_cache_default())({
  max: 1000
});
function alphaSortKeys(a, b) {
  if (a.toString() > b.toString()) {
    return 1;
  } else if (b.toString() > a.toString()) {
    return -1;
  } else {
    return 0;
  }
}
function utils_getAllEnumerableKeys(obj) {
  const keys = new Set();
  let current = obj;

  while (current != null) {
    const currentKeys = [...Object.keys(current), ...Object.getOwnPropertySymbols(current)];
    const descriptors = Object.getOwnPropertyDescriptors(current);
    currentKeys.forEach(key => {
      // $FlowFixMe[incompatible-type]: key can be a Symbol https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor
      if (descriptors[key].enumerable) {
        keys.add(key);
      }
    });
    current = Object.getPrototypeOf(current);
  }

  return keys;
} // Mirror https://github.com/facebook/react/blob/7c21bf72ace77094fd1910cc350a548287ef8350/packages/shared/getComponentName.js#L27-L37

function getWrappedDisplayName(outerType, innerType, wrapperName, fallbackName) {
  const displayName = outerType?.displayName;
  return displayName || `${wrapperName}(${getDisplayName(innerType, fallbackName)})`;
}
function getDisplayName(type, fallbackName = 'Anonymous') {
  const nameFromCache = cachedDisplayNames.get(type);

  if (nameFromCache != null) {
    return nameFromCache;
  }

  let displayName = fallbackName; // The displayName property is not guaranteed to be a string.
  // It's only safe to use for our purposes if it's a string.
  // github.com/facebook/react-devtools/issues/803

  if (typeof type.displayName === 'string') {
    displayName = type.displayName;
  } else if (typeof type.name === 'string' && type.name !== '') {
    displayName = type.name;
  }

  cachedDisplayNames.set(type, displayName);
  return displayName;
}
let uidCounter = 0;
function getUID() {
  return ++uidCounter;
}
function utfDecodeStringWithRanges(array, left, right) {
  let string = '';

  for (let i = left; i <= right; i++) {
    string += String.fromCodePoint(array[i]);
  }

  return string;
}

function surrogatePairToCodePoint(charCode1, charCode2) {
  return ((charCode1 & 0x3ff) << 10) + (charCode2 & 0x3ff) + 0x10000;
} // Credit for this encoding approach goes to Tim Down:
// https://stackoverflow.com/questions/4877326/how-can-i-tell-if-a-string-contains-multibyte-characters-in-javascript


function utfEncodeString(string) {
  const cached = encodedStringCache.get(string);

  if (cached !== undefined) {
    return cached;
  }

  const encoded = [];
  let i = 0;
  let charCode;

  while (i < string.length) {
    charCode = string.charCodeAt(i); // Handle multibyte unicode characters (like emoji).

    if ((charCode & 0xf800) === 0xd800) {
      encoded.push(surrogatePairToCodePoint(charCode, string.charCodeAt(++i)));
    } else {
      encoded.push(charCode);
    }

    ++i;
  }

  encodedStringCache.set(string, encoded);
  return encoded;
}
function printOperationsArray(operations) {
  // The first two values are always rendererID and rootID
  const rendererID = operations[0];
  const rootID = operations[1];
  const logs = [`operations for renderer:${rendererID} and root:${rootID}`];
  let i = 2; // Reassemble the string table.

  const stringTable = [null // ID = 0 corresponds to the null string.
  ];
  const stringTableSize = operations[i++];
  const stringTableEnd = i + stringTableSize;

  while (i < stringTableEnd) {
    const nextLength = operations[i++];
    const nextString = utfDecodeStringWithRanges(operations, i, i + nextLength - 1);
    stringTable.push(nextString);
    i += nextLength;
  }

  while (i < operations.length) {
    const operation = operations[i];

    switch (operation) {
      case TREE_OPERATION_ADD:
        {
          const id = operations[i + 1];
          const type = operations[i + 2];
          i += 3;

          if (type === ElementTypeRoot) {
            logs.push(`Add new root node ${id}`);
            i++; // isStrictModeCompliant

            i++; // supportsProfiling

            i++; // supportsStrictMode

            i++; // hasOwnerMetadata
          } else {
            const parentID = operations[i];
            i++;
            i++; // ownerID

            const displayNameStringID = operations[i];
            const displayName = stringTable[displayNameStringID];
            i++;
            i++; // key

            logs.push(`Add node ${id} (${displayName || 'null'}) as child of ${parentID}`);
          }

          break;
        }

      case TREE_OPERATION_REMOVE:
        {
          const removeLength = operations[i + 1];
          i += 2;

          for (let removeIndex = 0; removeIndex < removeLength; removeIndex++) {
            const id = operations[i];
            i += 1;
            logs.push(`Remove node ${id}`);
          }

          break;
        }

      case TREE_OPERATION_REMOVE_ROOT:
        {
          i += 1;
          logs.push(`Remove root ${rootID}`);
          break;
        }

      case TREE_OPERATION_SET_SUBTREE_MODE:
        {
          const id = operations[i + 1];
          const mode = operations[i + 1];
          i += 3;
          logs.push(`Mode ${mode} set for subtree with root ${id}`);
          break;
        }

      case TREE_OPERATION_REORDER_CHILDREN:
        {
          const id = operations[i + 1];
          const numChildren = operations[i + 2];
          i += 3;
          const children = operations.slice(i, i + numChildren);
          i += numChildren;
          logs.push(`Re-order node ${id} children ${children.join(',')}`);
          break;
        }

      case TREE_OPERATION_UPDATE_TREE_BASE_DURATION:
        // Base duration updates are only sent while profiling is in progress.
        // We can ignore them at this point.
        // The profiler UI uses them lazily in order to generate the tree.
        i += 3;
        break;

      case TREE_OPERATION_UPDATE_ERRORS_OR_WARNINGS:
        const id = operations[i + 1];
        const numErrors = operations[i + 2];
        const numWarnings = operations[i + 3];
        i += 4;
        logs.push(`Node ${id} has ${numErrors} errors and ${numWarnings} warnings`);
        break;

      default:
        throw Error(`Unsupported Bridge operation "${operation}"`);
    }
  }

  console.log(logs.join('\n  '));
}
function getDefaultComponentFilters() {
  return [{
    type: ComponentFilterElementType,
    value: ElementTypeHostComponent,
    isEnabled: true
  }];
}
function getSavedComponentFilters() {
  try {
    const raw = localStorageGetItem(LOCAL_STORAGE_COMPONENT_FILTER_PREFERENCES_KEY);

    if (raw != null) {
      const parsedFilters = JSON.parse(raw);
      return filterOutLocationComponentFilters(parsedFilters);
    }
  } catch (error) {}

  return getDefaultComponentFilters();
}
function setSavedComponentFilters(componentFilters) {
  localStorageSetItem(LOCAL_STORAGE_COMPONENT_FILTER_PREFERENCES_KEY, JSON.stringify(filterOutLocationComponentFilters(componentFilters)));
} // Following __debugSource removal from Fiber, the new approach for finding the source location
// of a component, represented by the Fiber, is based on lazily generating and parsing component stack frames
// To find the original location, React DevTools will perform symbolication, source maps are required for that.
// In order to start filtering Fibers, we need to find location for all of them, which can't be done lazily.
// Eager symbolication can become quite expensive for large applications.

function filterOutLocationComponentFilters(componentFilters) {
  // This is just an additional check to preserve the previous state
  // Filters can be stored on the backend side or in user land (in a window object)
  if (!Array.isArray(componentFilters)) {
    return componentFilters;
  }

  return componentFilters.filter(f => f.type !== ComponentFilterLocation);
}
function getDefaultOpenInEditorURL() {
  return  false ? 0 : '';
}
function getOpenInEditorURL() {
  try {
    const raw = localStorageGetItem(LOCAL_STORAGE_OPEN_IN_EDITOR_URL);

    if (raw != null) {
      return JSON.parse(raw);
    }
  } catch (error) {}

  return getDefaultOpenInEditorURL();
}
function parseElementDisplayNameFromBackend(displayName, type) {
  if (displayName === null) {
    return {
      formattedDisplayName: null,
      hocDisplayNames: null,
      compiledWithForget: false
    };
  }

  if (displayName.startsWith('Forget(')) {
    const displayNameWithoutForgetWrapper = displayName.slice(7, displayName.length - 1);
    const {
      formattedDisplayName,
      hocDisplayNames
    } = parseElementDisplayNameFromBackend(displayNameWithoutForgetWrapper, type);
    return {
      formattedDisplayName,
      hocDisplayNames,
      compiledWithForget: true
    };
  }

  let hocDisplayNames = null;

  switch (type) {
    case ElementTypeClass:
    case ElementTypeForwardRef:
    case ElementTypeFunction:
    case ElementTypeMemo:
    case ElementTypeVirtual:
      if (displayName.indexOf('(') >= 0) {
        const matches = displayName.match(/[^()]+/g);

        if (matches != null) {
          // $FlowFixMe[incompatible-type]
          displayName = matches.pop();
          hocDisplayNames = matches;
        }
      }

      break;

    default:
      break;
  }

  return {
    // $FlowFixMe[incompatible-return]
    formattedDisplayName: displayName,
    hocDisplayNames,
    compiledWithForget: false
  };
} // Pulled from react-compat
// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349

function shallowDiffers(prev, next) {
  for (const attribute in prev) {
    if (!(attribute in next)) {
      return true;
    }
  }

  for (const attribute in next) {
    if (prev[attribute] !== next[attribute]) {
      return true;
    }
  }

  return false;
}
function getInObject(object, path) {
  return path.reduce((reduced, attr) => {
    if (reduced) {
      if (utils_hasOwnProperty.call(reduced, attr)) {
        return reduced[attr];
      }

      if (typeof reduced[Symbol.iterator] === 'function') {
        // Convert iterable to array and return array[index]
        //
        // TRICKY
        // Don't use [...spread] syntax for this purpose.
        // This project uses @babel/plugin-transform-spread in "loose" mode which only works with Array values.
        // Other types (e.g. typed arrays, Sets) will not spread correctly.
        return Array.from(reduced)[attr];
      }
    }

    return null;
  }, object);
}
function deletePathInObject(object, path) {
  const length = path.length;
  const last = path[length - 1];

  if (object != null) {
    const parent = getInObject(object, path.slice(0, length - 1));

    if (parent) {
      if (isArray(parent)) {
        parent.splice(last, 1);
      } else {
        delete parent[last];
      }
    }
  }
}
function renamePathInObject(object, oldPath, newPath) {
  const length = oldPath.length;

  if (object != null) {
    const parent = getInObject(object, oldPath.slice(0, length - 1));

    if (parent) {
      const lastOld = oldPath[length - 1];
      const lastNew = newPath[length - 1];
      parent[lastNew] = parent[lastOld];

      if (isArray(parent)) {
        parent.splice(lastOld, 1);
      } else {
        delete parent[lastOld];
      }
    }
  }
}
function setInObject(object, path, value) {
  const length = path.length;
  const last = path[length - 1];

  if (object != null) {
    const parent = getInObject(object, path.slice(0, length - 1));

    if (parent) {
      parent[last] = value;
    }
  }
}

/**
 * Get a enhanced/artificial type string based on the object instance
 */
function utils_getDataType(data) {
  if (data === null) {
    return 'null';
  } else if (data === undefined) {
    return 'undefined';
  }

  if (typeof HTMLElement !== 'undefined' && data instanceof HTMLElement) {
    return 'html_element';
  }

  const type = typeof data;

  switch (type) {
    case 'bigint':
      return 'bigint';

    case 'boolean':
      return 'boolean';

    case 'function':
      return 'function';

    case 'number':
      if (Number.isNaN(data)) {
        return 'nan';
      } else if (!Number.isFinite(data)) {
        return 'infinity';
      } else {
        return 'number';
      }

    case 'object':
      if (data.$$typeof === REACT_ELEMENT_TYPE || data.$$typeof === REACT_LEGACY_ELEMENT_TYPE) {
        return 'react_element';
      }

      if (src_isArray(data)) {
        return 'array';
      } else if (ArrayBuffer.isView(data)) {
        return utils_hasOwnProperty.call(data.constructor, 'BYTES_PER_ELEMENT') ? 'typed_array' : 'data_view';
      } else if (data.constructor && data.constructor.name === 'ArrayBuffer') {
        // HACK This ArrayBuffer check is gross; is there a better way?
        // We could try to create a new DataView with the value.
        // If it doesn't error, we know it's an ArrayBuffer,
        // but this seems kind of awkward and expensive.
        return 'array_buffer';
      } else if (typeof data[Symbol.iterator] === 'function') {
        const iterator = data[Symbol.iterator]();

        if (!iterator) {// Proxies might break assumptoins about iterators.
          // See github.com/facebook/react/issues/21654
        } else {
          return iterator === data ? 'opaque_iterator' : 'iterator';
        }
      } else if (data.constructor && data.constructor.name === 'RegExp') {
        return 'regexp';
      } else {
        // $FlowFixMe[method-unbinding]
        const toStringValue = Object.prototype.toString.call(data);

        if (toStringValue === '[object Date]') {
          return 'date';
        } else if (toStringValue === '[object HTMLAllCollection]') {
          return 'html_all_collection';
        }
      }

      if (!isPlainObject(data)) {
        return 'class_instance';
      }

      return 'object';

    case 'string':
      return 'string';

    case 'symbol':
      return 'symbol';

    case 'undefined':
      if ( // $FlowFixMe[method-unbinding]
      Object.prototype.toString.call(data) === '[object HTMLAllCollection]') {
        return 'html_all_collection';
      }

      return 'undefined';

    default:
      return 'unknown';
  }
} // Fork of packages/react-is/src/ReactIs.js:30, but with legacy element type
// Which has been changed in https://github.com/facebook/react/pull/28813

function typeOfWithLegacyElementSymbol(object) {
  if (typeof object === 'object' && object !== null) {
    const $$typeof = object.$$typeof;

    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
      case REACT_LEGACY_ELEMENT_TYPE:
        const type = object.type;

        switch (type) {
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
          case REACT_SUSPENSE_LIST_TYPE:
          case REACT_VIEW_TRANSITION_TYPE:
            return type;

          default:
            const $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_LAZY_TYPE:
              case REACT_MEMO_TYPE:
                return $$typeofType;

              case REACT_CONSUMER_TYPE:
                if (enableRenderableContext) {
                  return $$typeofType;
                }

              // Fall through

              case REACT_PROVIDER_TYPE:
                if (!enableRenderableContext) {
                  return $$typeofType;
                }

              // Fall through

              default:
                return $$typeof;
            }

        }

      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
}

function utils_getDisplayNameForReactElement(element) {
  const elementType = typeOfWithLegacyElementSymbol(element);

  switch (elementType) {
    case REACT_CONSUMER_TYPE:
      return 'ContextConsumer';

    case REACT_PROVIDER_TYPE:
      return 'ContextProvider';

    case REACT_CONTEXT_TYPE:
      return 'Context';

    case REACT_FORWARD_REF_TYPE:
      return 'ForwardRef';

    case REACT_FRAGMENT_TYPE:
      return 'Fragment';

    case REACT_LAZY_TYPE:
      return 'Lazy';

    case REACT_MEMO_TYPE:
      return 'Memo';

    case REACT_PORTAL_TYPE:
      return 'Portal';

    case REACT_PROFILER_TYPE:
      return 'Profiler';

    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';

    case REACT_SUSPENSE_TYPE:
      return 'Suspense';

    case REACT_SUSPENSE_LIST_TYPE:
      return 'SuspenseList';

    case REACT_VIEW_TRANSITION_TYPE:
      return 'ViewTransition';

    case REACT_TRACING_MARKER_TYPE:
      return 'TracingMarker';

    default:
      const {
        type
      } = element;

      if (typeof type === 'string') {
        return type;
      } else if (typeof type === 'function') {
        return getDisplayName(type, 'Anonymous');
      } else if (type != null) {
        return 'NotImplementedInDevtools';
      } else {
        return 'Element';
      }

  }
}
const MAX_PREVIEW_STRING_LENGTH = 50;

function truncateForDisplay(string, length = MAX_PREVIEW_STRING_LENGTH) {
  if (string.length > length) {
    return string.slice(0, length) + '…';
  } else {
    return string;
  }
} // Attempts to mimic Chrome's inline preview for values.
// For example, the following value...
//   {
//      foo: 123,
//      bar: "abc",
//      baz: [true, false],
//      qux: { ab: 1, cd: 2 }
//   };
//
// Would show a preview of...
//   {foo: 123, bar: "abc", baz: Array(2), qux: {…}}
//
// And the following value...
//   [
//     123,
//     "abc",
//     [true, false],
//     { foo: 123, bar: "abc" }
//   ];
//
// Would show a preview of...
//   [123, "abc", Array(2), {…}]


function utils_formatDataForPreview(data, showFormattedValue) {
  if (data != null && utils_hasOwnProperty.call(data, meta.type)) {
    return showFormattedValue ? data[meta.preview_long] : data[meta.preview_short];
  }

  const type = utils_getDataType(data);

  switch (type) {
    case 'html_element':
      return `<${truncateForDisplay(data.tagName.toLowerCase())} />`;

    case 'function':
      if (typeof data.name === 'function' || data.name === '') {
        return '() => {}';
      }

      return `${truncateForDisplay(data.name)}() {}`;

    case 'string':
      return `"${data}"`;

    case 'bigint':
      return truncateForDisplay(data.toString() + 'n');

    case 'regexp':
      return truncateForDisplay(data.toString());

    case 'symbol':
      return truncateForDisplay(data.toString());

    case 'react_element':
      return `<${truncateForDisplay(utils_getDisplayNameForReactElement(data) || 'Unknown')} />`;

    case 'array_buffer':
      return `ArrayBuffer(${data.byteLength})`;

    case 'data_view':
      return `DataView(${data.buffer.byteLength})`;

    case 'array':
      if (showFormattedValue) {
        let formatted = '';

        for (let i = 0; i < data.length; i++) {
          if (i > 0) {
            formatted += ', ';
          }

          formatted += utils_formatDataForPreview(data[i], false);

          if (formatted.length > MAX_PREVIEW_STRING_LENGTH) {
            // Prevent doing a lot of unnecessary iteration...
            break;
          }
        }

        return `[${truncateForDisplay(formatted)}]`;
      } else {
        const length = utils_hasOwnProperty.call(data, meta.size) ? data[meta.size] : data.length;
        return `Array(${length})`;
      }

    case 'typed_array':
      const shortName = `${data.constructor.name}(${data.length})`;

      if (showFormattedValue) {
        let formatted = '';

        for (let i = 0; i < data.length; i++) {
          if (i > 0) {
            formatted += ', ';
          }

          formatted += data[i];

          if (formatted.length > MAX_PREVIEW_STRING_LENGTH) {
            // Prevent doing a lot of unnecessary iteration...
            break;
          }
        }

        return `${shortName} [${truncateForDisplay(formatted)}]`;
      } else {
        return shortName;
      }

    case 'iterator':
      const name = data.constructor.name;

      if (showFormattedValue) {
        // TRICKY
        // Don't use [...spread] syntax for this purpose.
        // This project uses @babel/plugin-transform-spread in "loose" mode which only works with Array values.
        // Other types (e.g. typed arrays, Sets) will not spread correctly.
        const array = Array.from(data);
        let formatted = '';

        for (let i = 0; i < array.length; i++) {
          const entryOrEntries = array[i];

          if (i > 0) {
            formatted += ', ';
          } // TRICKY
          // Browsers display Maps and Sets differently.
          // To mimic their behavior, detect if we've been given an entries tuple.
          //   Map(2) {"abc" => 123, "def" => 123}
          //   Set(2) {"abc", 123}


          if (src_isArray(entryOrEntries)) {
            const key = utils_formatDataForPreview(entryOrEntries[0], true);
            const value = utils_formatDataForPreview(entryOrEntries[1], false);
            formatted += `${key} => ${value}`;
          } else {
            formatted += utils_formatDataForPreview(entryOrEntries, false);
          }

          if (formatted.length > MAX_PREVIEW_STRING_LENGTH) {
            // Prevent doing a lot of unnecessary iteration...
            break;
          }
        }

        return `${name}(${data.size}) {${truncateForDisplay(formatted)}}`;
      } else {
        return `${name}(${data.size})`;
      }

    case 'opaque_iterator':
      {
        return data[Symbol.toStringTag];
      }

    case 'date':
      return data.toString();

    case 'class_instance':
      try {
        let resolvedConstructorName = data.constructor.name;

        if (typeof resolvedConstructorName === 'string') {
          return resolvedConstructorName;
        }

        resolvedConstructorName = Object.getPrototypeOf(data).constructor.name;

        if (typeof resolvedConstructorName === 'string') {
          return resolvedConstructorName;
        }

        try {
          return truncateForDisplay(String(data));
        } catch (error) {
          return 'unserializable';
        }
      } catch (error) {
        return 'unserializable';
      }

    case 'object':
      if (showFormattedValue) {
        const keys = Array.from(utils_getAllEnumerableKeys(data)).sort(alphaSortKeys);
        let formatted = '';

        for (let i = 0; i < keys.length; i++) {
          const key = keys[i];

          if (i > 0) {
            formatted += ', ';
          }

          formatted += `${key.toString()}: ${utils_formatDataForPreview(data[key], false)}`;

          if (formatted.length > MAX_PREVIEW_STRING_LENGTH) {
            // Prevent doing a lot of unnecessary iteration...
            break;
          }
        }

        return `{${truncateForDisplay(formatted)}}`;
      } else {
        return '{…}';
      }

    case 'boolean':
    case 'number':
    case 'infinity':
    case 'nan':
    case 'null':
    case 'undefined':
      return data;

    default:
      try {
        return truncateForDisplay(String(data));
      } catch (error) {
        return 'unserializable';
      }

  }
} // Basically checking that the object only has Object in its prototype chain

const isPlainObject = object => {
  const objectPrototype = Object.getPrototypeOf(object);
  if (!objectPrototype) return true;
  const objectParentPrototype = Object.getPrototypeOf(objectPrototype);
  return !objectParentPrototype;
};
function backendToFrontendSerializedElementMapper(element) {
  const {
    formattedDisplayName,
    hocDisplayNames,
    compiledWithForget
  } = parseElementDisplayNameFromBackend(element.displayName, element.type);
  return { ...element,
    displayName: formattedDisplayName,
    hocDisplayNames,
    compiledWithForget
  };
} // Chrome normalizes urls like webpack-internals:// but new URL don't, so cannot use new URL here.

function normalizeUrl(url) {
  return url.replace('/./', '/');
}
function getIsReloadAndProfileSupported() {
  // Notify the frontend if the backend supports the Storage API (e.g. localStorage).
  // If not, features like reload-and-profile will not work correctly and must be disabled.
  let isBackendStorageAPISupported = false;

  try {
    localStorage.getItem('test');
    isBackendStorageAPISupported = true;
  } catch (error) {}

  return isBackendStorageAPISupported && isSynchronousXHRSupported();
} // Expected to be used only by browser extension and react-devtools-inline

function getIfReloadedAndProfiling() {
  return sessionStorageGetItem(SESSION_STORAGE_RELOAD_AND_PROFILE_KEY) === 'true';
}
function getProfilingSettings() {
  return {
    recordChangeDescriptions: sessionStorageGetItem(SESSION_STORAGE_RECORD_CHANGE_DESCRIPTIONS_KEY) === 'true',
    recordTimeline: sessionStorageGetItem(SESSION_STORAGE_RECORD_TIMELINE_KEY) === 'true'
  };
}
function onReloadAndProfile(recordChangeDescriptions, recordTimeline) {
  sessionStorageSetItem(SESSION_STORAGE_RELOAD_AND_PROFILE_KEY, 'true');
  sessionStorageSetItem(SESSION_STORAGE_RECORD_CHANGE_DESCRIPTIONS_KEY, recordChangeDescriptions ? 'true' : 'false');
  sessionStorageSetItem(SESSION_STORAGE_RECORD_TIMELINE_KEY, recordTimeline ? 'true' : 'false');
}
function onReloadAndProfileFlagsReset() {
  sessionStorageRemoveItem(SESSION_STORAGE_RELOAD_AND_PROFILE_KEY);
  sessionStorageRemoveItem(SESSION_STORAGE_RECORD_CHANGE_DESCRIPTIONS_KEY);
  sessionStorageRemoveItem(SESSION_STORAGE_RECORD_TIMELINE_KEY);
}
// EXTERNAL MODULE: ../react-devtools-shared/node_modules/json5/dist/index.js
var dist = __webpack_require__(8074);
var dist_default = /*#__PURE__*/__webpack_require__.n(dist);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/utils.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function printElement(element, includeWeight = false) {
  let prefix = ' ';

  if (element.children.length > 0) {
    prefix = element.isCollapsed ? '▸' : '▾';
  }

  let key = '';

  if (element.key !== null) {
    key = ` key="${element.key}"`;
  }

  let hocDisplayNames = null;

  if (element.hocDisplayNames !== null) {
    hocDisplayNames = [...element.hocDisplayNames];
  }

  const hocs = hocDisplayNames === null ? '' : ` [${hocDisplayNames.join('][')}]`;
  let suffix = '';

  if (includeWeight) {
    suffix = ` (${element.isCollapsed ? 1 : element.weight})`;
  }

  return `${'  '.repeat(element.depth + 1)}${prefix} <${element.displayName || 'null'}${key}>${hocs}${suffix}`;
}
function printOwnersList(elements, includeWeight = false) {
  return elements.map(element => printElement(element, includeWeight)).join('\n');
}
function printStore(store, includeWeight = false, state = null) {
  const snapshotLines = [];
  let rootWeight = 0;

  function printSelectedMarker(index) {
    if (state === null) {
      return '';
    }

    return state.inspectedElementIndex === index ? `→` : ' ';
  }

  function printErrorsAndWarnings(element) {
    const {
      errorCount,
      warningCount
    } = store.getErrorAndWarningCountForElementID(element.id);

    if (errorCount === 0 && warningCount === 0) {
      return '';
    }

    return ` ${errorCount > 0 ? '✕' : ''}${warningCount > 0 ? '⚠' : ''}`;
  }

  const ownerFlatTree = state !== null ? state.ownerFlatTree : null;

  if (ownerFlatTree !== null) {
    snapshotLines.push('[owners]' + (includeWeight ? ` (${ownerFlatTree.length})` : ''));
    ownerFlatTree.forEach((element, index) => {
      const printedSelectedMarker = printSelectedMarker(index);
      const printedElement = printElement(element, false);
      const printedErrorsAndWarnings = printErrorsAndWarnings(element);
      snapshotLines.push(`${printedSelectedMarker}${printedElement}${printedErrorsAndWarnings}`);
    });
  } else {
    const errorsAndWarnings = store._errorsAndWarnings;

    if (errorsAndWarnings.size > 0) {
      let errorCount = 0;
      let warningCount = 0;
      errorsAndWarnings.forEach(entry => {
        errorCount += entry.errorCount;
        warningCount += entry.warningCount;
      });
      snapshotLines.push(`✕ ${errorCount}, ⚠ ${warningCount}`);
    }

    store.roots.forEach(rootID => {
      const {
        weight
      } = store.getElementByID(rootID);
      const maybeWeightLabel = includeWeight ? ` (${weight})` : ''; // Store does not (yet) expose a way to get errors/warnings per root.

      snapshotLines.push(`[root]${maybeWeightLabel}`);

      for (let i = rootWeight; i < rootWeight + weight; i++) {
        const element = store.getElementAtIndex(i);

        if (element == null) {
          throw Error(`Could not find element at index "${i}"`);
        }

        const printedSelectedMarker = printSelectedMarker(i);
        const printedElement = printElement(element, includeWeight);
        const printedErrorsAndWarnings = printErrorsAndWarnings(element);
        snapshotLines.push(`${printedSelectedMarker}${printedElement}${printedErrorsAndWarnings}`);
      }

      rootWeight += weight;
    }); // Make sure the pretty-printed test align with the Store's reported number of total rows.

    if (rootWeight !== store.numElements) {
      throw Error(`Inconsistent Store state. Individual root weights ("${rootWeight}") do not match total weight ("${store.numElements}")`);
    } // If roots have been unmounted, verify that they've been removed from maps.
    // This helps ensure the Store doesn't leak memory.


    store.assertExpectedRootMapSizes();
  }

  return snapshotLines.join('\n');
} // We use JSON.parse to parse string values
// e.g. 'foo' is not valid JSON but it is a valid string
// so this method replaces e.g. 'foo' with "foo"

function sanitizeForParse(value) {
  if (typeof value === 'string') {
    if (value.length >= 2 && value.charAt(0) === "'" && value.charAt(value.length - 1) === "'") {
      return '"' + value.slice(1, value.length - 1) + '"';
    }
  }

  return value;
}
function smartParse(value) {
  switch (value) {
    case 'Infinity':
      return Infinity;

    case 'NaN':
      return NaN;

    case 'undefined':
      return undefined;

    default:
      return dist_default().parse(sanitizeForParse(value));
  }
}
function smartStringify(value) {
  if (typeof value === 'number') {
    if (Number.isNaN(value)) {
      return 'NaN';
    } else if (!Number.isFinite(value)) {
      return 'Infinity';
    }
  } else if (value === undefined) {
    return 'undefined';
  }

  return JSON.stringify(value);
} // [url, row, column]

const STACK_DELIMETER = /\n\s+at /;
const STACK_SOURCE_LOCATION = /([^\s]+) \((.+):(.+):(.+)\)/;
function stackToComponentSources(stack) {
  const out = [];
  stack.split(STACK_DELIMETER).slice(1).forEach(entry => {
    const match = STACK_SOURCE_LOCATION.exec(entry);

    if (match) {
      const [, component, url, row, column] = match;
      out.push([component, [url, parseInt(row, 10), parseInt(column, 10)]]);
    } else {
      out.push([entry, null]);
    }
  });
  return out;
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/utils.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


const commitGradient = ['var(--color-commit-gradient-0)', 'var(--color-commit-gradient-1)', 'var(--color-commit-gradient-2)', 'var(--color-commit-gradient-3)', 'var(--color-commit-gradient-4)', 'var(--color-commit-gradient-5)', 'var(--color-commit-gradient-6)', 'var(--color-commit-gradient-7)', 'var(--color-commit-gradient-8)', 'var(--color-commit-gradient-9)']; // Combines info from the Store (frontend) and renderer interfaces (backend) into the format required by the Profiler UI.
// This format can then be quickly exported (and re-imported).

function prepareProfilingDataFrontendFromBackendAndStore(dataBackends, operationsByRootID, snapshotsByRootID) {
  const dataForRoots = new Map();
  const timelineDataArray = [];
  dataBackends.forEach(dataBackend => {
    const {
      timelineData
    } = dataBackend;

    if (timelineData != null) {
      const {
        batchUIDToMeasuresKeyValueArray,
        internalModuleSourceToRanges,
        laneToLabelKeyValueArray,
        laneToReactMeasureKeyValueArray,
        ...rest
      } = timelineData;
      timelineDataArray.push({ ...rest,
        // Most of the data is safe to parse as-is,
        // but we need to convert the nested Arrays back to Maps.
        batchUIDToMeasuresMap: new Map(batchUIDToMeasuresKeyValueArray),
        internalModuleSourceToRanges: new Map(internalModuleSourceToRanges),
        laneToLabelMap: new Map(laneToLabelKeyValueArray),
        laneToReactMeasureMap: new Map(laneToReactMeasureKeyValueArray)
      });
    }

    dataBackend.dataForRoots.forEach(({
      commitData,
      displayName,
      initialTreeBaseDurations,
      rootID
    }) => {
      const operations = operationsByRootID.get(rootID);

      if (operations == null) {
        throw Error(`Could not find profiling operations for root "${rootID}"`);
      }

      const snapshots = snapshotsByRootID.get(rootID);

      if (snapshots == null) {
        throw Error(`Could not find profiling snapshots for root "${rootID}"`);
      } // Do not filter empty commits from the profiler data!
      // Hiding "empty" commits might cause confusion too.
      // A commit *did happen* even if none of the components the Profiler is showing were involved.


      const convertedCommitData = commitData.map((commitDataBackend, commitIndex) => ({
        changeDescriptions: commitDataBackend.changeDescriptions != null ? new Map(commitDataBackend.changeDescriptions) : null,
        duration: commitDataBackend.duration,
        effectDuration: commitDataBackend.effectDuration,
        fiberActualDurations: new Map(commitDataBackend.fiberActualDurations),
        fiberSelfDurations: new Map(commitDataBackend.fiberSelfDurations),
        passiveEffectDuration: commitDataBackend.passiveEffectDuration,
        priorityLevel: commitDataBackend.priorityLevel,
        timestamp: commitDataBackend.timestamp,
        updaters: commitDataBackend.updaters !== null ? commitDataBackend.updaters.map(backendToFrontendSerializedElementMapper) : null
      }));
      dataForRoots.set(rootID, {
        commitData: convertedCommitData,
        displayName,
        initialTreeBaseDurations: new Map(initialTreeBaseDurations),
        operations,
        rootID,
        snapshots
      });
    });
  });
  return {
    dataForRoots,
    imported: false,
    timelineData: timelineDataArray
  };
} // Converts a Profiling data export into the format required by the Store.

function prepareProfilingDataFrontendFromExport(profilingDataExport) {
  const {
    version
  } = profilingDataExport;

  if (version !== PROFILER_EXPORT_VERSION) {
    throw Error(`Unsupported profile export version "${version}". Supported version is "${PROFILER_EXPORT_VERSION}".`);
  }

  const timelineData = profilingDataExport.timelineData ? profilingDataExport.timelineData.map(({
    batchUIDToMeasuresKeyValueArray,
    componentMeasures,
    duration,
    flamechart,
    internalModuleSourceToRanges,
    laneToLabelKeyValueArray,
    laneToReactMeasureKeyValueArray,
    nativeEvents,
    networkMeasures,
    otherUserTimingMarks,
    reactVersion,
    schedulingEvents,
    snapshots,
    snapshotHeight,
    startTime,
    suspenseEvents,
    thrownErrors
  }) => ({
    // Most of the data is safe to parse as-is,
    // but we need to convert the nested Arrays back to Maps.
    batchUIDToMeasuresMap: new Map(batchUIDToMeasuresKeyValueArray),
    componentMeasures,
    duration,
    flamechart,
    internalModuleSourceToRanges: new Map(internalModuleSourceToRanges),
    laneToLabelMap: new Map(laneToLabelKeyValueArray),
    laneToReactMeasureMap: new Map(laneToReactMeasureKeyValueArray),
    nativeEvents,
    networkMeasures,
    otherUserTimingMarks,
    reactVersion,
    schedulingEvents,
    snapshots,
    snapshotHeight,
    startTime,
    suspenseEvents,
    thrownErrors
  })) : [];
  const dataForRoots = new Map();
  profilingDataExport.dataForRoots.forEach(({
    commitData,
    displayName,
    initialTreeBaseDurations,
    operations,
    rootID,
    snapshots
  }) => {
    dataForRoots.set(rootID, {
      commitData: commitData.map(({
        changeDescriptions,
        duration,
        effectDuration,
        fiberActualDurations,
        fiberSelfDurations,
        passiveEffectDuration,
        priorityLevel,
        timestamp,
        updaters
      }) => ({
        changeDescriptions: changeDescriptions != null ? new Map(changeDescriptions) : null,
        duration,
        effectDuration,
        fiberActualDurations: new Map(fiberActualDurations),
        fiberSelfDurations: new Map(fiberSelfDurations),
        passiveEffectDuration,
        priorityLevel,
        timestamp,
        updaters
      })),
      displayName,
      initialTreeBaseDurations: new Map(initialTreeBaseDurations),
      operations,
      rootID,
      snapshots: new Map(snapshots)
    });
  });
  return {
    dataForRoots,
    imported: true,
    timelineData
  };
} // Converts a Store Profiling data into a format that can be safely (JSON) serialized for export.

function prepareProfilingDataExport(profilingDataFrontend) {
  const timelineData = profilingDataFrontend.timelineData.map(({
    batchUIDToMeasuresMap,
    componentMeasures,
    duration,
    flamechart,
    internalModuleSourceToRanges,
    laneToLabelMap,
    laneToReactMeasureMap,
    nativeEvents,
    networkMeasures,
    otherUserTimingMarks,
    reactVersion,
    schedulingEvents,
    snapshots,
    snapshotHeight,
    startTime,
    suspenseEvents,
    thrownErrors
  }) => ({
    // Most of the data is safe to serialize as-is,
    // but we need to convert the Maps to nested Arrays.
    batchUIDToMeasuresKeyValueArray: Array.from(batchUIDToMeasuresMap.entries()),
    componentMeasures: componentMeasures,
    duration,
    flamechart,
    internalModuleSourceToRanges: Array.from(internalModuleSourceToRanges.entries()),
    laneToLabelKeyValueArray: Array.from(laneToLabelMap.entries()),
    laneToReactMeasureKeyValueArray: Array.from(laneToReactMeasureMap.entries()),
    nativeEvents,
    networkMeasures,
    otherUserTimingMarks,
    reactVersion,
    schedulingEvents,
    snapshots,
    snapshotHeight,
    startTime,
    suspenseEvents,
    thrownErrors
  }));
  const dataForRoots = [];
  profilingDataFrontend.dataForRoots.forEach(({
    commitData,
    displayName,
    initialTreeBaseDurations,
    operations,
    rootID,
    snapshots
  }) => {
    dataForRoots.push({
      commitData: commitData.map(({
        changeDescriptions,
        duration,
        effectDuration,
        fiberActualDurations,
        fiberSelfDurations,
        passiveEffectDuration,
        priorityLevel,
        timestamp,
        updaters
      }) => ({
        changeDescriptions: changeDescriptions != null ? Array.from(changeDescriptions.entries()) : null,
        duration,
        effectDuration,
        fiberActualDurations: Array.from(fiberActualDurations.entries()),
        fiberSelfDurations: Array.from(fiberSelfDurations.entries()),
        passiveEffectDuration,
        priorityLevel,
        timestamp,
        updaters
      })),
      displayName,
      initialTreeBaseDurations: Array.from(initialTreeBaseDurations.entries()),
      operations,
      rootID,
      snapshots: Array.from(snapshots.entries())
    });
  });
  return {
    version: PROFILER_EXPORT_VERSION,
    dataForRoots,
    timelineData
  };
}
const getGradientColor = value => {
  const maxIndex = commitGradient.length - 1;
  let index;

  if (Number.isNaN(value)) {
    index = 0;
  } else if (!Number.isFinite(value)) {
    index = maxIndex;
  } else {
    index = Math.max(0, Math.min(maxIndex, value)) * maxIndex;
  }

  return commitGradient[Math.round(index)];
};
const formatDuration = duration => Math.round(duration * 10) / 10 || '<0.1';
const formatPercentage = percentage => Math.round(percentage * 100);
const formatTime = timestamp => Math.round(Math.round(timestamp) / 100) / 10;
const scale = (minValue, maxValue, minRange, maxRange) => (value, fallbackValue) => maxValue - minValue === 0 ? fallbackValue : (value - minValue) / (maxValue - minValue) * (maxRange - minRange);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/CommitTreeBuilder.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





const debug = (methodName, ...args) => {
  if (__DEBUG__) {
    console.log(`%cCommitTreeBuilder %c${methodName}`, 'color: pink; font-weight: bold;', 'font-weight: bold;', ...args);
  }
};

const rootToCommitTreeMap = new Map();
function getCommitTree({
  commitIndex,
  profilerStore,
  rootID
}) {
  if (!rootToCommitTreeMap.has(rootID)) {
    rootToCommitTreeMap.set(rootID, []);
  }

  const commitTrees = rootToCommitTreeMap.get(rootID);

  if (commitIndex < commitTrees.length) {
    return commitTrees[commitIndex];
  }

  const {
    profilingData
  } = profilerStore;

  if (profilingData === null) {
    throw Error(`No profiling data available`);
  }

  const dataForRoot = profilingData.dataForRoots.get(rootID);

  if (dataForRoot == null) {
    throw Error(`Could not find profiling data for root "${rootID}"`);
  }

  const {
    operations
  } = dataForRoot;

  if (operations.length <= commitIndex) {
    throw Error(`getCommitTree(): Invalid commit "${commitIndex}" for root "${rootID}". There are only "${operations.length}" commits.`);
  }

  let commitTree = null;

  for (let index = commitTrees.length; index <= commitIndex; index++) {
    // Commits are generated sequentially and cached.
    // If this is the very first commit, start with the cached snapshot and apply the first mutation.
    // Otherwise load (or generate) the previous commit and append a mutation to it.
    if (index === 0) {
      const nodes = new Map(); // Construct the initial tree.

      recursivelyInitializeTree(rootID, 0, nodes, dataForRoot); // Mutate the tree

      if (operations != null && index < operations.length) {
        commitTree = updateTree({
          nodes,
          rootID
        }, operations[index]);

        if (__DEBUG__) {
          __printTree(commitTree);
        }

        commitTrees.push(commitTree);
      }
    } else {
      const previousCommitTree = commitTrees[index - 1];
      commitTree = updateTree(previousCommitTree, operations[index]);

      if (__DEBUG__) {
        __printTree(commitTree);
      }

      commitTrees.push(commitTree);
    }
  }

  return commitTree;
}

function recursivelyInitializeTree(id, parentID, nodes, dataForRoot) {
  const node = dataForRoot.snapshots.get(id);

  if (node != null) {
    nodes.set(id, {
      id,
      children: node.children,
      displayName: node.displayName,
      hocDisplayNames: node.hocDisplayNames,
      key: node.key,
      parentID,
      treeBaseDuration: dataForRoot.initialTreeBaseDurations.get(id),
      type: node.type,
      compiledWithForget: node.compiledWithForget
    });
    node.children.forEach(childID => recursivelyInitializeTree(childID, id, nodes, dataForRoot));
  }
}

function updateTree(commitTree, operations) {
  // Clone the original tree so edits don't affect it.
  const nodes = new Map(commitTree.nodes); // Clone nodes before mutating them so edits don't affect them.

  const getClonedNode = id => {
    // $FlowFixMe[prop-missing] - recommended fix is to use object spread operator
    const clonedNode = Object.assign({}, nodes.get(id));
    nodes.set(id, clonedNode);
    return clonedNode;
  };

  let i = 2;
  let id = null; // Reassemble the string table.

  const stringTable = [null // ID = 0 corresponds to the null string.
  ];
  const stringTableSize = operations[i++];
  const stringTableEnd = i + stringTableSize;

  while (i < stringTableEnd) {
    const nextLength = operations[i++];
    const nextString = utfDecodeStringWithRanges(operations, i, i + nextLength - 1);
    stringTable.push(nextString);
    i += nextLength;
  }

  while (i < operations.length) {
    const operation = operations[i];

    switch (operation) {
      case constants_TREE_OPERATION_ADD:
        {
          id = operations[i + 1];
          const type = operations[i + 2];
          i += 3;

          if (nodes.has(id)) {
            throw new Error(`Commit tree already contains fiber "${id}". This is a bug in React DevTools.`);
          }

          if (type === types_ElementTypeRoot) {
            i++; // isStrictModeCompliant

            i++; // Profiling flag

            i++; // supportsStrictMode flag

            i++; // hasOwnerMetadata flag

            if (__DEBUG__) {
              debug('Add', `new root fiber ${id}`);
            }

            const node = {
              children: [],
              displayName: null,
              hocDisplayNames: null,
              id,
              key: null,
              parentID: 0,
              treeBaseDuration: 0,
              // This will be updated by a subsequent operation
              type,
              compiledWithForget: false
            };
            nodes.set(id, node);
          } else {
            const parentID = operations[i];
            i++;
            i++; // ownerID

            const displayNameStringID = operations[i];
            const displayName = stringTable[displayNameStringID];
            i++;
            const keyStringID = operations[i];
            const key = stringTable[keyStringID];
            i++;

            if (__DEBUG__) {
              debug('Add', `fiber ${id} (${displayName || 'null'}) as child of ${parentID}`);
            }

            const parentNode = getClonedNode(parentID);
            parentNode.children = parentNode.children.concat(id);
            const {
              formattedDisplayName,
              hocDisplayNames,
              compiledWithForget
            } = parseElementDisplayNameFromBackend(displayName, type);
            const node = {
              children: [],
              displayName: formattedDisplayName,
              hocDisplayNames: hocDisplayNames,
              id,
              key,
              parentID,
              treeBaseDuration: 0,
              // This will be updated by a subsequent operation
              type,
              compiledWithForget
            };
            nodes.set(id, node);
          }

          break;
        }

      case constants_TREE_OPERATION_REMOVE:
        {
          const removeLength = operations[i + 1];
          i += 2;

          for (let removeIndex = 0; removeIndex < removeLength; removeIndex++) {
            id = operations[i];
            i++;

            if (!nodes.has(id)) {
              throw new Error(`Commit tree does not contain fiber "${id}". This is a bug in React DevTools.`);
            }

            const node = getClonedNode(id);
            const parentID = node.parentID;
            nodes.delete(id);

            if (!nodes.has(parentID)) {// No-op
            } else {
              const parentNode = getClonedNode(parentID);

              if (__DEBUG__) {
                debug('Remove', `fiber ${id} from parent ${parentID}`);
              }

              parentNode.children = parentNode.children.filter(childID => childID !== id);
            }
          }

          break;
        }

      case constants_TREE_OPERATION_REMOVE_ROOT:
        {
          throw Error('Operation REMOVE_ROOT is not supported while profiling.');
        }

      case constants_TREE_OPERATION_REORDER_CHILDREN:
        {
          id = operations[i + 1];
          const numChildren = operations[i + 2];
          const children = operations.slice(i + 3, i + 3 + numChildren);
          i = i + 3 + numChildren;

          if (__DEBUG__) {
            debug('Re-order', `fiber ${id} children ${children.join(',')}`);
          }

          const node = getClonedNode(id);
          node.children = Array.from(children);
          break;
        }

      case constants_TREE_OPERATION_SET_SUBTREE_MODE:
        {
          id = operations[i + 1];
          const mode = operations[i + 1];
          i += 3;

          if (__DEBUG__) {
            debug('Subtree mode', `Subtree with root ${id} set to mode ${mode}`);
          }

          break;
        }

      case constants_TREE_OPERATION_UPDATE_TREE_BASE_DURATION:
        {
          id = operations[i + 1];
          const node = getClonedNode(id);
          node.treeBaseDuration = operations[i + 2] / 1000; // Convert microseconds back to milliseconds;

          if (__DEBUG__) {
            debug('Update', `fiber ${id} treeBaseDuration to ${node.treeBaseDuration}`);
          }

          i += 3;
          break;
        }

      case constants_TREE_OPERATION_UPDATE_ERRORS_OR_WARNINGS:
        {
          id = operations[i + 1];
          const numErrors = operations[i + 2];
          const numWarnings = operations[i + 3];
          i += 4;

          if (__DEBUG__) {
            debug('Warnings and Errors update', `fiber ${id} has ${numErrors} errors and ${numWarnings} warnings`);
          }

          break;
        }

      default:
        throw Error(`Unsupported Bridge operation "${operation}"`);
    }
  }

  return {
    nodes,
    rootID: commitTree.rootID
  };
}

function invalidateCommitTrees() {
  rootToCommitTreeMap.clear();
} // DEBUG

const __printTree = commitTree => {
  if (__DEBUG__) {
    const {
      nodes,
      rootID
    } = commitTree;
    console.group('__printTree()');
    const queue = [rootID, 0];

    while (queue.length > 0) {
      const id = queue.shift();
      const depth = queue.shift(); // $FlowFixMe[incompatible-call]

      const node = nodes.get(id);

      if (node == null) {
        // $FlowFixMe[incompatible-type]
        throw Error(`Could not find node with id "${id}" in commit tree`);
      }

      console.log( // $FlowFixMe[incompatible-call]
      `${'•'.repeat(depth)}${node.id}:${node.displayName || ''} ${node.key ? `key:"${node.key}"` : ''} (${node.treeBaseDuration})`);
      node.children.forEach(childID => {
        // $FlowFixMe[unsafe-addition]
        queue.push(childID, depth + 1);
      });
    }

    console.groupEnd();
  }
};
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/FlamegraphChartBuilder.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


const cachedChartData = new Map();
function getChartData({
  commitIndex,
  commitTree,
  profilerStore,
  rootID
}) {
  const commitDatum = profilerStore.getCommitData(rootID, commitIndex);
  const {
    fiberActualDurations,
    fiberSelfDurations
  } = commitDatum;
  const {
    nodes
  } = commitTree;
  const chartDataKey = `${rootID}-${commitIndex}`;

  if (cachedChartData.has(chartDataKey)) {
    return cachedChartData.get(chartDataKey);
  }

  const idToDepthMap = new Map();
  const renderPathNodes = new Set();
  const rows = [];
  let maxDepth = 0;
  let maxSelfDuration = 0; // Generate flame graph structure using tree base durations.

  const walkTree = (id, rightOffset, currentDepth) => {
    idToDepthMap.set(id, currentDepth);
    const node = nodes.get(id);

    if (node == null) {
      throw Error(`Could not find node with id "${id}" in commit tree`);
    }

    const {
      children,
      displayName,
      hocDisplayNames,
      key,
      treeBaseDuration,
      compiledWithForget
    } = node;
    const actualDuration = fiberActualDurations.get(id) || 0;
    const selfDuration = fiberSelfDurations.get(id) || 0;
    const didRender = fiberActualDurations.has(id);
    const name = displayName || 'Anonymous';
    const maybeKey = key !== null ? ` key="${key}"` : '';
    let maybeBadge = '';
    const maybeForgetBadge = compiledWithForget ? '✨ ' : '';

    if (hocDisplayNames !== null && hocDisplayNames.length > 0) {
      maybeBadge = ` (${hocDisplayNames[0]})`;
    }

    let label = `${maybeForgetBadge}${name}${maybeBadge}${maybeKey}`;

    if (didRender) {
      label += ` (${formatDuration(selfDuration)}ms of ${formatDuration(actualDuration)}ms)`;
    }

    maxDepth = Math.max(maxDepth, currentDepth);
    maxSelfDuration = Math.max(maxSelfDuration, selfDuration);
    const chartNode = {
      actualDuration,
      didRender,
      id,
      label,
      name,
      offset: rightOffset - treeBaseDuration,
      selfDuration,
      treeBaseDuration
    };

    if (currentDepth > rows.length) {
      rows.push([chartNode]);
    } else {
      rows[currentDepth - 1].push(chartNode);
    }

    for (let i = children.length - 1; i >= 0; i--) {
      const childID = children[i];
      const childChartNode = walkTree(childID, rightOffset, currentDepth + 1);
      rightOffset -= childChartNode.treeBaseDuration;
    }

    return chartNode;
  };

  let baseDuration = 0; // Special case to handle unmounted roots.

  if (nodes.size > 0) {
    // Skip over the root; we don't want to show it in the flamegraph.
    const root = nodes.get(rootID);

    if (root == null) {
      throw Error(`Could not find root node with id "${rootID}" in commit tree`);
    } // Don't assume a single root.
    // Component filters or Fragments might lead to multiple "roots" in a flame graph.


    for (let i = root.children.length - 1; i >= 0; i--) {
      const id = root.children[i];
      const node = nodes.get(id);

      if (node == null) {
        throw Error(`Could not find node with id "${id}" in commit tree`);
      }

      baseDuration += node.treeBaseDuration;
      walkTree(id, baseDuration, 1);
    }

    fiberActualDurations.forEach((duration, id) => {
      let node = nodes.get(id);

      if (node != null) {
        let currentID = node.parentID;

        while (currentID !== 0) {
          if (renderPathNodes.has(currentID)) {
            // We've already walked this path; we can skip it.
            break;
          } else {
            renderPathNodes.add(currentID);
          }

          node = nodes.get(currentID);
          currentID = node != null ? node.parentID : 0;
        }
      }
    });
  }

  const chartData = {
    baseDuration,
    depth: maxDepth,
    idToDepthMap,
    maxSelfDuration,
    renderPathNodes,
    rows
  };
  cachedChartData.set(chartDataKey, chartData);
  return chartData;
}
function invalidateChartData() {
  cachedChartData.clear();
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/RankedChartBuilder.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



const RankedChartBuilder_cachedChartData = new Map();
function RankedChartBuilder_getChartData({
  commitIndex,
  commitTree,
  profilerStore,
  rootID
}) {
  const commitDatum = profilerStore.getCommitData(rootID, commitIndex);
  const {
    fiberActualDurations,
    fiberSelfDurations
  } = commitDatum;
  const {
    nodes
  } = commitTree;
  const chartDataKey = `${rootID}-${commitIndex}`;

  if (RankedChartBuilder_cachedChartData.has(chartDataKey)) {
    return RankedChartBuilder_cachedChartData.get(chartDataKey);
  }

  let maxSelfDuration = 0;
  const chartNodes = [];
  fiberActualDurations.forEach((actualDuration, id) => {
    const node = nodes.get(id);

    if (node == null) {
      throw Error(`Could not find node with id "${id}" in commit tree`);
    }

    const {
      displayName,
      key,
      parentID,
      type,
      compiledWithForget
    } = node; // Don't show the root node in this chart.

    if (parentID === 0) {
      return;
    }

    const selfDuration = fiberSelfDurations.get(id) || 0;
    maxSelfDuration = Math.max(maxSelfDuration, selfDuration);
    const name = displayName || 'Anonymous';
    const maybeKey = key !== null ? ` key="${key}"` : '';
    const maybeForgetBadge = compiledWithForget ? '✨ ' : '';
    let maybeBadge = '';

    if (type === ElementTypeForwardRef) {
      maybeBadge = ' (ForwardRef)';
    } else if (type === ElementTypeMemo) {
      maybeBadge = ' (Memo)';
    }

    const label = `${maybeForgetBadge}${name}${maybeBadge}${maybeKey} (${formatDuration(selfDuration)}ms)`;
    chartNodes.push({
      id,
      label,
      name,
      value: selfDuration
    });
  });
  const chartData = {
    maxValue: maxSelfDuration,
    nodes: chartNodes.sort((a, b) => b.value - a.value)
  };
  RankedChartBuilder_cachedChartData.set(chartDataKey, chartData);
  return chartData;
}
function RankedChartBuilder_invalidateChartData() {
  RankedChartBuilder_cachedChartData.clear();
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/ProfilingCache.js
function ProfilingCache_defineProperty(obj, key, value) { key = ProfilingCache_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function ProfilingCache_toPropertyKey(t) { var i = ProfilingCache_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function ProfilingCache_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




class ProfilingCache {
  constructor(profilerStore) {
    ProfilingCache_defineProperty(this, "_fiberCommits", new Map());

    ProfilingCache_defineProperty(this, "getCommitTree", ({
      commitIndex,
      rootID
    }) => getCommitTree({
      commitIndex,
      profilerStore: this._profilerStore,
      rootID
    }));

    ProfilingCache_defineProperty(this, "getFiberCommits", ({
      fiberID,
      rootID
    }) => {
      const cachedFiberCommits = this._fiberCommits.get(fiberID);

      if (cachedFiberCommits != null) {
        return cachedFiberCommits;
      }

      const fiberCommits = [];

      const dataForRoot = this._profilerStore.getDataForRoot(rootID);

      dataForRoot.commitData.forEach((commitDatum, commitIndex) => {
        if (commitDatum.fiberActualDurations.has(fiberID)) {
          fiberCommits.push(commitIndex);
        }
      });

      this._fiberCommits.set(fiberID, fiberCommits);

      return fiberCommits;
    });

    ProfilingCache_defineProperty(this, "getFlamegraphChartData", ({
      commitIndex,
      commitTree,
      rootID
    }) => getChartData({
      commitIndex,
      commitTree,
      profilerStore: this._profilerStore,
      rootID
    }));

    ProfilingCache_defineProperty(this, "getRankedChartData", ({
      commitIndex,
      commitTree,
      rootID
    }) => RankedChartBuilder_getChartData({
      commitIndex,
      commitTree,
      profilerStore: this._profilerStore,
      rootID
    }));

    this._profilerStore = profilerStore;
  }

  invalidate() {
    this._fiberCommits.clear();

    invalidateCommitTrees();
    invalidateChartData();
    RankedChartBuilder_invalidateChartData();
  }

}
;// CONCATENATED MODULE: ../react-devtools-shared/src/config/DevToolsFeatureFlags.default.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/************************************************************************
 * This file is forked between different DevTools implementations.
 * It should never be imported directly!
 * It should always be imported from "react-devtools-feature-flags".
 ************************************************************************/
const enableLogger = false;
const enableStyleXFeatures = false;
const isInternalFacebookBuild = false;
;// CONCATENATED MODULE: ../react-devtools-shared/src/Logger.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

let logFunctions = [];
const logEvent = enableLogger === true ? function logEvent(event) {
  logFunctions.forEach(log => {
    log(event);
  });
} : function logEvent() {};
const registerEventLogger = enableLogger === true ? function registerEventLogger(logFunction) {
  if (enableLogger) {
    logFunctions.push(logFunction);
    return function unregisterEventLogger() {
      logFunctions = logFunctions.filter(log => log !== logFunction);
    };
  }

  return () => {};
} : function registerEventLogger(logFunction) {
  return () => {};
};
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/ProfilerStore.js
function ProfilerStore_defineProperty(obj, key, value) { key = ProfilerStore_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function ProfilerStore_toPropertyKey(t) { var i = ProfilerStore_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function ProfilerStore_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





class ProfilerStore extends EventEmitter {
  // Suspense cache for lazily calculating derived profiling data.
  // Temporary store of profiling data from the backend renderer(s).
  // This data will be converted to the ProfilingDataFrontend format after being collected from all renderers.
  // Data from the most recently completed profiling session,
  // or data that has been imported from a previously exported session.
  // This object contains all necessary data to drive the Profiler UI interface,
  // even though some of it is lazily parsed/derived via the ProfilingCache.
  // Snapshot of all attached renderer IDs.
  // Once profiling is finished, this snapshot will be used to query renderers for profiling data.
  //
  // This map is initialized when profiling starts and updated when a new root is added while profiling;
  // Upon completion, it is converted into the exportable ProfilingDataFrontend format.
  // Snapshot of the state of the main Store (including all roots) when profiling started.
  // Once profiling is finished, this snapshot can be used along with "operations" messages emitted during profiling,
  // to reconstruct the state of each root for each commit.
  // It's okay to use a single root to store this information because node IDs are unique across all roots.
  //
  // This map is initialized when profiling starts and updated when a new root is added while profiling;
  // Upon completion, it is converted into the exportable ProfilingDataFrontend format.
  // Map of root (id) to a list of tree mutation that occur during profiling.
  // Once profiling is finished, these mutations can be used, along with the initial tree snapshots,
  // to reconstruct the state of each root for each commit.
  //
  // This map is only updated while profiling is in progress;
  // Upon completion, it is converted into the exportable ProfilingDataFrontend format.
  // The backend is currently profiling.
  // When profiling is in progress, operations are stored so that we can later reconstruct past commit trees.
  // Mainly used for optimistic UI.
  // This could be false, but at the same time _isBackendProfiling could be true
  // for cases when Backend is busy serializing a chunky payload.
  // Tracks whether a specific renderer logged any profiling data during the most recent session.
  // After profiling, data is requested from each attached renderer using this queue.
  // So long as this queue is not empty, the store is retrieving and processing profiling data from the backend.
  constructor(bridge, store, defaultIsProfiling) {
    super();

    ProfilerStore_defineProperty(this, "_dataBackends", []);

    ProfilerStore_defineProperty(this, "_dataFrontend", null);

    ProfilerStore_defineProperty(this, "_initialRendererIDs", new Set());

    ProfilerStore_defineProperty(this, "_initialSnapshotsByRootID", new Map());

    ProfilerStore_defineProperty(this, "_inProgressOperationsByRootID", new Map());

    ProfilerStore_defineProperty(this, "_isBackendProfiling", false);

    ProfilerStore_defineProperty(this, "_isProfilingBasedOnUserInput", false);

    ProfilerStore_defineProperty(this, "_rendererIDsThatReportedProfilingData", new Set());

    ProfilerStore_defineProperty(this, "_rendererQueue", new Set());

    ProfilerStore_defineProperty(this, "_takeProfilingSnapshotRecursive", (elementID, profilingSnapshots) => {
      const element = this._store.getElementByID(elementID);

      if (element !== null) {
        const snapshotNode = {
          id: elementID,
          children: element.children.slice(0),
          displayName: element.displayName,
          hocDisplayNames: element.hocDisplayNames,
          key: element.key,
          type: element.type,
          compiledWithForget: element.compiledWithForget
        };
        profilingSnapshots.set(elementID, snapshotNode);
        element.children.forEach(childID => this._takeProfilingSnapshotRecursive(childID, profilingSnapshots));
      }
    });

    ProfilerStore_defineProperty(this, "onBridgeOperations", operations => {
      // The first two values are always rendererID and rootID
      const rendererID = operations[0];
      const rootID = operations[1];

      if (this._isBackendProfiling) {
        let profilingOperations = this._inProgressOperationsByRootID.get(rootID);

        if (profilingOperations == null) {
          profilingOperations = [operations];

          this._inProgressOperationsByRootID.set(rootID, profilingOperations);
        } else {
          profilingOperations.push(operations);
        }

        if (!this._initialRendererIDs.has(rendererID)) {
          this._initialRendererIDs.add(rendererID);
        }

        if (!this._initialSnapshotsByRootID.has(rootID)) {
          this._initialSnapshotsByRootID.set(rootID, new Map());
        }

        this._rendererIDsThatReportedProfilingData.add(rendererID);
      }
    });

    ProfilerStore_defineProperty(this, "onBridgeProfilingData", dataBackend => {
      if (this._isBackendProfiling) {
        // This should never happen, but if it does, then ignore previous profiling data.
        return;
      }

      const {
        rendererID
      } = dataBackend;

      if (!this._rendererQueue.has(rendererID)) {
        throw Error(`Unexpected profiling data update from renderer "${rendererID}"`);
      }

      this._dataBackends.push(dataBackend);

      this._rendererQueue.delete(rendererID);

      if (this._rendererQueue.size === 0) {
        this._dataFrontend = prepareProfilingDataFrontendFromBackendAndStore(this._dataBackends, this._inProgressOperationsByRootID, this._initialSnapshotsByRootID);

        this._dataBackends.splice(0);

        this.emit('isProcessingData');
      }
    });

    ProfilerStore_defineProperty(this, "onBridgeShutdown", () => {
      this._bridge.removeListener('operations', this.onBridgeOperations);

      this._bridge.removeListener('profilingData', this.onBridgeProfilingData);

      this._bridge.removeListener('profilingStatus', this.onProfilingStatus);

      this._bridge.removeListener('shutdown', this.onBridgeShutdown);
    });

    ProfilerStore_defineProperty(this, "onProfilingStatus", isProfiling => {
      console.log('PROFILER STATUS', this._isBackendProfiling, isProfiling);

      if (this._isBackendProfiling === isProfiling) {
        return;
      }

      if (isProfiling) {
        this._dataBackends.splice(0);

        this._dataFrontend = null;

        this._initialRendererIDs.clear();

        this._initialSnapshotsByRootID.clear();

        this._inProgressOperationsByRootID.clear();

        this._rendererIDsThatReportedProfilingData.clear();

        this._rendererQueue.clear(); // Record all renderer IDs initially too (in case of unmount)
        // eslint-disable-next-line no-for-of-loops/no-for-of-loops


        for (const rendererID of this._store.rootIDToRendererID.values()) {
          if (!this._initialRendererIDs.has(rendererID)) {
            this._initialRendererIDs.add(rendererID);
          }
        } // Record snapshot of tree at the time profiling is started.
        // This info is required to handle cases of e.g. nodes being removed during profiling.


        this._store.roots.forEach(rootID => {
          const profilingSnapshots = new Map();

          this._initialSnapshotsByRootID.set(rootID, profilingSnapshots);

          this._takeProfilingSnapshotRecursive(rootID, profilingSnapshots);
        });
      }

      this._isBackendProfiling = isProfiling; // _isProfilingBasedOnUserInput should already be updated from startProfiling, stopProfiling, or constructor.

      if (this._isProfilingBasedOnUserInput !== isProfiling) {
        logEvent({
          event_name: 'error',
          error_message: `Unexpected profiling status. Expected ${this._isProfilingBasedOnUserInput.toString()}, but received ${isProfiling.toString()}.`,
          error_stack: new Error().stack,
          error_component_stack: null
        }); // If happened, fallback to displaying the value from Backend

        this._isProfilingBasedOnUserInput = isProfiling;
      } // Invalidate suspense cache if profiling data is being (re-)recorded.
      // Note that we clear again, in case any views read from the cache while profiling.
      // (That would have resolved a now-stale value without any profiling data.)


      this._cache.invalidate(); // If we've just finished a profiling session, we need to fetch data stored in each renderer interface
      // and re-assemble it on the front-end into a format (ProfilingDataFrontend) that can power the Profiler UI.
      // During this time, DevTools UI should probably not be interactive.


      if (!isProfiling) {
        this._dataBackends.splice(0);

        this._rendererQueue.clear(); // Only request data from renderers that actually logged it.
        // This avoids unnecessary bridge requests and also avoids edge case mixed renderer bugs.
        // (e.g. when v15 and v16 are both present)


        this._rendererIDsThatReportedProfilingData.forEach(rendererID => {
          if (!this._rendererQueue.has(rendererID)) {
            this._rendererQueue.add(rendererID);

            this._bridge.send('getProfilingData', {
              rendererID
            });
          }
        });

        this.emit('isProcessingData');
      }
    });

    this._bridge = bridge;
    this._isBackendProfiling = defaultIsProfiling;
    this._isProfilingBasedOnUserInput = defaultIsProfiling;
    this._store = store;
    bridge.addListener('operations', this.onBridgeOperations);
    bridge.addListener('profilingData', this.onBridgeProfilingData);
    bridge.addListener('profilingStatus', this.onProfilingStatus);
    bridge.addListener('shutdown', this.onBridgeShutdown); // It's possible that profiling has already started (e.g. "reload and start profiling")
    // so the frontend needs to ask the backend for its status after mounting.

    bridge.send('getProfilingStatus');
    this._cache = new ProfilingCache(this);
  }

  getCommitData(rootID, commitIndex) {
    if (this._dataFrontend !== null) {
      const dataForRoot = this._dataFrontend.dataForRoots.get(rootID);

      if (dataForRoot != null) {
        const commitDatum = dataForRoot.commitData[commitIndex];

        if (commitDatum != null) {
          return commitDatum;
        }
      }
    }

    throw Error(`Could not find commit data for root "${rootID}" and commit "${commitIndex}"`);
  }

  getDataForRoot(rootID) {
    if (this._dataFrontend !== null) {
      const dataForRoot = this._dataFrontend.dataForRoots.get(rootID);

      if (dataForRoot != null) {
        return dataForRoot;
      }
    }

    throw Error(`Could not find commit data for root "${rootID}"`);
  } // Profiling data has been recorded for at least one root.


  get didRecordCommits() {
    return this._dataFrontend !== null && this._dataFrontend.dataForRoots.size > 0;
  }

  get isProcessingData() {
    return this._rendererQueue.size > 0 || this._dataBackends.length > 0;
  }

  get isProfilingBasedOnUserInput() {
    return this._isProfilingBasedOnUserInput;
  }

  get profilingCache() {
    return this._cache;
  }

  get profilingData() {
    return this._dataFrontend;
  }

  set profilingData(value) {
    if (this._isBackendProfiling) {
      console.warn('Profiling data cannot be updated while profiling is in progress.');
      return;
    }

    this._dataBackends.splice(0);

    this._dataFrontend = value;

    this._initialRendererIDs.clear();

    this._initialSnapshotsByRootID.clear();

    this._inProgressOperationsByRootID.clear();

    this._cache.invalidate();

    this.emit('profilingData');
  }

  clear() {
    this._dataBackends.splice(0);

    this._dataFrontend = null;

    this._initialRendererIDs.clear();

    this._initialSnapshotsByRootID.clear();

    this._inProgressOperationsByRootID.clear();

    this._rendererQueue.clear(); // Invalidate suspense cache if profiling data is being (re-)recorded.
    // Note that we clear now because any existing data is "stale".


    this._cache.invalidate();

    this.emit('profilingData');
  }

  startProfiling() {
    this.clear();

    this._bridge.send('startProfiling', {
      recordChangeDescriptions: this._store.recordChangeDescriptions,
      recordTimeline: this._store.supportsTimeline
    });

    this._isProfilingBasedOnUserInput = true;
    this.emit('isProfiling'); // Don't actually update the local profiling boolean yet!
    // Wait for onProfilingStatus() to confirm the status has changed.
    // This ensures the frontend and backend are in sync wrt which commits were profiled.
    // We do this to avoid mismatches on e.g. CommitTreeBuilder that would cause errors.
  }

  stopProfiling() {
    this._bridge.send('stopProfiling'); // Backend might be busy serializing the payload, so we are going to display
    // optimistic UI to the user that profiling is stopping.


    this._isProfilingBasedOnUserInput = false;
    this.emit('isProfiling'); // Wait for onProfilingStatus() to confirm the status has changed, this will update _isBackendProfiling.
    // This ensures the frontend and backend are in sync wrt which commits were profiled.
    // We do this to avoid mismatches on e.g. CommitTreeBuilder that would cause errors.
  }

}
;// CONCATENATED MODULE: ../react-devtools-shared/src/errors/PermissionNotGrantedError.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
class PermissionNotGrantedError extends Error {
  constructor() {
    super("User didn't grant the required permission to perform an action"); // Maintains proper stack trace for where our error was thrown (only available on V8)

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, PermissionNotGrantedError);
    }

    this.name = 'PermissionNotGrantedError';
  }

}
;// CONCATENATED MODULE: ../react-devtools-shared/src/frontend/utils/withPermissionsCheck.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

// browser.permissions is not available for DevTools pages in Firefox
// https://bugzilla.mozilla.org/show_bug.cgi?id=1796933
// We are going to assume that requested permissions are not optional.
function withPermissionsCheck(options, callback) {
  if (true) {
    return callback;
  } else {}
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/UnsupportedBridgeOperationError.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
class UnsupportedBridgeOperationError extends Error {
  constructor(message) {
    super(message); // Maintains proper stack trace for where our error was thrown (only available on V8)

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, UnsupportedBridgeOperationError);
    }

    this.name = 'UnsupportedBridgeOperationError';
  }

}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/store.js
function store_defineProperty(obj, key, value) { key = store_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function store_toPropertyKey(t) { var i = store_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function store_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */















const store_debug = (methodName, ...args) => {
  if (__DEBUG__) {
    console.log(`%cStore %c${methodName}`, 'color: green; font-weight: bold;', 'font-weight: bold;', ...args);
  }
};

const LOCAL_STORAGE_COLLAPSE_ROOTS_BY_DEFAULT_KEY = 'React::DevTools::collapseNodesByDefault';
const LOCAL_STORAGE_RECORD_CHANGE_DESCRIPTIONS_KEY = 'React::DevTools::recordChangeDescriptions';

/**
 * The store is the single source of truth for updates from the backend.
 * ContextProviders can subscribe to the Store for specific things they want to provide.
 */
class Store extends EventEmitter {
  // If the backend version is new enough to report its (NPM) version, this is it.
  // This version may be displayed by the frontend for debugging purposes.
  // Computed whenever _errorsAndWarnings Map changes.
  // Should new nodes be collapsed by default when added to the tree?
  // Map of ID to number of recorded error and warning message IDs.
  // At least one of the injected renderers contains (DEV only) owner metadata.
  // Map of ID to (mutable) Element.
  // Elements are mutated to avoid excessive cloning during tree updates.
  // The InspectedElement Suspense cache also relies on this mutability for its WeakMap usage.
  // Should the React Native style editor panel be shown?
  // Older backends don't support an explicit bridge protocol,
  // so we should timeout eventually and show a downgrade message.
  // Map of element (id) to the set of elements (ids) it owns.
  // This map enables getOwnersListForElement() to avoid traversing the entire tree.
  // Incremented each time the store is mutated.
  // This enables a passive effect to detect a mutation between render and commit phase.
  // This Array must be treated as immutable!
  // Passive effects will check it for changes between render and mount.
  // Renderer ID is needed to support inspection fiber props, state, and hooks.
  // These options may be initially set by a configuration option when constructing the Store.
  // These options default to false but may be updated as roots are added and removed.
  // Total number of visible elements (within all roots).
  // Used for windowing purposes.
  // Only used in browser extension for synchronization with built-in Elements panel.
  constructor(_bridge, config) {
    super();

    store_defineProperty(this, "_backendVersion", null);

    store_defineProperty(this, "_cachedComponentWithErrorCount", 0);

    store_defineProperty(this, "_cachedComponentWithWarningCount", 0);

    store_defineProperty(this, "_cachedErrorAndWarningTuples", null);

    store_defineProperty(this, "_collapseNodesByDefault", true);

    store_defineProperty(this, "_errorsAndWarnings", new Map());

    store_defineProperty(this, "_hasOwnerMetadata", false);

    store_defineProperty(this, "_idToElement", new Map());

    store_defineProperty(this, "_isNativeStyleEditorSupported", false);

    store_defineProperty(this, "_nativeStyleEditorValidAttributes", null);

    store_defineProperty(this, "_onBridgeProtocolTimeoutID", null);

    store_defineProperty(this, "_ownersMap", new Map());

    store_defineProperty(this, "_recordChangeDescriptions", false);

    store_defineProperty(this, "_revision", 0);

    store_defineProperty(this, "_roots", []);

    store_defineProperty(this, "_rootIDToCapabilities", new Map());

    store_defineProperty(this, "_rootIDToRendererID", new Map());

    store_defineProperty(this, "_supportsInspectMatchingDOMElement", false);

    store_defineProperty(this, "_supportsClickToInspect", false);

    store_defineProperty(this, "_supportsTimeline", false);

    store_defineProperty(this, "_supportsTraceUpdates", false);

    store_defineProperty(this, "_isReloadAndProfileFrontendSupported", false);

    store_defineProperty(this, "_isReloadAndProfileBackendSupported", false);

    store_defineProperty(this, "_rootSupportsBasicProfiling", false);

    store_defineProperty(this, "_rootSupportsTimelineProfiling", false);

    store_defineProperty(this, "_bridgeProtocol", null);

    store_defineProperty(this, "_unsupportedBridgeProtocolDetected", false);

    store_defineProperty(this, "_unsupportedRendererVersionDetected", false);

    store_defineProperty(this, "_weightAcrossRoots", 0);

    store_defineProperty(this, "_shouldCheckBridgeProtocolCompatibility", false);

    store_defineProperty(this, "_hookSettings", null);

    store_defineProperty(this, "_shouldShowWarningsAndErrors", false);

    store_defineProperty(this, "_lastSelectedHostInstanceElementId", null);

    store_defineProperty(this, "_adjustParentTreeWeight", (parentElement, weightDelta) => {
      let isInsideCollapsedSubTree = false;

      while (parentElement != null) {
        parentElement.weight += weightDelta; // Additions and deletions within a collapsed subtree should not bubble beyond the collapsed parent.
        // Their weight will bubble up when the parent is expanded.

        if (parentElement.isCollapsed) {
          isInsideCollapsedSubTree = true;
          break;
        }

        parentElement = this._idToElement.get(parentElement.parentID);
      } // Additions and deletions within a collapsed subtree should not affect the overall number of elements.


      if (!isInsideCollapsedSubTree) {
        this._weightAcrossRoots += weightDelta;
      }
    });

    store_defineProperty(this, "onBridgeNativeStyleEditorSupported", ({
      isSupported,
      validAttributes
    }) => {
      this._isNativeStyleEditorSupported = isSupported;
      this._nativeStyleEditorValidAttributes = validAttributes || null;
      this.emit('supportsNativeStyleEditor');
    });

    store_defineProperty(this, "onBridgeOperations", operations => {
      if (__DEBUG__) {
        console.groupCollapsed('onBridgeOperations');
        store_debug('onBridgeOperations', operations.join(','));
      }

      let haveRootsChanged = false;
      let haveErrorsOrWarningsChanged = false; // The first two values are always rendererID and rootID

      const rendererID = operations[0];
      const addedElementIDs = []; // This is a mapping of removed ID -> parent ID:

      const removedElementIDs = new Map(); // We'll use the parent ID to adjust selection if it gets deleted.

      let i = 2; // Reassemble the string table.

      const stringTable = [null // ID = 0 corresponds to the null string.
      ];
      const stringTableSize = operations[i];
      i++;
      const stringTableEnd = i + stringTableSize;

      while (i < stringTableEnd) {
        const nextLength = operations[i];
        i++;
        const nextString = utfDecodeStringWithRanges(operations, i, i + nextLength - 1);
        stringTable.push(nextString);
        i += nextLength;
      }

      while (i < operations.length) {
        const operation = operations[i];

        switch (operation) {
          case constants_TREE_OPERATION_ADD:
            {
              const id = operations[i + 1];
              const type = operations[i + 2];
              i += 3;

              if (this._idToElement.has(id)) {
                this._throwAndEmitError(Error(`Cannot add node "${id}" because a node with that id is already in the Store.`));
              }

              if (type === types_ElementTypeRoot) {
                if (__DEBUG__) {
                  store_debug('Add', `new root node ${id}`);
                }

                const isStrictModeCompliant = operations[i] > 0;
                i++;
                const supportsBasicProfiling = (operations[i] & PROFILING_FLAG_BASIC_SUPPORT) !== 0;
                const supportsTimeline = (operations[i] & PROFILING_FLAG_TIMELINE_SUPPORT) !== 0;
                i++;
                let supportsStrictMode = false;
                let hasOwnerMetadata = false; // If we don't know the bridge protocol, guess that we're dealing with the latest.
                // If we do know it, we can take it into consideration when parsing operations.

                if (this._bridgeProtocol === null || this._bridgeProtocol.version >= 2) {
                  supportsStrictMode = operations[i] > 0;
                  i++;
                  hasOwnerMetadata = operations[i] > 0;
                  i++;
                }

                this._roots = this._roots.concat(id);

                this._rootIDToRendererID.set(id, rendererID);

                this._rootIDToCapabilities.set(id, {
                  supportsBasicProfiling,
                  hasOwnerMetadata,
                  supportsStrictMode,
                  supportsTimeline
                }); // Not all roots support StrictMode;
                // don't flag a root as non-compliant unless it also supports StrictMode.


                const isStrictModeNonCompliant = !isStrictModeCompliant && supportsStrictMode;

                this._idToElement.set(id, {
                  children: [],
                  depth: -1,
                  displayName: null,
                  hocDisplayNames: null,
                  id,
                  isCollapsed: false,
                  // Never collapse roots; it would hide the entire tree.
                  isStrictModeNonCompliant,
                  key: null,
                  ownerID: 0,
                  parentID: 0,
                  type,
                  weight: 0,
                  compiledWithForget: false
                });

                haveRootsChanged = true;
              } else {
                const parentID = operations[i];
                i++;
                const ownerID = operations[i];
                i++;
                const displayNameStringID = operations[i];
                const displayName = stringTable[displayNameStringID];
                i++;
                const keyStringID = operations[i];
                const key = stringTable[keyStringID];
                i++;

                if (__DEBUG__) {
                  store_debug('Add', `node ${id} (${displayName || 'null'}) as child of ${parentID}`);
                }

                const parentElement = this._idToElement.get(parentID);

                if (parentElement === undefined) {
                  this._throwAndEmitError(Error(`Cannot add child "${id}" to parent "${parentID}" because parent node was not found in the Store.`));

                  break;
                }

                parentElement.children.push(id);
                const {
                  formattedDisplayName: displayNameWithoutHOCs,
                  hocDisplayNames,
                  compiledWithForget
                } = parseElementDisplayNameFromBackend(displayName, type);
                const element = {
                  children: [],
                  depth: parentElement.depth + 1,
                  displayName: displayNameWithoutHOCs,
                  hocDisplayNames,
                  id,
                  isCollapsed: this._collapseNodesByDefault,
                  isStrictModeNonCompliant: parentElement.isStrictModeNonCompliant,
                  key,
                  ownerID,
                  parentID,
                  type,
                  weight: 1,
                  compiledWithForget
                };

                this._idToElement.set(id, element);

                addedElementIDs.push(id);

                this._adjustParentTreeWeight(parentElement, 1);

                if (ownerID > 0) {
                  let set = this._ownersMap.get(ownerID);

                  if (set === undefined) {
                    set = new Set();

                    this._ownersMap.set(ownerID, set);
                  }

                  set.add(id);
                }
              }

              break;
            }

          case constants_TREE_OPERATION_REMOVE:
            {
              const removeLength = operations[i + 1];
              i += 2;

              for (let removeIndex = 0; removeIndex < removeLength; removeIndex++) {
                const id = operations[i];

                const element = this._idToElement.get(id);

                if (element === undefined) {
                  this._throwAndEmitError(Error(`Cannot remove node "${id}" because no matching node was found in the Store.`));

                  break;
                }

                i += 1;
                const {
                  children,
                  ownerID,
                  parentID,
                  weight
                } = element;

                if (children.length > 0) {
                  this._throwAndEmitError(Error(`Node "${id}" was removed before its children.`));
                }

                this._idToElement.delete(id);

                let parentElement = null;

                if (parentID === 0) {
                  if (__DEBUG__) {
                    store_debug('Remove', `node ${id} root`);
                  }

                  this._roots = this._roots.filter(rootID => rootID !== id);

                  this._rootIDToRendererID.delete(id);

                  this._rootIDToCapabilities.delete(id);

                  haveRootsChanged = true;
                } else {
                  if (__DEBUG__) {
                    store_debug('Remove', `node ${id} from parent ${parentID}`);
                  }

                  parentElement = this._idToElement.get(parentID);

                  if (parentElement === undefined) {
                    this._throwAndEmitError(Error(`Cannot remove node "${id}" from parent "${parentID}" because no matching node was found in the Store.`));

                    break;
                  }

                  const index = parentElement.children.indexOf(id);
                  parentElement.children.splice(index, 1);
                }

                this._adjustParentTreeWeight(parentElement, -weight);

                removedElementIDs.set(id, parentID);

                this._ownersMap.delete(id);

                if (ownerID > 0) {
                  const set = this._ownersMap.get(ownerID);

                  if (set !== undefined) {
                    set.delete(id);
                  }
                }

                if (this._errorsAndWarnings.has(id)) {
                  this._errorsAndWarnings.delete(id);

                  haveErrorsOrWarningsChanged = true;
                }
              }

              break;
            }

          case constants_TREE_OPERATION_REMOVE_ROOT:
            {
              i += 1;
              const id = operations[1];

              if (__DEBUG__) {
                store_debug(`Remove root ${id}`);
              }

              const recursivelyDeleteElements = elementID => {
                const element = this._idToElement.get(elementID);

                this._idToElement.delete(elementID);

                if (element) {
                  // Mostly for Flow's sake
                  for (let index = 0; index < element.children.length; index++) {
                    recursivelyDeleteElements(element.children[index]);
                  }
                }
              };

              const root = this._idToElement.get(id);

              if (root === undefined) {
                this._throwAndEmitError(Error(`Cannot remove root "${id}": no matching node was found in the Store.`));

                break;
              }

              recursivelyDeleteElements(id);

              this._rootIDToCapabilities.delete(id);

              this._rootIDToRendererID.delete(id);

              this._roots = this._roots.filter(rootID => rootID !== id);
              this._weightAcrossRoots -= root.weight;
              break;
            }

          case constants_TREE_OPERATION_REORDER_CHILDREN:
            {
              const id = operations[i + 1];
              const numChildren = operations[i + 2];
              i += 3;

              const element = this._idToElement.get(id);

              if (element === undefined) {
                this._throwAndEmitError(Error(`Cannot reorder children for node "${id}" because no matching node was found in the Store.`));

                break;
              }

              const children = element.children;

              if (children.length !== numChildren) {
                this._throwAndEmitError(Error(`Children cannot be added or removed during a reorder operation.`));
              }

              for (let j = 0; j < numChildren; j++) {
                const childID = operations[i + j];
                children[j] = childID;

                if (false) {}
              }

              i += numChildren;

              if (__DEBUG__) {
                store_debug('Re-order', `Node ${id} children ${children.join(',')}`);
              }

              break;
            }

          case constants_TREE_OPERATION_SET_SUBTREE_MODE:
            {
              const id = operations[i + 1];
              const mode = operations[i + 2];
              i += 3; // If elements have already been mounted in this subtree, update them.
              // (In practice, this likely only applies to the root element.)

              if (mode === StrictMode) {
                this._recursivelyUpdateSubtree(id, element => {
                  element.isStrictModeNonCompliant = false;
                });
              }

              if (__DEBUG__) {
                store_debug('Subtree mode', `Subtree with root ${id} set to mode ${mode}`);
              }

              break;
            }

          case constants_TREE_OPERATION_UPDATE_TREE_BASE_DURATION:
            // Base duration updates are only sent while profiling is in progress.
            // We can ignore them at this point.
            // The profiler UI uses them lazily in order to generate the tree.
            i += 3;
            break;

          case constants_TREE_OPERATION_UPDATE_ERRORS_OR_WARNINGS:
            const id = operations[i + 1];
            const errorCount = operations[i + 2];
            const warningCount = operations[i + 3];
            i += 4;

            if (errorCount > 0 || warningCount > 0) {
              this._errorsAndWarnings.set(id, {
                errorCount,
                warningCount
              });
            } else if (this._errorsAndWarnings.has(id)) {
              this._errorsAndWarnings.delete(id);
            }

            haveErrorsOrWarningsChanged = true;
            break;

          default:
            this._throwAndEmitError(new UnsupportedBridgeOperationError(`Unsupported Bridge operation "${operation}"`));

        }
      }

      this._revision++; // Any time the tree changes (e.g. elements added, removed, or reordered) cached indices may be invalid.

      this._cachedErrorAndWarningTuples = null;

      if (haveErrorsOrWarningsChanged) {
        let componentWithErrorCount = 0;
        let componentWithWarningCount = 0;

        this._errorsAndWarnings.forEach(entry => {
          if (entry.errorCount > 0) {
            componentWithErrorCount++;
          }

          if (entry.warningCount > 0) {
            componentWithWarningCount++;
          }
        });

        this._cachedComponentWithErrorCount = componentWithErrorCount;
        this._cachedComponentWithWarningCount = componentWithWarningCount;
      }

      if (haveRootsChanged) {
        const prevRootSupportsProfiling = this._rootSupportsBasicProfiling;
        const prevRootSupportsTimelineProfiling = this._rootSupportsTimelineProfiling;
        this._hasOwnerMetadata = false;
        this._rootSupportsBasicProfiling = false;
        this._rootSupportsTimelineProfiling = false;

        this._rootIDToCapabilities.forEach(({
          supportsBasicProfiling,
          hasOwnerMetadata,
          supportsTimeline
        }) => {
          if (supportsBasicProfiling) {
            this._rootSupportsBasicProfiling = true;
          }

          if (hasOwnerMetadata) {
            this._hasOwnerMetadata = true;
          }

          if (supportsTimeline) {
            this._rootSupportsTimelineProfiling = true;
          }
        });

        this.emit('roots');

        if (this._rootSupportsBasicProfiling !== prevRootSupportsProfiling) {
          this.emit('rootSupportsBasicProfiling');
        }

        if (this._rootSupportsTimelineProfiling !== prevRootSupportsTimelineProfiling) {
          this.emit('rootSupportsTimelineProfiling');
        }
      }

      if (__DEBUG__) {
        console.log(printStore(this, true));
        console.groupEnd();
      }

      this.emit('mutated', [addedElementIDs, removedElementIDs]);
    });

    store_defineProperty(this, "onBridgeOverrideComponentFilters", componentFilters => {
      this._componentFilters = componentFilters;
      setSavedComponentFilters(componentFilters);
    });

    store_defineProperty(this, "onBridgeShutdown", () => {
      if (__DEBUG__) {
        store_debug('onBridgeShutdown', 'unsubscribing from Bridge');
      }

      const bridge = this._bridge;
      bridge.removeListener('operations', this.onBridgeOperations);
      bridge.removeListener('overrideComponentFilters', this.onBridgeOverrideComponentFilters);
      bridge.removeListener('shutdown', this.onBridgeShutdown);
      bridge.removeListener('isReloadAndProfileSupportedByBackend', this.onBackendReloadAndProfileSupported);
      bridge.removeListener('isNativeStyleEditorSupported', this.onBridgeNativeStyleEditorSupported);
      bridge.removeListener('unsupportedRendererVersion', this.onBridgeUnsupportedRendererVersion);
      bridge.removeListener('backendVersion', this.onBridgeBackendVersion);
      bridge.removeListener('bridgeProtocol', this.onBridgeProtocol);
      bridge.removeListener('saveToClipboard', this.onSaveToClipboard);
      bridge.removeListener('selectElement', this.onHostInstanceSelected);

      if (this._onBridgeProtocolTimeoutID !== null) {
        clearTimeout(this._onBridgeProtocolTimeoutID);
        this._onBridgeProtocolTimeoutID = null;
      }
    });

    store_defineProperty(this, "onBackendReloadAndProfileSupported", isReloadAndProfileSupported => {
      this._isReloadAndProfileBackendSupported = isReloadAndProfileSupported;
      this.emit('supportsReloadAndProfile');
    });

    store_defineProperty(this, "onBridgeUnsupportedRendererVersion", () => {
      this._unsupportedRendererVersionDetected = true;
      this.emit('unsupportedRendererVersionDetected');
    });

    store_defineProperty(this, "onBridgeBackendVersion", backendVersion => {
      this._backendVersion = backendVersion;
      this.emit('backendVersion');
    });

    store_defineProperty(this, "onBridgeProtocol", bridgeProtocol => {
      if (this._onBridgeProtocolTimeoutID !== null) {
        clearTimeout(this._onBridgeProtocolTimeoutID);
        this._onBridgeProtocolTimeoutID = null;
      }

      this._bridgeProtocol = bridgeProtocol;

      if (bridgeProtocol.version !== currentBridgeProtocol.version) {// Technically newer versions of the frontend can, at least for now,
        // gracefully handle older versions of the backend protocol.
        // So for now we don't need to display the unsupported dialog.
      }
    });

    store_defineProperty(this, "onBridgeProtocolTimeout", () => {
      this._onBridgeProtocolTimeoutID = null; // If we timed out, that indicates the backend predates the bridge protocol,
      // so we can set a fake version (0) to trigger the downgrade message.

      this._bridgeProtocol = BRIDGE_PROTOCOL[0];
      this.emit('unsupportedBridgeProtocolDetected');
    });

    store_defineProperty(this, "onSaveToClipboard", text => {
      withPermissionsCheck({
        permissions: ['clipboardWrite']
      }, () => (0,clipboard.copy)(text))();
    });

    store_defineProperty(this, "onBackendInitialized", () => {
      // Verify that the frontend version is compatible with the connected backend.
      // See github.com/facebook/react/issues/21326
      if (this._shouldCheckBridgeProtocolCompatibility) {
        // Older backends don't support an explicit bridge protocol,
        // so we should timeout eventually and show a downgrade message.
        this._onBridgeProtocolTimeoutID = setTimeout(this.onBridgeProtocolTimeout, 10000);

        this._bridge.addListener('bridgeProtocol', this.onBridgeProtocol);

        this._bridge.send('getBridgeProtocol');
      }

      this._bridge.send('getBackendVersion');

      this._bridge.send('getIfHasUnsupportedRendererVersion');

      this._bridge.send('getHookSettings'); // Warm up cached hook settings

    });

    store_defineProperty(this, "onHostInstanceSelected", elementId => {
      if (this._lastSelectedHostInstanceElementId === elementId) {
        return;
      }

      this._lastSelectedHostInstanceElementId = elementId; // By the time we emit this, there is no guarantee that TreeContext is rendered.

      this.emit('hostInstanceSelected', elementId);
    });

    store_defineProperty(this, "getHookSettings", () => {
      if (this._hookSettings != null) {
        this.emit('hookSettings', this._hookSettings);
      } else {
        this._bridge.send('getHookSettings');
      }
    });

    store_defineProperty(this, "updateHookSettings", settings => {
      this._hookSettings = settings;

      this._bridge.send('updateHookSettings', settings);

      this.emit('settingsUpdated', settings);
    });

    store_defineProperty(this, "onHookSettings", settings => {
      this._hookSettings = settings;
      this.setShouldShowWarningsAndErrors(settings.showInlineWarningsAndErrors);
      this.emit('hookSettings', settings);
    });

    if (__DEBUG__) {
      store_debug('constructor', 'subscribing to Bridge');
    }

    this._collapseNodesByDefault = localStorageGetItem(LOCAL_STORAGE_COLLAPSE_ROOTS_BY_DEFAULT_KEY) === 'true';
    this._recordChangeDescriptions = localStorageGetItem(LOCAL_STORAGE_RECORD_CHANGE_DESCRIPTIONS_KEY) === 'true';
    this._componentFilters = getSavedComponentFilters();
    let isProfiling = false;

    if (config != null) {
      isProfiling = config.isProfiling === true;
      const {
        supportsInspectMatchingDOMElement,
        supportsClickToInspect,
        supportsReloadAndProfile,
        supportsTimeline,
        supportsTraceUpdates,
        checkBridgeProtocolCompatibility
      } = config;

      if (supportsInspectMatchingDOMElement) {
        this._supportsInspectMatchingDOMElement = true;
      }

      if (supportsClickToInspect) {
        this._supportsClickToInspect = true;
      }

      if (supportsReloadAndProfile) {
        this._isReloadAndProfileFrontendSupported = true;
      }

      if (supportsTimeline) {
        this._supportsTimeline = true;
      }

      if (supportsTraceUpdates) {
        this._supportsTraceUpdates = true;
      }

      if (checkBridgeProtocolCompatibility) {
        this._shouldCheckBridgeProtocolCompatibility = true;
      }
    }

    this._bridge = _bridge;

    _bridge.addListener('operations', this.onBridgeOperations);

    _bridge.addListener('overrideComponentFilters', this.onBridgeOverrideComponentFilters);

    _bridge.addListener('shutdown', this.onBridgeShutdown);

    _bridge.addListener('isReloadAndProfileSupportedByBackend', this.onBackendReloadAndProfileSupported);

    _bridge.addListener('isNativeStyleEditorSupported', this.onBridgeNativeStyleEditorSupported);

    _bridge.addListener('unsupportedRendererVersion', this.onBridgeUnsupportedRendererVersion);

    this._profilerStore = new ProfilerStore(_bridge, this, isProfiling);

    _bridge.addListener('backendVersion', this.onBridgeBackendVersion);

    _bridge.addListener('saveToClipboard', this.onSaveToClipboard);

    _bridge.addListener('hookSettings', this.onHookSettings);

    _bridge.addListener('backendInitialized', this.onBackendInitialized);

    _bridge.addListener('selectElement', this.onHostInstanceSelected);
  } // This is only used in tests to avoid memory leaks.


  assertExpectedRootMapSizes() {
    if (this.roots.length === 0) {
      // The only safe time to assert these maps are empty is when the store is empty.
      this.assertMapSizeMatchesRootCount(this._idToElement, '_idToElement');
      this.assertMapSizeMatchesRootCount(this._ownersMap, '_ownersMap');
    } // These maps should always be the same size as the number of roots


    this.assertMapSizeMatchesRootCount(this._rootIDToCapabilities, '_rootIDToCapabilities');
    this.assertMapSizeMatchesRootCount(this._rootIDToRendererID, '_rootIDToRendererID');
  } // This is only used in tests to avoid memory leaks.


  assertMapSizeMatchesRootCount(map, mapName) {
    const expectedSize = this.roots.length;

    if (map.size !== expectedSize) {
      this._throwAndEmitError(Error(`Expected ${mapName} to contain ${expectedSize} items, but it contains ${map.size} items\n\n${(0,util.inspect)(map, {
        depth: 20
      })}`));
    }
  }

  get backendVersion() {
    return this._backendVersion;
  }

  get collapseNodesByDefault() {
    return this._collapseNodesByDefault;
  }

  set collapseNodesByDefault(value) {
    this._collapseNodesByDefault = value;
    localStorageSetItem(LOCAL_STORAGE_COLLAPSE_ROOTS_BY_DEFAULT_KEY, value ? 'true' : 'false');
    this.emit('collapseNodesByDefault');
  }

  get componentFilters() {
    return this._componentFilters;
  }

  set componentFilters(value) {
    if (this._profilerStore.isProfilingBasedOnUserInput) {
      // Re-mounting a tree while profiling is in progress might break a lot of assumptions.
      // If necessary, we could support this- but it doesn't seem like a necessary use case.
      this._throwAndEmitError(Error('Cannot modify filter preferences while profiling'));
    } // Filter updates are expensive to apply (since they impact the entire tree).
    // Let's determine if they've changed and avoid doing this work if they haven't.


    const prevEnabledComponentFilters = this._componentFilters.filter(filter => filter.isEnabled);

    const nextEnabledComponentFilters = value.filter(filter => filter.isEnabled);
    let haveEnabledFiltersChanged = prevEnabledComponentFilters.length !== nextEnabledComponentFilters.length;

    if (!haveEnabledFiltersChanged) {
      for (let i = 0; i < nextEnabledComponentFilters.length; i++) {
        const prevFilter = prevEnabledComponentFilters[i];
        const nextFilter = nextEnabledComponentFilters[i];

        if (shallowDiffers(prevFilter, nextFilter)) {
          haveEnabledFiltersChanged = true;
          break;
        }
      }
    }

    this._componentFilters = value; // Update persisted filter preferences stored in localStorage.

    setSavedComponentFilters(value); // Notify the renderer that filter preferences have changed.
    // This is an expensive operation; it unmounts and remounts the entire tree,
    // so only do it if the set of enabled component filters has changed.

    if (haveEnabledFiltersChanged) {
      this._bridge.send('updateComponentFilters', value);
    }

    this.emit('componentFilters');
  }

  get bridgeProtocol() {
    return this._bridgeProtocol;
  }

  get componentWithErrorCount() {
    if (!this._shouldShowWarningsAndErrors) {
      return 0;
    }

    return this._cachedComponentWithErrorCount;
  }

  get componentWithWarningCount() {
    if (!this._shouldShowWarningsAndErrors) {
      return 0;
    }

    return this._cachedComponentWithWarningCount;
  }

  get displayingErrorsAndWarningsEnabled() {
    return this._shouldShowWarningsAndErrors;
  }

  get hasOwnerMetadata() {
    return this._hasOwnerMetadata;
  }

  get nativeStyleEditorValidAttributes() {
    return this._nativeStyleEditorValidAttributes;
  }

  get numElements() {
    return this._weightAcrossRoots;
  }

  get profilerStore() {
    return this._profilerStore;
  }

  get recordChangeDescriptions() {
    return this._recordChangeDescriptions;
  }

  set recordChangeDescriptions(value) {
    this._recordChangeDescriptions = value;
    localStorageSetItem(LOCAL_STORAGE_RECORD_CHANGE_DESCRIPTIONS_KEY, value ? 'true' : 'false');
    this.emit('recordChangeDescriptions');
  }

  get revision() {
    return this._revision;
  }

  get rootIDToRendererID() {
    return this._rootIDToRendererID;
  }

  get roots() {
    return this._roots;
  } // At least one of the currently mounted roots support the Legacy profiler.


  get rootSupportsBasicProfiling() {
    return this._rootSupportsBasicProfiling;
  } // At least one of the currently mounted roots support the Timeline profiler.


  get rootSupportsTimelineProfiling() {
    return this._rootSupportsTimelineProfiling;
  }

  get supportsInspectMatchingDOMElement() {
    return this._supportsInspectMatchingDOMElement;
  }

  get supportsClickToInspect() {
    return this._supportsClickToInspect;
  }

  get supportsNativeStyleEditor() {
    return this._isNativeStyleEditorSupported;
  }

  get supportsReloadAndProfile() {
    return this._isReloadAndProfileFrontendSupported && this._isReloadAndProfileBackendSupported;
  } // This build of DevTools supports the Timeline profiler.
  // This is a static flag, controlled by the Store config.


  get supportsTimeline() {
    return this._supportsTimeline;
  }

  get supportsTraceUpdates() {
    return this._supportsTraceUpdates;
  }

  get unsupportedBridgeProtocolDetected() {
    return this._unsupportedBridgeProtocolDetected;
  }

  get unsupportedRendererVersionDetected() {
    return this._unsupportedRendererVersionDetected;
  }

  get lastSelectedHostInstanceElementId() {
    return this._lastSelectedHostInstanceElementId;
  }

  containsElement(id) {
    return this._idToElement.has(id);
  }

  getElementAtIndex(index) {
    if (index < 0 || index >= this.numElements) {
      console.warn(`Invalid index ${index} specified; store contains ${this.numElements} items.`);
      return null;
    } // Find which root this element is in...


    let root;
    let rootWeight = 0;

    for (let i = 0; i < this._roots.length; i++) {
      const rootID = this._roots[i];
      root = this._idToElement.get(rootID);

      if (root === undefined) {
        this._throwAndEmitError(Error(`Couldn't find root with id "${rootID}": no matching node was found in the Store.`));

        return null;
      }

      if (root.children.length === 0) {
        continue;
      }

      if (rootWeight + root.weight > index) {
        break;
      } else {
        rootWeight += root.weight;
      }
    }

    if (root === undefined) {
      return null;
    } // Find the element in the tree using the weight of each node...
    // Skip over the root itself, because roots aren't visible in the Elements tree.


    let currentElement = root;
    let currentWeight = rootWeight - 1;

    while (index !== currentWeight) {
      const numChildren = currentElement.children.length;

      for (let i = 0; i < numChildren; i++) {
        const childID = currentElement.children[i];

        const child = this._idToElement.get(childID);

        if (child === undefined) {
          this._throwAndEmitError(Error(`Couldn't child element with id "${childID}": no matching node was found in the Store.`));

          return null;
        }

        const childWeight = child.isCollapsed ? 1 : child.weight;

        if (index <= currentWeight + childWeight) {
          currentWeight++;
          currentElement = child;
          break;
        } else {
          currentWeight += childWeight;
        }
      }
    }

    return currentElement || null;
  }

  getElementIDAtIndex(index) {
    const element = this.getElementAtIndex(index);
    return element === null ? null : element.id;
  }

  getElementByID(id) {
    const element = this._idToElement.get(id);

    if (element === undefined) {
      console.warn(`No element found with id "${id}"`);
      return null;
    }

    return element;
  } // Returns a tuple of [id, index]


  getElementsWithErrorsAndWarnings() {
    if (!this._shouldShowWarningsAndErrors) {
      return [];
    }

    if (this._cachedErrorAndWarningTuples !== null) {
      return this._cachedErrorAndWarningTuples;
    }

    const errorAndWarningTuples = [];

    this._errorsAndWarnings.forEach((_, id) => {
      const index = this.getIndexOfElementID(id);

      if (index !== null) {
        let low = 0;
        let high = errorAndWarningTuples.length;

        while (low < high) {
          const mid = low + high >> 1;

          if (errorAndWarningTuples[mid].index > index) {
            high = mid;
          } else {
            low = mid + 1;
          }
        }

        errorAndWarningTuples.splice(low, 0, {
          id,
          index
        });
      }
    }); // Cache for later (at least until the tree changes again).


    this._cachedErrorAndWarningTuples = errorAndWarningTuples;
    return errorAndWarningTuples;
  }

  getErrorAndWarningCountForElementID(id) {
    if (!this._shouldShowWarningsAndErrors) {
      return {
        errorCount: 0,
        warningCount: 0
      };
    }

    return this._errorsAndWarnings.get(id) || {
      errorCount: 0,
      warningCount: 0
    };
  }

  getIndexOfElementID(id) {
    const element = this.getElementByID(id);

    if (element === null || element.parentID === 0) {
      return null;
    } // Walk up the tree to the root.
    // Increment the index by one for each node we encounter,
    // and by the weight of all nodes to the left of the current one.
    // This should be a relatively fast way of determining the index of a node within the tree.


    let previousID = id;
    let currentID = element.parentID;
    let index = 0;

    while (true) {
      const current = this._idToElement.get(currentID);

      if (current === undefined) {
        return null;
      }

      const {
        children
      } = current;

      for (let i = 0; i < children.length; i++) {
        const childID = children[i];

        if (childID === previousID) {
          break;
        }

        const child = this._idToElement.get(childID);

        if (child === undefined) {
          return null;
        }

        index += child.isCollapsed ? 1 : child.weight;
      }

      if (current.parentID === 0) {
        // We found the root; stop crawling.
        break;
      }

      index++;
      previousID = current.id;
      currentID = current.parentID;
    } // At this point, the current ID is a root (from the previous loop).
    // We also need to offset the index by previous root weights.


    for (let i = 0; i < this._roots.length; i++) {
      const rootID = this._roots[i];

      if (rootID === currentID) {
        break;
      }

      const root = this._idToElement.get(rootID);

      if (root === undefined) {
        return null;
      }

      index += root.weight;
    }

    return index;
  }

  getOwnersListForElement(ownerID) {
    const list = [];

    const element = this._idToElement.get(ownerID);

    if (element !== undefined) {
      list.push({ ...element,
        depth: 0
      });

      const unsortedIDs = this._ownersMap.get(ownerID);

      if (unsortedIDs !== undefined) {
        const depthMap = new Map([[ownerID, 0]]); // Items in a set are ordered based on insertion.
        // This does not correlate with their order in the tree.
        // So first we need to order them.
        // I wish we could avoid this sorting operation; we could sort at insertion time,
        // but then we'd have to pay sorting costs even if the owners list was never used.
        // Seems better to defer the cost, since the set of ids is probably pretty small.

        const sortedIDs = Array.from(unsortedIDs).sort((idA, idB) => (this.getIndexOfElementID(idA) || 0) - (this.getIndexOfElementID(idB) || 0)); // Next we need to determine the appropriate depth for each element in the list.
        // The depth in the list may not correspond to the depth in the tree,
        // because the list has been filtered to remove intermediate components.
        // Perhaps the easiest way to do this is to walk up the tree until we reach either:
        // (1) another node that's already in the tree, or (2) the root (owner)
        // at which point, our depth is just the depth of that node plus one.

        sortedIDs.forEach(id => {
          const innerElement = this._idToElement.get(id);

          if (innerElement !== undefined) {
            let parentID = innerElement.parentID;
            let depth = 0;

            while (parentID > 0) {
              if (parentID === ownerID || unsortedIDs.has(parentID)) {
                // $FlowFixMe[unsafe-addition] addition with possible null/undefined value
                depth = depthMap.get(parentID) + 1;
                depthMap.set(id, depth);
                break;
              }

              const parent = this._idToElement.get(parentID);

              if (parent === undefined) {
                break;
              }

              parentID = parent.parentID;
            }

            if (depth === 0) {
              this._throwAndEmitError(Error('Invalid owners list'));
            }

            list.push({ ...innerElement,
              depth
            });
          }
        });
      }
    }

    return list;
  }

  getRendererIDForElement(id) {
    let current = this._idToElement.get(id);

    while (current !== undefined) {
      if (current.parentID === 0) {
        const rendererID = this._rootIDToRendererID.get(current.id);

        return rendererID == null ? null : rendererID;
      } else {
        current = this._idToElement.get(current.parentID);
      }
    }

    return null;
  }

  getRootIDForElement(id) {
    let current = this._idToElement.get(id);

    while (current !== undefined) {
      if (current.parentID === 0) {
        return current.id;
      } else {
        current = this._idToElement.get(current.parentID);
      }
    }

    return null;
  }

  isInsideCollapsedSubTree(id) {
    let current = this._idToElement.get(id);

    while (current != null) {
      if (current.parentID === 0) {
        return false;
      } else {
        current = this._idToElement.get(current.parentID);

        if (current != null && current.isCollapsed) {
          return true;
        }
      }
    }

    return false;
  } // TODO Maybe split this into two methods: expand() and collapse()


  toggleIsCollapsed(id, isCollapsed) {
    let didMutate = false;
    const element = this.getElementByID(id);

    if (element !== null) {
      if (isCollapsed) {
        if (element.type === types_ElementTypeRoot) {
          this._throwAndEmitError(Error('Root nodes cannot be collapsed'));
        }

        if (!element.isCollapsed) {
          didMutate = true;
          element.isCollapsed = true;
          const weightDelta = 1 - element.weight;

          let parentElement = this._idToElement.get(element.parentID);

          while (parentElement !== undefined) {
            // We don't need to break on a collapsed parent in the same way as the expand case below.
            // That's because collapsing a node doesn't "bubble" and affect its parents.
            parentElement.weight += weightDelta;
            parentElement = this._idToElement.get(parentElement.parentID);
          }
        }
      } else {
        let currentElement = element;

        while (currentElement != null) {
          const oldWeight = currentElement.isCollapsed ? 1 : currentElement.weight;

          if (currentElement.isCollapsed) {
            didMutate = true;
            currentElement.isCollapsed = false;
            const newWeight = currentElement.isCollapsed ? 1 : currentElement.weight;
            const weightDelta = newWeight - oldWeight;

            let parentElement = this._idToElement.get(currentElement.parentID);

            while (parentElement !== undefined) {
              parentElement.weight += weightDelta;

              if (parentElement.isCollapsed) {
                // It's important to break on a collapsed parent when expanding nodes.
                // That's because expanding a node "bubbles" up and expands all parents as well.
                // Breaking in this case prevents us from over-incrementing the expanded weights.
                break;
              }

              parentElement = this._idToElement.get(parentElement.parentID);
            }
          }

          currentElement = currentElement.parentID !== 0 ? this.getElementByID(currentElement.parentID) : null;
        }
      } // Only re-calculate weights and emit an "update" event if the store was mutated.


      if (didMutate) {
        let weightAcrossRoots = 0;

        this._roots.forEach(rootID => {
          const {
            weight
          } = this.getElementByID(rootID);
          weightAcrossRoots += weight;
        });

        this._weightAcrossRoots = weightAcrossRoots; // The Tree context's search reducer expects an explicit list of ids for nodes that were added or removed.
        // In this  case, we can pass it empty arrays since nodes in a collapsed tree are still there (just hidden).
        // Updating the selected search index later may require auto-expanding a collapsed subtree though.

        this.emit('mutated', [[], new Map()]);
      }
    }
  }

  _recursivelyUpdateSubtree(id, callback) {
    const element = this._idToElement.get(id);

    if (element) {
      callback(element);
      element.children.forEach(child => this._recursivelyUpdateSubtree(child, callback));
    }
  } // Certain backends save filters on a per-domain basis.
  // In order to prevent filter preferences and applied filters from being out of sync,
  // this message enables the backend to override the frontend's current ("saved") filters.
  // This action should also override the saved filters too,
  // else reloading the frontend without reloading the backend would leave things out of sync.


  setShouldShowWarningsAndErrors(status) {
    const previousStatus = this._shouldShowWarningsAndErrors;
    this._shouldShowWarningsAndErrors = status;

    if (previousStatus !== status) {
      // Propagate to subscribers, although tree state has not changed
      this.emit('mutated', [[], new Map()]);
    }
  } // The Store should never throw an Error without also emitting an event.
  // Otherwise Store errors will be invisible to users,
  // but the downstream errors they cause will be reported as bugs.
  // For example, https://github.com/facebook/react/issues/21402
  // Emitting an error event allows the ErrorBoundary to show the original error.


  _throwAndEmitError(error) {
    this.emit('error', error); // Throwing is still valuable for local development
    // and for unit testing the Store itself.

    throw error;
  }

}
// EXTERNAL MODULE: ../../node_modules/@reach/menu-button/styles.css
var styles = __webpack_require__(9026);
// EXTERNAL MODULE: ../../node_modules/@reach/tooltip/styles.css
var tooltip_styles = __webpack_require__(5714);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/context.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


const BridgeContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
BridgeContext.displayName = 'BridgeContext';
const StoreContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
StoreContext.displayName = 'StoreContext';
const ContextMenuContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)({
  isEnabledForInspectedElement: false,
  viewAttributeSourceFunction: null
});
ContextMenuContext.displayName = 'ContextMenuContext';
const OptionsContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)({
  readOnly: false,
  hideSettings: false,
  hideToggleErrorAction: false,
  hideToggleSuspenseAction: false,
  hideLogAction: false,
  hideViewSourceAction: false
});
;// CONCATENATED MODULE: ../../node_modules/react-virtualized-auto-sizer/dist/react-virtualized-auto-sizer.esm.js

/**
 * Detect Element Resize.
 * https://github.com/sdecima/javascript-detect-element-resize
 * Sebastian Decima
 *
 * Forked from version 0.5.3; includes the following modifications:
 * 1) Guard against unsafe 'window' and 'document' references (to support SSR).
 * 2) Defer initialization code via a top-level function wrapper (to support SSR).
 * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.
 * 4) Add nonce for style element.
 * 5) Use 'export' statement over 'module.exports' assignment
 **/
// Check `document` and `window` in case of server-side rendering

let windowObject;

if (typeof window !== "undefined") {
  windowObject = window; // eslint-disable-next-line no-restricted-globals
} else if (typeof self !== "undefined") {
  // eslint-disable-next-line no-restricted-globals
  windowObject = self;
} else {
  windowObject = global;
}

let cancelFrame = null;
let requestFrame = null;
const TIMEOUT_DURATION = 20;
const clearTimeoutFn = windowObject.clearTimeout;
const setTimeoutFn = windowObject.setTimeout;
const cancelAnimationFrameFn = windowObject.cancelAnimationFrame || windowObject.mozCancelAnimationFrame || windowObject.webkitCancelAnimationFrame;
const requestAnimationFrameFn = windowObject.requestAnimationFrame || windowObject.mozRequestAnimationFrame || windowObject.webkitRequestAnimationFrame;

if (cancelAnimationFrameFn == null || requestAnimationFrameFn == null) {
  // For environments that don't support animation frame,
  // fallback to a setTimeout based approach.
  cancelFrame = clearTimeoutFn;

  requestFrame = function requestAnimationFrameViaSetTimeout(callback) {
    return setTimeoutFn(callback, TIMEOUT_DURATION);
  };
} else {
  // Counter intuitively, environments that support animation frames can be trickier.
  // Chrome's "Throttle non-visible cross-origin iframes" flag can prevent rAFs from being called.
  // In this case, we should fallback to a setTimeout() implementation.
  cancelFrame = function cancelFrame([animationFrameID, timeoutID]) {
    cancelAnimationFrameFn(animationFrameID);
    clearTimeoutFn(timeoutID);
  };

  requestFrame = function requestAnimationFrameWithSetTimeoutFallback(callback) {
    const animationFrameID = requestAnimationFrameFn(function animationFrameCallback() {
      clearTimeoutFn(timeoutID);
      callback();
    });
    const timeoutID = setTimeoutFn(function timeoutCallback() {
      cancelAnimationFrameFn(animationFrameID);
      callback();
    }, TIMEOUT_DURATION);
    return [animationFrameID, timeoutID];
  };
}

function createDetectElementResize(nonce) {
  let animationKeyframes;
  let animationName;
  let animationStartEvent;
  let animationStyle;
  let checkTriggers;
  let resetTriggers;
  let scrollListener;
  const attachEvent = typeof document !== "undefined" && document.attachEvent;

  if (!attachEvent) {
    resetTriggers = function (element) {
      const triggers = element.__resizeTriggers__,
            expand = triggers.firstElementChild,
            contract = triggers.lastElementChild,
            expandChild = expand.firstElementChild;
      contract.scrollLeft = contract.scrollWidth;
      contract.scrollTop = contract.scrollHeight;
      expandChild.style.width = expand.offsetWidth + 1 + "px";
      expandChild.style.height = expand.offsetHeight + 1 + "px";
      expand.scrollLeft = expand.scrollWidth;
      expand.scrollTop = expand.scrollHeight;
    };

    checkTriggers = function (element) {
      return element.offsetWidth !== element.__resizeLast__.width || element.offsetHeight !== element.__resizeLast__.height;
    };

    scrollListener = function (e) {
      // Don't measure (which forces) reflow for scrolls that happen inside of children!
      if (e.target.className && typeof e.target.className.indexOf === "function" && e.target.className.indexOf("contract-trigger") < 0 && e.target.className.indexOf("expand-trigger") < 0) {
        return;
      }

      const element = this;
      resetTriggers(this);

      if (this.__resizeRAF__) {
        cancelFrame(this.__resizeRAF__);
      }

      this.__resizeRAF__ = requestFrame(function animationFrame() {
        if (checkTriggers(element)) {
          element.__resizeLast__.width = element.offsetWidth;
          element.__resizeLast__.height = element.offsetHeight;

          element.__resizeListeners__.forEach(function forEachResizeListener(fn) {
            fn.call(element, e);
          });
        }
      });
    };
    /* Detect CSS Animations support to detect element display/re-attach */


    let animation = false;
    let keyframeprefix = "";
    animationStartEvent = "animationstart";
    const domPrefixes = "Webkit Moz O ms".split(" ");
    let startEvents = "webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(" ");
    let pfx = "";
    {
      const elm = document.createElement("fakeelement");

      if (elm.style.animationName !== undefined) {
        animation = true;
      }

      if (animation === false) {
        for (let i = 0; i < domPrefixes.length; i++) {
          if (elm.style[domPrefixes[i] + "AnimationName"] !== undefined) {
            pfx = domPrefixes[i];
            keyframeprefix = "-" + pfx.toLowerCase() + "-";
            animationStartEvent = startEvents[i];
            animation = true;
            break;
          }
        }
      }
    }
    animationName = "resizeanim";
    animationKeyframes = "@" + keyframeprefix + "keyframes " + animationName + " { from { opacity: 0; } to { opacity: 0; } } ";
    animationStyle = keyframeprefix + "animation: 1ms " + animationName + "; ";
  }

  const createStyles = function (doc) {
    if (!doc.getElementById("detectElementResize")) {
      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360
      const css = (animationKeyframes ? animationKeyframes : "") + ".resize-triggers { " + (animationStyle ? animationStyle : "") + "visibility: hidden; opacity: 0; } " + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: " "; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',
            head = doc.head || doc.getElementsByTagName("head")[0],
            style = doc.createElement("style");
      style.id = "detectElementResize";
      style.type = "text/css";

      if (nonce != null) {
        style.setAttribute("nonce", nonce);
      }

      if (style.styleSheet) {
        style.styleSheet.cssText = css;
      } else {
        style.appendChild(doc.createTextNode(css));
      }

      head.appendChild(style);
    }
  };

  const addResizeListener = function (element, fn) {
    if (attachEvent) {
      element.attachEvent("onresize", fn);
    } else {
      if (!element.__resizeTriggers__) {
        const doc = element.ownerDocument;
        const elementStyle = windowObject.getComputedStyle(element);

        if (elementStyle && elementStyle.position === "static") {
          element.style.position = "relative";
        }

        createStyles(doc);
        element.__resizeLast__ = {};
        element.__resizeListeners__ = [];
        (element.__resizeTriggers__ = doc.createElement("div")).className = "resize-triggers";
        const expandTrigger = doc.createElement("div");
        expandTrigger.className = "expand-trigger";
        expandTrigger.appendChild(doc.createElement("div"));
        const contractTrigger = doc.createElement("div");
        contractTrigger.className = "contract-trigger";

        element.__resizeTriggers__.appendChild(expandTrigger);

        element.__resizeTriggers__.appendChild(contractTrigger);

        element.appendChild(element.__resizeTriggers__);
        resetTriggers(element);
        element.addEventListener("scroll", scrollListener, true);
        /* Listen for a css animation to detect element display/re-attach */

        if (animationStartEvent) {
          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {
            if (e.animationName === animationName) {
              resetTriggers(element);
            }
          };

          element.__resizeTriggers__.addEventListener(animationStartEvent, element.__resizeTriggers__.__animationListener__);
        }
      }

      element.__resizeListeners__.push(fn);
    }
  };

  const removeResizeListener = function (element, fn) {
    if (attachEvent) {
      element.detachEvent("onresize", fn);
    } else {
      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);

      if (!element.__resizeListeners__.length) {
        element.removeEventListener("scroll", scrollListener, true);

        if (element.__resizeTriggers__.__animationListener__) {
          element.__resizeTriggers__.removeEventListener(animationStartEvent, element.__resizeTriggers__.__animationListener__);

          element.__resizeTriggers__.__animationListener__ = null;
        }

        try {
          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);
        } catch (e) {// Preact compat; see developit/preact-compat/issues/228
        }
      }
    }
  };

  return {
    addResizeListener,
    removeResizeListener
  };
}

class AutoSizer extends external_react_namespaceObject.Component {
  constructor(...args) {
    super(...args);
    this.state = {
      height: this.props.defaultHeight || 0,
      scaledHeight: this.props.defaultHeight || 0,
      scaledWidth: this.props.defaultWidth || 0,
      width: this.props.defaultWidth || 0
    };
    this._autoSizer = null;
    this._detectElementResize = null;
    this._parentNode = null;
    this._resizeObserver = null;
    this._timeoutId = null;

    this._onResize = () => {
      this._timeoutId = null;
      const {
        disableHeight,
        disableWidth,
        onResize
      } = this.props;

      if (this._parentNode) {
        // Guard against AutoSizer component being removed from the DOM immediately after being added.
        // This can result in invalid style values which can result in NaN values if we don't handle them.
        // See issue #150 for more context.
        const style = window.getComputedStyle(this._parentNode) || {};
        const paddingLeft = parseFloat(style.paddingLeft || "0");
        const paddingRight = parseFloat(style.paddingRight || "0");
        const paddingTop = parseFloat(style.paddingTop || "0");
        const paddingBottom = parseFloat(style.paddingBottom || "0");

        const rect = this._parentNode.getBoundingClientRect();

        const scaledHeight = rect.height - paddingTop - paddingBottom;
        const scaledWidth = rect.width - paddingLeft - paddingRight;
        const height = this._parentNode.offsetHeight - paddingTop - paddingBottom;
        const width = this._parentNode.offsetWidth - paddingLeft - paddingRight;

        if (!disableHeight && (this.state.height !== height || this.state.scaledHeight !== scaledHeight) || !disableWidth && (this.state.width !== width || this.state.scaledWidth !== scaledWidth)) {
          this.setState({
            height,
            width,
            scaledHeight,
            scaledWidth
          });

          if (typeof onResize === "function") {
            onResize({
              height,
              scaledHeight,
              scaledWidth,
              width
            });
          }
        }
      }
    };

    this._setRef = autoSizer => {
      this._autoSizer = autoSizer;
    };
  }

  componentDidMount() {
    const {
      nonce
    } = this.props;
    const parentNode = this._autoSizer ? this._autoSizer.parentNode : null;

    if (parentNode != null && parentNode.ownerDocument && parentNode.ownerDocument.defaultView && parentNode instanceof parentNode.ownerDocument.defaultView.HTMLElement) {
      // Delay access of parentNode until mount.
      // This handles edge-cases where the component has already been unmounted before its ref has been set,
      // As well as libraries like react-lite which have a slightly different lifecycle.
      this._parentNode = parentNode; // Use ResizeObserver from the same context where parentNode (which we will observe) was defined
      // Using just global can result into onResize events not being emitted in cases with multiple realms

      const ResizeObserverInstance = parentNode.ownerDocument.defaultView.ResizeObserver;

      if (ResizeObserverInstance != null) {
        this._resizeObserver = new ResizeObserverInstance(() => {
          // Guard against "ResizeObserver loop limit exceeded" error;
          // could be triggered if the state update causes the ResizeObserver handler to run long.
          // See https://github.com/bvaughn/react-virtualized-auto-sizer/issues/55
          this._timeoutId = setTimeout(this._onResize, 0);
        });

        this._resizeObserver.observe(parentNode);
      } else {
        // Defer requiring resize handler in order to support server-side rendering.
        // See issue #41
        this._detectElementResize = createDetectElementResize(nonce);

        this._detectElementResize.addResizeListener(parentNode, this._onResize);
      }

      this._onResize();
    }
  }

  componentWillUnmount() {
    if (this._parentNode) {
      if (this._detectElementResize) {
        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);
      }

      if (this._timeoutId !== null) {
        clearTimeout(this._timeoutId);
      }

      if (this._resizeObserver) {
        this._resizeObserver.disconnect();
      }
    }
  }

  render() {
    const {
      children,
      defaultHeight,
      defaultWidth,
      disableHeight = false,
      disableWidth = false,
      nonce,
      onResize,
      style = {},
      tagName = "div",
      ...rest
    } = this.props;
    const {
      height,
      scaledHeight,
      scaledWidth,
      width
    } = this.state; // Outer div should not force width/height since that may prevent containers from shrinking.
    // Inner component should overflow and use calculated width/height.
    // See issue #68 for more information.

    const outerStyle = {
      overflow: "visible"
    };
    const childParams = {}; // Avoid rendering children before the initial measurements have been collected.
    // At best this would just be wasting cycles.

    let bailoutOnChildren = false;

    if (!disableHeight) {
      if (height === 0) {
        bailoutOnChildren = true;
      }

      outerStyle.height = 0;
      childParams.height = height;
      childParams.scaledHeight = scaledHeight;
    }

    if (!disableWidth) {
      if (width === 0) {
        bailoutOnChildren = true;
      }

      outerStyle.width = 0;
      childParams.width = width;
      childParams.scaledWidth = scaledWidth;
    }

    return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(tagName, {
      ref: this._setRef,
      style: { ...outerStyle,
        ...style
      },
      ...rest
    }, !bailoutOnChildren && children(childParams));
  }

}

function isHeightAndWidthProps(props) {
  return props && props.disableHeight !== true && props.disableWidth !== true;
}

function isHeightOnlyProps(props) {
  return props && props.disableHeight !== true && props.disableWidth === true;
}

function isWidthOnlyProps(props) {
  return props && props.disableHeight === true && props.disableWidth !== true;
}


;// CONCATENATED MODULE: ../../node_modules/react-window/node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };
  return _extends.apply(this, arguments);
}
;// CONCATENATED MODULE: ../../node_modules/react-window/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}
;// CONCATENATED MODULE: ../../node_modules/react-window/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };
  return _setPrototypeOf(o, p);
}
;// CONCATENATED MODULE: ../../node_modules/react-window/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
;// CONCATENATED MODULE: ../../node_modules/react-window/node_modules/memoize-one/dist/memoize-one.esm.js
var safeIsNaN = Number.isNaN || function ponyfill(value) {
  return typeof value === 'number' && value !== value;
};

function isEqual(first, second) {
  if (first === second) {
    return true;
  }

  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }

  return false;
}

function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }

  for (var i = 0; i < newInputs.length; i++) {
    if (!isEqual(newInputs[i], lastInputs[i])) {
      return false;
    }
  }

  return true;
}

function memoizeOne(resultFn, isEqual) {
  if (isEqual === void 0) {
    isEqual = areInputsEqual;
  }

  var lastThis;
  var lastArgs = [];
  var lastResult;
  var calledOnce = false;

  function memoized() {
    var newArgs = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }

    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {
      return lastResult;
    }

    lastResult = resultFn.apply(this, newArgs);
    calledOnce = true;
    lastThis = this;
    lastArgs = newArgs;
    return lastResult;
  }

  return memoized;
}

/* harmony default export */ const memoize_one_esm = (memoizeOne);
;// CONCATENATED MODULE: ../../node_modules/react-window/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
;// CONCATENATED MODULE: ../../node_modules/react-window/dist/index.esm.js





 // Animation frame based implementation of setTimeout.
// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js

var hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';
var now = hasNativePerformanceNow ? function () {
  return performance.now();
} : function () {
  return Date.now();
};

function cancelTimeout(timeoutID) {
  cancelAnimationFrame(timeoutID.id);
}

function requestTimeout(callback, delay) {
  var start = now();

  function tick() {
    if (now() - start >= delay) {
      callback.call(null);
    } else {
      timeoutID.id = requestAnimationFrame(tick);
    }
  }

  var timeoutID = {
    id: requestAnimationFrame(tick)
  };
  return timeoutID;
}

var size = -1; // This utility copied from "dom-helpers" package.

function getScrollbarSize(recalculate) {
  if (recalculate === void 0) {
    recalculate = false;
  }

  if (size === -1 || recalculate) {
    var div = document.createElement('div');
    var style = div.style;
    style.width = '50px';
    style.height = '50px';
    style.overflow = 'scroll';
    document.body.appendChild(div);
    size = div.offsetWidth - div.clientWidth;
    document.body.removeChild(div);
  }

  return size;
}

var cachedRTLResult = null; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.
// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).
// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.
// The safest way to check this is to intentionally set a negative offset,
// and then verify that the subsequent "scroll" event matches the negative offset.
// If it does not match, then we can assume a non-standard RTL scroll implementation.

function getRTLOffsetType(recalculate) {
  if (recalculate === void 0) {
    recalculate = false;
  }

  if (cachedRTLResult === null || recalculate) {
    var outerDiv = document.createElement('div');
    var outerStyle = outerDiv.style;
    outerStyle.width = '50px';
    outerStyle.height = '50px';
    outerStyle.overflow = 'scroll';
    outerStyle.direction = 'rtl';
    var innerDiv = document.createElement('div');
    var innerStyle = innerDiv.style;
    innerStyle.width = '100px';
    innerStyle.height = '100px';
    outerDiv.appendChild(innerDiv);
    document.body.appendChild(outerDiv);

    if (outerDiv.scrollLeft > 0) {
      cachedRTLResult = 'positive-descending';
    } else {
      outerDiv.scrollLeft = 1;

      if (outerDiv.scrollLeft === 0) {
        cachedRTLResult = 'negative';
      } else {
        cachedRTLResult = 'positive-ascending';
      }
    }

    document.body.removeChild(outerDiv);
    return cachedRTLResult;
  }

  return cachedRTLResult;
}

var IS_SCROLLING_DEBOUNCE_INTERVAL = 150;

var defaultItemKey = function defaultItemKey(_ref) {
  var columnIndex = _ref.columnIndex,
      data = _ref.data,
      rowIndex = _ref.rowIndex;
  return rowIndex + ":" + columnIndex;
}; // In DEV mode, this Set helps us only log a warning once per component instance.
// This avoids spamming the console every time a render happens.


var devWarningsOverscanCount = null;
var devWarningsOverscanRowsColumnsCount = null;
var devWarningsTagName = null;

if (false) {}

function createGridComponent(_ref2) {
  var _class;

  var getColumnOffset = _ref2.getColumnOffset,
      getColumnStartIndexForOffset = _ref2.getColumnStartIndexForOffset,
      getColumnStopIndexForStartIndex = _ref2.getColumnStopIndexForStartIndex,
      getColumnWidth = _ref2.getColumnWidth,
      getEstimatedTotalHeight = _ref2.getEstimatedTotalHeight,
      getEstimatedTotalWidth = _ref2.getEstimatedTotalWidth,
      getOffsetForColumnAndAlignment = _ref2.getOffsetForColumnAndAlignment,
      getOffsetForRowAndAlignment = _ref2.getOffsetForRowAndAlignment,
      getRowHeight = _ref2.getRowHeight,
      getRowOffset = _ref2.getRowOffset,
      getRowStartIndexForOffset = _ref2.getRowStartIndexForOffset,
      getRowStopIndexForStartIndex = _ref2.getRowStopIndexForStartIndex,
      initInstanceProps = _ref2.initInstanceProps,
      shouldResetStyleCacheOnItemSizeChange = _ref2.shouldResetStyleCacheOnItemSizeChange,
      validateProps = _ref2.validateProps;
  return _class = /*#__PURE__*/function (_PureComponent) {
    _inheritsLoose(Grid, _PureComponent); // Always use explicit constructor for React components.
    // It produces less code after transpilation. (#26)
    // eslint-disable-next-line no-useless-constructor


    function Grid(props) {
      var _this;

      _this = _PureComponent.call(this, props) || this;
      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));
      _this._resetIsScrollingTimeoutId = null;
      _this._outerRef = void 0;
      _this.state = {
        instance: _assertThisInitialized(_this),
        isScrolling: false,
        horizontalScrollDirection: 'forward',
        scrollLeft: typeof _this.props.initialScrollLeft === 'number' ? _this.props.initialScrollLeft : 0,
        scrollTop: typeof _this.props.initialScrollTop === 'number' ? _this.props.initialScrollTop : 0,
        scrollUpdateWasRequested: false,
        verticalScrollDirection: 'forward'
      };
      _this._callOnItemsRendered = void 0;
      _this._callOnItemsRendered = memoize_one_esm(function (overscanColumnStartIndex, overscanColumnStopIndex, overscanRowStartIndex, overscanRowStopIndex, visibleColumnStartIndex, visibleColumnStopIndex, visibleRowStartIndex, visibleRowStopIndex) {
        return _this.props.onItemsRendered({
          overscanColumnStartIndex: overscanColumnStartIndex,
          overscanColumnStopIndex: overscanColumnStopIndex,
          overscanRowStartIndex: overscanRowStartIndex,
          overscanRowStopIndex: overscanRowStopIndex,
          visibleColumnStartIndex: visibleColumnStartIndex,
          visibleColumnStopIndex: visibleColumnStopIndex,
          visibleRowStartIndex: visibleRowStartIndex,
          visibleRowStopIndex: visibleRowStopIndex
        });
      });
      _this._callOnScroll = void 0;
      _this._callOnScroll = memoize_one_esm(function (scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested) {
        return _this.props.onScroll({
          horizontalScrollDirection: horizontalScrollDirection,
          scrollLeft: scrollLeft,
          scrollTop: scrollTop,
          verticalScrollDirection: verticalScrollDirection,
          scrollUpdateWasRequested: scrollUpdateWasRequested
        });
      });
      _this._getItemStyle = void 0;

      _this._getItemStyle = function (rowIndex, columnIndex) {
        var _this$props = _this.props,
            columnWidth = _this$props.columnWidth,
            direction = _this$props.direction,
            rowHeight = _this$props.rowHeight;

        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && columnWidth, shouldResetStyleCacheOnItemSizeChange && direction, shouldResetStyleCacheOnItemSizeChange && rowHeight);

        var key = rowIndex + ":" + columnIndex;
        var style;

        if (itemStyleCache.hasOwnProperty(key)) {
          style = itemStyleCache[key];
        } else {
          var _offset = getColumnOffset(_this.props, columnIndex, _this._instanceProps);

          var isRtl = direction === 'rtl';
          itemStyleCache[key] = style = {
            position: 'absolute',
            left: isRtl ? undefined : _offset,
            right: isRtl ? _offset : undefined,
            top: getRowOffset(_this.props, rowIndex, _this._instanceProps),
            height: getRowHeight(_this.props, rowIndex, _this._instanceProps),
            width: getColumnWidth(_this.props, columnIndex, _this._instanceProps)
          };
        }

        return style;
      };

      _this._getItemStyleCache = void 0;
      _this._getItemStyleCache = memoize_one_esm(function (_, __, ___) {
        return {};
      });

      _this._onScroll = function (event) {
        var _event$currentTarget = event.currentTarget,
            clientHeight = _event$currentTarget.clientHeight,
            clientWidth = _event$currentTarget.clientWidth,
            scrollLeft = _event$currentTarget.scrollLeft,
            scrollTop = _event$currentTarget.scrollTop,
            scrollHeight = _event$currentTarget.scrollHeight,
            scrollWidth = _event$currentTarget.scrollWidth;

        _this.setState(function (prevState) {
          if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {
            // Scroll position may have been updated by cDM/cDU,
            // In which case we don't need to trigger another render,
            // And we don't want to update state.isScrolling.
            return null;
          }

          var direction = _this.props.direction; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.
          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).
          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.
          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.

          var calculatedScrollLeft = scrollLeft;

          if (direction === 'rtl') {
            switch (getRTLOffsetType()) {
              case 'negative':
                calculatedScrollLeft = -scrollLeft;
                break;

              case 'positive-descending':
                calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;
                break;
            }
          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.


          calculatedScrollLeft = Math.max(0, Math.min(calculatedScrollLeft, scrollWidth - clientWidth));
          var calculatedScrollTop = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));
          return {
            isScrolling: true,
            horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',
            scrollLeft: calculatedScrollLeft,
            scrollTop: calculatedScrollTop,
            verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward',
            scrollUpdateWasRequested: false
          };
        }, _this._resetIsScrollingDebounced);
      };

      _this._outerRefSetter = function (ref) {
        var outerRef = _this.props.outerRef;
        _this._outerRef = ref;

        if (typeof outerRef === 'function') {
          outerRef(ref);
        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {
          outerRef.current = ref;
        }
      };

      _this._resetIsScrollingDebounced = function () {
        if (_this._resetIsScrollingTimeoutId !== null) {
          cancelTimeout(_this._resetIsScrollingTimeoutId);
        }

        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL);
      };

      _this._resetIsScrolling = function () {
        _this._resetIsScrollingTimeoutId = null;

        _this.setState({
          isScrolling: false
        }, function () {
          // Clear style cache after state update has been committed.
          // This way we don't break pure sCU for items that don't use isScrolling param.
          _this._getItemStyleCache(-1);
        });
      };

      return _this;
    }

    Grid.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
      validateSharedProps(nextProps, prevState);
      validateProps(nextProps);
      return null;
    };

    var _proto = Grid.prototype;

    _proto.scrollTo = function scrollTo(_ref3) {
      var scrollLeft = _ref3.scrollLeft,
          scrollTop = _ref3.scrollTop;

      if (scrollLeft !== undefined) {
        scrollLeft = Math.max(0, scrollLeft);
      }

      if (scrollTop !== undefined) {
        scrollTop = Math.max(0, scrollTop);
      }

      this.setState(function (prevState) {
        if (scrollLeft === undefined) {
          scrollLeft = prevState.scrollLeft;
        }

        if (scrollTop === undefined) {
          scrollTop = prevState.scrollTop;
        }

        if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {
          return null;
        }

        return {
          horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',
          scrollLeft: scrollLeft,
          scrollTop: scrollTop,
          scrollUpdateWasRequested: true,
          verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward'
        };
      }, this._resetIsScrollingDebounced);
    };

    _proto.scrollToItem = function scrollToItem(_ref4) {
      var _ref4$align = _ref4.align,
          align = _ref4$align === void 0 ? 'auto' : _ref4$align,
          columnIndex = _ref4.columnIndex,
          rowIndex = _ref4.rowIndex;
      var _this$props2 = this.props,
          columnCount = _this$props2.columnCount,
          height = _this$props2.height,
          rowCount = _this$props2.rowCount,
          width = _this$props2.width;
      var _this$state = this.state,
          scrollLeft = _this$state.scrollLeft,
          scrollTop = _this$state.scrollTop;
      var scrollbarSize = getScrollbarSize();

      if (columnIndex !== undefined) {
        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));
      }

      if (rowIndex !== undefined) {
        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));
      }

      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);
      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps); // The scrollbar size should be considered when scrolling an item into view,
      // to ensure it's fully visible.
      // But we only need to account for its size when it's actually visible.

      var horizontalScrollbarSize = estimatedTotalWidth > width ? scrollbarSize : 0;
      var verticalScrollbarSize = estimatedTotalHeight > height ? scrollbarSize : 0;
      this.scrollTo({
        scrollLeft: columnIndex !== undefined ? getOffsetForColumnAndAlignment(this.props, columnIndex, align, scrollLeft, this._instanceProps, verticalScrollbarSize) : scrollLeft,
        scrollTop: rowIndex !== undefined ? getOffsetForRowAndAlignment(this.props, rowIndex, align, scrollTop, this._instanceProps, horizontalScrollbarSize) : scrollTop
      });
    };

    _proto.componentDidMount = function componentDidMount() {
      var _this$props3 = this.props,
          initialScrollLeft = _this$props3.initialScrollLeft,
          initialScrollTop = _this$props3.initialScrollTop;

      if (this._outerRef != null) {
        var outerRef = this._outerRef;

        if (typeof initialScrollLeft === 'number') {
          outerRef.scrollLeft = initialScrollLeft;
        }

        if (typeof initialScrollTop === 'number') {
          outerRef.scrollTop = initialScrollTop;
        }
      }

      this._callPropsCallbacks();
    };

    _proto.componentDidUpdate = function componentDidUpdate() {
      var direction = this.props.direction;
      var _this$state2 = this.state,
          scrollLeft = _this$state2.scrollLeft,
          scrollTop = _this$state2.scrollTop,
          scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;

      if (scrollUpdateWasRequested && this._outerRef != null) {
        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.
        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).
        // So we need to determine which browser behavior we're dealing with, and mimic it.
        var outerRef = this._outerRef;

        if (direction === 'rtl') {
          switch (getRTLOffsetType()) {
            case 'negative':
              outerRef.scrollLeft = -scrollLeft;
              break;

            case 'positive-ascending':
              outerRef.scrollLeft = scrollLeft;
              break;

            default:
              var clientWidth = outerRef.clientWidth,
                  scrollWidth = outerRef.scrollWidth;
              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;
              break;
          }
        } else {
          outerRef.scrollLeft = Math.max(0, scrollLeft);
        }

        outerRef.scrollTop = Math.max(0, scrollTop);
      }

      this._callPropsCallbacks();
    };

    _proto.componentWillUnmount = function componentWillUnmount() {
      if (this._resetIsScrollingTimeoutId !== null) {
        cancelTimeout(this._resetIsScrollingTimeoutId);
      }
    };

    _proto.render = function render() {
      var _this$props4 = this.props,
          children = _this$props4.children,
          className = _this$props4.className,
          columnCount = _this$props4.columnCount,
          direction = _this$props4.direction,
          height = _this$props4.height,
          innerRef = _this$props4.innerRef,
          innerElementType = _this$props4.innerElementType,
          innerTagName = _this$props4.innerTagName,
          itemData = _this$props4.itemData,
          _this$props4$itemKey = _this$props4.itemKey,
          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey : _this$props4$itemKey,
          outerElementType = _this$props4.outerElementType,
          outerTagName = _this$props4.outerTagName,
          rowCount = _this$props4.rowCount,
          style = _this$props4.style,
          useIsScrolling = _this$props4.useIsScrolling,
          width = _this$props4.width;
      var isScrolling = this.state.isScrolling;

      var _this$_getHorizontalR = this._getHorizontalRangeToRender(),
          columnStartIndex = _this$_getHorizontalR[0],
          columnStopIndex = _this$_getHorizontalR[1];

      var _this$_getVerticalRan = this._getVerticalRangeToRender(),
          rowStartIndex = _this$_getVerticalRan[0],
          rowStopIndex = _this$_getVerticalRan[1];

      var items = [];

      if (columnCount > 0 && rowCount) {
        for (var _rowIndex = rowStartIndex; _rowIndex <= rowStopIndex; _rowIndex++) {
          for (var _columnIndex = columnStartIndex; _columnIndex <= columnStopIndex; _columnIndex++) {
            items.push( /*#__PURE__*/(0,external_react_namespaceObject.createElement)(children, {
              columnIndex: _columnIndex,
              data: itemData,
              isScrolling: useIsScrolling ? isScrolling : undefined,
              key: itemKey({
                columnIndex: _columnIndex,
                data: itemData,
                rowIndex: _rowIndex
              }),
              rowIndex: _rowIndex,
              style: this._getItemStyle(_rowIndex, _columnIndex)
            }));
          }
        }
      } // Read this value AFTER items have been created,
      // So their actual sizes (if variable) are taken into consideration.


      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);
      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps);
      return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(outerElementType || outerTagName || 'div', {
        className: className,
        onScroll: this._onScroll,
        ref: this._outerRefSetter,
        style: _extends({
          position: 'relative',
          height: height,
          width: width,
          overflow: 'auto',
          WebkitOverflowScrolling: 'touch',
          willChange: 'transform',
          direction: direction
        }, style)
      }, /*#__PURE__*/(0,external_react_namespaceObject.createElement)(innerElementType || innerTagName || 'div', {
        children: items,
        ref: innerRef,
        style: {
          height: estimatedTotalHeight,
          pointerEvents: isScrolling ? 'none' : undefined,
          width: estimatedTotalWidth
        }
      }));
    };

    _proto._callPropsCallbacks = function _callPropsCallbacks() {
      var _this$props5 = this.props,
          columnCount = _this$props5.columnCount,
          onItemsRendered = _this$props5.onItemsRendered,
          onScroll = _this$props5.onScroll,
          rowCount = _this$props5.rowCount;

      if (typeof onItemsRendered === 'function') {
        if (columnCount > 0 && rowCount > 0) {
          var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(),
              _overscanColumnStartIndex = _this$_getHorizontalR2[0],
              _overscanColumnStopIndex = _this$_getHorizontalR2[1],
              _visibleColumnStartIndex = _this$_getHorizontalR2[2],
              _visibleColumnStopIndex = _this$_getHorizontalR2[3];

          var _this$_getVerticalRan2 = this._getVerticalRangeToRender(),
              _overscanRowStartIndex = _this$_getVerticalRan2[0],
              _overscanRowStopIndex = _this$_getVerticalRan2[1],
              _visibleRowStartIndex = _this$_getVerticalRan2[2],
              _visibleRowStopIndex = _this$_getVerticalRan2[3];

          this._callOnItemsRendered(_overscanColumnStartIndex, _overscanColumnStopIndex, _overscanRowStartIndex, _overscanRowStopIndex, _visibleColumnStartIndex, _visibleColumnStopIndex, _visibleRowStartIndex, _visibleRowStopIndex);
        }
      }

      if (typeof onScroll === 'function') {
        var _this$state3 = this.state,
            _horizontalScrollDirection = _this$state3.horizontalScrollDirection,
            _scrollLeft = _this$state3.scrollLeft,
            _scrollTop = _this$state3.scrollTop,
            _scrollUpdateWasRequested = _this$state3.scrollUpdateWasRequested,
            _verticalScrollDirection = _this$state3.verticalScrollDirection;

        this._callOnScroll(_scrollLeft, _scrollTop, _horizontalScrollDirection, _verticalScrollDirection, _scrollUpdateWasRequested);
      }
    } // Lazily create and cache item styles while scrolling,
    // So that pure component sCU will prevent re-renders.
    // We maintain this cache, and pass a style prop rather than index,
    // So that List can clear cached styles and force item re-render if necessary.
    ;

    _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {
      var _this$props6 = this.props,
          columnCount = _this$props6.columnCount,
          overscanColumnCount = _this$props6.overscanColumnCount,
          overscanColumnsCount = _this$props6.overscanColumnsCount,
          overscanCount = _this$props6.overscanCount,
          rowCount = _this$props6.rowCount;
      var _this$state4 = this.state,
          horizontalScrollDirection = _this$state4.horizontalScrollDirection,
          isScrolling = _this$state4.isScrolling,
          scrollLeft = _this$state4.scrollLeft;
      var overscanCountResolved = overscanColumnCount || overscanColumnsCount || overscanCount || 1;

      if (columnCount === 0 || rowCount === 0) {
        return [0, 0, 0, 0];
      }

      var startIndex = getColumnStartIndexForOffset(this.props, scrollLeft, this._instanceProps);
      var stopIndex = getColumnStopIndexForStartIndex(this.props, startIndex, scrollLeft, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.
      // If there isn't at least one extra item, tab loops back around.

      var overscanBackward = !isScrolling || horizontalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;
      var overscanForward = !isScrolling || horizontalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;
      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];
    };

    _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {
      var _this$props7 = this.props,
          columnCount = _this$props7.columnCount,
          overscanCount = _this$props7.overscanCount,
          overscanRowCount = _this$props7.overscanRowCount,
          overscanRowsCount = _this$props7.overscanRowsCount,
          rowCount = _this$props7.rowCount;
      var _this$state5 = this.state,
          isScrolling = _this$state5.isScrolling,
          verticalScrollDirection = _this$state5.verticalScrollDirection,
          scrollTop = _this$state5.scrollTop;
      var overscanCountResolved = overscanRowCount || overscanRowsCount || overscanCount || 1;

      if (columnCount === 0 || rowCount === 0) {
        return [0, 0, 0, 0];
      }

      var startIndex = getRowStartIndexForOffset(this.props, scrollTop, this._instanceProps);
      var stopIndex = getRowStopIndexForStartIndex(this.props, startIndex, scrollTop, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.
      // If there isn't at least one extra item, tab loops back around.

      var overscanBackward = !isScrolling || verticalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;
      var overscanForward = !isScrolling || verticalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;
      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];
    };

    return Grid;
  }(external_react_namespaceObject.PureComponent), _class.defaultProps = {
    direction: 'ltr',
    itemData: undefined,
    useIsScrolling: false
  }, _class;
}

var validateSharedProps = function validateSharedProps(_ref5, _ref6) {
  var children = _ref5.children,
      direction = _ref5.direction,
      height = _ref5.height,
      innerTagName = _ref5.innerTagName,
      outerTagName = _ref5.outerTagName,
      overscanColumnsCount = _ref5.overscanColumnsCount,
      overscanCount = _ref5.overscanCount,
      overscanRowsCount = _ref5.overscanRowsCount,
      width = _ref5.width;
  var instance = _ref6.instance;

  if (false) {}
};

var DEFAULT_ESTIMATED_ITEM_SIZE = 50;

var getEstimatedTotalHeight = function getEstimatedTotalHeight(_ref, _ref2) {
  var rowCount = _ref.rowCount;
  var rowMetadataMap = _ref2.rowMetadataMap,
      estimatedRowHeight = _ref2.estimatedRowHeight,
      lastMeasuredRowIndex = _ref2.lastMeasuredRowIndex;
  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.
  // https://github.com/bvaughn/react-window/pull/138

  if (lastMeasuredRowIndex >= rowCount) {
    lastMeasuredRowIndex = rowCount - 1;
  }

  if (lastMeasuredRowIndex >= 0) {
    var itemMetadata = rowMetadataMap[lastMeasuredRowIndex];
    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;
  }

  var numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;
  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;
  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;
};

var getEstimatedTotalWidth = function getEstimatedTotalWidth(_ref3, _ref4) {
  var columnCount = _ref3.columnCount;
  var columnMetadataMap = _ref4.columnMetadataMap,
      estimatedColumnWidth = _ref4.estimatedColumnWidth,
      lastMeasuredColumnIndex = _ref4.lastMeasuredColumnIndex;
  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.
  // https://github.com/bvaughn/react-window/pull/138

  if (lastMeasuredColumnIndex >= columnCount) {
    lastMeasuredColumnIndex = columnCount - 1;
  }

  if (lastMeasuredColumnIndex >= 0) {
    var itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];
    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;
  }

  var numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;
  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;
  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;
};

var getItemMetadata = function getItemMetadata(itemType, props, index, instanceProps) {
  var itemMetadataMap, itemSize, lastMeasuredIndex;

  if (itemType === 'column') {
    itemMetadataMap = instanceProps.columnMetadataMap;
    itemSize = props.columnWidth;
    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;
  } else {
    itemMetadataMap = instanceProps.rowMetadataMap;
    itemSize = props.rowHeight;
    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;
  }

  if (index > lastMeasuredIndex) {
    var offset = 0;

    if (lastMeasuredIndex >= 0) {
      var itemMetadata = itemMetadataMap[lastMeasuredIndex];
      offset = itemMetadata.offset + itemMetadata.size;
    }

    for (var i = lastMeasuredIndex + 1; i <= index; i++) {
      var size = itemSize(i);
      itemMetadataMap[i] = {
        offset: offset,
        size: size
      };
      offset += size;
    }

    if (itemType === 'column') {
      instanceProps.lastMeasuredColumnIndex = index;
    } else {
      instanceProps.lastMeasuredRowIndex = index;
    }
  }

  return itemMetadataMap[index];
};

var findNearestItem = function findNearestItem(itemType, props, instanceProps, offset) {
  var itemMetadataMap, lastMeasuredIndex;

  if (itemType === 'column') {
    itemMetadataMap = instanceProps.columnMetadataMap;
    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;
  } else {
    itemMetadataMap = instanceProps.rowMetadataMap;
    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;
  }

  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;

  if (lastMeasuredItemOffset >= offset) {
    // If we've already measured items within this range just use a binary search as it's faster.
    return findNearestItemBinarySearch(itemType, props, instanceProps, lastMeasuredIndex, 0, offset);
  } else {
    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.
    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.
    // The overall complexity for this approach is O(log n).
    return findNearestItemExponentialSearch(itemType, props, instanceProps, Math.max(0, lastMeasuredIndex), offset);
  }
};

var findNearestItemBinarySearch = function findNearestItemBinarySearch(itemType, props, instanceProps, high, low, offset) {
  while (low <= high) {
    var middle = low + Math.floor((high - low) / 2);
    var currentOffset = getItemMetadata(itemType, props, middle, instanceProps).offset;

    if (currentOffset === offset) {
      return middle;
    } else if (currentOffset < offset) {
      low = middle + 1;
    } else if (currentOffset > offset) {
      high = middle - 1;
    }
  }

  if (low > 0) {
    return low - 1;
  } else {
    return 0;
  }
};

var findNearestItemExponentialSearch = function findNearestItemExponentialSearch(itemType, props, instanceProps, index, offset) {
  var itemCount = itemType === 'column' ? props.columnCount : props.rowCount;
  var interval = 1;

  while (index < itemCount && getItemMetadata(itemType, props, index, instanceProps).offset < offset) {
    index += interval;
    interval *= 2;
  }

  return findNearestItemBinarySearch(itemType, props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);
};

var getOffsetForIndexAndAlignment = function getOffsetForIndexAndAlignment(itemType, props, index, align, scrollOffset, instanceProps, scrollbarSize) {
  var size = itemType === 'column' ? props.width : props.height;
  var itemMetadata = getItemMetadata(itemType, props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,
  // To ensure it reflects actual measurements instead of just estimates.

  var estimatedTotalSize = itemType === 'column' ? getEstimatedTotalWidth(props, instanceProps) : getEstimatedTotalHeight(props, instanceProps);
  var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));
  var minOffset = Math.max(0, itemMetadata.offset - size + scrollbarSize + itemMetadata.size);

  if (align === 'smart') {
    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {
      align = 'auto';
    } else {
      align = 'center';
    }
  }

  switch (align) {
    case 'start':
      return maxOffset;

    case 'end':
      return minOffset;

    case 'center':
      return Math.round(minOffset + (maxOffset - minOffset) / 2);

    case 'auto':
    default:
      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {
        return scrollOffset;
      } else if (minOffset > maxOffset) {
        // Because we only take into account the scrollbar size when calculating minOffset
        // this value can be larger than maxOffset when at the end of the list
        return minOffset;
      } else if (scrollOffset < minOffset) {
        return minOffset;
      } else {
        return maxOffset;
      }

  }
};

var VariableSizeGrid = /*#__PURE__*/createGridComponent({
  getColumnOffset: function getColumnOffset(props, index, instanceProps) {
    return getItemMetadata('column', props, index, instanceProps).offset;
  },
  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(props, scrollLeft, instanceProps) {
    return findNearestItem('column', props, instanceProps, scrollLeft);
  },
  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, instanceProps) {
    var columnCount = props.columnCount,
        width = props.width;
    var itemMetadata = getItemMetadata('column', props, startIndex, instanceProps);
    var maxOffset = scrollLeft + width;
    var offset = itemMetadata.offset + itemMetadata.size;
    var stopIndex = startIndex;

    while (stopIndex < columnCount - 1 && offset < maxOffset) {
      stopIndex++;
      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;
    }

    return stopIndex;
  },
  getColumnWidth: function getColumnWidth(props, index, instanceProps) {
    return instanceProps.columnMetadataMap[index].size;
  },
  getEstimatedTotalHeight: getEstimatedTotalHeight,
  getEstimatedTotalWidth: getEstimatedTotalWidth,
  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {
    return getOffsetForIndexAndAlignment('column', props, index, align, scrollOffset, instanceProps, scrollbarSize);
  },
  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {
    return getOffsetForIndexAndAlignment('row', props, index, align, scrollOffset, instanceProps, scrollbarSize);
  },
  getRowOffset: function getRowOffset(props, index, instanceProps) {
    return getItemMetadata('row', props, index, instanceProps).offset;
  },
  getRowHeight: function getRowHeight(props, index, instanceProps) {
    return instanceProps.rowMetadataMap[index].size;
  },
  getRowStartIndexForOffset: function getRowStartIndexForOffset(props, scrollTop, instanceProps) {
    return findNearestItem('row', props, instanceProps, scrollTop);
  },
  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(props, startIndex, scrollTop, instanceProps) {
    var rowCount = props.rowCount,
        height = props.height;
    var itemMetadata = getItemMetadata('row', props, startIndex, instanceProps);
    var maxOffset = scrollTop + height;
    var offset = itemMetadata.offset + itemMetadata.size;
    var stopIndex = startIndex;

    while (stopIndex < rowCount - 1 && offset < maxOffset) {
      stopIndex++;
      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;
    }

    return stopIndex;
  },
  initInstanceProps: function initInstanceProps(props, instance) {
    var _ref5 = props,
        estimatedColumnWidth = _ref5.estimatedColumnWidth,
        estimatedRowHeight = _ref5.estimatedRowHeight;
    var instanceProps = {
      columnMetadataMap: {},
      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,
      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,
      lastMeasuredColumnIndex: -1,
      lastMeasuredRowIndex: -1,
      rowMetadataMap: {}
    };

    instance.resetAfterColumnIndex = function (columnIndex, shouldForceUpdate) {
      if (shouldForceUpdate === void 0) {
        shouldForceUpdate = true;
      }

      instance.resetAfterIndices({
        columnIndex: columnIndex,
        shouldForceUpdate: shouldForceUpdate
      });
    };

    instance.resetAfterRowIndex = function (rowIndex, shouldForceUpdate) {
      if (shouldForceUpdate === void 0) {
        shouldForceUpdate = true;
      }

      instance.resetAfterIndices({
        rowIndex: rowIndex,
        shouldForceUpdate: shouldForceUpdate
      });
    };

    instance.resetAfterIndices = function (_ref6) {
      var columnIndex = _ref6.columnIndex,
          rowIndex = _ref6.rowIndex,
          _ref6$shouldForceUpda = _ref6.shouldForceUpdate,
          shouldForceUpdate = _ref6$shouldForceUpda === void 0 ? true : _ref6$shouldForceUpda;

      if (typeof columnIndex === 'number') {
        instanceProps.lastMeasuredColumnIndex = Math.min(instanceProps.lastMeasuredColumnIndex, columnIndex - 1);
      }

      if (typeof rowIndex === 'number') {
        instanceProps.lastMeasuredRowIndex = Math.min(instanceProps.lastMeasuredRowIndex, rowIndex - 1);
      } // We could potentially optimize further by only evicting styles after this index,
      // But since styles are only cached while scrolling is in progress-
      // It seems an unnecessary optimization.
      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.


      instance._getItemStyleCache(-1);

      if (shouldForceUpdate) {
        instance.forceUpdate();
      }
    };

    return instanceProps;
  },
  shouldResetStyleCacheOnItemSizeChange: false,
  validateProps: function validateProps(_ref7) {
    var columnWidth = _ref7.columnWidth,
        rowHeight = _ref7.rowHeight;

    if (false) {}
  }
});
var IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;

var defaultItemKey$1 = function defaultItemKey(index, data) {
  return index;
}; // In DEV mode, this Set helps us only log a warning once per component instance.
// This avoids spamming the console every time a render happens.


var devWarningsDirection = null;
var devWarningsTagName$1 = null;

if (false) {}

function createListComponent(_ref) {
  var _class;

  var getItemOffset = _ref.getItemOffset,
      getEstimatedTotalSize = _ref.getEstimatedTotalSize,
      getItemSize = _ref.getItemSize,
      getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,
      getStartIndexForOffset = _ref.getStartIndexForOffset,
      getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,
      initInstanceProps = _ref.initInstanceProps,
      shouldResetStyleCacheOnItemSizeChange = _ref.shouldResetStyleCacheOnItemSizeChange,
      validateProps = _ref.validateProps;
  return _class = /*#__PURE__*/function (_PureComponent) {
    _inheritsLoose(List, _PureComponent); // Always use explicit constructor for React components.
    // It produces less code after transpilation. (#26)
    // eslint-disable-next-line no-useless-constructor


    function List(props) {
      var _this;

      _this = _PureComponent.call(this, props) || this;
      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));
      _this._outerRef = void 0;
      _this._resetIsScrollingTimeoutId = null;
      _this.state = {
        instance: _assertThisInitialized(_this),
        isScrolling: false,
        scrollDirection: 'forward',
        scrollOffset: typeof _this.props.initialScrollOffset === 'number' ? _this.props.initialScrollOffset : 0,
        scrollUpdateWasRequested: false
      };
      _this._callOnItemsRendered = void 0;
      _this._callOnItemsRendered = memoize_one_esm(function (overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) {
        return _this.props.onItemsRendered({
          overscanStartIndex: overscanStartIndex,
          overscanStopIndex: overscanStopIndex,
          visibleStartIndex: visibleStartIndex,
          visibleStopIndex: visibleStopIndex
        });
      });
      _this._callOnScroll = void 0;
      _this._callOnScroll = memoize_one_esm(function (scrollDirection, scrollOffset, scrollUpdateWasRequested) {
        return _this.props.onScroll({
          scrollDirection: scrollDirection,
          scrollOffset: scrollOffset,
          scrollUpdateWasRequested: scrollUpdateWasRequested
        });
      });
      _this._getItemStyle = void 0;

      _this._getItemStyle = function (index) {
        var _this$props = _this.props,
            direction = _this$props.direction,
            itemSize = _this$props.itemSize,
            layout = _this$props.layout;

        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && itemSize, shouldResetStyleCacheOnItemSizeChange && layout, shouldResetStyleCacheOnItemSizeChange && direction);

        var style;

        if (itemStyleCache.hasOwnProperty(index)) {
          style = itemStyleCache[index];
        } else {
          var _offset = getItemOffset(_this.props, index, _this._instanceProps);

          var size = getItemSize(_this.props, index, _this._instanceProps); // TODO Deprecate direction "horizontal"

          var isHorizontal = direction === 'horizontal' || layout === 'horizontal';
          var isRtl = direction === 'rtl';
          var offsetHorizontal = isHorizontal ? _offset : 0;
          itemStyleCache[index] = style = {
            position: 'absolute',
            left: isRtl ? undefined : offsetHorizontal,
            right: isRtl ? offsetHorizontal : undefined,
            top: !isHorizontal ? _offset : 0,
            height: !isHorizontal ? size : '100%',
            width: isHorizontal ? size : '100%'
          };
        }

        return style;
      };

      _this._getItemStyleCache = void 0;
      _this._getItemStyleCache = memoize_one_esm(function (_, __, ___) {
        return {};
      });

      _this._onScrollHorizontal = function (event) {
        var _event$currentTarget = event.currentTarget,
            clientWidth = _event$currentTarget.clientWidth,
            scrollLeft = _event$currentTarget.scrollLeft,
            scrollWidth = _event$currentTarget.scrollWidth;

        _this.setState(function (prevState) {
          if (prevState.scrollOffset === scrollLeft) {
            // Scroll position may have been updated by cDM/cDU,
            // In which case we don't need to trigger another render,
            // And we don't want to update state.isScrolling.
            return null;
          }

          var direction = _this.props.direction;
          var scrollOffset = scrollLeft;

          if (direction === 'rtl') {
            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.
            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).
            // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.
            // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.
            switch (getRTLOffsetType()) {
              case 'negative':
                scrollOffset = -scrollLeft;
                break;

              case 'positive-descending':
                scrollOffset = scrollWidth - clientWidth - scrollLeft;
                break;
            }
          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.


          scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));
          return {
            isScrolling: true,
            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',
            scrollOffset: scrollOffset,
            scrollUpdateWasRequested: false
          };
        }, _this._resetIsScrollingDebounced);
      };

      _this._onScrollVertical = function (event) {
        var _event$currentTarget2 = event.currentTarget,
            clientHeight = _event$currentTarget2.clientHeight,
            scrollHeight = _event$currentTarget2.scrollHeight,
            scrollTop = _event$currentTarget2.scrollTop;

        _this.setState(function (prevState) {
          if (prevState.scrollOffset === scrollTop) {
            // Scroll position may have been updated by cDM/cDU,
            // In which case we don't need to trigger another render,
            // And we don't want to update state.isScrolling.
            return null;
          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.


          var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));
          return {
            isScrolling: true,
            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',
            scrollOffset: scrollOffset,
            scrollUpdateWasRequested: false
          };
        }, _this._resetIsScrollingDebounced);
      };

      _this._outerRefSetter = function (ref) {
        var outerRef = _this.props.outerRef;
        _this._outerRef = ref;

        if (typeof outerRef === 'function') {
          outerRef(ref);
        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {
          outerRef.current = ref;
        }
      };

      _this._resetIsScrollingDebounced = function () {
        if (_this._resetIsScrollingTimeoutId !== null) {
          cancelTimeout(_this._resetIsScrollingTimeoutId);
        }

        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL$1);
      };

      _this._resetIsScrolling = function () {
        _this._resetIsScrollingTimeoutId = null;

        _this.setState({
          isScrolling: false
        }, function () {
          // Clear style cache after state update has been committed.
          // This way we don't break pure sCU for items that don't use isScrolling param.
          _this._getItemStyleCache(-1, null);
        });
      };

      return _this;
    }

    List.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
      validateSharedProps$1(nextProps, prevState);
      validateProps(nextProps);
      return null;
    };

    var _proto = List.prototype;

    _proto.scrollTo = function scrollTo(scrollOffset) {
      scrollOffset = Math.max(0, scrollOffset);
      this.setState(function (prevState) {
        if (prevState.scrollOffset === scrollOffset) {
          return null;
        }

        return {
          scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',
          scrollOffset: scrollOffset,
          scrollUpdateWasRequested: true
        };
      }, this._resetIsScrollingDebounced);
    };

    _proto.scrollToItem = function scrollToItem(index, align) {
      if (align === void 0) {
        align = 'auto';
      }

      var _this$props2 = this.props,
          itemCount = _this$props2.itemCount,
          layout = _this$props2.layout;
      var scrollOffset = this.state.scrollOffset;
      index = Math.max(0, Math.min(index, itemCount - 1)); // The scrollbar size should be considered when scrolling an item into view, to ensure it's fully visible.
      // But we only need to account for its size when it's actually visible.
      // This is an edge case for lists; normally they only scroll in the dominant direction.

      var scrollbarSize = 0;

      if (this._outerRef) {
        var outerRef = this._outerRef;

        if (layout === 'vertical') {
          scrollbarSize = outerRef.scrollWidth > outerRef.clientWidth ? getScrollbarSize() : 0;
        } else {
          scrollbarSize = outerRef.scrollHeight > outerRef.clientHeight ? getScrollbarSize() : 0;
        }
      }

      this.scrollTo(getOffsetForIndexAndAlignment(this.props, index, align, scrollOffset, this._instanceProps, scrollbarSize));
    };

    _proto.componentDidMount = function componentDidMount() {
      var _this$props3 = this.props,
          direction = _this$props3.direction,
          initialScrollOffset = _this$props3.initialScrollOffset,
          layout = _this$props3.layout;

      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {
        var outerRef = this._outerRef; // TODO Deprecate direction "horizontal"

        if (direction === 'horizontal' || layout === 'horizontal') {
          outerRef.scrollLeft = initialScrollOffset;
        } else {
          outerRef.scrollTop = initialScrollOffset;
        }
      }

      this._callPropsCallbacks();
    };

    _proto.componentDidUpdate = function componentDidUpdate() {
      var _this$props4 = this.props,
          direction = _this$props4.direction,
          layout = _this$props4.layout;
      var _this$state = this.state,
          scrollOffset = _this$state.scrollOffset,
          scrollUpdateWasRequested = _this$state.scrollUpdateWasRequested;

      if (scrollUpdateWasRequested && this._outerRef != null) {
        var outerRef = this._outerRef; // TODO Deprecate direction "horizontal"

        if (direction === 'horizontal' || layout === 'horizontal') {
          if (direction === 'rtl') {
            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.
            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).
            // So we need to determine which browser behavior we're dealing with, and mimic it.
            switch (getRTLOffsetType()) {
              case 'negative':
                outerRef.scrollLeft = -scrollOffset;
                break;

              case 'positive-ascending':
                outerRef.scrollLeft = scrollOffset;
                break;

              default:
                var clientWidth = outerRef.clientWidth,
                    scrollWidth = outerRef.scrollWidth;
                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;
                break;
            }
          } else {
            outerRef.scrollLeft = scrollOffset;
          }
        } else {
          outerRef.scrollTop = scrollOffset;
        }
      }

      this._callPropsCallbacks();
    };

    _proto.componentWillUnmount = function componentWillUnmount() {
      if (this._resetIsScrollingTimeoutId !== null) {
        cancelTimeout(this._resetIsScrollingTimeoutId);
      }
    };

    _proto.render = function render() {
      var _this$props5 = this.props,
          children = _this$props5.children,
          className = _this$props5.className,
          direction = _this$props5.direction,
          height = _this$props5.height,
          innerRef = _this$props5.innerRef,
          innerElementType = _this$props5.innerElementType,
          innerTagName = _this$props5.innerTagName,
          itemCount = _this$props5.itemCount,
          itemData = _this$props5.itemData,
          _this$props5$itemKey = _this$props5.itemKey,
          itemKey = _this$props5$itemKey === void 0 ? defaultItemKey$1 : _this$props5$itemKey,
          layout = _this$props5.layout,
          outerElementType = _this$props5.outerElementType,
          outerTagName = _this$props5.outerTagName,
          style = _this$props5.style,
          useIsScrolling = _this$props5.useIsScrolling,
          width = _this$props5.width;
      var isScrolling = this.state.isScrolling; // TODO Deprecate direction "horizontal"

      var isHorizontal = direction === 'horizontal' || layout === 'horizontal';
      var onScroll = isHorizontal ? this._onScrollHorizontal : this._onScrollVertical;

      var _this$_getRangeToRend = this._getRangeToRender(),
          startIndex = _this$_getRangeToRend[0],
          stopIndex = _this$_getRangeToRend[1];

      var items = [];

      if (itemCount > 0) {
        for (var _index = startIndex; _index <= stopIndex; _index++) {
          items.push( /*#__PURE__*/(0,external_react_namespaceObject.createElement)(children, {
            data: itemData,
            key: itemKey(_index, itemData),
            index: _index,
            isScrolling: useIsScrolling ? isScrolling : undefined,
            style: this._getItemStyle(_index)
          }));
        }
      } // Read this value AFTER items have been created,
      // So their actual sizes (if variable) are taken into consideration.


      var estimatedTotalSize = getEstimatedTotalSize(this.props, this._instanceProps);
      return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(outerElementType || outerTagName || 'div', {
        className: className,
        onScroll: onScroll,
        ref: this._outerRefSetter,
        style: _extends({
          position: 'relative',
          height: height,
          width: width,
          overflow: 'auto',
          WebkitOverflowScrolling: 'touch',
          willChange: 'transform',
          direction: direction
        }, style)
      }, /*#__PURE__*/(0,external_react_namespaceObject.createElement)(innerElementType || innerTagName || 'div', {
        children: items,
        ref: innerRef,
        style: {
          height: isHorizontal ? '100%' : estimatedTotalSize,
          pointerEvents: isScrolling ? 'none' : undefined,
          width: isHorizontal ? estimatedTotalSize : '100%'
        }
      }));
    };

    _proto._callPropsCallbacks = function _callPropsCallbacks() {
      if (typeof this.props.onItemsRendered === 'function') {
        var itemCount = this.props.itemCount;

        if (itemCount > 0) {
          var _this$_getRangeToRend2 = this._getRangeToRender(),
              _overscanStartIndex = _this$_getRangeToRend2[0],
              _overscanStopIndex = _this$_getRangeToRend2[1],
              _visibleStartIndex = _this$_getRangeToRend2[2],
              _visibleStopIndex = _this$_getRangeToRend2[3];

          this._callOnItemsRendered(_overscanStartIndex, _overscanStopIndex, _visibleStartIndex, _visibleStopIndex);
        }
      }

      if (typeof this.props.onScroll === 'function') {
        var _this$state2 = this.state,
            _scrollDirection = _this$state2.scrollDirection,
            _scrollOffset = _this$state2.scrollOffset,
            _scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;

        this._callOnScroll(_scrollDirection, _scrollOffset, _scrollUpdateWasRequested);
      }
    } // Lazily create and cache item styles while scrolling,
    // So that pure component sCU will prevent re-renders.
    // We maintain this cache, and pass a style prop rather than index,
    // So that List can clear cached styles and force item re-render if necessary.
    ;

    _proto._getRangeToRender = function _getRangeToRender() {
      var _this$props6 = this.props,
          itemCount = _this$props6.itemCount,
          overscanCount = _this$props6.overscanCount;
      var _this$state3 = this.state,
          isScrolling = _this$state3.isScrolling,
          scrollDirection = _this$state3.scrollDirection,
          scrollOffset = _this$state3.scrollOffset;

      if (itemCount === 0) {
        return [0, 0, 0, 0];
      }

      var startIndex = getStartIndexForOffset(this.props, scrollOffset, this._instanceProps);
      var stopIndex = getStopIndexForStartIndex(this.props, startIndex, scrollOffset, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.
      // If there isn't at least one extra item, tab loops back around.

      var overscanBackward = !isScrolling || scrollDirection === 'backward' ? Math.max(1, overscanCount) : 1;
      var overscanForward = !isScrolling || scrollDirection === 'forward' ? Math.max(1, overscanCount) : 1;
      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];
    };

    return List;
  }(external_react_namespaceObject.PureComponent), _class.defaultProps = {
    direction: 'ltr',
    itemData: undefined,
    layout: 'vertical',
    overscanCount: 2,
    useIsScrolling: false
  }, _class;
} // NOTE: I considered further wrapping individual items with a pure ListItem component.
// This would avoid ever calling the render function for the same index more than once,
// But it would also add the overhead of a lot of components/fibers.
// I assume people already do this (render function returning a class component),
// So my doing it would just unnecessarily double the wrappers.


var validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {
  var children = _ref2.children,
      direction = _ref2.direction,
      height = _ref2.height,
      layout = _ref2.layout,
      innerTagName = _ref2.innerTagName,
      outerTagName = _ref2.outerTagName,
      width = _ref2.width;
  var instance = _ref3.instance;

  if (false) { var isHorizontal; }
};

var DEFAULT_ESTIMATED_ITEM_SIZE$1 = 50;

var getItemMetadata$1 = function getItemMetadata(props, index, instanceProps) {
  var _ref = props,
      itemSize = _ref.itemSize;
  var itemMetadataMap = instanceProps.itemMetadataMap,
      lastMeasuredIndex = instanceProps.lastMeasuredIndex;

  if (index > lastMeasuredIndex) {
    var offset = 0;

    if (lastMeasuredIndex >= 0) {
      var itemMetadata = itemMetadataMap[lastMeasuredIndex];
      offset = itemMetadata.offset + itemMetadata.size;
    }

    for (var i = lastMeasuredIndex + 1; i <= index; i++) {
      var size = itemSize(i);
      itemMetadataMap[i] = {
        offset: offset,
        size: size
      };
      offset += size;
    }

    instanceProps.lastMeasuredIndex = index;
  }

  return itemMetadataMap[index];
};

var findNearestItem$1 = function findNearestItem(props, instanceProps, offset) {
  var itemMetadataMap = instanceProps.itemMetadataMap,
      lastMeasuredIndex = instanceProps.lastMeasuredIndex;
  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;

  if (lastMeasuredItemOffset >= offset) {
    // If we've already measured items within this range just use a binary search as it's faster.
    return findNearestItemBinarySearch$1(props, instanceProps, lastMeasuredIndex, 0, offset);
  } else {
    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.
    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.
    // The overall complexity for this approach is O(log n).
    return findNearestItemExponentialSearch$1(props, instanceProps, Math.max(0, lastMeasuredIndex), offset);
  }
};

var findNearestItemBinarySearch$1 = function findNearestItemBinarySearch(props, instanceProps, high, low, offset) {
  while (low <= high) {
    var middle = low + Math.floor((high - low) / 2);
    var currentOffset = getItemMetadata$1(props, middle, instanceProps).offset;

    if (currentOffset === offset) {
      return middle;
    } else if (currentOffset < offset) {
      low = middle + 1;
    } else if (currentOffset > offset) {
      high = middle - 1;
    }
  }

  if (low > 0) {
    return low - 1;
  } else {
    return 0;
  }
};

var findNearestItemExponentialSearch$1 = function findNearestItemExponentialSearch(props, instanceProps, index, offset) {
  var itemCount = props.itemCount;
  var interval = 1;

  while (index < itemCount && getItemMetadata$1(props, index, instanceProps).offset < offset) {
    index += interval;
    interval *= 2;
  }

  return findNearestItemBinarySearch$1(props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);
};

var getEstimatedTotalSize = function getEstimatedTotalSize(_ref2, _ref3) {
  var itemCount = _ref2.itemCount;
  var itemMetadataMap = _ref3.itemMetadataMap,
      estimatedItemSize = _ref3.estimatedItemSize,
      lastMeasuredIndex = _ref3.lastMeasuredIndex;
  var totalSizeOfMeasuredItems = 0; // Edge case check for when the number of items decreases while a scroll is in progress.
  // https://github.com/bvaughn/react-window/pull/138

  if (lastMeasuredIndex >= itemCount) {
    lastMeasuredIndex = itemCount - 1;
  }

  if (lastMeasuredIndex >= 0) {
    var itemMetadata = itemMetadataMap[lastMeasuredIndex];
    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;
  }

  var numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;
  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;
  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;
};

var VariableSizeList = /*#__PURE__*/createListComponent({
  getItemOffset: function getItemOffset(props, index, instanceProps) {
    return getItemMetadata$1(props, index, instanceProps).offset;
  },
  getItemSize: function getItemSize(props, index, instanceProps) {
    return instanceProps.itemMetadataMap[index].size;
  },
  getEstimatedTotalSize: getEstimatedTotalSize,
  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {
    var direction = props.direction,
        height = props.height,
        layout = props.layout,
        width = props.width; // TODO Deprecate direction "horizontal"

    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';
    var size = isHorizontal ? width : height;
    var itemMetadata = getItemMetadata$1(props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,
    // To ensure it reflects actual measurements instead of just estimates.

    var estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);
    var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));
    var minOffset = Math.max(0, itemMetadata.offset - size + itemMetadata.size + scrollbarSize);

    if (align === 'smart') {
      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {
        align = 'auto';
      } else {
        align = 'center';
      }
    }

    switch (align) {
      case 'start':
        return maxOffset;

      case 'end':
        return minOffset;

      case 'center':
        return Math.round(minOffset + (maxOffset - minOffset) / 2);

      case 'auto':
      default:
        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {
          return scrollOffset;
        } else if (scrollOffset < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }

    }
  },
  getStartIndexForOffset: function getStartIndexForOffset(props, offset, instanceProps) {
    return findNearestItem$1(props, instanceProps, offset);
  },
  getStopIndexForStartIndex: function getStopIndexForStartIndex(props, startIndex, scrollOffset, instanceProps) {
    var direction = props.direction,
        height = props.height,
        itemCount = props.itemCount,
        layout = props.layout,
        width = props.width; // TODO Deprecate direction "horizontal"

    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';
    var size = isHorizontal ? width : height;
    var itemMetadata = getItemMetadata$1(props, startIndex, instanceProps);
    var maxOffset = scrollOffset + size;
    var offset = itemMetadata.offset + itemMetadata.size;
    var stopIndex = startIndex;

    while (stopIndex < itemCount - 1 && offset < maxOffset) {
      stopIndex++;
      offset += getItemMetadata$1(props, stopIndex, instanceProps).size;
    }

    return stopIndex;
  },
  initInstanceProps: function initInstanceProps(props, instance) {
    var _ref4 = props,
        estimatedItemSize = _ref4.estimatedItemSize;
    var instanceProps = {
      itemMetadataMap: {},
      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE$1,
      lastMeasuredIndex: -1
    };

    instance.resetAfterIndex = function (index, shouldForceUpdate) {
      if (shouldForceUpdate === void 0) {
        shouldForceUpdate = true;
      }

      instanceProps.lastMeasuredIndex = Math.min(instanceProps.lastMeasuredIndex, index - 1); // We could potentially optimize further by only evicting styles after this index,
      // But since styles are only cached while scrolling is in progress-
      // It seems an unnecessary optimization.
      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.

      instance._getItemStyleCache(-1);

      if (shouldForceUpdate) {
        instance.forceUpdate();
      }
    };

    return instanceProps;
  },
  shouldResetStyleCacheOnItemSizeChange: false,
  validateProps: function validateProps(_ref5) {
    var itemSize = _ref5.itemSize;

    if (false) {}
  }
});
var FixedSizeGrid = /*#__PURE__*/createGridComponent({
  getColumnOffset: function getColumnOffset(_ref, index) {
    var columnWidth = _ref.columnWidth;
    return index * columnWidth;
  },
  getColumnWidth: function getColumnWidth(_ref2, index) {
    var columnWidth = _ref2.columnWidth;
    return columnWidth;
  },
  getRowOffset: function getRowOffset(_ref3, index) {
    var rowHeight = _ref3.rowHeight;
    return index * rowHeight;
  },
  getRowHeight: function getRowHeight(_ref4, index) {
    var rowHeight = _ref4.rowHeight;
    return rowHeight;
  },
  getEstimatedTotalHeight: function getEstimatedTotalHeight(_ref5) {
    var rowCount = _ref5.rowCount,
        rowHeight = _ref5.rowHeight;
    return rowHeight * rowCount;
  },
  getEstimatedTotalWidth: function getEstimatedTotalWidth(_ref6) {
    var columnCount = _ref6.columnCount,
        columnWidth = _ref6.columnWidth;
    return columnWidth * columnCount;
  },
  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(_ref7, columnIndex, align, scrollLeft, instanceProps, scrollbarSize) {
    var columnCount = _ref7.columnCount,
        columnWidth = _ref7.columnWidth,
        width = _ref7.width;
    var lastColumnOffset = Math.max(0, columnCount * columnWidth - width);
    var maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);
    var minOffset = Math.max(0, columnIndex * columnWidth - width + scrollbarSize + columnWidth);

    if (align === 'smart') {
      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {
        align = 'auto';
      } else {
        align = 'center';
      }
    }

    switch (align) {
      case 'start':
        return maxOffset;

      case 'end':
        return minOffset;

      case 'center':
        // "Centered" offset is usually the average of the min and max.
        // But near the edges of the list, this doesn't hold true.
        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);

        if (middleOffset < Math.ceil(width / 2)) {
          return 0; // near the beginning
        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {
          return lastColumnOffset; // near the end
        } else {
          return middleOffset;
        }

      case 'auto':
      default:
        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {
          return scrollLeft;
        } else if (minOffset > maxOffset) {
          // Because we only take into account the scrollbar size when calculating minOffset
          // this value can be larger than maxOffset when at the end of the list
          return minOffset;
        } else if (scrollLeft < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }

    }
  },
  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(_ref8, rowIndex, align, scrollTop, instanceProps, scrollbarSize) {
    var rowHeight = _ref8.rowHeight,
        height = _ref8.height,
        rowCount = _ref8.rowCount;
    var lastRowOffset = Math.max(0, rowCount * rowHeight - height);
    var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);
    var minOffset = Math.max(0, rowIndex * rowHeight - height + scrollbarSize + rowHeight);

    if (align === 'smart') {
      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {
        align = 'auto';
      } else {
        align = 'center';
      }
    }

    switch (align) {
      case 'start':
        return maxOffset;

      case 'end':
        return minOffset;

      case 'center':
        // "Centered" offset is usually the average of the min and max.
        // But near the edges of the list, this doesn't hold true.
        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);

        if (middleOffset < Math.ceil(height / 2)) {
          return 0; // near the beginning
        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {
          return lastRowOffset; // near the end
        } else {
          return middleOffset;
        }

      case 'auto':
      default:
        if (scrollTop >= minOffset && scrollTop <= maxOffset) {
          return scrollTop;
        } else if (minOffset > maxOffset) {
          // Because we only take into account the scrollbar size when calculating minOffset
          // this value can be larger than maxOffset when at the end of the list
          return minOffset;
        } else if (scrollTop < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }

    }
  },
  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(_ref9, scrollLeft) {
    var columnWidth = _ref9.columnWidth,
        columnCount = _ref9.columnCount;
    return Math.max(0, Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth)));
  },
  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(_ref10, startIndex, scrollLeft) {
    var columnWidth = _ref10.columnWidth,
        columnCount = _ref10.columnCount,
        width = _ref10.width;
    var left = startIndex * columnWidth;
    var numVisibleColumns = Math.ceil((width + scrollLeft - left) / columnWidth);
    return Math.max(0, Math.min(columnCount - 1, startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive
    ));
  },
  getRowStartIndexForOffset: function getRowStartIndexForOffset(_ref11, scrollTop) {
    var rowHeight = _ref11.rowHeight,
        rowCount = _ref11.rowCount;
    return Math.max(0, Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight)));
  },
  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(_ref12, startIndex, scrollTop) {
    var rowHeight = _ref12.rowHeight,
        rowCount = _ref12.rowCount,
        height = _ref12.height;
    var top = startIndex * rowHeight;
    var numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);
    return Math.max(0, Math.min(rowCount - 1, startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive
    ));
  },
  initInstanceProps: function initInstanceProps(props) {// Noop
  },
  shouldResetStyleCacheOnItemSizeChange: true,
  validateProps: function validateProps(_ref13) {
    var columnWidth = _ref13.columnWidth,
        rowHeight = _ref13.rowHeight;

    if (false) {}
  }
});
var FixedSizeList = /*#__PURE__*/createListComponent({
  getItemOffset: function getItemOffset(_ref, index) {
    var itemSize = _ref.itemSize;
    return index * itemSize;
  },
  getItemSize: function getItemSize(_ref2, index) {
    var itemSize = _ref2.itemSize;
    return itemSize;
  },
  getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {
    var itemCount = _ref3.itemCount,
        itemSize = _ref3.itemSize;
    return itemSize * itemCount;
  },
  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(_ref4, index, align, scrollOffset, instanceProps, scrollbarSize) {
    var direction = _ref4.direction,
        height = _ref4.height,
        itemCount = _ref4.itemCount,
        itemSize = _ref4.itemSize,
        layout = _ref4.layout,
        width = _ref4.width; // TODO Deprecate direction "horizontal"

    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';
    var size = isHorizontal ? width : height;
    var lastItemOffset = Math.max(0, itemCount * itemSize - size);
    var maxOffset = Math.min(lastItemOffset, index * itemSize);
    var minOffset = Math.max(0, index * itemSize - size + itemSize + scrollbarSize);

    if (align === 'smart') {
      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {
        align = 'auto';
      } else {
        align = 'center';
      }
    }

    switch (align) {
      case 'start':
        return maxOffset;

      case 'end':
        return minOffset;

      case 'center':
        {
          // "Centered" offset is usually the average of the min and max.
          // But near the edges of the list, this doesn't hold true.
          var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);

          if (middleOffset < Math.ceil(size / 2)) {
            return 0; // near the beginning
          } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {
            return lastItemOffset; // near the end
          } else {
            return middleOffset;
          }
        }

      case 'auto':
      default:
        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {
          return scrollOffset;
        } else if (scrollOffset < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }

    }
  },
  getStartIndexForOffset: function getStartIndexForOffset(_ref5, offset) {
    var itemCount = _ref5.itemCount,
        itemSize = _ref5.itemSize;
    return Math.max(0, Math.min(itemCount - 1, Math.floor(offset / itemSize)));
  },
  getStopIndexForStartIndex: function getStopIndexForStartIndex(_ref6, startIndex, scrollOffset) {
    var direction = _ref6.direction,
        height = _ref6.height,
        itemCount = _ref6.itemCount,
        itemSize = _ref6.itemSize,
        layout = _ref6.layout,
        width = _ref6.width; // TODO Deprecate direction "horizontal"

    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';
    var offset = startIndex * itemSize;
    var size = isHorizontal ? width : height;
    var numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);
    return Math.max(0, Math.min(itemCount - 1, startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive
    ));
  },
  initInstanceProps: function initInstanceProps(props) {// Noop
  },
  shouldResetStyleCacheOnItemSizeChange: true,
  validateProps: function validateProps(_ref7) {
    var itemSize = _ref7.itemSize;

    if (false) {}
  }
}); // Pulled from react-compat
// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349

function index_esm_shallowDiffers(prev, next) {
  for (var attribute in prev) {
    if (!(attribute in next)) {
      return true;
    }
  }

  for (var _attribute in next) {
    if (prev[_attribute] !== next[_attribute]) {
      return true;
    }
  }

  return false;
}

var _excluded = ["style"],
    _excluded2 = ["style"]; // It knows to compare individual style props and ignore the wrapper object.
// See https://reactjs.org/docs/react-api.html#reactmemo

function areEqual(prevProps, nextProps) {
  var prevStyle = prevProps.style,
      prevRest = _objectWithoutPropertiesLoose(prevProps, _excluded);

  var nextStyle = nextProps.style,
      nextRest = _objectWithoutPropertiesLoose(nextProps, _excluded2);

  return !index_esm_shallowDiffers(prevStyle, nextStyle) && !index_esm_shallowDiffers(prevRest, nextRest);
} // It knows to compare individual style props and ignore the wrapper object.
// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate


function shouldComponentUpdate(nextProps, nextState) {
  return !areEqual(this.props, nextProps) || index_esm_shallowDiffers(this.state, nextState);
}


// EXTERNAL MODULE: ../../node_modules/escape-string-regexp/index.js
var escape_string_regexp = __webpack_require__(2526);
var escape_string_regexp_default = /*#__PURE__*/__webpack_require__.n(escape_string_regexp);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/utils.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




// $FlowFixMe[method-unbinding]
const views_utils_hasOwnProperty = Object.prototype.hasOwnProperty;
function alphaSortEntries(entryA, entryB) {
  const a = entryA[0];
  const b = entryB[0];

  if (String(+a) === a) {
    if (String(+b) !== b) {
      return -1;
    }

    return +a < +b ? -1 : 1;
  }

  return a < b ? -1 : 1;
}
function createRegExp(string) {
  // Allow /regex/ syntax with optional last /
  if (string[0] === '/') {
    // Cut off first slash
    string = string.slice(1); // Cut off last slash, but only if it's there

    if (string[string.length - 1] === '/') {
      string = string.slice(0, string.length - 1);
    }

    try {
      return new RegExp(string, 'i');
    } catch (err) {
      // Bad regex. Make it not match anything.
      // TODO: maybe warn in console?
      return new RegExp('.^');
    }
  }

  function isLetter(char) {
    return char.toLowerCase() !== char.toUpperCase();
  }

  function matchAnyCase(char) {
    if (!isLetter(char)) {
      // Don't mess with special characters like [.
      return char;
    }

    return '[' + char.toLowerCase() + char.toUpperCase() + ']';
  } // 'item' should match 'Item' and 'ListItem', but not 'InviteMom'.
  // To do this, we'll slice off 'tem' and check first letter separately.


  const escaped = escape_string_regexp_default()(string);
  const firstChar = escaped[0];
  let restRegex = ''; // For 'item' input, restRegex becomes '[tT][eE][mM]'
  // We can't simply make it case-insensitive because first letter case matters.

  for (let i = 1; i < escaped.length; i++) {
    restRegex += matchAnyCase(escaped[i]);
  }

  if (!isLetter(firstChar)) {
    // We can't put a non-character like [ in a group
    // so we fall back to the simple case.
    return new RegExp(firstChar + restRegex);
  } // Construct a smarter regex.


  return new RegExp( // For example:
  // (^[iI]|I)[tT][eE][mM]
  // Matches:
  // 'Item'
  // 'ListItem'
  // but not 'InviteMom'
  '(^' + matchAnyCase(firstChar) + '|' + firstChar.toUpperCase() + ')' + restRegex);
}
function getMetaValueLabel(data) {
  if (views_utils_hasOwnProperty.call(data, meta.preview_long)) {
    return data[meta.preview_long];
  } else {
    return utils_formatDataForPreview(data, true);
  }
}

function sanitize(data) {
  for (const key in data) {
    const value = data[key];

    if (value && value[meta.type]) {
      data[key] = getMetaValueLabel(value);
    } else if (value != null) {
      if (src_isArray(value)) {
        sanitize(value);
      } else if (typeof value === 'object') {
        sanitize(value);
      }
    }
  }
}

function serializeDataForCopy(props) {
  const cloned = Object.assign({}, props);
  sanitize(cloned);

  try {
    return JSON.stringify(cloned, null, 2);
  } catch (error) {
    return '';
  }
}
function serializeHooksForCopy(hooks) {
  // $FlowFixMe[not-an-object] "HooksTree is not an object"
  const cloned = Object.assign([], hooks);
  const queue = [...cloned];

  while (queue.length > 0) {
    const current = queue.pop(); // These aren't meaningful
    // $FlowFixMe[incompatible-use]

    delete current.id; // $FlowFixMe[incompatible-use]

    delete current.isStateEditable; // $FlowFixMe[incompatible-use]

    if (current.subHooks.length > 0) {
      // $FlowFixMe[incompatible-use]
      queue.push(...current.subHooks);
    }
  }

  sanitize(cloned);

  try {
    return JSON.stringify(cloned, null, 2);
  } catch (error) {
    return '';
  }
} // Keeping this in memory seems to be enough to enable the browser to download larger profiles.
// Without this, we would see a "Download failed: network error" failure.

let downloadUrl = null;
function downloadFile(element, filename, text) {
  const blob = new Blob([text], {
    type: 'text/plain;charset=utf-8'
  });

  if (downloadUrl !== null) {
    URL.revokeObjectURL(downloadUrl);
  }

  downloadUrl = URL.createObjectURL(blob);
  element.setAttribute('href', downloadUrl);
  element.setAttribute('download', filename);
  element.click();
}
function truncateText(text, maxLength) {
  const {
    length
  } = text;

  if (length > maxLength) {
    return text.slice(0, Math.floor(maxLength / 2)) + '…' + text.slice(length - Math.ceil(maxLength / 2) - 1);
  } else {
    return text;
  }
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/TreeContext.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
// This context combines tree/selection state, search, and the owners stack.
// These values are managed together because changes in one often impact the others.
// Combining them enables us to avoid cascading renders.
//
// Changes to search state may impact tree state.
// For example, updating the selected search result also updates the tree's selected value.
// Search does not fundamentally change the tree though.
// It is also possible to update the selected tree value independently.
//
// Changes to owners state mask search and tree values.
// When owners stack is not empty, search is temporarily disabled,
// and tree values (e.g. num elements, selected element) are masked.
// Both tree and search values are restored when the owners stack is cleared.
//
// For this reason, changes to the tree context are processed in sequence: tree -> search -> owners
// This enables each section to potentially override (or mask) previous values.





const TreeStateContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
TreeStateContext.displayName = 'TreeStateContext';
const TreeDispatcherContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
TreeDispatcherContext.displayName = 'TreeDispatcherContext';

function reduceTreeState(store, state, action) {
  let {
    numElements,
    ownerSubtreeLeafElementID,
    inspectedElementID,
    inspectedElementIndex
  } = state;
  const ownerID = state.ownerID;
  let lookupIDForIndex = true; // Base tree should ignore selected element changes when the owner's tree is active.

  if (ownerID === null) {
    switch (action.type) {
      case 'HANDLE_STORE_MUTATION':
        numElements = store.numElements; // If the currently-selected Element has been removed from the tree, update selection state.

        const removedIDs = action.payload[1]; // Find the closest parent that wasn't removed during this batch.
        // We deduce the parent-child mapping from removedIDs (id -> parentID)
        // because by now it's too late to read them from the store.

        while (inspectedElementID !== null && removedIDs.has(inspectedElementID)) {
          // $FlowExpectedError[incompatible-type]
          inspectedElementID = removedIDs.get(inspectedElementID);
        }

        if (inspectedElementID === 0) {
          // The whole root was removed.
          inspectedElementIndex = null;
        }

        break;

      case 'SELECT_CHILD_ELEMENT_IN_TREE':
        ownerSubtreeLeafElementID = null;

        if (inspectedElementIndex !== null) {
          const inspectedElement = store.getElementAtIndex(inspectedElementIndex);

          if (inspectedElement !== null && inspectedElement.children.length > 0 && !inspectedElement.isCollapsed) {
            const firstChildID = inspectedElement.children[0];
            const firstChildIndex = store.getIndexOfElementID(firstChildID);

            if (firstChildIndex !== null) {
              inspectedElementIndex = firstChildIndex;
            }
          }
        }

        break;

      case 'SELECT_ELEMENT_AT_INDEX':
        ownerSubtreeLeafElementID = null;
        inspectedElementIndex = action.payload;
        break;

      case 'SELECT_ELEMENT_BY_ID':
        ownerSubtreeLeafElementID = null; // Skip lookup in this case; it would be redundant.
        // It might also cause problems if the specified element was inside of a (not yet expanded) subtree.

        lookupIDForIndex = false;
        inspectedElementID = action.payload;
        inspectedElementIndex = inspectedElementID === null ? null : store.getIndexOfElementID(inspectedElementID);
        break;

      case 'SELECT_NEXT_ELEMENT_IN_TREE':
        ownerSubtreeLeafElementID = null;

        if (inspectedElementIndex === null || inspectedElementIndex + 1 >= numElements) {
          inspectedElementIndex = 0;
        } else {
          inspectedElementIndex++;
        }

        break;

      case 'SELECT_NEXT_SIBLING_IN_TREE':
        ownerSubtreeLeafElementID = null;

        if (inspectedElementIndex !== null) {
          const selectedElement = store.getElementAtIndex(inspectedElementIndex);

          if (selectedElement !== null && selectedElement.parentID !== 0) {
            const parent = store.getElementByID(selectedElement.parentID);

            if (parent !== null) {
              const {
                children
              } = parent;
              const selectedChildIndex = children.indexOf(selectedElement.id);
              const nextChildID = selectedChildIndex < children.length - 1 ? children[selectedChildIndex + 1] : children[0];
              inspectedElementIndex = store.getIndexOfElementID(nextChildID);
            }
          }
        }

        break;

      case 'SELECT_OWNER_LIST_NEXT_ELEMENT_IN_TREE':
        if (inspectedElementIndex !== null) {
          if (ownerSubtreeLeafElementID !== null && ownerSubtreeLeafElementID !== inspectedElementID) {
            const leafElement = store.getElementByID(ownerSubtreeLeafElementID);

            if (leafElement !== null) {
              let currentElement = leafElement;

              while (currentElement !== null) {
                if (currentElement.ownerID === inspectedElementID) {
                  inspectedElementIndex = store.getIndexOfElementID(currentElement.id);
                  break;
                } else if (currentElement.ownerID !== 0) {
                  currentElement = store.getElementByID(currentElement.ownerID);
                }
              }
            }
          }
        }

        break;

      case 'SELECT_OWNER_LIST_PREVIOUS_ELEMENT_IN_TREE':
        if (inspectedElementIndex !== null) {
          if (ownerSubtreeLeafElementID === null) {
            // If this is the first time we're stepping through the owners tree,
            // pin the current component as the owners list leaf.
            // This will enable us to step back down to this component.
            ownerSubtreeLeafElementID = inspectedElementID;
          }

          const selectedElement = store.getElementAtIndex(inspectedElementIndex);

          if (selectedElement !== null && selectedElement.ownerID !== 0) {
            const ownerIndex = store.getIndexOfElementID(selectedElement.ownerID);

            if (ownerIndex !== null) {
              inspectedElementIndex = ownerIndex;
            }
          }
        }

        break;

      case 'SELECT_PARENT_ELEMENT_IN_TREE':
        ownerSubtreeLeafElementID = null;

        if (inspectedElementIndex !== null) {
          const selectedElement = store.getElementAtIndex(inspectedElementIndex);

          if (selectedElement !== null && selectedElement.parentID !== 0) {
            const parentIndex = store.getIndexOfElementID(selectedElement.parentID);

            if (parentIndex !== null) {
              inspectedElementIndex = parentIndex;
            }
          }
        }

        break;

      case 'SELECT_PREVIOUS_ELEMENT_IN_TREE':
        ownerSubtreeLeafElementID = null;

        if (inspectedElementIndex === null || inspectedElementIndex === 0) {
          inspectedElementIndex = numElements - 1;
        } else {
          inspectedElementIndex--;
        }

        break;

      case 'SELECT_PREVIOUS_SIBLING_IN_TREE':
        ownerSubtreeLeafElementID = null;

        if (inspectedElementIndex !== null) {
          const selectedElement = store.getElementAtIndex(inspectedElementIndex);

          if (selectedElement !== null && selectedElement.parentID !== 0) {
            const parent = store.getElementByID(selectedElement.parentID);

            if (parent !== null) {
              const {
                children
              } = parent;
              const selectedChildIndex = children.indexOf(selectedElement.id);
              const nextChildID = selectedChildIndex > 0 ? children[selectedChildIndex - 1] : children[children.length - 1];
              inspectedElementIndex = store.getIndexOfElementID(nextChildID);
            }
          }
        }

        break;

      case 'SELECT_PREVIOUS_ELEMENT_WITH_ERROR_OR_WARNING_IN_TREE':
        {
          const elementIndicesWithErrorsOrWarnings = store.getElementsWithErrorsAndWarnings();

          if (elementIndicesWithErrorsOrWarnings.length === 0) {
            return state;
          }

          let flatIndex = 0;

          if (inspectedElementIndex !== null) {
            // Resume from the current position in the list.
            // Otherwise step to the previous item, relative to the current selection.
            for (let i = elementIndicesWithErrorsOrWarnings.length - 1; i >= 0; i--) {
              const {
                index
              } = elementIndicesWithErrorsOrWarnings[i];

              if (index >= inspectedElementIndex) {
                flatIndex = i;
              } else {
                break;
              }
            }
          }

          let prevEntry;

          if (flatIndex === 0) {
            prevEntry = elementIndicesWithErrorsOrWarnings[elementIndicesWithErrorsOrWarnings.length - 1];
            inspectedElementID = prevEntry.id;
            inspectedElementIndex = prevEntry.index;
          } else {
            prevEntry = elementIndicesWithErrorsOrWarnings[flatIndex - 1];
            inspectedElementID = prevEntry.id;
            inspectedElementIndex = prevEntry.index;
          }

          lookupIDForIndex = false;
          break;
        }

      case 'SELECT_NEXT_ELEMENT_WITH_ERROR_OR_WARNING_IN_TREE':
        {
          const elementIndicesWithErrorsOrWarnings = store.getElementsWithErrorsAndWarnings();

          if (elementIndicesWithErrorsOrWarnings.length === 0) {
            return state;
          }

          let flatIndex = -1;

          if (inspectedElementIndex !== null) {
            // Resume from the current position in the list.
            // Otherwise step to the next item, relative to the current selection.
            for (let i = 0; i < elementIndicesWithErrorsOrWarnings.length; i++) {
              const {
                index
              } = elementIndicesWithErrorsOrWarnings[i];

              if (index <= inspectedElementIndex) {
                flatIndex = i;
              } else {
                break;
              }
            }
          }

          let nextEntry;

          if (flatIndex >= elementIndicesWithErrorsOrWarnings.length - 1) {
            nextEntry = elementIndicesWithErrorsOrWarnings[0];
            inspectedElementID = nextEntry.id;
            inspectedElementIndex = nextEntry.index;
          } else {
            nextEntry = elementIndicesWithErrorsOrWarnings[flatIndex + 1];
            inspectedElementID = nextEntry.id;
            inspectedElementIndex = nextEntry.index;
          }

          lookupIDForIndex = false;
          break;
        }

      default:
        // React can bailout of no-op updates.
        return state;
    }
  } // Keep selected item ID and index in sync.


  if (lookupIDForIndex && inspectedElementIndex !== state.inspectedElementIndex) {
    if (inspectedElementIndex === null) {
      inspectedElementID = null;
    } else {
      inspectedElementID = store.getElementIDAtIndex(inspectedElementIndex);
    }
  }

  return { ...state,
    numElements,
    ownerSubtreeLeafElementID,
    inspectedElementIndex,
    inspectedElementID
  };
}

function reduceSearchState(store, state, action) {
  let {
    searchIndex,
    searchResults,
    searchText,
    inspectedElementID,
    inspectedElementIndex
  } = state;
  const ownerID = state.ownerID;
  const prevSearchIndex = searchIndex;
  const prevSearchText = searchText;
  const numPrevSearchResults = searchResults.length; // We track explicitly whether search was requested because
  // we might want to search even if search index didn't change.
  // For example, if you press "next result" on a search with a single
  // result but a different current selection, we'll set this to true.

  let didRequestSearch = false; // Search isn't supported when the owner's tree is active.

  if (ownerID === null) {
    switch (action.type) {
      case 'GO_TO_NEXT_SEARCH_RESULT':
        if (numPrevSearchResults > 0) {
          didRequestSearch = true;
          searchIndex = // $FlowFixMe[unsafe-addition] addition with possible null/undefined value
          searchIndex + 1 < numPrevSearchResults ? searchIndex + 1 : 0;
        }

        break;

      case 'GO_TO_PREVIOUS_SEARCH_RESULT':
        if (numPrevSearchResults > 0) {
          didRequestSearch = true;
          searchIndex = searchIndex > 0 ? searchIndex - 1 : numPrevSearchResults - 1;
        }

        break;

      case 'HANDLE_STORE_MUTATION':
        if (searchText !== '') {
          const [addedElementIDs, removedElementIDs] = action.payload;
          removedElementIDs.forEach((parentID, id) => {
            // Prune this item from the search results.
            const index = searchResults.indexOf(id);

            if (index >= 0) {
              searchResults = searchResults.slice(0, index).concat(searchResults.slice(index + 1)); // If the results are now empty, also deselect things.

              if (searchResults.length === 0) {
                searchIndex = null;
              } else if (searchIndex >= searchResults.length) {
                searchIndex = searchResults.length - 1;
              }
            }
          });
          addedElementIDs.forEach(id => {
            const element = store.getElementByID(id); // It's possible that multiple tree operations will fire before this action has run.
            // So it's important to check for elements that may have been added and then removed.

            if (element !== null) {
              const {
                displayName
              } = element; // Add this item to the search results if it matches.

              const regExp = createRegExp(searchText);

              if (displayName !== null && regExp.test(displayName)) {
                const newElementIndex = store.getIndexOfElementID(id);
                let foundMatch = false;

                for (let index = 0; index < searchResults.length; index++) {
                  const resultID = searchResults[index];

                  if (newElementIndex < store.getIndexOfElementID(resultID)) {
                    foundMatch = true;
                    searchResults = searchResults.slice(0, index).concat(resultID).concat(searchResults.slice(index));
                    break;
                  }
                }

                if (!foundMatch) {
                  searchResults = searchResults.concat(id);
                }

                searchIndex = searchIndex === null ? 0 : searchIndex;
              }
            }
          });
        }

        break;

      case 'SET_SEARCH_TEXT':
        searchIndex = null;
        searchResults = [];
        searchText = action.payload;

        if (searchText !== '') {
          const regExp = createRegExp(searchText);
          store.roots.forEach(rootID => {
            recursivelySearchTree(store, rootID, regExp, searchResults);
          });

          if (searchResults.length > 0) {
            if (prevSearchIndex === null) {
              if (inspectedElementIndex !== null) {
                searchIndex = getNearestResultIndex(store, searchResults, inspectedElementIndex);
              } else {
                searchIndex = 0;
              }
            } else {
              searchIndex = Math.min(prevSearchIndex, searchResults.length - 1);
            }
          }
        }

        break;

      default:
        // React can bailout of no-op updates.
        return state;
    }
  }

  if (searchText !== prevSearchText) {
    const newSearchIndex = searchResults.indexOf(inspectedElementID);

    if (newSearchIndex === -1) {
      // Only move the selection if the new query
      // doesn't match the current selection anymore.
      didRequestSearch = true;
    } else {
      // Selected item still matches the new search query.
      // Adjust the index to reflect its position in new results.
      searchIndex = newSearchIndex;
    }
  }

  if (didRequestSearch && searchIndex !== null) {
    inspectedElementID = searchResults[searchIndex];
    inspectedElementIndex = store.getIndexOfElementID(inspectedElementID);
  }

  return { ...state,
    inspectedElementID,
    inspectedElementIndex,
    searchIndex,
    searchResults,
    searchText
  };
}

function reduceOwnersState(store, state, action) {
  let {
    numElements,
    ownerID,
    ownerFlatTree,
    inspectedElementID,
    inspectedElementIndex
  } = state;
  const {
    searchIndex,
    searchResults,
    searchText
  } = state;
  let prevInspectedElementIndex = inspectedElementIndex;

  switch (action.type) {
    case 'HANDLE_STORE_MUTATION':
      if (ownerID !== null) {
        if (!store.containsElement(ownerID)) {
          ownerID = null;
          ownerFlatTree = null;
          prevInspectedElementIndex = null;
        } else {
          ownerFlatTree = store.getOwnersListForElement(ownerID);

          if (inspectedElementID !== null) {
            // Mutation might have caused the index of this ID to shift.
            prevInspectedElementIndex = ownerFlatTree.findIndex(element => element.id === inspectedElementID);
          }
        }
      } else {
        if (inspectedElementID !== null) {
          // Mutation might have caused the index of this ID to shift.
          inspectedElementIndex = store.getIndexOfElementID(inspectedElementID);
        }
      }

      if (inspectedElementIndex === -1) {
        // If we couldn't find this ID after mutation, unselect it.
        inspectedElementIndex = null;
        inspectedElementID = null;
      }

      break;

    case 'RESET_OWNER_STACK':
      ownerID = null;
      ownerFlatTree = null;
      inspectedElementIndex = inspectedElementID !== null ? store.getIndexOfElementID(inspectedElementID) : null;
      break;

    case 'SELECT_ELEMENT_AT_INDEX':
      if (ownerFlatTree !== null) {
        inspectedElementIndex = action.payload;
      }

      break;

    case 'SELECT_ELEMENT_BY_ID':
      if (ownerFlatTree !== null) {
        const payload = action.payload;

        if (payload === null) {
          inspectedElementIndex = null;
        } else {
          inspectedElementIndex = ownerFlatTree.findIndex(element => element.id === payload); // If the selected element is outside of the current owners list,
          // exit the list and select the element in the main tree.
          // This supports features like toggling Suspense.

          if (inspectedElementIndex !== null && inspectedElementIndex < 0) {
            ownerID = null;
            ownerFlatTree = null;
            inspectedElementIndex = store.getIndexOfElementID(payload);
          }
        }
      }

      break;

    case 'SELECT_NEXT_ELEMENT_IN_TREE':
      if (ownerFlatTree !== null && ownerFlatTree.length > 0) {
        if (inspectedElementIndex === null) {
          inspectedElementIndex = 0;
        } else if (inspectedElementIndex + 1 < ownerFlatTree.length) {
          inspectedElementIndex++;
        }
      }

      break;

    case 'SELECT_PREVIOUS_ELEMENT_IN_TREE':
      if (ownerFlatTree !== null && ownerFlatTree.length > 0) {
        if (inspectedElementIndex !== null && inspectedElementIndex > 0) {
          inspectedElementIndex--;
        }
      }

      break;

    case 'SELECT_OWNER':
      // If the Store doesn't have any owners metadata, don't drill into an empty stack.
      // This is a confusing user experience.
      if (store.hasOwnerMetadata) {
        ownerID = action.payload;
        ownerFlatTree = store.getOwnersListForElement(ownerID); // Always force reset selection to be the top of the new owner tree.

        inspectedElementIndex = 0;
        prevInspectedElementIndex = null;
      }

      break;

    default:
      // React can bailout of no-op updates.
      return state;
  } // Changes in the selected owner require re-calculating the owners tree.


  if (ownerFlatTree !== state.ownerFlatTree || action.type === 'HANDLE_STORE_MUTATION') {
    if (ownerFlatTree === null) {
      numElements = store.numElements;
    } else {
      numElements = ownerFlatTree.length;
    }
  } // Keep selected item ID and index in sync.


  if (inspectedElementIndex !== prevInspectedElementIndex) {
    if (inspectedElementIndex === null) {
      inspectedElementID = null;
    } else {
      if (ownerFlatTree !== null) {
        inspectedElementID = ownerFlatTree[inspectedElementIndex].id;
      }
    }
  }

  return { ...state,
    numElements,
    searchIndex,
    searchResults,
    searchText,
    ownerID,
    ownerFlatTree,
    inspectedElementID,
    inspectedElementIndex
  };
}

// TODO Remove TreeContextController wrapper element once global Context.write API exists.
function TreeContextController({
  children,
  defaultOwnerID,
  defaultInspectedElementID,
  defaultInspectedElementIndex
}) {
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const initialRevision = (0,external_react_namespaceObject.useMemo)(() => store.revision, [store]); // This reducer is created inline because it needs access to the Store.
  // The store is mutable, but the Store itself is global and lives for the lifetime of the DevTools,
  // so it's okay for the reducer to have an empty dependencies array.

  const reducer = (0,external_react_namespaceObject.useMemo)(() => (state, action) => {
    const {
      type
    } = action;

    switch (type) {
      case 'GO_TO_NEXT_SEARCH_RESULT':
      case 'GO_TO_PREVIOUS_SEARCH_RESULT':
      case 'HANDLE_STORE_MUTATION':
      case 'RESET_OWNER_STACK':
      case 'SELECT_ELEMENT_AT_INDEX':
      case 'SELECT_ELEMENT_BY_ID':
      case 'SELECT_CHILD_ELEMENT_IN_TREE':
      case 'SELECT_NEXT_ELEMENT_IN_TREE':
      case 'SELECT_NEXT_ELEMENT_WITH_ERROR_OR_WARNING_IN_TREE':
      case 'SELECT_NEXT_SIBLING_IN_TREE':
      case 'SELECT_OWNER_LIST_NEXT_ELEMENT_IN_TREE':
      case 'SELECT_OWNER_LIST_PREVIOUS_ELEMENT_IN_TREE':
      case 'SELECT_PARENT_ELEMENT_IN_TREE':
      case 'SELECT_PREVIOUS_ELEMENT_IN_TREE':
      case 'SELECT_PREVIOUS_ELEMENT_WITH_ERROR_OR_WARNING_IN_TREE':
      case 'SELECT_PREVIOUS_SIBLING_IN_TREE':
      case 'SELECT_OWNER':
      case 'SET_SEARCH_TEXT':
        state = reduceTreeState(store, state, action);
        state = reduceSearchState(store, state, action);
        state = reduceOwnersState(store, state, action); // TODO(hoxyq): review
        // If the selected ID is in a collapsed subtree, reset the selected index to null.
        // We'll know the correct index after the layout effect will toggle the tree,
        // and the store tree is mutated to account for that.

        if (state.inspectedElementID !== null && store.isInsideCollapsedSubTree(state.inspectedElementID)) {
          return { ...state,
            inspectedElementIndex: null
          };
        }

        return state;

      default:
        throw new Error(`Unrecognized action "${type}"`);
    }
  }, [store]);
  const [state, dispatch] = (0,external_react_namespaceObject.useReducer)(reducer, {
    // Tree
    numElements: store.numElements,
    ownerSubtreeLeafElementID: null,
    // Search
    searchIndex: null,
    searchResults: [],
    searchText: '',
    // Owners
    ownerID: defaultOwnerID == null ? null : defaultOwnerID,
    ownerFlatTree: null,
    // Inspection element panel
    inspectedElementID: defaultInspectedElementID != null ? defaultInspectedElementID : store.lastSelectedHostInstanceElementId,
    inspectedElementIndex: defaultInspectedElementIndex != null ? defaultInspectedElementIndex : store.lastSelectedHostInstanceElementId ? store.getIndexOfElementID(store.lastSelectedHostInstanceElementId) : null
  });
  const dispatchWrapper = (0,external_react_namespaceObject.useMemo)(() => action => (0,external_react_namespaceObject.startTransition)(() => dispatch(action)), [dispatch]); // Listen for host element selections.

  (0,external_react_namespaceObject.useEffect)(() => {
    const handler = id => dispatchWrapper({
      type: 'SELECT_ELEMENT_BY_ID',
      payload: id
    });

    store.addListener('hostInstanceSelected', handler);
    return () => store.removeListener('hostInstanceSelected', handler);
  }, [store, dispatchWrapper]); // If a newly-selected search result or inspection selection is inside of a collapsed subtree, auto expand it.
  // This needs to be a layout effect to avoid temporarily flashing an incorrect selection.

  const prevInspectedElementID = (0,external_react_namespaceObject.useRef)(null);
  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    if (state.inspectedElementID !== prevInspectedElementID.current) {
      prevInspectedElementID.current = state.inspectedElementID;

      if (state.inspectedElementID !== null) {
        const element = store.getElementByID(state.inspectedElementID);

        if (element !== null && element.parentID > 0) {
          store.toggleIsCollapsed(element.parentID, false);
        }
      }
    }
  }, [state.inspectedElementID, store]); // Mutations to the underlying tree may impact this context (e.g. search results, selection state).

  (0,external_react_namespaceObject.useEffect)(() => {
    const handleStoreMutated = ([addedElementIDs, removedElementIDs]) => {
      dispatchWrapper({
        type: 'HANDLE_STORE_MUTATION',
        payload: [addedElementIDs, removedElementIDs]
      });
    }; // Since this is a passive effect, the tree may have been mutated before our initial subscription.


    if (store.revision !== initialRevision) {
      // At the moment, we can treat this as a mutation.
      // We don't know which Elements were newly added/removed, but that should be okay in this case.
      // It would only impact the search state, which is unlikely to exist yet at this point.
      dispatchWrapper({
        type: 'HANDLE_STORE_MUTATION',
        payload: [[], new Map()]
      });
    }

    store.addListener('mutated', handleStoreMutated);
    return () => store.removeListener('mutated', handleStoreMutated);
  }, [dispatchWrapper, initialRevision, store]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(TreeStateContext.Provider, {
    value: state
  }, /*#__PURE__*/external_react_namespaceObject.createElement(TreeDispatcherContext.Provider, {
    value: dispatchWrapper
  }, children));
}

function recursivelySearchTree(store, elementID, regExp, searchResults) {
  const element = store.getElementByID(elementID);

  if (element == null) {
    return;
  }

  const {
    children,
    displayName,
    hocDisplayNames,
    compiledWithForget
  } = element;

  if (displayName != null && regExp.test(displayName) === true) {
    searchResults.push(elementID);
  } else if (hocDisplayNames != null && hocDisplayNames.length > 0 && hocDisplayNames.some(name => regExp.test(name)) === true) {
    searchResults.push(elementID);
  } else if (compiledWithForget && regExp.test('Forget')) {
    searchResults.push(elementID);
  }

  children.forEach(childID => recursivelySearchTree(store, childID, regExp, searchResults));
}

function getNearestResultIndex(store, searchResults, inspectedElementIndex) {
  const index = searchResults.findIndex(id => {
    const innerIndex = store.getIndexOfElementID(id);
    return innerIndex !== null && innerIndex >= inspectedElementIndex;
  });
  return index === -1 ? 0 : index;
}


// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Icon.css
var Icon = __webpack_require__(9086);
var Icon_default = /*#__PURE__*/__webpack_require__.n(Icon);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Icon.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function Icon_Icon({
  className = '',
  title = '',
  type
}) {
  let pathData = null;

  switch (type) {
    case 'arrow':
      pathData = PATH_ARROW;
      break;

    case 'bug':
      pathData = PATH_BUG;
      break;

    case 'code':
      pathData = PATH_CODE;
      break;

    case 'components':
      pathData = PATH_COMPONENTS;
      break;

    case 'copy':
      pathData = PATH_COPY;
      break;

    case 'error':
      pathData = PATH_ERROR;
      break;

    case 'facebook':
      pathData = PATH_FACEBOOK;
      break;

    case 'flame-chart':
      pathData = PATH_FLAME_CHART;
      break;

    case 'profiler':
      pathData = PATH_PROFILER;
      break;

    case 'ranked-chart':
      pathData = PATH_RANKED_CHART;
      break;

    case 'timeline':
      pathData = PATH_SCHEDULING_PROFILER;
      break;

    case 'search':
      pathData = PATH_SEARCH;
      break;

    case 'settings':
      pathData = PATH_SETTINGS;
      break;

    case 'store-as-global-variable':
      pathData = PATH_STORE_AS_GLOBAL_VARIABLE;
      break;

    case 'strict-mode-non-compliant':
      pathData = PATH_STRICT_MODE_NON_COMPLIANT;
      break;

    case 'warning':
      pathData = PATH_WARNING;
      break;

    default:
      console.warn(`Unsupported type "${type}" specified for Icon`);
      break;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    className: `${(Icon_default()).Icon} ${className}`,
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, title && /*#__PURE__*/external_react_namespaceObject.createElement("title", null, title), /*#__PURE__*/external_react_namespaceObject.createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), /*#__PURE__*/external_react_namespaceObject.createElement("path", {
    fill: "currentColor",
    d: pathData
  }));
}
const PATH_ARROW = 'M8 5v14l11-7z';
const PATH_BUG = `
  M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49
  0-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09
  1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21
  5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6 8h-4v-2h4v2zm0-4h-4v-2h4v2z
`;
const PATH_CODE = `
  M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z
  `;
const PATH_COMPONENTS = 'M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z';
const PATH_COPY = `
  M3 13h2v-2H3v2zm0 4h2v-2H3v2zm2 4v-2H3a2 2 0 0 0 2 2zM3 9h2V7H3v2zm12 12h2v-2h-2v2zm4-18H9a2 2 0 0 0-2
  2v10a2 2 0 0 0 2 2h10c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2z
`;
const PATH_ERROR = `M16.971 0h-9.942l-7.029 7.029v9.941l7.029 7.03h9.941l7.03-7.029v-9.942l-7.029-7.029zm-1.402 16.945l-3.554-3.521-3.518 3.568-1.418-1.418 3.507-3.566-3.586-3.472 1.418-1.417 3.581 3.458 3.539-3.583 1.431 1.431-3.535 3.568 3.566 3.522-1.431 1.43z`;
const PATH_FACEBOOK = `
  M22,12c0-5.52-4.48-10-10-10S2,6.48,2,12c0,4.84,3.44,8.87,8,9.8V15H8v-3h2V9.5C10,7.57,11.57,6,13.5,6H16v3h-2 c-0.55,0-1,0.45-1,1v2h3v3h-3v6.95C18.05,21.45,22,17.19,22,12z
`;
const PATH_FLAME_CHART = `
  M10.0650893,21.5040462 C7.14020814,20.6850349 5,18.0558698 5,14.9390244 C5,14.017627
  5,9.81707317 7.83333333,7.37804878 C7.83333333,7.37804878 7.58333333,11.199187 10,
  10.6300813 C11.125,10.326087 13.0062497,7.63043487 8.91666667,2.5 C14.1666667,3.06910569
  19,9.32926829 19,14.9390244 C19,18.0558698 16.8597919,20.6850349 13.9349107,21.5040462
  C14.454014,21.0118505 14.7765152,20.3233394 14.7765152,19.5613412 C14.7765152,17.2826087
  12,15.0875871 12,15.0875871 C12,15.0875871 9.22348485,17.2826087 9.22348485,19.5613412
  C9.22348485,20.3233394 9.54598603,21.0118505 10.0650893,21.5040462 Z M12.0833333,20.6514763
  C11.3814715,20.6514763 10.8125,20.1226027 10.8125,19.4702042 C10.8125,18.6069669
  12.0833333,16.9347829 12.0833333,16.9347829 C12.0833333,16.9347829 13.3541667,18.6069669
  13.3541667,19.4702042 C13.3541667,20.1226027 12.7851952,20.6514763 12.0833333,20.6514763 Z
`;
const PATH_PROFILER = 'M5 9.2h3V19H5zM10.6 5h2.8v14h-2.8zm5.6 8H19v6h-2.8z';
const PATH_SCHEDULING_PROFILER = `
  M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0
  16H5V9h14v10zm0-12H5V5h14v2zM7 11h5v5H7z
`;
const PATH_SEARCH = `
  M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91
  16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99
  5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z
`;
const PATH_RANKED_CHART = 'M3 5h18v3H3zM3 10.5h13v3H3zM3 16h8v3H3z';
const PATH_SETTINGS = `
  M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49
  1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38
  2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11
  1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4
  1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49
  1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5
  3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z
`;
const PATH_STORE_AS_GLOBAL_VARIABLE = `
  M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41
  3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04
  1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6
  8h-4v-2h4v2zm0-4h-4v-2h4v2z
`;
const PATH_STRICT_MODE_NON_COMPLIANT = `
  M4.47 21h15.06c1.54 0 2.5-1.67 1.73-3L13.73 4.99c-.77-1.33-2.69-1.33-3.46 0L2.74 18c-.77 1.33.19 3 1.73 3zM12
  14c-.55 0-1-.45-1-1v-2c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1zm1 4h-2v-2h2v2z
`;
const PATH_WARNING = `M12 1l-12 22h24l-12-22zm-1 8h2v7h-2v-7zm1 11.25c-.69 0-1.25-.56-1.25-1.25s.56-1.25 1.25-1.25 1.25.56 1.25 1.25-.56 1.25-1.25 1.25z`;
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/constants.js
const CHANGE_LOG_URL = 'https://github.com/facebook/react/blob/main/packages/react-devtools/CHANGELOG.md';
const UNSUPPORTED_VERSION_URL = 'https://reactjs.org/blog/2019/08/15/new-react-devtools.html#how-do-i-get-the-old-version-back';
const REACT_DEVTOOLS_WORKPLACE_URL = 'https://fburl.com/react-devtools-workplace-group';
const THEME_STYLES = {
  light: {
    '--color-attribute-name': '#ef6632',
    '--color-attribute-name-not-editable': '#23272f',
    '--color-attribute-name-inverted': 'rgba(255, 255, 255, 0.7)',
    '--color-attribute-value': '#1a1aa6',
    '--color-attribute-value-inverted': '#ffffff',
    '--color-attribute-editable-value': '#1a1aa6',
    '--color-background': '#ffffff',
    '--color-background-hover': 'rgba(0, 136, 250, 0.1)',
    '--color-background-inactive': '#e5e5e5',
    '--color-background-invalid': '#fff0f0',
    '--color-background-selected': '#0088fa',
    '--color-button-background': '#ffffff',
    '--color-button-background-focus': '#ededed',
    '--color-button': '#5f6673',
    '--color-button-disabled': '#cfd1d5',
    '--color-button-active': '#0088fa',
    '--color-button-focus': '#23272f',
    '--color-button-hover': '#23272f',
    '--color-border': '#eeeeee',
    '--color-commit-did-not-render-fill': '#cfd1d5',
    '--color-commit-did-not-render-fill-text': '#000000',
    '--color-commit-did-not-render-pattern': '#cfd1d5',
    '--color-commit-did-not-render-pattern-text': '#333333',
    '--color-commit-gradient-0': '#37afa9',
    '--color-commit-gradient-1': '#63b19e',
    '--color-commit-gradient-2': '#80b393',
    '--color-commit-gradient-3': '#97b488',
    '--color-commit-gradient-4': '#abb67d',
    '--color-commit-gradient-5': '#beb771',
    '--color-commit-gradient-6': '#cfb965',
    '--color-commit-gradient-7': '#dfba57',
    '--color-commit-gradient-8': '#efbb49',
    '--color-commit-gradient-9': '#febc38',
    '--color-commit-gradient-text': '#000000',
    '--color-component-name': '#6a51b2',
    '--color-component-name-inverted': '#ffffff',
    '--color-component-badge-background': '#e6e6e6',
    '--color-component-badge-background-inverted': 'rgba(255, 255, 255, 0.25)',
    '--color-component-badge-count': '#777d88',
    '--color-component-badge-count-inverted': 'rgba(255, 255, 255, 0.7)',
    '--color-console-error-badge-text': '#ffffff',
    '--color-console-error-background': '#fff0f0',
    '--color-console-error-border': '#ffd6d6',
    '--color-console-error-icon': '#eb3941',
    '--color-console-error-text': '#fe2e31',
    '--color-console-warning-badge-text': '#000000',
    '--color-console-warning-background': '#fffbe5',
    '--color-console-warning-border': '#fff5c1',
    '--color-console-warning-icon': '#f4bd00',
    '--color-console-warning-text': '#64460c',
    '--color-context-background': 'rgba(0,0,0,.9)',
    '--color-context-background-hover': 'rgba(255, 255, 255, 0.1)',
    '--color-context-background-selected': '#178fb9',
    '--color-context-border': '#3d424a',
    '--color-context-text': '#ffffff',
    '--color-context-text-selected': '#ffffff',
    '--color-dim': '#777d88',
    '--color-dimmer': '#cfd1d5',
    '--color-dimmest': '#eff0f1',
    '--color-error-background': 'hsl(0, 100%, 97%)',
    '--color-error-border': 'hsl(0, 100%, 92%)',
    '--color-error-text': '#ff0000',
    '--color-expand-collapse-toggle': '#777d88',
    '--color-forget-badge-background': '#2683e2',
    '--color-forget-badge-background-inverted': '#1a6bbc',
    '--color-forget-text': '#fff',
    '--color-link': '#0000ff',
    '--color-modal-background': 'rgba(255, 255, 255, 0.75)',
    '--color-bridge-version-npm-background': '#eff0f1',
    '--color-bridge-version-npm-text': '#000000',
    '--color-bridge-version-number': '#0088fa',
    '--color-primitive-hook-badge-background': '#e5e5e5',
    '--color-primitive-hook-badge-text': '#5f6673',
    '--color-record-active': '#fc3a4b',
    '--color-record-hover': '#3578e5',
    '--color-record-inactive': '#0088fa',
    '--color-resize-bar': '#eeeeee',
    '--color-resize-bar-active': '#dcdcdc',
    '--color-resize-bar-border': '#d1d1d1',
    '--color-resize-bar-dot': '#333333',
    '--color-timeline-internal-module': '#d1d1d1',
    '--color-timeline-internal-module-hover': '#c9c9c9',
    '--color-timeline-internal-module-text': '#444',
    '--color-timeline-native-event': '#ccc',
    '--color-timeline-native-event-hover': '#aaa',
    '--color-timeline-network-primary': '#fcf3dc',
    '--color-timeline-network-primary-hover': '#f0e7d1',
    '--color-timeline-network-secondary': '#efc457',
    '--color-timeline-network-secondary-hover': '#e3ba52',
    '--color-timeline-priority-background': '#f6f6f6',
    '--color-timeline-priority-border': '#eeeeee',
    '--color-timeline-user-timing': '#c9cacd',
    '--color-timeline-user-timing-hover': '#93959a',
    '--color-timeline-react-idle': '#d3e5f6',
    '--color-timeline-react-idle-hover': '#c3d9ef',
    '--color-timeline-react-render': '#9fc3f3',
    '--color-timeline-react-render-hover': '#83afe9',
    '--color-timeline-react-render-text': '#11365e',
    '--color-timeline-react-commit': '#c88ff0',
    '--color-timeline-react-commit-hover': '#b281d6',
    '--color-timeline-react-commit-text': '#3e2c4a',
    '--color-timeline-react-layout-effects': '#b281d6',
    '--color-timeline-react-layout-effects-hover': '#9d71bd',
    '--color-timeline-react-layout-effects-text': '#3e2c4a',
    '--color-timeline-react-passive-effects': '#b281d6',
    '--color-timeline-react-passive-effects-hover': '#9d71bd',
    '--color-timeline-react-passive-effects-text': '#3e2c4a',
    '--color-timeline-react-schedule': '#9fc3f3',
    '--color-timeline-react-schedule-hover': '#2683E2',
    '--color-timeline-react-suspense-rejected': '#f1cc14',
    '--color-timeline-react-suspense-rejected-hover': '#ffdf37',
    '--color-timeline-react-suspense-resolved': '#a6e59f',
    '--color-timeline-react-suspense-resolved-hover': '#89d281',
    '--color-timeline-react-suspense-unresolved': '#c9cacd',
    '--color-timeline-react-suspense-unresolved-hover': '#93959a',
    '--color-timeline-thrown-error': '#ee1638',
    '--color-timeline-thrown-error-hover': '#da1030',
    '--color-timeline-text-color': '#000000',
    '--color-timeline-text-dim-color': '#ccc',
    '--color-timeline-react-work-border': '#eeeeee',
    '--color-search-match': 'yellow',
    '--color-search-match-current': '#f7923b',
    '--color-selected-tree-highlight-active': 'rgba(0, 136, 250, 0.1)',
    '--color-selected-tree-highlight-inactive': 'rgba(0, 0, 0, 0.05)',
    '--color-scroll-caret': 'rgba(150, 150, 150, 0.5)',
    '--color-tab-selected-border': '#0088fa',
    '--color-text': '#000000',
    '--color-text-invalid': '#ff0000',
    '--color-text-selected': '#ffffff',
    '--color-toggle-background-invalid': '#fc3a4b',
    '--color-toggle-background-on': '#0088fa',
    '--color-toggle-background-off': '#cfd1d5',
    '--color-toggle-text': '#ffffff',
    '--color-warning-background': '#fb3655',
    '--color-warning-background-hover': '#f82042',
    '--color-warning-text-color': '#ffffff',
    '--color-warning-text-color-inverted': '#fd4d69',
    // The styles below should be kept in sync with 'root.css'
    // They are repeated there because they're used by e.g. tooltips or context menus
    // which get rendered outside of the DOM subtree (where normal theme/styles are written).
    '--color-scroll-thumb': '#c2c2c2',
    '--color-scroll-track': '#fafafa',
    '--color-tooltip-background': 'rgba(0, 0, 0, 0.9)',
    '--color-tooltip-text': '#ffffff'
  },
  dark: {
    '--color-attribute-name': '#9d87d2',
    '--color-attribute-name-not-editable': '#ededed',
    '--color-attribute-name-inverted': '#282828',
    '--color-attribute-value': '#cedae0',
    '--color-attribute-value-inverted': '#ffffff',
    '--color-attribute-editable-value': 'yellow',
    '--color-background': '#282c34',
    '--color-background-hover': 'rgba(255, 255, 255, 0.1)',
    '--color-background-inactive': '#3d424a',
    '--color-background-invalid': '#5c0000',
    '--color-background-selected': '#178fb9',
    '--color-button-background': '#282c34',
    '--color-button-background-focus': '#3d424a',
    '--color-button': '#afb3b9',
    '--color-button-active': '#61dafb',
    '--color-button-disabled': '#4f5766',
    '--color-button-focus': '#a2e9fc',
    '--color-button-hover': '#ededed',
    '--color-border': '#3d424a',
    '--color-commit-did-not-render-fill': '#777d88',
    '--color-commit-did-not-render-fill-text': '#000000',
    '--color-commit-did-not-render-pattern': '#666c77',
    '--color-commit-did-not-render-pattern-text': '#ffffff',
    '--color-commit-gradient-0': '#37afa9',
    '--color-commit-gradient-1': '#63b19e',
    '--color-commit-gradient-2': '#80b393',
    '--color-commit-gradient-3': '#97b488',
    '--color-commit-gradient-4': '#abb67d',
    '--color-commit-gradient-5': '#beb771',
    '--color-commit-gradient-6': '#cfb965',
    '--color-commit-gradient-7': '#dfba57',
    '--color-commit-gradient-8': '#efbb49',
    '--color-commit-gradient-9': '#febc38',
    '--color-commit-gradient-text': '#000000',
    '--color-component-name': '#61dafb',
    '--color-component-name-inverted': '#282828',
    '--color-component-badge-background': '#5e6167',
    '--color-component-badge-background-inverted': '#46494e',
    '--color-component-badge-count': '#8f949d',
    '--color-component-badge-count-inverted': 'rgba(255, 255, 255, 0.85)',
    '--color-console-error-badge-text': '#000000',
    '--color-console-error-background': '#290000',
    '--color-console-error-border': '#5c0000',
    '--color-console-error-icon': '#eb3941',
    '--color-console-error-text': '#fc7f7f',
    '--color-console-warning-badge-text': '#000000',
    '--color-console-warning-background': '#332b00',
    '--color-console-warning-border': '#665500',
    '--color-console-warning-icon': '#f4bd00',
    '--color-console-warning-text': '#f5f2ed',
    '--color-context-background': 'rgba(255,255,255,.95)',
    '--color-context-background-hover': 'rgba(0, 136, 250, 0.1)',
    '--color-context-background-selected': '#0088fa',
    '--color-context-border': '#eeeeee',
    '--color-context-text': '#000000',
    '--color-context-text-selected': '#ffffff',
    '--color-dim': '#8f949d',
    '--color-dimmer': '#777d88',
    '--color-dimmest': '#4f5766',
    '--color-error-background': '#200',
    '--color-error-border': '#900',
    '--color-error-text': '#f55',
    '--color-expand-collapse-toggle': '#8f949d',
    '--color-forget-badge-background': '#2683e2',
    '--color-forget-badge-background-inverted': '#1a6bbc',
    '--color-forget-text': '#fff',
    '--color-link': '#61dafb',
    '--color-modal-background': 'rgba(0, 0, 0, 0.75)',
    '--color-bridge-version-npm-background': 'rgba(0, 0, 0, 0.25)',
    '--color-bridge-version-npm-text': '#ffffff',
    '--color-bridge-version-number': 'yellow',
    '--color-primitive-hook-badge-background': 'rgba(0, 0, 0, 0.25)',
    '--color-primitive-hook-badge-text': 'rgba(255, 255, 255, 0.7)',
    '--color-record-active': '#fc3a4b',
    '--color-record-hover': '#a2e9fc',
    '--color-record-inactive': '#61dafb',
    '--color-resize-bar': '#282c34',
    '--color-resize-bar-active': '#31363f',
    '--color-resize-bar-border': '#3d424a',
    '--color-resize-bar-dot': '#cfd1d5',
    '--color-timeline-internal-module': '#303542',
    '--color-timeline-internal-module-hover': '#363b4a',
    '--color-timeline-internal-module-text': '#7f8899',
    '--color-timeline-native-event': '#b2b2b2',
    '--color-timeline-native-event-hover': '#949494',
    '--color-timeline-network-primary': '#fcf3dc',
    '--color-timeline-network-primary-hover': '#e3dbc5',
    '--color-timeline-network-secondary': '#efc457',
    '--color-timeline-network-secondary-hover': '#d6af4d',
    '--color-timeline-priority-background': '#1d2129',
    '--color-timeline-priority-border': '#282c34',
    '--color-timeline-user-timing': '#c9cacd',
    '--color-timeline-user-timing-hover': '#93959a',
    '--color-timeline-react-idle': '#3d485b',
    '--color-timeline-react-idle-hover': '#465269',
    '--color-timeline-react-render': '#2683E2',
    '--color-timeline-react-render-hover': '#1a76d4',
    '--color-timeline-react-render-text': '#11365e',
    '--color-timeline-react-commit': '#731fad',
    '--color-timeline-react-commit-hover': '#611b94',
    '--color-timeline-react-commit-text': '#e5c1ff',
    '--color-timeline-react-layout-effects': '#611b94',
    '--color-timeline-react-layout-effects-hover': '#51167a',
    '--color-timeline-react-layout-effects-text': '#e5c1ff',
    '--color-timeline-react-passive-effects': '#611b94',
    '--color-timeline-react-passive-effects-hover': '#51167a',
    '--color-timeline-react-passive-effects-text': '#e5c1ff',
    '--color-timeline-react-schedule': '#2683E2',
    '--color-timeline-react-schedule-hover': '#1a76d4',
    '--color-timeline-react-suspense-rejected': '#f1cc14',
    '--color-timeline-react-suspense-rejected-hover': '#e4c00f',
    '--color-timeline-react-suspense-resolved': '#a6e59f',
    '--color-timeline-react-suspense-resolved-hover': '#89d281',
    '--color-timeline-react-suspense-unresolved': '#c9cacd',
    '--color-timeline-react-suspense-unresolved-hover': '#93959a',
    '--color-timeline-thrown-error': '#fb3655',
    '--color-timeline-thrown-error-hover': '#f82042',
    '--color-timeline-text-color': '#282c34',
    '--color-timeline-text-dim-color': '#555b66',
    '--color-timeline-react-work-border': '#3d424a',
    '--color-search-match': 'yellow',
    '--color-search-match-current': '#f7923b',
    '--color-selected-tree-highlight-active': 'rgba(23, 143, 185, 0.15)',
    '--color-selected-tree-highlight-inactive': 'rgba(255, 255, 255, 0.05)',
    '--color-scroll-caret': '#4f5766',
    '--color-shadow': 'rgba(0, 0, 0, 0.5)',
    '--color-tab-selected-border': '#178fb9',
    '--color-text': '#ffffff',
    '--color-text-invalid': '#ff8080',
    '--color-text-selected': '#ffffff',
    '--color-toggle-background-invalid': '#fc3a4b',
    '--color-toggle-background-on': '#178fb9',
    '--color-toggle-background-off': '#777d88',
    '--color-toggle-text': '#ffffff',
    '--color-warning-background': '#ee1638',
    '--color-warning-background-hover': '#da1030',
    '--color-warning-text-color': '#ffffff',
    '--color-warning-text-color-inverted': '#ee1638',
    // The styles below should be kept in sync with 'root.css'
    // They are repeated there because they're used by e.g. tooltips or context menus
    // which get rendered outside of the DOM subtree (where normal theme/styles are written).
    '--color-scroll-thumb': '#afb3b9',
    '--color-scroll-track': '#313640',
    '--color-tooltip-background': 'rgba(255, 255, 255, 0.95)',
    '--color-tooltip-text': '#000000'
  },
  compact: {
    '--font-size-monospace-small': '9px',
    '--font-size-monospace-normal': '11px',
    '--font-size-monospace-large': '15px',
    '--font-size-sans-small': '10px',
    '--font-size-sans-normal': '12px',
    '--font-size-sans-large': '14px',
    '--line-height-data': '18px'
  },
  comfortable: {
    '--font-size-monospace-small': '10px',
    '--font-size-monospace-normal': '13px',
    '--font-size-monospace-large': '17px',
    '--font-size-sans-small': '12px',
    '--font-size-sans-normal': '14px',
    '--font-size-sans-large': '16px',
    '--line-height-data': '22px'
  }
}; // HACK
//
// Sometimes the inline target is rendered before root styles are applied,
// which would result in e.g. NaN itemSize being passed to react-window list.

const COMFORTABLE_LINE_HEIGHT = parseInt(THEME_STYLES.comfortable['--line-height-data'], 10);
const COMPACT_LINE_HEIGHT = parseInt(THEME_STYLES.compact['--line-height-data'], 10);

;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/hooks.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





function useEditableValueReducer(state, action) {
  switch (action.type) {
    case 'RESET':
      return { ...state,
        editableValue: smartStringify(action.externalValue),
        externalValue: action.externalValue,
        hasPendingChanges: false,
        isValid: true,
        parsedValue: action.externalValue
      };

    case 'UPDATE':
      let isNewValueValid = false;
      let newParsedValue;

      try {
        newParsedValue = smartParse(action.editableValue);
        isNewValueValid = true;
      } catch (error) {}

      return { ...state,
        editableValue: sanitizeForParse(action.editableValue),
        externalValue: action.externalValue,
        hasPendingChanges: smartStringify(action.externalValue) !== action.editableValue,
        isValid: isNewValueValid,
        parsedValue: isNewValueValid ? newParsedValue : state.parsedValue
      };

    default:
      throw new Error(`Invalid action "${action.type}"`);
  }
} // Convenience hook for working with an editable value that is validated via JSON.parse.


function useEditableValue(externalValue) {
  const [state, dispatch] = (0,external_react_namespaceObject.useReducer)(useEditableValueReducer, {
    editableValue: smartStringify(externalValue),
    externalValue,
    hasPendingChanges: false,
    isValid: true,
    parsedValue: externalValue
  });

  if (!Object.is(state.externalValue, externalValue)) {
    if (!state.hasPendingChanges) {
      dispatch({
        type: 'RESET',
        externalValue
      });
    } else {
      dispatch({
        type: 'UPDATE',
        editableValue: state.editableValue,
        externalValue
      });
    }
  }

  return [state, dispatch];
}
function useIsOverflowing(containerRef, totalChildWidth) {
  const [isOverflowing, setIsOverflowing] = (0,external_react_namespaceObject.useState)(false); // It's important to use a layout effect, so that we avoid showing a flash of overflowed content.

  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    if (containerRef.current === null) {
      return () => {};
    }

    const container = containerRef.current;

    const handleResize = () => setIsOverflowing(container.clientWidth <= totalChildWidth);

    handleResize(); // It's important to listen to the ownerDocument.defaultView to support the browser extension.
    // Here we use portals to render individual tabs (e.g. Profiler),
    // and the root document might belong to a different window.

    const ownerWindow = container.ownerDocument.defaultView;
    ownerWindow.addEventListener('resize', handleResize);
    return () => ownerWindow.removeEventListener('resize', handleResize);
  }, [containerRef, totalChildWidth]);
  return isOverflowing;
} // Forked from https://usehooks.com/useLocalStorage/

function useLocalStorage(key, initialValue, onValueSet) {
  const getValueFromLocalStorage = (0,external_react_namespaceObject.useCallback)(() => {
    try {
      const item = localStorageGetItem(key);

      if (item != null) {
        return JSON.parse(item);
      }
    } catch (error) {
      console.log(error);
    }

    if (typeof initialValue === 'function') {
      return initialValue();
    } else {
      return initialValue;
    }
  }, [initialValue, key]);
  const [storedValue, setStoredValue] = (0,external_react_namespaceObject.useState)(getValueFromLocalStorage);
  const setValue = (0,external_react_namespaceObject.useCallback)(value => {
    try {
      const valueToStore = value instanceof Function ? value(storedValue) : value;
      setStoredValue(valueToStore);
      localStorageSetItem(key, JSON.stringify(valueToStore)); // Notify listeners that this setting has changed.

      window.dispatchEvent(new Event(key));

      if (onValueSet != null) {
        onValueSet(valueToStore, key);
      }
    } catch (error) {
      console.log(error);
    }
  }, [key, storedValue]); // Listen for changes to this local storage value made from other windows.
  // This enables the e.g. "⚛ Elements" tab to update in response to changes from "⚛ Settings".

  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    // $FlowFixMe[missing-local-annot]
    const onStorage = event => {
      const newValue = getValueFromLocalStorage();

      if (key === event.key && storedValue !== newValue) {
        setValue(newValue);
      }
    };

    window.addEventListener('storage', onStorage);
    return () => {
      window.removeEventListener('storage', onStorage);
    };
  }, [getValueFromLocalStorage, key, storedValue, setValue]);
  return [storedValue, setValue];
}
function useModalDismissSignal(modalRef, dismissCallback, dismissOnClickOutside = true) {
  (0,external_react_namespaceObject.useEffect)(() => {
    if (modalRef.current === null) {
      return () => {};
    }

    const handleRootNodeKeyDown = event => {
      if (event.key === 'Escape') {
        dismissCallback();
      }
    };

    const handleRootNodeClick = event => {
      if (modalRef.current !== null &&
      /* $FlowExpectedError[incompatible-call] Instead of dealing with possibly multiple realms
       and multiple Node references to comply with Flow (e.g. checking with `event.target instanceof Node`)
       just delegate it to contains call */
      !modalRef.current.contains(event.target)) {
        event.stopPropagation();
        event.preventDefault();
        dismissCallback();
      }
    };

    let modalRootNode = null; // Delay until after the current call stack is empty,
    // in case this effect is being run while an event is currently bubbling.
    // In that case, we don't want to listen to the pre-existing event.

    let timeoutID = setTimeout(() => {
      timeoutID = null; // It's important to listen to the ownerDocument to support the browser extension.
      // Here we use portals to render individual tabs (e.g. Profiler),
      // and the root document might belong to a different window.

      const modalDOMElement = modalRef.current;

      if (modalDOMElement != null) {
        modalRootNode = modalDOMElement.getRootNode();
        modalRootNode.addEventListener('keydown', handleRootNodeKeyDown);

        if (dismissOnClickOutside) {
          modalRootNode.addEventListener('click', handleRootNodeClick, true);
        }
      }
    }, 0);
    return () => {
      if (timeoutID !== null) {
        clearTimeout(timeoutID);
      }

      if (modalRootNode !== null) {
        modalRootNode.removeEventListener('keydown', handleRootNodeKeyDown);
        modalRootNode.removeEventListener('click', handleRootNodeClick, true);
      }
    };
  }, [modalRef, dismissCallback, dismissOnClickOutside]);
} // Copied from https://github.com/facebook/react/pull/15022

function useSubscription({
  getCurrentValue,
  subscribe
}) {
  const [state, setState] = (0,external_react_namespaceObject.useState)(() => ({
    getCurrentValue,
    subscribe,
    value: getCurrentValue()
  }));

  if (state.getCurrentValue !== getCurrentValue || state.subscribe !== subscribe) {
    setState({
      getCurrentValue,
      subscribe,
      value: getCurrentValue()
    });
  }

  (0,external_react_namespaceObject.useEffect)(() => {
    let didUnsubscribe = false;

    const checkForUpdates = () => {
      if (didUnsubscribe) {
        return;
      }

      setState(prevState => {
        if (prevState.getCurrentValue !== getCurrentValue || prevState.subscribe !== subscribe) {
          return prevState;
        }

        const value = getCurrentValue();

        if (prevState.value === value) {
          return prevState;
        }

        return { ...prevState,
          value
        };
      });
    };

    const unsubscribe = subscribe(checkForUpdates);
    checkForUpdates();
    return () => {
      didUnsubscribe = true;
      unsubscribe();
    };
  }, [getCurrentValue, subscribe]);
  return state.value;
}
function useHighlightHostInstance() {
  const bridge = (0,external_react_namespaceObject.useContext)(BridgeContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const highlightHostInstance = (0,external_react_namespaceObject.useCallback)(id => {
    const element = store.getElementByID(id);
    const rendererID = store.getRendererIDForElement(id);

    if (element !== null && rendererID !== null) {
      bridge.send('highlightHostInstance', {
        displayName: element.displayName,
        hideAfterTimeout: false,
        id,
        openBuiltinElementsPanel: false,
        rendererID,
        scrollIntoView: false
      });
    }
  }, [store, bridge]);
  const clearHighlightHostInstance = (0,external_react_namespaceObject.useCallback)(() => {
    bridge.send('clearHostInstanceHighlight');
  }, [bridge]);
  return {
    highlightHostInstance,
    clearHighlightHostInstance
  };
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Settings/SettingsContext.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */







const SettingsContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
SettingsContext.displayName = 'SettingsContext';

function useLocalStorageWithLog(key, initialValue) {
  return useLocalStorage(key, initialValue, (v, k) => {
    logEvent({
      event_name: 'settings-changed',
      metadata: {
        source: 'localStorage setter',
        key: k,
        value: v
      }
    });
  });
}

function SettingsContextController({
  browserTheme,
  children,
  componentsPortalContainer,
  profilerPortalContainer
}) {
  const bridge = (0,external_react_namespaceObject.useContext)(BridgeContext);
  const [displayDensity, setDisplayDensity] = useLocalStorageWithLog('React::DevTools::displayDensity', 'compact');
  const [theme, setTheme] = useLocalStorageWithLog(LOCAL_STORAGE_BROWSER_THEME, 'auto');
  const [parseHookNames, setParseHookNames] = useLocalStorageWithLog(LOCAL_STORAGE_PARSE_HOOK_NAMES_KEY, false);
  const [traceUpdatesEnabled, setTraceUpdatesEnabled] = useLocalStorageWithLog(LOCAL_STORAGE_TRACE_UPDATES_ENABLED_KEY, false);
  const documentElements = (0,external_react_namespaceObject.useMemo)(() => {
    const array = [document.documentElement];

    if (componentsPortalContainer != null) {
      array.push(componentsPortalContainer.ownerDocument.documentElement);
    }

    if (profilerPortalContainer != null) {
      array.push(profilerPortalContainer.ownerDocument.documentElement);
    }

    return array;
  }, [componentsPortalContainer, profilerPortalContainer]);
  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    switch (displayDensity) {
      case 'comfortable':
        updateDisplayDensity('comfortable', documentElements);
        break;

      case 'compact':
        updateDisplayDensity('compact', documentElements);
        break;

      default:
        throw Error(`Unsupported displayDensity value "${displayDensity}"`);
    }
  }, [displayDensity, documentElements]);
  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    switch (theme) {
      case 'light':
        updateThemeVariables('light', documentElements);
        break;

      case 'dark':
        updateThemeVariables('dark', documentElements);
        break;

      case 'auto':
        updateThemeVariables(browserTheme, documentElements);
        break;

      default:
        throw Error(`Unsupported theme value "${theme}"`);
    }
  }, [browserTheme, theme, documentElements]);
  (0,external_react_namespaceObject.useEffect)(() => {
    bridge.send('setTraceUpdatesEnabled', traceUpdatesEnabled);
  }, [bridge, traceUpdatesEnabled]);
  const value = (0,external_react_namespaceObject.useMemo)(() => ({
    displayDensity,
    lineHeight: displayDensity === 'compact' ? COMPACT_LINE_HEIGHT : COMFORTABLE_LINE_HEIGHT,
    parseHookNames,
    setDisplayDensity,
    setParseHookNames,
    setTheme,
    setTraceUpdatesEnabled,
    theme,
    browserTheme,
    traceUpdatesEnabled
  }), [displayDensity, parseHookNames, setDisplayDensity, setParseHookNames, setTheme, setTraceUpdatesEnabled, theme, browserTheme, traceUpdatesEnabled]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(SettingsContext.Provider, {
    value: value
  }, children);
}

function updateDisplayDensity(displayDensity, documentElements) {
  // Sizes and paddings/margins are all rem-based,
  // so update the root font-size as well when the display preference changes.
  const computedStyle = getComputedStyle(document.body);
  const fontSize = computedStyle.getPropertyValue(`--${displayDensity}-root-font-size`);
  const root = document.querySelector(':root');
  root.style.fontSize = fontSize;
}
function updateThemeVariables(theme, documentElements) {
  // Update scrollbar color to match theme.
  // this CSS property is currently only supported in Firefox,
  // but it makes a significant UI improvement in dark mode.
  // https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-color
  documentElements.forEach(documentElement => {
    // $FlowFixMe[prop-missing] scrollbarColor is missing in CSSStyleDeclaration
    documentElement.style.scrollbarColor = `var(${`--${theme}-color-scroll-thumb`}) var(${`--${theme}-color-scroll-track`})`;
  });
}

// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/ButtonIcon.css
var ButtonIcon = __webpack_require__(8710);
var ButtonIcon_default = /*#__PURE__*/__webpack_require__.n(ButtonIcon);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ButtonIcon.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function ButtonIcon_ButtonIcon({
  className = '',
  type
}) {
  let pathData = null;

  switch (type) {
    case 'add':
      pathData = PATH_ADD;
      break;

    case 'cancel':
      pathData = PATH_CANCEL;
      break;

    case 'clear':
      pathData = PATH_CLEAR;
      break;

    case 'close':
      pathData = PATH_CLOSE;
      break;

    case 'collapsed':
      pathData = PATH_COLLAPSED;
      break;

    case 'copy':
      pathData = ButtonIcon_PATH_COPY;
      break;

    case 'delete':
      pathData = PATH_DELETE;
      break;

    case 'down':
      pathData = PATH_DOWN;
      break;

    case 'editor':
      pathData = PATH_EDITOR;
      break;

    case 'expanded':
      pathData = PATH_EXPANDED;
      break;

    case 'export':
      pathData = PATH_EXPORT;
      break;

    case 'filter':
      pathData = PATH_FILTER;
      break;

    case 'import':
      pathData = PATH_IMPORT;
      break;

    case 'log-data':
      pathData = PATH_LOG_DATA;
      break;

    case 'more':
      pathData = PATH_MORE;
      break;

    case 'next':
      pathData = PATH_NEXT;
      break;

    case 'parse-hook-names':
      pathData = PATH_PARSE_HOOK_NAMES;
      break;

    case 'previous':
      pathData = PATH_PREVIOUS;
      break;

    case 'record':
      pathData = PATH_RECORD;
      break;

    case 'reload':
      pathData = PATH_RELOAD;
      break;

    case 'save':
      pathData = PATH_SAVE;
      break;

    case 'search':
      pathData = ButtonIcon_PATH_SEARCH;
      break;

    case 'settings':
      pathData = ButtonIcon_PATH_SETTINGS;
      break;

    case 'error':
      pathData = ButtonIcon_PATH_ERROR;
      break;

    case 'suspend':
      pathData = PATH_SUSPEND;
      break;

    case 'undo':
      pathData = PATH_UNDO;
      break;

    case 'up':
      pathData = PATH_UP;
      break;

    case 'view-dom':
      pathData = PATH_VIEW_DOM;
      break;

    case 'view-source':
      pathData = PATH_VIEW_SOURCE;
      break;

    default:
      console.warn(`Unsupported type "${type}" specified for ButtonIcon`);
      break;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    className: `${(ButtonIcon_default()).ButtonIcon} ${className}`,
    width: "24",
    height: "24",
    viewBox: "0 0 24 24"
  }, /*#__PURE__*/external_react_namespaceObject.createElement("path", {
    d: "M0 0h24v24H0z",
    fill: "none"
  }), typeof pathData === 'string' ? /*#__PURE__*/external_react_namespaceObject.createElement("path", {
    fill: "currentColor",
    d: pathData
  }) : pathData);
}
const PATH_ADD = 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z';
const PATH_CANCEL = `
  M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z
`;
const PATH_CLEAR = `
  M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69
  16.9C4.63 15.55 4 13.85 4 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1C19.37 8.45 20 10.15 20 12c0 4.42-3.58 8-8 8z
`;
const PATH_CLOSE = 'M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z';
const PATH_COLLAPSED = 'M10 17l5-5-5-5v10z';
const ButtonIcon_PATH_COPY = `
  M3 13h2v-2H3v2zm0 4h2v-2H3v2zm2 4v-2H3a2 2 0 0 0 2 2zM3 9h2V7H3v2zm12 12h2v-2h-2v2zm4-18H9a2 2 0 0 0-2
  2v10a2 2 0 0 0 2 2h10c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 12H9V5h10v10zm-8 6h2v-2h-2v2zm-4 0h2v-2H7v2z
`;
const PATH_DELETE = `
  M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12
  13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z
`;
const PATH_DOWN = 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z';
const PATH_EXPANDED = 'M7 10l5 5 5-5z';
const PATH_EXPORT = 'M15.82,2.14v7H21l-9,9L3,9.18H8.18v-7ZM3,20.13H21v1.73H3Z';
const PATH_FILTER = 'M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z';
const PATH_IMPORT = 'M8.18,18.13v-7H3l9-8.95,9,9H15.82v7ZM3,20.13H21v1.73H3Z';
const PATH_LOG_DATA = `
  M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5c-.49 0-.96.06-1.41.17L8.41
  3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04
  1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20V8zm-6
  8h-4v-2h4v2zm0-4h-4v-2h4v2z
`;
const PATH_MORE = `
  M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9
  2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z
`;
const PATH_NEXT = 'M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z';
const PATH_PARSE_HOOK_NAMES = /*#__PURE__*/external_react_namespaceObject.createElement("g", null, /*#__PURE__*/external_react_namespaceObject.createElement("polygon", {
  points: "20,7 20.94,4.94 23,4 20.94,3.06 20,1 19.06,3.06 17,4 19.06,4.94"
}), /*#__PURE__*/external_react_namespaceObject.createElement("polygon", {
  points: "8.5,7 9.44,4.94 11.5,4 9.44,3.06 8.5,1 7.56,3.06 5.5,4 7.56,4.94"
}), /*#__PURE__*/external_react_namespaceObject.createElement("polygon", {
  points: "20,12.5 19.06,14.56 17,15.5 19.06,16.44 20,18.5 20.94,16.44 23,15.5 20.94,14.56"
}), /*#__PURE__*/external_react_namespaceObject.createElement("path", {
  d: "M17.71,9.12l-2.83-2.83C14.68,6.1,14.43,6,14.17,6c-0.26,0-0.51,0.1-0.71,0.29L2.29,17.46c-0.39,0.39-0.39,1.02,0,1.41 l2.83,2.83C5.32,21.9,5.57,22,5.83,22s0.51-0.1,0.71-0.29l11.17-11.17C18.1,10.15,18.1,9.51,17.71,9.12z M14.17,8.42l1.41,1.41 L14.41,11L13,9.59L14.17,8.42z M5.83,19.59l-1.41-1.41L11.59,11L13,12.41L5.83,19.59z"
}));
const PATH_PREVIOUS = 'M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z';
const PATH_RECORD = 'M4,12a8,8 0 1,0 16,0a8,8 0 1,0 -16,0';
const PATH_RELOAD = `
  M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0
  6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0
  3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z
`;
const PATH_SAVE = `
  M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z
`;
const ButtonIcon_PATH_SEARCH = `
  M8.5,22H3.7l-1.4-1.5V3.8l1.3-1.5h17.2l1,1.5v4.9h-1.3V4.3l-0.4-0.6H4.2L3.6,4.3V20l0.7,0.7h4.2V22z
  M23,13.9l-4.6,3.6l4.6,4.6l-1.1,1.1l-4.7-4.4l-3.3,4.4l-3.2-12.3L23,13.9z
`;
const ButtonIcon_PATH_SETTINGS = `
  M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49
  1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38
  2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11
  1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4
  1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49
  1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5
  3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z
`;
const ButtonIcon_PATH_ERROR = 'M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z';
const PATH_SUSPEND = `
  M15 1H9v2h6V1zm-4 13h2V8h-2v6zm8.03-6.61l1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97
  0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61zM12 20c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z
`;
const PATH_UNDO = `
  M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88
  3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z
`;
const PATH_UP = 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z';
const PATH_VIEW_DOM = `
  M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12
  17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3
  3-1.34 3-3-1.34-3-3-3z
`;
const PATH_VIEW_SOURCE = `
  M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z
  `;
const PATH_EDITOR = `
  M7 5h10v2h2V3c0-1.1-.9-1.99-2-1.99L7 1c-1.1 0-2 .9-2 2v4h2V5zm8.41 11.59L20 12l-4.59-4.59L14 8.83 17.17 12 14 15.17l1.41 1.42zM10 15.17L6.83 12 10 8.83 8.59 7.41 4 12l4.59 4.59L10 15.17zM17 19H7v-2H5v4c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2v-4h-2v2z
`;
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/Badge.css
var Badge = __webpack_require__(2423);
var Badge_default = /*#__PURE__*/__webpack_require__.n(Badge);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/Badge.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function Badge_Badge({
  className = '',
  children
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: `${(Badge_default()).Badge} ${className}`
  }, children);
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/Element.css
var Components_Element = __webpack_require__(6774);
var Element_default = /*#__PURE__*/__webpack_require__.n(Components_Element);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/IndexableDisplayName.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




const {
  useMemo: IndexableDisplayName_useMemo,
  useContext
} = external_react_namespaceObject;

function IndexableDisplayName({
  displayName,
  id
}) {
  const {
    searchIndex,
    searchResults,
    searchText
  } = useContext(TreeStateContext);
  const isSearchResult = IndexableDisplayName_useMemo(() => {
    return searchResults.includes(id);
  }, [id, searchResults]);
  const isCurrentResult = searchIndex !== null && id === searchResults[searchIndex];

  if (!isSearchResult || displayName === null) {
    return displayName;
  }

  const match = createRegExp(searchText).exec(displayName);

  if (match === null) {
    return displayName;
  }

  const startIndex = match.index;
  const stopIndex = startIndex + match[0].length;
  const children = [];

  if (startIndex > 0) {
    children.push( /*#__PURE__*/external_react_namespaceObject.createElement("span", {
      key: "begin"
    }, displayName.slice(0, startIndex)));
  }

  children.push( /*#__PURE__*/external_react_namespaceObject.createElement("mark", {
    key: "middle",
    className: isCurrentResult ? (Element_default()).CurrentHighlight : (Element_default()).Highlight
  }, displayName.slice(startIndex, stopIndex)));

  if (stopIndex < displayName.length) {
    children.push( /*#__PURE__*/external_react_namespaceObject.createElement("span", {
      key: "end"
    }, displayName.slice(stopIndex)));
  }

  return children;
}

/* harmony default export */ const Components_IndexableDisplayName = (IndexableDisplayName);
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Toggle.css
var Toggle = __webpack_require__(7712);
var Toggle_default = /*#__PURE__*/__webpack_require__.n(Toggle);
;// CONCATENATED MODULE: ../../node_modules/@reach/utils/can-use-dom/dist/reach-utils-can-use-dom.esm.js
function canUseDOM() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
}


;// CONCATENATED MODULE: ../../node_modules/@reach/utils/use-isomorphic-layout-effect/dist/reach-utils-use-isomorphic-layout-effect.esm.js


/**
 * React currently throws a warning when using useLayoutEffect on the server. To
 * get around it, we can conditionally useEffect on the server (no-op) and
 * useLayoutEffect in the browser. We occasionally need useLayoutEffect to
 * ensure we don't get a render flash for certain operations, but we may also
 * need affected components to render on the server. One example is when setting
 * a component's descendants to retrieve their index values.
 *
 * Important to note that using this hook as an escape hatch will break the
 * eslint dependency warnings unless you rename the import to `useLayoutEffect`.
 * Use sparingly only when the effect won't effect the rendered HTML to avoid
 * any server/client mismatch.
 *
 * If a useLayoutEffect is needed and the result would create a mismatch, it's
 * likely that the component in question shouldn't be rendered on the server at
 * all, so a better approach would be to lazily render those in a parent
 * component after client-side hydration.
 *
 * https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85
 * https://github.com/reduxjs/react-redux/blob/master/src/utils/useIsomorphicLayoutEffect.js
 *
 * @param effect
 * @param deps
 */

var useIsomorphicLayoutEffect = /*#__PURE__*/canUseDOM() ? external_react_namespaceObject.useLayoutEffect : external_react_namespaceObject.useEffect;

;// CONCATENATED MODULE: ../../node_modules/@reach/auto-id/dist/reach-auto-id.esm.js


/*
 * Welcome to @reach/auto-id!

 * Let's see if we can make sense of why this hook exists and its
 * implementation.
 *
 * Some background:
 *   1. Accessibility APIs rely heavily on element IDs
 *   2. Requiring developers to put IDs on every element in Reach UI is both
 *      cumbersome and error-prone
 *   3. With a component model, we can generate IDs for them!
 *
 * Solution 1: Generate random IDs.
 *
 * This works great as long as you don't server render your app. When React (in
 * the client) tries to reuse the markup from the server, the IDs won't match
 * and React will then recreate the entire DOM tree.
 *
 * Solution 2: Increment an integer
 *
 * This sounds great. Since we're rendering the exact same tree on the server
 * and client, we can increment a counter and get a deterministic result between
 * client and server. Also, JS integers can go up to nine-quadrillion. I'm
 * pretty sure the tab will be closed before an app never needs
 * 10 quadrillion IDs!
 *
 * Problem solved, right?
 *
 * Ah, but there's a catch! React's concurrent rendering makes this approach
 * non-deterministic. While the client and server will end up with the same
 * elements in the end, depending on suspense boundaries (and possibly some user
 * input during the initial render) the incrementing integers won't always match
 * up.
 *
 * Solution 3: Don't use IDs at all on the server; patch after first render.
 *
 * What we've done here is solution 2 with some tricks. With this approach, the
 * ID returned is an empty string on the first render. This way the server and
 * client have the same markup no matter how wild the concurrent rendering may
 * have gotten.
 *
 * After the render, we patch up the components with an incremented ID. This
 * causes a double render on any components with `useId`. Shouldn't be a problem
 * since the components using this hook should be small, and we're only updating
 * the ID attribute on the DOM, nothing big is happening.
 *
 * It doesn't have to be an incremented number, though--we could do generate
 * random strings instead, but incrementing a number is probably the cheapest
 * thing we can do.
 *
 * Additionally, we only do this patchup on the very first client render ever.
 * Any calls to `useId` that happen dynamically in the client will be
 * populated immediately with a value. So, we only get the double render after
 * server hydration and never again, SO BACK OFF ALRIGHT?
 */

var serverHandoffComplete = false;
var id = 0;

var genId = function genId() {
  return ++id;
};
/**
 * useId
 *
 * Autogenerate IDs to facilitate WAI-ARIA and server rendering.
 *
 * Note: The returned ID will initially be `null` and will update after a
 * component mounts. Users may need to supply their own ID if they need
 * consistent values for SSR.
 *
 * @see Docs https://reach.tech/auto-id
 */


function useId(idFromProps) {
  /*
   * If this instance isn't part of the initial render, we don't have to do the
   * double render/patch-up dance. We can just generate the ID and return it.
   */
  var initialId = idFromProps || (serverHandoffComplete ? genId() : null);

  var _React$useState = (0,external_react_namespaceObject.useState)(initialId),
      id = _React$useState[0],
      setId = _React$useState[1];

  useIsomorphicLayoutEffect(function () {
    if (id === null) {
      /*
       * Patch the ID after render. We do this in `useLayoutEffect` to avoid any
       * rendering flicker, though it'll make the first render slower (unlikely
       * to matter, but you're welcome to measure your app and let us know if
       * it's a problem).
       */
      setId(genId());
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, []);
  (0,external_react_namespaceObject.useEffect)(function () {
    if (serverHandoffComplete === false) {
      /*
       * Flag all future uses of `useId` to skip the update dance. This is in
       * `useEffect` because it goes after `useLayoutEffect`, ensuring we don't
       * accidentally bail out of the patch-up dance prematurely.
       */
      serverHandoffComplete = true;
    }
  }, []);
  return id != null ? String(id) : undefined;
}


;// CONCATENATED MODULE: ../../node_modules/@reach/utils/owner-document/dist/reach-utils-owner-document.esm.js

/**
 * Get an element's owner document. Useful when components are used in iframes
 * or other environments like dev tools.
 *
 * @param element
 */

function getOwnerDocument(element) {
  return canUseDOM() ? element ? element.ownerDocument : document : null;
}
/**
 * TODO: Remove in 1.0
 */


function getOwnerWindow(element) {
  var ownerDocument = getOwnerDocument(element);
  return ownerDocument ? ownerDocument.defaultView || window : null;
}


;// CONCATENATED MODULE: ../../node_modules/@reach/utils/get-document-dimensions/dist/reach-utils-get-document-dimensions.esm.js


/**
 * Get the size of the working document minus the scrollbar offset.
 *
 * @param element
 */

function getDocumentDimensions(element) {
  var _ownerDocument$docume, _ownerDocument$docume2;

  var ownerDocument = getOwnerDocument(element);
  var ownerWindow = ownerDocument.defaultView || window;

  if (!ownerDocument) {
    return {
      width: 0,
      height: 0
    };
  }

  return {
    width: (_ownerDocument$docume = ownerDocument.documentElement.clientWidth) != null ? _ownerDocument$docume : ownerWindow.innerWidth,
    height: (_ownerDocument$docume2 = ownerDocument.documentElement.clientHeight) != null ? _ownerDocument$docume2 : ownerWindow.innerHeight
  };
}


;// CONCATENATED MODULE: ../../node_modules/@reach/utils/make-id/dist/reach-utils-make-id.esm.js
/**
 * Joins strings to format IDs for compound components.
 *
 * @param args
 */
function makeId() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return args.filter(function (val) {
    return val != null;
  }).join("--");
}


;// CONCATENATED MODULE: ../../node_modules/@reach/utils/dev-utils/dist/reach-utils-dev-utils.esm.js

/* eslint-disable react-hooks/rules-of-hooks */

var checkedPkgs = {};
/**
 * Just a lil state logger
 *
 * @param state
 * @param DEBUG
 */

function useStateLogger(state, DEBUG) {
  if (DEBUG === void 0) {
    DEBUG = false;
  }

  if (false) { var debugRef; }
}
/**
 * When in dev mode, checks that styles for a given `@reach` package are loaded.
 *
 * @param packageName Name of the package to check.
 * @example checkStyles("dialog") will check for styles for @reach/dialog
 */


function checkStyles(packageName) {
  if (false) { var _ref, environment; }
}
/**
 * When in dev mode, checks that styles for a given `@reach` package are loaded.
 *
 * @param packageName Name of the package to check.
 * @example useCheckStyles("dialog") will check for styles for @reach/dialog
 */


function useCheckStyles(packageName) {
  if (false) { var name; }
}
/**
 * Logs a warning in dev mode when a component switches from controlled to
 * uncontrolled, or vice versa
 *
 * A single prop should typically be used to determine whether or not a
 * component is controlled or not.
 *
 * @param controlledValue
 * @param controlledPropName
 * @param componentName
 */


function useControlledSwitchWarning(controlledValue, controlledPropName, componentName) {
  if (false) { var nameCache, controlledRef; }
}


;// CONCATENATED MODULE: ../../node_modules/@reach/utils/type-check/dist/reach-utils-type-check.esm.js
/**
 * Checks whether or not a value is a boolean.
 *
 * @param value
 */
function isBoolean(value) {
  return typeof value === "boolean";
}
/**
 * Checks whether or not a value is a function.
 *
 * @param value
 */


function isFunction(value) {
  // eslint-disable-next-line eqeqeq
  return !!(value && {}.toString.call(value) == "[object Function]");
}
/**
 * Checks whether or not a value is a number.
 *
 * @param value
 */


function isNumber(value) {
  return typeof value === "number" && !isNaN(value);
}
/**
 * Checks whether or not a value is a string.
 *
 * @param value
 */


function isString(value) {
  return typeof value === "string";
}


;// CONCATENATED MODULE: ../../node_modules/@reach/utils/compose-refs/dist/reach-utils-compose-refs.esm.js



function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _createForOfIteratorHelperLoose(o, allowArrayLike) {
  var it;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;
      return function () {
        if (i >= o.length) return {
          done: true
        };
        return {
          done: false,
          value: o[i++]
        };
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  it = o[Symbol.iterator]();
  return it.next.bind(it);
}
/**
 * Passes or assigns an arbitrary value to a ref function or object.
 *
 * @param ref
 * @param value
 */


function assignRef(ref, value) {
  if (ref == null) return;

  if (isFunction(ref)) {
    ref(value);
  } else {
    try {
      ref.current = value;
    } catch (error) {
      throw new Error("Cannot assign value \"" + value + "\" to ref \"" + ref + "\"");
    }
  }
}
/**
 * Passes or assigns a value to multiple refs (typically a DOM node). Useful for
 * dealing with components that need an explicit ref for DOM calculations but
 * also forwards refs assigned by an app.
 *
 * @param refs Refs to fork
 */


function useComposedRefs() {
  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {
    refs[_key] = arguments[_key];
  }

  return (0,external_react_namespaceObject.useCallback)(function (node) {
    for (var _iterator = _createForOfIteratorHelperLoose(refs), _step; !(_step = _iterator()).done;) {
      var ref = _step.value;
      assignRef(ref, node);
    } // eslint-disable-next-line react-hooks/exhaustive-deps

  }, refs);
}


;// CONCATENATED MODULE: ../../node_modules/@reach/utils/compose-event-handlers/dist/reach-utils-compose-event-handlers.esm.js
/**
 * Wraps a lib-defined event handler and a user-defined event handler, returning
 * a single handler that allows a user to prevent lib-defined handlers from
 * firing.
 *
 * @param theirHandler User-supplied event handler
 * @param ourHandler Library-supplied event handler
 */
function composeEventHandlers(theirHandler, ourHandler) {
  return function (event) {
    theirHandler && theirHandler(event);

    if (!event.defaultPrevented) {
      return ourHandler(event);
    }
  };
}


;// CONCATENATED MODULE: ../../node_modules/@reach/utils/use-force-update/dist/reach-utils-use-force-update.esm.js

/**
 * Forces a re-render, similar to `forceUpdate` in class components.
 */

function useForceUpdate() {
  var _useState = (0,external_react_namespaceObject.useState)(Object.create(null)),
      dispatch = _useState[1];

  return (0,external_react_namespaceObject.useCallback)(function () {
    dispatch(Object.create(null));
  }, []);
}


;// CONCATENATED MODULE: external "react-dom"
var external_react_dom_x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var external_react_dom_y = x => () => x
const external_react_dom_namespaceObject = external_react_dom_x({ ["createPortal"]: () => __WEBPACK_EXTERNAL_MODULE_react_dom_7dac9eee__.createPortal });
;// CONCATENATED MODULE: ../../node_modules/@reach/portal/dist/reach-portal.esm.js




/**
 * Welcome to @reach/portal!
 *
 * Creates and appends a DOM node to the end of `document.body` and renders a
 * React tree into it. Useful for rendering a natural React element hierarchy
 * with a different DOM hierarchy to prevent parent styles from clipping or
 * hiding content (for popovers, dropdowns, and modals).
 *
 * @see Docs   https://reach.tech/portal
 * @see Source https://github.com/reach/reach-ui/tree/main/packages/portal
 * @see React  https://reactjs.org/docs/portals.html
 */

/**
 * Portal
 *
 * @see Docs https://reach.tech/portal#portal
 */

var Portal = function Portal(_ref) {
  var children = _ref.children,
      _ref$type = _ref.type,
      type = _ref$type === void 0 ? "reach-portal" : _ref$type;
  var mountNode = (0,external_react_namespaceObject.useRef)(null);
  var portalNode = (0,external_react_namespaceObject.useRef)(null);
  var forceUpdate = useForceUpdate();
  useIsomorphicLayoutEffect(function () {
    // This ref may be null when a hot-loader replaces components on the page
    if (!mountNode.current) return; // It's possible that the content of the portal has, itself, been portaled.
    // In that case, it's important to append to the correct document element.

    var ownerDocument = mountNode.current.ownerDocument;
    portalNode.current = ownerDocument == null ? void 0 : ownerDocument.createElement(type);
    ownerDocument.body.appendChild(portalNode.current);
    forceUpdate();
    return function () {
      if (portalNode.current && portalNode.current.ownerDocument) {
        portalNode.current.ownerDocument.body.removeChild(portalNode.current);
      }
    };
  }, [type, forceUpdate]);
  return portalNode.current ? /*#__PURE__*/(0,external_react_dom_namespaceObject.createPortal)(children, portalNode.current) : /*#__PURE__*/(0,external_react_namespaceObject.createElement)("span", {
    ref: mountNode
  });
};
/**
 * @see Docs https://reach.tech/portal#portal-props
 */


if (false) {} ////////////////////////////////////////////////////////////////////////////////


/* harmony default export */ const reach_portal_esm = ((/* unused pure expression or super */ null && (Portal)));

// EXTERNAL MODULE: ../../node_modules/prop-types/index.js
var prop_types = __webpack_require__(5505);
;// CONCATENATED MODULE: ../../node_modules/@reach/visually-hidden/dist/reach-visually-hidden.esm.js



function reach_visually_hidden_esm_extends() {
  reach_visually_hidden_esm_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return reach_visually_hidden_esm_extends.apply(this, arguments);
}

function reach_visually_hidden_esm_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var reach_visually_hidden_esm_excluded = ["as", "style"];
/**
 * VisuallyHidden
 *
 * Provides text for screen readers that is visually hidden.
 * It is the logical opposite of the `aria-hidden` attribute.
 */

var VisuallyHidden = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)(function VisuallyHidden(_ref, ref) {
  var _ref$as = _ref.as,
      Comp = _ref$as === void 0 ? "span" : _ref$as,
      _ref$style = _ref.style,
      style = _ref$style === void 0 ? {} : _ref$style,
      props = reach_visually_hidden_esm_objectWithoutPropertiesLoose(_ref, reach_visually_hidden_esm_excluded);

  return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(Comp, reach_visually_hidden_esm_extends({
    ref: ref,
    style: reach_visually_hidden_esm_extends({
      border: 0,
      clip: "rect(0 0 0 0)",
      height: "1px",
      margin: "-1px",
      overflow: "hidden",
      padding: 0,
      position: "absolute",
      width: "1px",
      // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
      whiteSpace: "nowrap",
      wordWrap: "normal"
    }, style)
  }, props));
});
/**
 * @see Docs https://reach.tech/visually-hidden#visuallyhidden-props
 */

if (false) {} ////////////////////////////////////////////////////////////////////////////////


/* harmony default export */ const reach_visually_hidden_esm = ((/* unused pure expression or super */ null && (VisuallyHidden)));

;// CONCATENATED MODULE: ../../node_modules/@reach/observe-rect/dist/observe-rect.esm.js
var props = ["bottom", "height", "left", "right", "top", "width"];

var rectChanged = function rectChanged(a, b) {
  if (a === void 0) {
    a = {};
  }

  if (b === void 0) {
    b = {};
  }

  return props.some(function (prop) {
    return a[prop] !== b[prop];
  });
};

var observedNodes = /*#__PURE__*/new Map();
var rafId;

var run = function run() {
  var changedStates = [];
  observedNodes.forEach(function (state, node) {
    var newRect = node.getBoundingClientRect();

    if (rectChanged(newRect, state.rect)) {
      state.rect = newRect;
      changedStates.push(state);
    }
  });
  changedStates.forEach(function (state) {
    state.callbacks.forEach(function (cb) {
      return cb(state.rect);
    });
  });
  rafId = window.requestAnimationFrame(run);
};

function observeRect(node, cb) {
  return {
    observe: function observe() {
      var wasEmpty = observedNodes.size === 0;

      if (observedNodes.has(node)) {
        observedNodes.get(node).callbacks.push(cb);
      } else {
        observedNodes.set(node, {
          rect: undefined,
          hasRectChanged: false,
          callbacks: [cb]
        });
      }

      if (wasEmpty) run();
    },
    unobserve: function unobserve() {
      var state = observedNodes.get(node);

      if (state) {
        // Remove the callback
        var index = state.callbacks.indexOf(cb);
        if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference

        if (!state.callbacks.length) observedNodes["delete"](node); // Stop the loop

        if (!observedNodes.size) cancelAnimationFrame(rafId);
      }
    }
  };
}

/* harmony default export */ const observe_rect_esm = (observeRect);
;// CONCATENATED MODULE: ../../node_modules/@reach/rect/dist/reach-rect.esm.js






/**
 * Welcome to @reach/rect!
 *
 * Measures DOM elements (aka. bounding client rect).
 *
 * @see getBoundingClientRect https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect
 * @see Docs                  https://reach.tech/rect
 * @see Source                https://github.com/reach/reach-ui/tree/main/packages/rect
 */

/**
 * Rect
 *
 * @param props
 */

var Rect = function Rect(_ref) {
  var onChange = _ref.onChange,
      _ref$observe = _ref.observe,
      observe = _ref$observe === void 0 ? true : _ref$observe,
      children = _ref.children;
  var ref = useRef(null);
  var rect = useRect(ref, {
    observe: observe,
    onChange: onChange
  });
  return children({
    ref: ref,
    rect: rect
  });
};
/**
 * @see Docs https://reach.tech/rect#rect-props
 */


if (false) {} ////////////////////////////////////////////////////////////////////////////////

/**
 * useRect
 *
 * @param nodeRef
 * @param observe
 * @param onChange
 */


function useRect(nodeRef, observeOrOptions, deprecated_onChange) {
  var observe;
  var onChange;

  if (isBoolean(observeOrOptions)) {
    observe = observeOrOptions;
  } else {
    var _observeOrOptions$obs;

    observe = (_observeOrOptions$obs = observeOrOptions == null ? void 0 : observeOrOptions.observe) != null ? _observeOrOptions$obs : true;
    onChange = observeOrOptions == null ? void 0 : observeOrOptions.onChange;
  }

  if (isFunction(deprecated_onChange)) {
    onChange = deprecated_onChange;
  }

  if (false) {}

  var _React$useState = (0,external_react_namespaceObject.useState)(nodeRef.current),
      element = _React$useState[0],
      setElement = _React$useState[1];

  var initialRectIsSet = (0,external_react_namespaceObject.useRef)(false);
  var initialRefIsSet = (0,external_react_namespaceObject.useRef)(false);

  var _React$useState2 = (0,external_react_namespaceObject.useState)(null),
      rect = _React$useState2[0],
      setRect = _React$useState2[1];

  var onChangeRef = (0,external_react_namespaceObject.useRef)(onChange); // eslint-disable-next-line react-hooks/exhaustive-deps

  useIsomorphicLayoutEffect(function () {
    onChangeRef.current = onChange;

    if (nodeRef.current !== element) {
      setElement(nodeRef.current);
    }
  });
  useIsomorphicLayoutEffect(function () {
    if (element && !initialRectIsSet.current) {
      initialRectIsSet.current = true;
      setRect(element.getBoundingClientRect());
    }
  }, [element]);
  useIsomorphicLayoutEffect(function () {
    if (!observe) {
      return;
    }

    var elem = element; // State initializes before refs are placed, meaning the element state will
    // be undefined on the first render. We still want the rect on the first
    // render, so initially we'll use the nodeRef that was passed instead of
    // state for our measurements.

    if (!initialRefIsSet.current) {
      initialRefIsSet.current = true;
      elem = nodeRef.current;
    }

    if (!elem) {
      if (false) {}

      return;
    }

    var observer = observe_rect_esm(elem, function (rect) {
      onChangeRef.current == null ? void 0 : onChangeRef.current(rect);
      setRect(rect);
    });
    observer.observe();
    return function () {
      observer.unobserve();
    };
  }, [observe, element, nodeRef]);
  return rect;
}

/* harmony default export */ const reach_rect_esm = ((/* unused pure expression or super */ null && (Rect)));

;// CONCATENATED MODULE: ../../node_modules/@reach/tooltip/dist/reach-tooltip.esm.js














function reach_tooltip_esm_extends() {
  reach_tooltip_esm_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return reach_tooltip_esm_extends.apply(this, arguments);
}

function reach_tooltip_esm_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var reach_tooltip_esm_excluded = ["children", "label", "ariaLabel", "id", "DEBUG_STYLE"],
    reach_tooltip_esm_excluded2 = ["label", "ariaLabel", "isVisible", "id"],
    _excluded3 = ["ariaLabel", "aria-label", "as", "id", "isVisible", "label", "position", "style", "triggerRect"],
    _excluded4 = ["type"];

var _on, _on2, _on3, _on4, _on5, _states;

var MOUSE_REST_TIMEOUT = 100;
var LEAVE_TIMEOUT = 500; ////////////////////////////////////////////////////////////////////////////////
// States

var TooltipStates; ////////////////////////////////////////////////////////////////////////////////
// Events

(function (TooltipStates) {
  TooltipStates["Idle"] = "IDLE";
  TooltipStates["Focused"] = "FOCUSED";
  TooltipStates["Visible"] = "VISIBLE";
  TooltipStates["LeavingVisible"] = "LEAVING_VISIBLE";
  TooltipStates["Dismissed"] = "DISMISSED";
})(TooltipStates || (TooltipStates = {}));

var TooltipEvents;

(function (TooltipEvents) {
  TooltipEvents["Blur"] = "BLUR";
  TooltipEvents["Focus"] = "FOCUS";
  TooltipEvents["GlobalMouseMove"] = "GLOBAL_MOUSE_MOVE";
  TooltipEvents["MouseDown"] = "MOUSE_DOWN";
  TooltipEvents["MouseEnter"] = "MOUSE_ENTER";
  TooltipEvents["MouseLeave"] = "MOUSE_LEAVE";
  TooltipEvents["MouseMove"] = "MOUSE_MOVE";
  TooltipEvents["Rest"] = "REST";
  TooltipEvents["SelectWithKeyboard"] = "SELECT_WITH_KEYBOARD";
  TooltipEvents["TimeComplete"] = "TIME_COMPLETE";
})(TooltipEvents || (TooltipEvents = {}));

var chart = {
  initial: TooltipStates.Idle,
  states: (_states = {}, _states[TooltipStates.Idle] = {
    enter: clearContextId,
    on: (_on = {}, _on[TooltipEvents.MouseEnter] = TooltipStates.Focused, _on[TooltipEvents.Focus] = TooltipStates.Visible, _on)
  }, _states[TooltipStates.Focused] = {
    enter: startRestTimer,
    leave: clearRestTimer,
    on: (_on2 = {}, _on2[TooltipEvents.MouseMove] = TooltipStates.Focused, _on2[TooltipEvents.MouseLeave] = TooltipStates.Idle, _on2[TooltipEvents.MouseDown] = TooltipStates.Dismissed, _on2[TooltipEvents.Blur] = TooltipStates.Idle, _on2[TooltipEvents.Rest] = TooltipStates.Visible, _on2)
  }, _states[TooltipStates.Visible] = {
    on: (_on3 = {}, _on3[TooltipEvents.Focus] = TooltipStates.Focused, _on3[TooltipEvents.MouseEnter] = TooltipStates.Focused, _on3[TooltipEvents.MouseLeave] = TooltipStates.LeavingVisible, _on3[TooltipEvents.Blur] = TooltipStates.LeavingVisible, _on3[TooltipEvents.MouseDown] = TooltipStates.Dismissed, _on3[TooltipEvents.SelectWithKeyboard] = TooltipStates.Dismissed, _on3[TooltipEvents.GlobalMouseMove] = TooltipStates.LeavingVisible, _on3)
  }, _states[TooltipStates.LeavingVisible] = {
    enter: startLeavingVisibleTimer,
    leave: function leave() {
      clearLeavingVisibleTimer();
      clearContextId();
    },
    on: (_on4 = {}, _on4[TooltipEvents.MouseEnter] = TooltipStates.Visible, _on4[TooltipEvents.Focus] = TooltipStates.Visible, _on4[TooltipEvents.TimeComplete] = TooltipStates.Idle, _on4)
  }, _states[TooltipStates.Dismissed] = {
    leave: function leave() {
      clearContextId();
    },
    on: (_on5 = {}, _on5[TooltipEvents.MouseLeave] = TooltipStates.Idle, _on5[TooltipEvents.Blur] = TooltipStates.Idle, _on5)
  }, _states)
};
/*
 * Chart context allows us to persist some data around, in Tooltip all we use
 * is the id of the current tooltip being interacted with.
 */

var state = {
  value: chart.initial,
  context: {
    id: null
  }
}; ////////////////////////////////////////////////////////////////////////////////
// Subscriptions:
//
// We could require apps to render a <TooltipProvider> around the app and use
// React context to notify Tooltips of changes to our state machine, instead
// we manage subscriptions ourselves and simplify the Tooltip API.
//
// Maybe if default context could take a hook (instead of just a static value)
// that was rendered at the root for us, that'd be cool! But it doesn't.

var subscriptions = [];

function subscribe(fn) {
  subscriptions.push(fn);
  return function () {
    subscriptions.splice(subscriptions.indexOf(fn), 1);
  };
}

function notify() {
  subscriptions.forEach(function (fn) {
    return fn(state);
  });
} ////////////////////////////////////////////////////////////////////////////////
// Timeouts:
// Manages when the user "rests" on an element. Keeps the interface from being
// flashing tooltips all the time as the user moves the mouse around the screen.


var restTimeout;

function startRestTimer() {
  window.clearTimeout(restTimeout);
  restTimeout = window.setTimeout(function () {
    send({
      type: TooltipEvents.Rest
    });
  }, MOUSE_REST_TIMEOUT);
}

function clearRestTimer() {
  window.clearTimeout(restTimeout);
} // Manages the delay to hide the tooltip after rest leaves.


var leavingVisibleTimer;

function startLeavingVisibleTimer() {
  window.clearTimeout(leavingVisibleTimer);
  leavingVisibleTimer = window.setTimeout(function () {
    return send({
      type: TooltipEvents.TimeComplete
    });
  }, LEAVE_TIMEOUT);
}

function clearLeavingVisibleTimer() {
  window.clearTimeout(leavingVisibleTimer);
} // allows us to come on back later w/o entering something else first after the
// user leaves or dismisses


function clearContextId() {
  state.context.id = null;
} ////////////////////////////////////////////////////////////////////////////////

/**
 * useTooltip
 *
 * @param params
 */


function useTooltip(_temp) {
  var _ref = _temp === void 0 ? {} : _temp,
      idProp = _ref.id,
      onPointerEnter = _ref.onPointerEnter,
      onPointerMove = _ref.onPointerMove,
      onPointerLeave = _ref.onPointerLeave,
      onPointerDown = _ref.onPointerDown,
      onMouseEnter = _ref.onMouseEnter,
      onMouseMove = _ref.onMouseMove,
      onMouseLeave = _ref.onMouseLeave,
      onMouseDown = _ref.onMouseDown,
      onFocus = _ref.onFocus,
      onBlur = _ref.onBlur,
      onKeyDown = _ref.onKeyDown,
      disabled = _ref.disabled,
      forwardedRef = _ref.ref,
      DEBUG_STYLE = _ref.DEBUG_STYLE;

  var id = String(useId(idProp));

  var _React$useState = (0,external_react_namespaceObject.useState)(DEBUG_STYLE ? true : isTooltipVisible(id, true)),
      isVisible = _React$useState[0],
      setIsVisible = _React$useState[1]; // hopefully they always pass a ref if they ever pass one


  var ownRef = (0,external_react_namespaceObject.useRef)(null);
  var ref = useComposedRefs(forwardedRef, ownRef);
  var triggerRect = useRect(ownRef, {
    observe: isVisible
  });
  (0,external_react_namespaceObject.useEffect)(function () {
    return subscribe(function () {
      setIsVisible(isTooltipVisible(id));
    });
  }, [id]);
  useCheckStyles("tooltip");
  (0,external_react_namespaceObject.useEffect)(function () {
    var ownerDocument = getOwnerDocument(ownRef.current);

    function listener(event) {
      if ((event.key === "Escape" || event.key === "Esc") && state.value === TooltipStates.Visible) {
        send({
          type: TooltipEvents.SelectWithKeyboard
        });
      }
    }

    ownerDocument.addEventListener("keydown", listener);
    return function () {
      return ownerDocument.removeEventListener("keydown", listener);
    };
  }, []);
  useDisabledTriggerOnSafari({
    disabled: disabled,
    isVisible: isVisible,
    ref: ownRef
  });

  function wrapMouseEvent(theirHandler, ourHandler) {
    // Use internal MouseEvent handler only if PointerEvent is not supported
    if (typeof window !== "undefined" && "PointerEvent" in window) {
      return theirHandler;
    }

    return composeEventHandlers(theirHandler, ourHandler);
  }

  function wrapPointerEventHandler(handler) {
    return function onPointerEvent(event) {
      // Handle pointer events only from mouse device
      if (event.pointerType !== "mouse") {
        return;
      }

      handler(event);
    };
  }

  function handleMouseEnter() {
    send({
      type: TooltipEvents.MouseEnter,
      id: id
    });
  }

  function handleMouseMove() {
    send({
      type: TooltipEvents.MouseMove,
      id: id
    });
  }

  function handleMouseLeave() {
    send({
      type: TooltipEvents.MouseLeave
    });
  }

  function handleMouseDown() {
    // Allow quick click from one tool to another
    if (state.context.id === id) {
      send({
        type: TooltipEvents.MouseDown
      });
    }
  }

  function handleFocus() {
    // @ts-ignore
    if (window.__REACH_DISABLE_TOOLTIPS) {
      return;
    }

    send({
      type: TooltipEvents.Focus,
      id: id
    });
  }

  function handleBlur() {
    // Allow quick click from one tool to another
    if (state.context.id === id) {
      send({
        type: TooltipEvents.Blur
      });
    }
  }

  function handleKeyDown(event) {
    if (event.key === "Enter" || event.key === " ") {
      send({
        type: TooltipEvents.SelectWithKeyboard
      });
    }
  }

  var trigger = {
    // The element that triggers the tooltip references the tooltip element with
    // `aria-describedby`.
    // https://www.w3.org/TR/wai-aria-practices-1.2/#tooltip
    "aria-describedby": isVisible ? makeId("tooltip", id) : undefined,
    "data-state": isVisible ? "tooltip-visible" : "tooltip-hidden",
    "data-reach-tooltip-trigger": "",
    ref: ref,
    onPointerEnter: composeEventHandlers(onPointerEnter, wrapPointerEventHandler(handleMouseEnter)),
    onPointerMove: composeEventHandlers(onPointerMove, wrapPointerEventHandler(handleMouseMove)),
    onPointerLeave: composeEventHandlers(onPointerLeave, wrapPointerEventHandler(handleMouseLeave)),
    onPointerDown: composeEventHandlers(onPointerDown, wrapPointerEventHandler(handleMouseDown)),
    onMouseEnter: wrapMouseEvent(onMouseEnter, handleMouseEnter),
    onMouseMove: wrapMouseEvent(onMouseMove, handleMouseMove),
    onMouseLeave: wrapMouseEvent(onMouseLeave, handleMouseLeave),
    onMouseDown: wrapMouseEvent(onMouseDown, handleMouseDown),
    onFocus: composeEventHandlers(onFocus, handleFocus),
    onBlur: composeEventHandlers(onBlur, handleBlur),
    onKeyDown: composeEventHandlers(onKeyDown, handleKeyDown)
  };
  var tooltip = {
    id: id,
    triggerRect: triggerRect,
    isVisible: isVisible
  };
  return [trigger, tooltip, isVisible];
} ////////////////////////////////////////////////////////////////////////////////

/**
 * Tooltip
 *
 * @see Docs https://reach.tech/tooltip#tooltip
 */


var Tooltip = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)(function (_ref2, forwardedRef) {
  var children = _ref2.children,
      label = _ref2.label,
      DEPRECATED_ariaLabel = _ref2.ariaLabel,
      id = _ref2.id,
      DEBUG_STYLE = _ref2.DEBUG_STYLE,
      props = reach_tooltip_esm_objectWithoutPropertiesLoose(_ref2, reach_tooltip_esm_excluded);

  var child = external_react_namespaceObject.Children.only(children);
   false ? 0 : void 0; // We need to pass some properties from the child into useTooltip
  // to make sure users can maintain control over the trigger's ref and events

  var _useTooltip = useTooltip({
    id: id,
    onPointerEnter: child.props.onPointerEnter,
    onPointerMove: child.props.onPointerMove,
    onPointerLeave: child.props.onPointerLeave,
    onPointerDown: child.props.onPointerDown,
    onMouseEnter: child.props.onMouseEnter,
    onMouseMove: child.props.onMouseMove,
    onMouseLeave: child.props.onMouseLeave,
    onMouseDown: child.props.onMouseDown,
    onFocus: child.props.onFocus,
    onBlur: child.props.onBlur,
    onKeyDown: child.props.onKeyDown,
    disabled: child.props.disabled,
    ref: child.ref,
    DEBUG_STYLE: DEBUG_STYLE
  }),
      trigger = _useTooltip[0],
      tooltip = _useTooltip[1];

  return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(external_react_namespaceObject.Fragment, null, /*#__PURE__*/(0,external_react_namespaceObject.cloneElement)(child, trigger), /*#__PURE__*/(0,external_react_namespaceObject.createElement)(TooltipPopup, reach_tooltip_esm_extends({
    ref: forwardedRef,
    label: label,
    "aria-label": DEPRECATED_ariaLabel
  }, tooltip, props)));
});

if (false) {} ////////////////////////////////////////////////////////////////////////////////

/**
 * TooltipPopup
 *
 * @see Docs https://reach.tech/tooltip#tooltippopup
 */


var TooltipPopup = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)(function TooltipPopup(_ref3, forwardRef) {
  var label = _ref3.label,
      DEPRECATED_ariaLabel = _ref3.ariaLabel,
      isVisible = _ref3.isVisible,
      id = _ref3.id,
      props = reach_tooltip_esm_objectWithoutPropertiesLoose(_ref3, reach_tooltip_esm_excluded2);

  return isVisible ? /*#__PURE__*/(0,external_react_namespaceObject.createElement)(Portal, null, /*#__PURE__*/(0,external_react_namespaceObject.createElement)(TooltipContent, reach_tooltip_esm_extends({
    ref: forwardRef,
    label: label,
    "aria-label": DEPRECATED_ariaLabel,
    isVisible: isVisible
  }, props, {
    id: makeId("tooltip", String(id))
  }))) : null;
});

if (false) {}
/**
 * TooltipContent
 *
 * We need a separate component so that useRect works inside the portal.
 *
 * @see Docs https://reach.tech/tooltip#tooltipcontent
 */


var TooltipContent = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)(function TooltipContent(_ref4, forwardedRef) {
  var ariaLabel = _ref4.ariaLabel,
      realAriaLabel = _ref4["aria-label"],
      _ref4$as = _ref4.as,
      Comp = _ref4$as === void 0 ? "div" : _ref4$as,
      id = _ref4.id,
      isVisible = _ref4.isVisible,
      label = _ref4.label,
      _ref4$position = _ref4.position,
      position = _ref4$position === void 0 ? positionTooltip : _ref4$position,
      style = _ref4.style,
      triggerRect = _ref4.triggerRect,
      props = reach_tooltip_esm_objectWithoutPropertiesLoose(_ref4, _excluded3); // The element that serves as the tooltip container has role tooltip.
  // https://www.w3.org/TR/wai-aria-practices-1.2/#tooltip When an app passes
  // an `aria-label`, we actually want to implement `role="tooltip"` on a
  // visually hidden element inside of the trigger. In these cases we want the
  // screen reader user to know both the content in the tooltip, but also the
  // content in the badge. For screen reader users, the only content announced
  // to them is whatever is in the tooltip.


  var hasAriaLabel = (realAriaLabel || ariaLabel) != null;
  var ownRef = (0,external_react_namespaceObject.useRef)(null);
  var ref = useComposedRefs(forwardedRef, ownRef);
  var tooltipRect = useRect(ownRef, {
    observe: isVisible
  });
  return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(external_react_namespaceObject.Fragment, null, /*#__PURE__*/(0,external_react_namespaceObject.createElement)(Comp, reach_tooltip_esm_extends({
    role: hasAriaLabel ? undefined : "tooltip"
  }, props, {
    ref: ref,
    "data-reach-tooltip": "",
    id: hasAriaLabel ? undefined : id,
    style: reach_tooltip_esm_extends({}, style, getStyles(position, triggerRect, tooltipRect))
  }), label), hasAriaLabel && /*#__PURE__*/(0,external_react_namespaceObject.createElement)(VisuallyHidden, {
    role: "tooltip",
    id: id
  }, realAriaLabel || ariaLabel));
});

if (false) {} ////////////////////////////////////////////////////////////////////////////////


function getStyles(position, triggerRect, tooltipRect) {
  var haventMeasuredTooltipYet = !tooltipRect;

  if (haventMeasuredTooltipYet) {
    return {
      visibility: "hidden"
    };
  }

  return position(triggerRect, tooltipRect);
} // Default offset from the trigger (e.g., if the tooltip is positioned above,
// there will be 8px between the bottom of the tooltip and the top of the trigger).
// It feels awkward when it's perfectly aligned w/ the trigger


var OFFSET_DEFAULT = 8;

var positionTooltip = function positionTooltip(triggerRect, tooltipRect, offset) {
  if (offset === void 0) {
    offset = OFFSET_DEFAULT;
  }

  var _getDocumentDimension = getDocumentDimensions(),
      windowWidth = _getDocumentDimension.width,
      windowHeight = _getDocumentDimension.height;

  if (!triggerRect || !tooltipRect) {
    return {};
  }

  var collisions = {
    top: triggerRect.top - tooltipRect.height < 0,
    right: windowWidth < triggerRect.left + tooltipRect.width,
    bottom: windowHeight < triggerRect.bottom + tooltipRect.height + offset,
    left: triggerRect.left - tooltipRect.width < 0
  };
  var directionRight = collisions.right && !collisions.left;
  var directionUp = collisions.bottom && !collisions.top;
  return {
    left: directionRight ? triggerRect.right - tooltipRect.width + window.pageXOffset + "px" : triggerRect.left + window.pageXOffset + "px",
    top: directionUp ? triggerRect.top - offset - tooltipRect.height + window.pageYOffset + "px" : triggerRect.top + offset + triggerRect.height + window.pageYOffset + "px"
  };
};
/**
 * This is a workaround for using tooltips with disabled controls in Safari.
 * Safari fires `pointerenter` but does not fire `pointerleave`, and
 * `onPointerEventLeave` added to the trigger element will not work.
 *
 * TODO: We may remove or modiify this behavior in a future version. Direction
 * from WAI-ARIA needed for guidance on handling disabled triggers. Tooltips
 * must be accessible by keyboard, and disabled form controls are generally
 * excluded from the tab sequence.
 *
 * @see https://github.com/reach/reach-ui/issues/564
 * @see https://github.com/w3c/aria-practices/issues/128#issuecomment-588625727
 */


function useDisabledTriggerOnSafari(_ref5) {
  var disabled = _ref5.disabled,
      isVisible = _ref5.isVisible,
      ref = _ref5.ref;
  (0,external_react_namespaceObject.useEffect)(function () {
    if (!(typeof window !== "undefined" && "PointerEvent" in window) || !disabled || !isVisible) {
      return;
    }

    var ownerDocument = getOwnerDocument(ref.current);

    function handleMouseMove(event) {
      if (!isVisible) {
        return;
      }

      if (event.target instanceof Element && event.target.closest("[data-reach-tooltip-trigger][data-state='tooltip-visible']")) {
        return;
      }

      send({
        type: TooltipEvents.GlobalMouseMove
      });
    }

    ownerDocument.addEventListener("mousemove", handleMouseMove);
    return function () {
      ownerDocument.removeEventListener("mousemove", handleMouseMove);
    };
  }, [disabled, isVisible, ref]);
} ////////////////////////////////////////////////////////////////////////////////

/**
 * Send an event to our state machine to find the next state from the current
 * state + action.
 *
 * It also manages lifecycles of the machine, (enter/leave hooks on the state
 * chart)
 *
 * @param event
 * @param payload
 */


function send(event) {
  var _transition = transition(state, event),
      value = _transition.value,
      context = _transition.context,
      changed = _transition.changed;

  if (changed) {
    state = {
      value: value,
      context: context
    };
    notify();
  }
}

function transition(currentState, event) {
  var stateDef = chart.states[currentState.value];
  var nextState = stateDef && stateDef.on && stateDef.on[event.type]; // Really useful for debugging
  // console.log({ event, state, nextState, contextId: context.id });
  // !nextState && console.log("no transition taken");

  if (!nextState) {
    return reach_tooltip_esm_extends({}, currentState, {
      changed: false
    });
  }

  if (stateDef && stateDef.leave) {
    stateDef.leave(currentState.context, event);
  }

  event.type;

  var payload = reach_tooltip_esm_objectWithoutPropertiesLoose(event, _excluded4); // TODO: Use actions instead of directly setting context


  var context = reach_tooltip_esm_extends({}, state.context, payload);

  var nextStateValue = typeof nextState === "string" ? nextState : nextState.target;
  var nextDef = chart.states[nextStateValue];

  if (nextDef && nextDef.enter) {
    nextDef.enter(currentState.context, event);
  }

  return {
    value: nextStateValue,
    context: context,
    changed: true
  };
}

function isTooltipVisible(id, initial) {
  return state.context.id === id && (initial ? state.value === TooltipStates.Visible : state.value === TooltipStates.Visible || state.value === TooltipStates.LeavingVisible);
} ////////////////////////////////////////////////////////////////////////////////


/* harmony default export */ const reach_tooltip_esm = (Tooltip);

// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/reach-ui/Tooltip.css
var reach_ui_Tooltip = __webpack_require__(1463);
var Tooltip_default = /*#__PURE__*/__webpack_require__.n(reach_ui_Tooltip);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/useThemeStyles.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




const useThemeStyles = () => {
  const {
    theme,
    displayDensity,
    browserTheme
  } = (0,external_react_namespaceObject.useContext)(SettingsContext);
  const style = (0,external_react_namespaceObject.useMemo)(() => ({ ...THEME_STYLES[displayDensity],
    ...THEME_STYLES[theme === 'auto' ? browserTheme : theme]
  }), [theme, browserTheme, displayDensity]);
  return style;
};

/* harmony default export */ const views_useThemeStyles = (useThemeStyles);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/reach-ui/tooltip.js
function tooltip_extends() { tooltip_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return tooltip_extends.apply(this, arguments); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





const tooltip_Tooltip = ({
  children,
  className = '',
  ...props
}) => {
  const style = views_useThemeStyles();
  return (
    /*#__PURE__*/
    // $FlowFixMe[cannot-spread-inexact] unsafe spread
    external_react_namespaceObject.createElement(reach_tooltip_esm, tooltip_extends({
      className: `${(Tooltip_default()).Tooltip} ${className}`,
      style: style
    }, props), children)
  );
};

/* harmony default export */ const tooltip = (tooltip_Tooltip);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Toggle.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




function Toggle_Toggle({
  children,
  className = '',
  isDisabled = false,
  isChecked,
  onChange,
  testName,
  title
}) {
  let defaultClassName;

  if (isDisabled) {
    defaultClassName = (Toggle_default()).ToggleDisabled;
  } else if (isChecked) {
    defaultClassName = (Toggle_default()).ToggleOn;
  } else {
    defaultClassName = (Toggle_default()).ToggleOff;
  }

  const handleClick = (0,external_react_namespaceObject.useCallback)(() => onChange(!isChecked), [isChecked, onChange]);
  let toggle = /*#__PURE__*/external_react_namespaceObject.createElement("button", {
    className: `${defaultClassName} ${className}`,
    "data-testname": testName,
    disabled: isDisabled,
    onClick: handleClick
  }, /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (Toggle_default()).ToggleContent,
    tabIndex: -1
  }, children));

  if (title) {
    toggle = /*#__PURE__*/external_react_namespaceObject.createElement(tooltip, {
      label: title
    }, toggle);
  }

  return toggle;
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/ForgetBadge.css
var ForgetBadge = __webpack_require__(1390);
var ForgetBadge_default = /*#__PURE__*/__webpack_require__.n(ForgetBadge);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/ForgetBadge.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





function ForgetBadge_ForgetBadge(props) {
  const {
    className = ''
  } = props;
  const innerView = props.indexable ? /*#__PURE__*/external_react_namespaceObject.createElement(Components_IndexableDisplayName, {
    displayName: "Memo",
    id: props.elementID
  }) : 'Memo';

  const onChange = () => {};

  const title = '✨ This component has been auto-memoized by the React Compiler.';
  return /*#__PURE__*/external_react_namespaceObject.createElement(Toggle_Toggle, {
    onChange: onChange,
    className: (ForgetBadge_default()).ForgetToggle,
    title: title
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Badge_Badge, {
    className: `${(ForgetBadge_default()).Root} ${className}`
  }, innerView));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/IndexableElementBadges.css
var IndexableElementBadges = __webpack_require__(6720);
var IndexableElementBadges_default = /*#__PURE__*/__webpack_require__.n(IndexableElementBadges);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/IndexableElementBadges.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





function IndexableElementBadges_IndexableElementBadges({
  compiledWithForget,
  hocDisplayNames,
  elementID,
  className = ''
}) {
  if (!compiledWithForget && (hocDisplayNames == null || hocDisplayNames.length === 0)) {
    return null;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: `${(IndexableElementBadges_default()).Root} ${className}`
  }, compiledWithForget && /*#__PURE__*/external_react_namespaceObject.createElement(ForgetBadge_ForgetBadge, {
    indexable: true,
    elementID: elementID
  }), hocDisplayNames != null && hocDisplayNames.length > 0 && /*#__PURE__*/external_react_namespaceObject.createElement(Badge_Badge, null, /*#__PURE__*/external_react_namespaceObject.createElement(Components_IndexableDisplayName, {
    displayName: hocDisplayNames[0],
    id: elementID
  })), hocDisplayNames != null && hocDisplayNames.length > 1 && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (IndexableElementBadges_default()).ExtraLabel
  }, "+", hocDisplayNames.length - 1));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/Element.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */












function Element_Element({
  data,
  index,
  style
}) {
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    ownerFlatTree,
    ownerID,
    inspectedElementID
  } = (0,external_react_namespaceObject.useContext)(TreeStateContext);
  const dispatch = (0,external_react_namespaceObject.useContext)(TreeDispatcherContext);
  const element = ownerFlatTree !== null ? ownerFlatTree[index] : store.getElementAtIndex(index);
  const [isHovered, setIsHovered] = (0,external_react_namespaceObject.useState)(false);
  const {
    isNavigatingWithKeyboard,
    onElementMouseEnter,
    treeFocused
  } = data;
  const id = element === null ? null : element.id;
  const isSelected = inspectedElementID === id;
  const errorsAndWarningsSubscription = (0,external_react_namespaceObject.useMemo)(() => ({
    getCurrentValue: () => element === null ? {
      errorCount: 0,
      warningCount: 0
    } : store.getErrorAndWarningCountForElementID(element.id),
    subscribe: callback => {
      store.addListener('mutated', callback);
      return () => store.removeListener('mutated', callback);
    }
  }), [store, element]);
  const {
    errorCount,
    warningCount
  } = useSubscription(errorsAndWarningsSubscription);

  const handleDoubleClick = () => {
    if (id !== null) {
      dispatch({
        type: 'SELECT_OWNER',
        payload: id
      });
    }
  }; // $FlowFixMe[missing-local-annot]


  const handleClick = ({
    metaKey
  }) => {
    if (id !== null) {
      logEvent({
        event_name: 'select-element',
        metadata: {
          source: 'click-element'
        }
      });
      dispatch({
        type: 'SELECT_ELEMENT_BY_ID',
        payload: metaKey ? null : id
      });
    }
  };

  const handleMouseEnter = () => {
    setIsHovered(true);

    if (id !== null) {
      onElementMouseEnter(id);
    }
  };

  const handleMouseLeave = () => {
    setIsHovered(false);
  }; // $FlowFixMe[missing-local-annot]


  const handleKeyDoubleClick = event => {
    // Double clicks on key value are used for text selection (if the text has been truncated).
    // They should not enter the owners tree view.
    event.stopPropagation();
    event.preventDefault();
  }; // Handle elements that are removed from the tree while an async render is in progress.


  if (element == null) {
    console.warn(`<Element> Could not find element at index ${index}`); // This return needs to happen after hooks, since hooks can't be conditional.

    return null;
  }

  const {
    depth,
    displayName,
    hocDisplayNames,
    isStrictModeNonCompliant,
    key,
    compiledWithForget
  } = element; // Only show strict mode non-compliance badges for top level elements.
  // Showing an inline badge for every element in the tree would be noisy.

  const showStrictModeBadge = isStrictModeNonCompliant && depth === 0;
  let className = (Element_default()).Element;

  if (isSelected) {
    className = treeFocused ? (Element_default()).SelectedElement : (Element_default()).InactiveSelectedElement;
  } else if (isHovered && !isNavigatingWithKeyboard) {
    className = (Element_default()).HoveredElement;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: className,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    onMouseDown: handleClick,
    onDoubleClick: handleDoubleClick,
    style: style,
    "data-testname": "ComponentTreeListItem",
    "data-depth": depth
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Element_default()).Wrapper,
    style: {
      // Left offset presents the appearance of a nested tree structure.
      // We must use padding rather than margin/left because of the selected background color.
      transform: `translateX(calc(${depth} * var(--indentation-size)))`
    }
  }, ownerID === null && /*#__PURE__*/external_react_namespaceObject.createElement(ExpandCollapseToggle, {
    element: element,
    store: store
  }), /*#__PURE__*/external_react_namespaceObject.createElement(Components_IndexableDisplayName, {
    displayName: displayName,
    id: id
  }), key && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, "\xA0", /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (Element_default()).KeyName
  }, "key"), "=\"", /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (Element_default()).KeyValue,
    title: key,
    onDoubleClick: handleKeyDoubleClick
  }, /*#__PURE__*/external_react_namespaceObject.createElement("pre", null, key)), "\""), /*#__PURE__*/external_react_namespaceObject.createElement(IndexableElementBadges_IndexableElementBadges, {
    hocDisplayNames: hocDisplayNames,
    compiledWithForget: compiledWithForget,
    elementID: id,
    className: (Element_default()).BadgesBlock
  }), errorCount > 0 && /*#__PURE__*/external_react_namespaceObject.createElement(Icon_Icon, {
    type: "error",
    className: isSelected && treeFocused ? (Element_default()).ErrorIconContrast : (Element_default()).ErrorIcon
  }), warningCount > 0 && /*#__PURE__*/external_react_namespaceObject.createElement(Icon_Icon, {
    type: "warning",
    className: isSelected && treeFocused ? (Element_default()).WarningIconContrast : (Element_default()).WarningIcon
  }), showStrictModeBadge && /*#__PURE__*/external_react_namespaceObject.createElement(Icon_Icon, {
    className: isSelected && treeFocused ? (Element_default()).StrictModeContrast : (Element_default()).StrictMode,
    title: "This component is not running in StrictMode.",
    type: "strict-mode-non-compliant"
  })));
} // Prevent double clicks on toggle from drilling into the owner list.
// $FlowFixMe[missing-local-annot]

const swallowDoubleClick = event => {
  event.preventDefault();
  event.stopPropagation();
};

function ExpandCollapseToggle({
  element,
  store
}) {
  const {
    children,
    id,
    isCollapsed
  } = element; // $FlowFixMe[missing-local-annot]

  const toggleCollapsed = event => {
    event.preventDefault();
    event.stopPropagation();
    store.toggleIsCollapsed(id, !isCollapsed);
  }; // $FlowFixMe[missing-local-annot]


  const stopPropagation = event => {
    // Prevent the row from selecting
    event.stopPropagation();
  };

  if (children.length === 0) {
    return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (Element_default()).ExpandCollapseToggle
    });
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Element_default()).ExpandCollapseToggle,
    onMouseDown: stopPropagation,
    onClick: toggleCollapsed,
    onDoubleClick: swallowDoubleClick
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: isCollapsed ? 'collapsed' : 'expanded'
  }));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectHostNodesToggle.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






function InspectHostNodesToggle() {
  const [isInspecting, setIsInspecting] = (0,external_react_namespaceObject.useState)(false);
  const bridge = (0,external_react_namespaceObject.useContext)(BridgeContext);
  const handleChange = (0,external_react_namespaceObject.useCallback)(isChecked => {
    setIsInspecting(isChecked);

    if (isChecked) {
      logEvent({
        event_name: 'inspect-element-button-clicked'
      });
      bridge.send('startInspectingHost');
    } else {
      bridge.send('stopInspectingHost', false);
    }
  }, [bridge]);
  (0,external_react_namespaceObject.useEffect)(() => {
    const onStopInspectingHost = () => setIsInspecting(false);

    bridge.addListener('stopInspectingHost', onStopInspectingHost);
    return () => bridge.removeListener('stopInspectingHost', onStopInspectingHost);
  }, [bridge]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(Toggle_Toggle, {
    onChange: handleChange,
    isChecked: isInspecting,
    title: "Select an element in the page to inspect it"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "search"
  }));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Button.css
var Button = __webpack_require__(2709);
var Button_default = /*#__PURE__*/__webpack_require__.n(Button);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Button.js
function Button_extends() { Button_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Button_extends.apply(this, arguments); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



function Button_Button({
  children,
  className = '',
  testName,
  title,
  ...rest
}) {
  let button =
  /*#__PURE__*/
  // $FlowFixMe[cannot-spread-inexact] unsafe spread
  external_react_namespaceObject.createElement("button", Button_extends({
    className: `${(Button_default()).Button} ${className}`,
    "data-testname": testName
  }, rest), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: `${(Button_default()).ButtonContent} ${className}`,
    tabIndex: -1
  }, children));

  if (title) {
    button = /*#__PURE__*/external_react_namespaceObject.createElement(tooltip, {
      label: title
    }, button);
  }

  return button;
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/ElementBadges.css
var ElementBadges = __webpack_require__(5732);
var ElementBadges_default = /*#__PURE__*/__webpack_require__.n(ElementBadges);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/ElementBadges.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




function ElementBadges_ElementBadges({
  compiledWithForget,
  hocDisplayNames,
  className = ''
}) {
  if (!compiledWithForget && (hocDisplayNames == null || hocDisplayNames.length === 0)) {
    return null;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: `${(ElementBadges_default()).Root} ${className}`
  }, compiledWithForget && /*#__PURE__*/external_react_namespaceObject.createElement(ForgetBadge_ForgetBadge, {
    indexable: false
  }), hocDisplayNames != null && hocDisplayNames.length > 0 && /*#__PURE__*/external_react_namespaceObject.createElement(Badge_Badge, null, hocDisplayNames[0]), hocDisplayNames != null && hocDisplayNames.length > 1 && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (ElementBadges_default()).ExtraLabel
  }, "+", hocDisplayNames.length - 1));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/cache.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

 // TODO (cache) Remove this cache; it is outdated and will not work with newer APIs like startTransition.
// Cache implementation was forked from the React repo:
// https://github.com/facebook/react/blob/main/packages/react-cache/src/ReactCacheOld.js
//
// This cache is simpler than react-cache in that:
// 1. Individual items don't need to be invalidated.
//    Profiling data is invalidated as a whole.
// 2. We didn't need the added overhead of an LRU cache.
//    The size of this cache is bounded by how many renders were profiled,
//    and it will be fully reset between profiling sessions.

const Pending = 0;
const Resolved = 1;
const Rejected = 2;
let readContext;

if (typeof external_react_namespaceObject.use === 'function') {
  readContext = function (Context) {
    return external_react_namespaceObject.use(Context);
  };
} else if (typeof external_react_namespaceObject.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === 'object') {
  const ReactCurrentDispatcher = external_react_namespaceObject.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;

  readContext = function (Context) {
    const dispatcher = ReactCurrentDispatcher.current;

    if (dispatcher === null) {
      throw new Error('react-cache: read and preload may only be called from within a ' + "component's render. They are not supported in event handlers or " + 'lifecycle methods.');
    }

    return dispatcher.readContext(Context);
  };
} else {
  throw new Error('react-cache: Unsupported React version');
}

const CacheContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
const entries = new Map();
const resourceConfigs = new Map();

function getEntriesForResource(resource) {
  let entriesForResource = entries.get(resource);

  if (entriesForResource === undefined) {
    const config = resourceConfigs.get(resource);
    entriesForResource = config !== undefined && config.useWeakMap ? new WeakMap() : new Map();
    entries.set(resource, entriesForResource);
  }

  return entriesForResource;
}

function accessResult(resource, fetch, input, key) {
  const entriesForResource = getEntriesForResource(resource);
  const entry = entriesForResource.get(key);

  if (entry === undefined) {
    const thenable = fetch(input);
    thenable.then(value => {
      if (newResult.status === Pending) {
        const resolvedResult = newResult;
        resolvedResult.status = Resolved;
        resolvedResult.value = value;
      }
    }, error => {
      if (newResult.status === Pending) {
        const rejectedResult = newResult;
        rejectedResult.status = Rejected;
        rejectedResult.value = error;
      }
    });
    const newResult = {
      status: Pending,
      value: thenable
    };
    entriesForResource.set(key, newResult);
    return newResult;
  } else {
    return entry;
  }
}

function createResource(fetch, hashInput, config = {}) {
  const resource = {
    clear() {
      entries.delete(resource);
    },

    invalidate(key) {
      const entriesForResource = getEntriesForResource(resource);
      entriesForResource.delete(key);
    },

    read(input) {
      // Prevent access outside of render.
      readContext(CacheContext);
      const key = hashInput(input);
      const result = accessResult(resource, fetch, input, key);

      switch (result.status) {
        case Pending:
          {
            const suspender = result.value;
            throw suspender;
          }

        case Resolved:
          {
            const value = result.value;
            return value;
          }

        case Rejected:
          {
            const error = result.value;
            throw error;
          }

        default:
          // Should be unreachable
          return undefined;
      }
    },

    preload(input) {
      // Prevent access outside of render.
      readContext(CacheContext);
      const key = hashInput(input);
      accessResult(resource, fetch, input, key);
    },

    write(key, value) {
      const entriesForResource = getEntriesForResource(resource);
      const resolvedResult = {
        status: Resolved,
        value
      };
      entriesForResource.set(key, resolvedResult);
    }

  };
  resourceConfigs.set(resource, config);
  return resource;
}
function invalidateResources() {
  entries.clear();
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/OwnersListContext.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






const OwnersListContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
OwnersListContext.displayName = 'OwnersListContext';
const inProgressRequests = new WeakMap();
const resource = createResource(element => {
  const request = inProgressRequests.get(element);

  if (request != null) {
    return request.promise;
  }

  let resolveFn = null;
  const promise = new Promise(resolve => {
    resolveFn = resolve;
  }); // $FlowFixMe[incompatible-call] found when upgrading Flow

  inProgressRequests.set(element, {
    promise,
    resolveFn
  });
  return promise;
}, element => element, {
  useWeakMap: true
});

function OwnersListContextController({
  children
}) {
  const bridge = (0,external_react_namespaceObject.useContext)(BridgeContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    ownerID
  } = (0,external_react_namespaceObject.useContext)(TreeStateContext);
  const read = (0,external_react_namespaceObject.useCallback)(id => {
    const element = store.getElementByID(id);

    if (element !== null) {
      return resource.read(element);
    } else {
      return null;
    }
  }, [store]);
  (0,external_react_namespaceObject.useEffect)(() => {
    const onOwnersList = ownersList => {
      const id = ownersList.id;
      const element = store.getElementByID(id);

      if (element !== null) {
        const request = inProgressRequests.get(element);

        if (request != null) {
          inProgressRequests.delete(element);
          request.resolveFn(ownersList.owners === null ? null : ownersList.owners.map(backendToFrontendSerializedElementMapper));
        }
      }
    };

    bridge.addListener('ownersList', onOwnersList);
    return () => bridge.removeListener('ownersList', onOwnersList);
  }, [bridge, store]); // This effect requests an updated owners list any time the selected owner changes

  (0,external_react_namespaceObject.useEffect)(() => {
    if (ownerID !== null) {
      const rendererID = store.getRendererIDForElement(ownerID);

      if (rendererID !== null) {
        bridge.send('getOwnersList', {
          id: ownerID,
          rendererID
        });
      }
    }

    return () => {};
  }, [bridge, ownerID, store]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(OwnersListContext.Provider, {
    value: read
  }, children);
}


// EXTERNAL MODULE: ../../node_modules/tabbable/index.js
var tabbable = __webpack_require__(5753);
var tabbable_default = /*#__PURE__*/__webpack_require__.n(tabbable);
;// CONCATENATED MODULE: ../../node_modules/@reach/popover/dist/reach-popover.esm.js







function reach_popover_esm_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function reach_popover_esm_extends() {
  reach_popover_esm_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return reach_popover_esm_extends.apply(this, arguments);
}

var reach_popover_esm_excluded = ["as", "targetRef", "position", "unstable_observableRefs"]; ////////////////////////////////////////////////////////////////////////////////

/**
 * Popover
 */

var reach_popover_esm_Popover = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)(function Popover(props, ref) {
  return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(Portal, null, /*#__PURE__*/(0,external_react_namespaceObject.createElement)(PopoverImpl, reach_popover_esm_extends({
    ref: ref
  }, props)));
});

if (false) {} ////////////////////////////////////////////////////////////////////////////////

/**
 * PopoverImpl
 *
 * Popover is conditionally rendered so we can't start measuring until it shows
 * up, so useRect needs to live down here not up in Popover
 */


var PopoverImpl = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)(function PopoverImpl(_ref, forwardedRef) {
  var _ref$as = _ref.as,
      Comp = _ref$as === void 0 ? "div" : _ref$as,
      targetRef = _ref.targetRef,
      _ref$position = _ref.position,
      position = _ref$position === void 0 ? positionDefault : _ref$position,
      _ref$unstable_observa = _ref.unstable_observableRefs,
      unstable_observableRefs = _ref$unstable_observa === void 0 ? [] : _ref$unstable_observa,
      props = reach_popover_esm_objectWithoutPropertiesLoose(_ref, reach_popover_esm_excluded);

  var popoverRef = (0,external_react_namespaceObject.useRef)(null);
  var popoverRect = useRect(popoverRef, {
    observe: !props.hidden
  });
  var targetRect = useRect(targetRef, {
    observe: !props.hidden
  });
  var ref = useComposedRefs(popoverRef, forwardedRef);
  useSimulateTabNavigationForReactTree(targetRef, popoverRef);
  return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(Comp, reach_popover_esm_extends({
    "data-reach-popover": "",
    ref: ref
  }, props, {
    style: reach_popover_esm_extends({
      position: "absolute"
    }, reach_popover_esm_getStyles.apply(void 0, [position, targetRect, popoverRect].concat(unstable_observableRefs)), props.style)
  }));
});

if (false) {} ////////////////////////////////////////////////////////////////////////////////


function reach_popover_esm_getStyles(position, targetRect, popoverRect) {
  for (var _len = arguments.length, unstable_observableRefs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    unstable_observableRefs[_key - 3] = arguments[_key];
  }

  return popoverRect ? position.apply(void 0, [targetRect, popoverRect].concat(unstable_observableRefs.map(function (ref) {
    return ref.current;
  }))) : {
    visibility: "hidden"
  };
}

function getTopPosition(targetRect, popoverRect, isDirectionUp) {
  return {
    top: isDirectionUp ? targetRect.top - popoverRect.height + window.pageYOffset + "px" : targetRect.top + targetRect.height + window.pageYOffset + "px"
  };
}

var positionDefault = function positionDefault(targetRect, popoverRect) {
  if (!targetRect || !popoverRect) {
    return {};
  }

  var _getCollisions = getCollisions(targetRect, popoverRect),
      directionRight = _getCollisions.directionRight,
      directionUp = _getCollisions.directionUp;

  return reach_popover_esm_extends({
    left: directionRight ? targetRect.right - popoverRect.width + window.pageXOffset + "px" : targetRect.left + window.pageXOffset + "px"
  }, getTopPosition(targetRect, popoverRect, directionUp));
};

var positionRight = function positionRight(targetRect, popoverRect) {
  if (!targetRect || !popoverRect) {
    return {};
  }

  var _getCollisions2 = getCollisions(targetRect, popoverRect),
      directionLeft = _getCollisions2.directionLeft,
      directionUp = _getCollisions2.directionUp;

  return reach_popover_esm_extends({
    left: directionLeft ? targetRect.left + window.pageXOffset + "px" : targetRect.right - popoverRect.width + window.pageXOffset + "px"
  }, getTopPosition(targetRect, popoverRect, directionUp));
};

var positionMatchWidth = function positionMatchWidth(targetRect, popoverRect) {
  if (!targetRect || !popoverRect) {
    return {};
  }

  var _getCollisions3 = getCollisions(targetRect, popoverRect),
      directionUp = _getCollisions3.directionUp;

  return reach_popover_esm_extends({
    width: targetRect.width,
    left: targetRect.left
  }, getTopPosition(targetRect, popoverRect, directionUp));
};

function getCollisions(targetRect, popoverRect, offsetLeft, offsetBottom) {
  if (offsetLeft === void 0) {
    offsetLeft = 0;
  }

  if (offsetBottom === void 0) {
    offsetBottom = 0;
  }

  var collisions = {
    top: targetRect.top - popoverRect.height < 0,
    right: window.innerWidth < targetRect.left + popoverRect.width - offsetLeft,
    bottom: window.innerHeight < targetRect.bottom + popoverRect.height - offsetBottom,
    left: targetRect.left + targetRect.width - popoverRect.width < 0
  };
  var directionRight = collisions.right && !collisions.left;
  var directionLeft = collisions.left && !collisions.right;
  var directionUp = collisions.bottom && !collisions.top;
  var directionDown = collisions.top && !collisions.bottom;
  return {
    directionRight: directionRight,
    directionLeft: directionLeft,
    directionUp: directionUp,
    directionDown: directionDown
  };
} // Heads up, my jQuery past haunts this function. This hook scopes the tab
// order to the React element tree, instead of the DOM tree. This way, when the
// user navigates with tab from the targetRef, the tab order moves into the
// popup, and then out of the popup back to the rest of the document.
// (We call targetRef, triggerRef inside this function to avoid confusion with
// event.target)


function useSimulateTabNavigationForReactTree(triggerRef, popoverRef) {
  var ownerDocument = getOwnerDocument(triggerRef.current);

  function handleKeyDown(event) {
    if (event.key === "Tab" && popoverRef.current && tabbable_default()(popoverRef.current).length === 0) {
      return;
    }

    if (event.key === "Tab" && event.shiftKey) {
      if (shiftTabbedFromElementAfterTrigger(event)) {
        focusLastTabbableInPopover(event);
      } else if (shiftTabbedOutOfPopover(event)) {
        focusTriggerRef(event);
      } else if (shiftTabbedToBrowserChrome(event)) {
        disableTabbablesInPopover();
      }
    } else if (event.key === "Tab") {
      if (tabbedFromTriggerToPopover()) {
        focusFirstPopoverTabbable(event);
      } else if (tabbedOutOfPopover()) {
        focusTabbableAfterTrigger(event);
      } else if (tabbedToBrowserChrome(event)) {
        disableTabbablesInPopover();
      }
    }
  }

  (0,external_react_namespaceObject.useEffect)(function () {
    ownerDocument.addEventListener("keydown", handleKeyDown);
    return function () {
      ownerDocument.removeEventListener("keydown", handleKeyDown);
    }; // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  function getElementAfterTrigger() {
    var elements = tabbable_default()(ownerDocument);
    var targetIndex = elements && triggerRef.current ? elements.indexOf(triggerRef.current) : -1;
    var elementAfterTrigger = elements && elements[targetIndex + 1];
    return popoverRef.current && popoverRef.current.contains(elementAfterTrigger || null) ? false : elementAfterTrigger;
  }

  function tabbedFromTriggerToPopover() {
    return triggerRef.current ? triggerRef.current === ownerDocument.activeElement : false;
  }

  function focusFirstPopoverTabbable(event) {
    var elements = popoverRef.current && tabbable_default()(popoverRef.current);

    if (elements && elements[0]) {
      event.preventDefault();
      elements[0].focus();
    }
  }

  function tabbedOutOfPopover() {
    var inPopover = popoverRef.current ? popoverRef.current.contains(ownerDocument.activeElement || null) : false;

    if (inPopover) {
      var elements = popoverRef.current && tabbable_default()(popoverRef.current);
      return Boolean(elements && elements[elements.length - 1] === ownerDocument.activeElement);
    }

    return false;
  }

  function focusTabbableAfterTrigger(event) {
    var elementAfterTrigger = getElementAfterTrigger();

    if (elementAfterTrigger) {
      event.preventDefault();
      elementAfterTrigger.focus();
    }
  }

  function shiftTabbedFromElementAfterTrigger(event) {
    if (!event.shiftKey) return;
    var elementAfterTrigger = getElementAfterTrigger();
    return event.target === elementAfterTrigger;
  }

  function focusLastTabbableInPopover(event) {
    var elements = popoverRef.current && tabbable_default()(popoverRef.current);
    var last = elements && elements[elements.length - 1];

    if (last) {
      event.preventDefault();
      last.focus();
    }
  }

  function shiftTabbedOutOfPopover(event) {
    var elements = popoverRef.current && tabbable_default()(popoverRef.current);

    if (elements) {
      return elements.length === 0 ? false : event.target === elements[0];
    }

    return false;
  }

  function focusTriggerRef(event) {
    var _triggerRef$current;

    event.preventDefault();
    (_triggerRef$current = triggerRef.current) == null ? void 0 : _triggerRef$current.focus();
  }

  function tabbedToBrowserChrome(event) {
    var elements = popoverRef.current ? tabbable_default()(ownerDocument).filter(function (element) {
      return !popoverRef.current.contains(element);
    }) : null;
    return elements ? event.target === elements[elements.length - 1] : false;
  }

  function shiftTabbedToBrowserChrome(event) {
    // we're assuming the popover will never contain the first tabbable
    // element, and it better not, because the trigger needs to be tabbable!
    return event.target === tabbable_default()(ownerDocument)[0];
  }

  var restoreTabIndexTuplés = [];

  function disableTabbablesInPopover() {
    var elements = popoverRef.current && tabbable_default()(popoverRef.current);

    if (elements) {
      elements.forEach(function (element) {
        restoreTabIndexTuplés.push([element, element.tabIndex]);
        element.tabIndex = -1;
      });
      ownerDocument.addEventListener("focusin", enableTabbablesInPopover);
    }
  }

  function enableTabbablesInPopover() {
    ownerDocument.removeEventListener("focusin", enableTabbablesInPopover);
    restoreTabIndexTuplés.forEach(function (_ref2) {
      var element = _ref2[0],
          tabIndex = _ref2[1];
      element.tabIndex = tabIndex;
    });
  }
} ////////////////////////////////////////////////////////////////////////////////


/* harmony default export */ const reach_popover_esm = ((/* unused pure expression or super */ null && (reach_popover_esm_Popover)));

;// CONCATENATED MODULE: ../../node_modules/@reach/utils/context/dist/reach-utils-context.esm.js


function createNamedContext(name, defaultValue) {
  var Ctx = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(defaultValue);

  if (false) {}

  return Ctx;
}


;// CONCATENATED MODULE: ../../node_modules/@reach/utils/noop/dist/reach-utils-noop.esm.js
function reach_utils_noop_esm_noop() {}


;// CONCATENATED MODULE: ../../node_modules/@reach/descendants/dist/reach-descendants.esm.js






function reach_descendants_esm_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function reach_descendants_esm_extends() {
  reach_descendants_esm_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return reach_descendants_esm_extends.apply(this, arguments);
}

var reach_descendants_esm_excluded = ["element", "index"];

function createDescendantContext(name, initialValue) {
  if (initialValue === void 0) {
    initialValue = {};
  }

  var descendants = [];
  return createNamedContext(name, reach_descendants_esm_extends({
    descendants: descendants,
    registerDescendant: reach_utils_noop_esm_noop,
    unregisterDescendant: reach_utils_noop_esm_noop
  }, initialValue));
}
/**
 * This hook registers our descendant by passing it into an array. We can then
 * search that array by to find its index when registering it in the component.
 * We use this for focus management, keyboard navigation, and typeahead
 * functionality for some components.
 *
 * The hook accepts the element node and (optionally) a key. The key is useful
 * if multiple descendants have identical text values and we need to
 * differentiate siblings for some reason.
 *
 * Our main goals with this are:
 *   1) maximum composability,
 *   2) minimal API friction
 *   3) SSR compatibility*
 *   4) concurrent safe
 *   5) index always up-to-date with the tree despite changes
 *   6) works with memoization of any component in the tree (hopefully)
 *
 * As for SSR, the good news is that we don't actually need the index on the
 * server for most use-cases, as we are only using it to determine the order of
 * composed descendants for keyboard navigation. However, in the few cases where
 * this is not the case, we can require an explicit index from the app.
 */


function useDescendant(descendant, context, indexProp) {
  var forceUpdate = useForceUpdate();

  var _React$useContext = (0,external_react_namespaceObject.useContext)(context),
      registerDescendant = _React$useContext.registerDescendant,
      unregisterDescendant = _React$useContext.unregisterDescendant,
      descendants = _React$useContext.descendants; // This will initially return -1 because we haven't registered the descendant
  // on the first render. After we register, this will then return the correct
  // index on the following render and we will re-register descendants so that
  // everything is up-to-date before the user interacts with a collection.


  var index = indexProp != null ? indexProp : descendants.findIndex(function (item) {
    return item.element === descendant.element;
  }); // Prevent any flashing

  useIsomorphicLayoutEffect(function () {
    if (!descendant.element) forceUpdate();
    registerDescendant(reach_descendants_esm_extends({}, descendant, {
      index: index
    }));
    return function () {
      unregisterDescendant(descendant.element);
    };
  }, [descendant, forceUpdate, index, registerDescendant, unregisterDescendant].concat(Object.values(descendant)));
  return index;
}

function useDescendantsInit() {
  return (0,external_react_namespaceObject.useState)([]);
}

function useDescendants(ctx) {
  return (0,external_react_namespaceObject.useContext)(ctx).descendants;
}

function DescendantProvider(_ref) {
  var Ctx = _ref.context,
      children = _ref.children,
      items = _ref.items,
      set = _ref.set;
  var registerDescendant = (0,external_react_namespaceObject.useCallback)(function (_ref2) {
    var element = _ref2.element,
        explicitIndex = _ref2.index,
        rest = reach_descendants_esm_objectWithoutPropertiesLoose(_ref2, reach_descendants_esm_excluded);

    if (!element) {
      return;
    }

    set(function (items) {
      var newItems;

      if (explicitIndex != null) {
        return [].concat(items, [reach_descendants_esm_extends({}, rest, {
          element: element,
          index: explicitIndex
        })]).sort(function (a, b) {
          return a.index - b.index;
        });
      } else if (items.length === 0) {
        // If there are no items, register at index 0 and bail.
        newItems = [reach_descendants_esm_extends({}, rest, {
          element: element,
          index: 0
        })];
      } else if (items.find(function (item) {
        return item.element === element;
      })) {
        // If the element is already registered, just use the same array
        newItems = items;
      } else {
        // When registering a descendant, we need to make sure we insert in
        // into the array in the same order that it appears in the DOM. So as
        // new descendants are added or maybe some are removed, we always know
        // that the array is up-to-date and correct.
        //
        // So here we look at our registered descendants and see if the new
        // element we are adding appears earlier than an existing descendant's
        // DOM node via `node.compareDocumentPosition`. If it does, we insert
        // the new element at this index. Because `registerDescendant` will be
        // called in an effect every time the descendants state value changes,
        // we should be sure that this index is accurate when descendent
        // elements come or go from our component.
        var index = items.findIndex(function (item) {
          if (!item.element || !element) {
            return false;
          } // Does this element's DOM node appear before another item in the
          // array in our DOM tree? If so, return true to grab the index at
          // this point in the array so we know where to insert the new
          // element.


          return Boolean(item.element.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_PRECEDING);
        });

        var newItem = reach_descendants_esm_extends({}, rest, {
          element: element,
          index: index
        }); // If an index is not found we will push the element to the end.


        if (index === -1) {
          newItems = [].concat(items, [newItem]);
        } else {
          newItems = [].concat(items.slice(0, index), [newItem], items.slice(index));
        }
      }

      return newItems.map(function (item, index) {
        return reach_descendants_esm_extends({}, item, {
          index: index
        });
      });
    });
  }, // set is a state setter initialized by the useDescendantsInit hook.
  // We can safely ignore the lint warning here because it will not change
  // between renders.
  // eslint-disable-next-line react-hooks/exhaustive-deps
  []);
  var unregisterDescendant = (0,external_react_namespaceObject.useCallback)(function (element) {
    if (!element) {
      return;
    }

    set(function (items) {
      return items.filter(function (item) {
        return element !== item.element;
      });
    });
  }, // set is a state setter initialized by the useDescendantsInit hook.
  // We can safely ignore the lint warning here because it will not change
  // between renders.
  // eslint-disable-next-line react-hooks/exhaustive-deps
  []);
  return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(Ctx.Provider, {
    value: (0,external_react_namespaceObject.useMemo)(function () {
      return {
        descendants: items,
        registerDescendant: registerDescendant,
        unregisterDescendant: unregisterDescendant
      };
    }, [items, registerDescendant, unregisterDescendant])
  }, children);
}
/**
 * Testing this as an abstraction for compound components that use keyboard
 * navigation. Hoping this will help us prevent bugs and mismatched behavior
 * across various components, but it may also prove to be too messy of an
 * abstraction in the end.
 *
 * Currently used in:
 *   - Tabs
 *   - Accordion
 *
 * @param context
 * @param options
 */


function useDescendantKeyDown(context, options) {
  var _React$useContext2 = (0,external_react_namespaceObject.useContext)(context),
      descendants = _React$useContext2.descendants;

  var callback = options.callback,
      currentIndex = options.currentIndex,
      filter = options.filter,
      _options$key = options.key,
      key = _options$key === void 0 ? "index" : _options$key,
      _options$orientation = options.orientation,
      orientation = _options$orientation === void 0 ? "vertical" : _options$orientation,
      _options$rotate = options.rotate,
      rotate = _options$rotate === void 0 ? true : _options$rotate,
      _options$rtl = options.rtl,
      rtl = _options$rtl === void 0 ? false : _options$rtl;
  return function handleKeyDown(event) {
    if (!["ArrowDown", "ArrowUp", "ArrowLeft", "ArrowRight", "PageUp", "PageDown", "Home", "End"].includes(event.key)) {
      return;
    }

    var index = currentIndex != null ? currentIndex : -1; // If we use a filter function, we need to re-index our descendants array
    // so that filtered descendent elements aren't selected.

    var selectableDescendants = filter ? descendants.filter(filter) : descendants; // We need some options for any of this to work!

    if (!selectableDescendants.length) {
      return;
    }

    var selectableIndex = selectableDescendants.findIndex(function (descendant) {
      return descendant.index === currentIndex;
    });

    function getNextOption() {
      var atBottom = index === getLastOption().index;
      return atBottom ? rotate ? getFirstOption() : selectableDescendants[selectableIndex] : selectableDescendants[(selectableIndex + 1) % selectableDescendants.length];
    }

    function getPreviousOption() {
      var atTop = index === getFirstOption().index;
      return atTop ? rotate ? getLastOption() : selectableDescendants[selectableIndex] : selectableDescendants[(selectableIndex - 1 + selectableDescendants.length) % selectableDescendants.length];
    }

    function getFirstOption() {
      return selectableDescendants[0];
    }

    function getLastOption() {
      return selectableDescendants[selectableDescendants.length - 1];
    }

    switch (event.key) {
      case "ArrowDown":
        if (orientation === "vertical" || orientation === "both") {
          event.preventDefault();
          var next = getNextOption();
          callback(key === "option" ? next : next[key]);
        }

        break;

      case "ArrowUp":
        if (orientation === "vertical" || orientation === "both") {
          event.preventDefault();
          var prev = getPreviousOption();
          callback(key === "option" ? prev : prev[key]);
        }

        break;

      case "ArrowLeft":
        if (orientation === "horizontal" || orientation === "both") {
          event.preventDefault();
          var nextOrPrev = (rtl ? getNextOption : getPreviousOption)();
          callback(key === "option" ? nextOrPrev : nextOrPrev[key]);
        }

        break;

      case "ArrowRight":
        if (orientation === "horizontal" || orientation === "both") {
          event.preventDefault();
          var prevOrNext = (rtl ? getPreviousOption : getNextOption)();
          callback(key === "option" ? prevOrNext : prevOrNext[key]);
        }

        break;

      case "PageUp":
        event.preventDefault();
        var prevOrFirst = (event.ctrlKey ? getPreviousOption : getFirstOption)();
        callback(key === "option" ? prevOrFirst : prevOrFirst[key]);
        break;

      case "Home":
        event.preventDefault();
        var first = getFirstOption();
        callback(key === "option" ? first : first[key]);
        break;

      case "PageDown":
        event.preventDefault();
        var nextOrLast = (event.ctrlKey ? getNextOption : getLastOption)();
        callback(key === "option" ? nextOrLast : nextOrLast[key]);
        break;

      case "End":
        event.preventDefault();
        var last = getLastOption();
        callback(key === "option" ? last : last[key]);
        break;
    }
  };
} ////////////////////////////////////////////////////////////////////////////////



;// CONCATENATED MODULE: ../../node_modules/@reach/utils/is-right-click/dist/reach-utils-is-right-click.esm.js
/**
 * Detects right clicks
 *
 * @param nativeEvent
 */
function isRightClick(nativeEvent) {
  return "which" in nativeEvent ? nativeEvent.which === 3 : "button" in nativeEvent ? nativeEvent.button === 2 : false;
}


;// CONCATENATED MODULE: ../../node_modules/@reach/utils/use-previous/dist/reach-utils-use-previous.esm.js

/**
 * Returns the previous value of a reference after a component update.
 *
 * @param value
 */

function usePrevious(value) {
  var ref = (0,external_react_namespaceObject.useRef)(null);
  (0,external_react_namespaceObject.useEffect)(function () {
    ref.current = value;
  }, [value]);
  return ref.current;
}


;// CONCATENATED MODULE: ../../node_modules/@reach/utils/use-stateful-ref-value/dist/reach-utils-use-stateful-ref-value.esm.js


function useStatefulRefValue(ref, initialState) {
  var _useState = (0,external_react_namespaceObject.useState)(initialState),
      state = _useState[0],
      setState = _useState[1];

  var callbackRef = (0,external_react_namespaceObject.useCallback)(function (refValue) {
    ref.current = refValue;
    setState(refValue); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  return [state, callbackRef];
}


;// CONCATENATED MODULE: ../../node_modules/@reach/dropdown/dist/reach-dropdown.esm.js














function reach_dropdown_esm_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function reach_dropdown_esm_extends() {
  reach_dropdown_esm_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return reach_dropdown_esm_extends.apply(this, arguments);
}

var reach_dropdown_esm_excluded = ["onKeyDown", "onMouseDown", "id", "ref"],
    reach_dropdown_esm_excluded2 = (/* unused pure expression or super */ null && (["as"])),
    reach_dropdown_esm_excluded3 = ["index", "isLink", "onClick", "onDragStart", "onMouseDown", "onMouseEnter", "onMouseLeave", "onMouseMove", "onMouseUp", "onSelect", "disabled", "onFocus", "valueText", "ref"],
    reach_dropdown_esm_excluded4 = (/* unused pure expression or super */ null && (["as"])),
    _excluded5 = ["id", "onKeyDown", "ref"],
    _excluded6 = (/* unused pure expression or super */ null && (["as"])),
    _excluded7 = ["onBlur", "portal", "position", "ref"],
    _excluded8 = (/* unused pure expression or super */ null && (["as"])); ////////////////////////////////////////////////////////////////////////////////
// Actions

var CLEAR_SELECTION_INDEX = "CLEAR_SELECTION_INDEX";
var CLICK_MENU_ITEM = "CLICK_MENU_ITEM";
var CLOSE_MENU = "CLOSE_MENU";
var OPEN_MENU_AT_FIRST_ITEM = "OPEN_MENU_AT_FIRST_ITEM";
var OPEN_MENU_AT_INDEX = "OPEN_MENU_AT_INDEX";
var OPEN_MENU_CLEARED = "OPEN_MENU_CLEARED";
var SEARCH_FOR_ITEM = "SEARCH_FOR_ITEM";
var SELECT_ITEM_AT_INDEX = "SELECT_ITEM_AT_INDEX";
var SET_BUTTON_ID = "SET_BUTTON_ID";
var DropdownDescendantContext = /*#__PURE__*/createDescendantContext("DropdownDescendantContext");
var DropdownContext = /*#__PURE__*/createNamedContext("DropdownContext", {});
var initialState = {
  // The button ID is needed for aria controls and can be set directly and
  // updated for top-level use via context. Otherwise a default is set by useId.
  // TODO: Consider deprecating direct ID in 1.0 in favor of id at the top level
  //       for passing deterministic IDs to descendent components.
  triggerId: null,
  // Whether or not the dropdown is expanded
  isExpanded: false,
  // When a user begins typing a character string, the selection will change if
  // a matching item is found
  typeaheadQuery: "",
  // The index of the current selected item. When the selection is cleared a
  // value of -1 is used.
  selectionIndex: -1
}; ////////////////////////////////////////////////////////////////////////////////
// Dropdown!

var DropdownProvider = function DropdownProvider(_ref) {
  var id = _ref.id,
      children = _ref.children;
  var triggerRef = (0,external_react_namespaceObject.useRef)(null);
  var dropdownRef = (0,external_react_namespaceObject.useRef)(null);
  var popoverRef = (0,external_react_namespaceObject.useRef)(null);

  var _useDescendantsInit = useDescendantsInit(),
      descendants = _useDescendantsInit[0],
      setDescendants = _useDescendantsInit[1];

  var _id = useId(id);

  var dropdownId = id || makeId("menu", _id);
  var triggerId = makeId("menu-button", dropdownId);

  var _React$useReducer = (0,external_react_namespaceObject.useReducer)(reducer, reach_dropdown_esm_extends({}, initialState, {
    triggerId: triggerId
  })),
      state = _React$useReducer[0],
      dispatch = _React$useReducer[1]; // We use an event listener attached to the window to capture outside clicks
  // that close the dropdown. We don't want the initial button click to trigger
  // this when a dropdown is closed, so we can track this behavior in a ref for
  // now. We shouldn't need this when we rewrite with state machine logic.


  var triggerClickedRef = (0,external_react_namespaceObject.useRef)(false); // We will put children callbacks in a ref to avoid triggering endless render
  // loops when using render props if the app code doesn't useCallback
  // https://github.com/reach/reach-ui/issues/523

  var selectCallbacks = (0,external_react_namespaceObject.useRef)([]); // If the popover's position overlaps with an option when the popover
  // initially opens, the mouseup event will trigger a select. To prevent that,
  // we decide the control is only ready to make a selection if the pointer
  // moves a certain distance OR if the mouse button is pressed for a certain
  // length of time, otherwise the user is just registering the initial button
  // click rather than selecting an item.
  // For context on some implementation details, see https://github.com/reach/reach-ui/issues/563

  var readyToSelect = (0,external_react_namespaceObject.useRef)(false);
  var mouseDownStartPosRef = (0,external_react_namespaceObject.useRef)({
    x: 0,
    y: 0
  }); // Trying a new approach for splitting up contexts by stable/unstable
  // references. We'll see how it goes!

  var context = {
    dispatch: dispatch,
    dropdownId: dropdownId,
    dropdownRef: dropdownRef,
    mouseDownStartPosRef: mouseDownStartPosRef,
    popoverRef: popoverRef,
    readyToSelect: readyToSelect,
    selectCallbacks: selectCallbacks,
    state: state,
    triggerClickedRef: triggerClickedRef,
    triggerRef: triggerRef
  }; // When the dropdown is open, focus is placed on the dropdown itself so that
  // keyboard navigation is still possible.

  (0,external_react_namespaceObject.useEffect)(function () {
    if (state.isExpanded) {
      // @ts-ignore
      window.__REACH_DISABLE_TOOLTIPS = true;
      window.requestAnimationFrame(function () {
        reach_dropdown_esm_focus(dropdownRef.current);
      });
    } else {
      // We want to ignore the immediate focus of a tooltip so it doesn't pop up
      // again when the dropdown closes, only pops up when focus returns again
      // to the tooltip (like native OS tooltips).
      // @ts-ignore
      window.__REACH_DISABLE_TOOLTIPS = false;
    }
  }, [state.isExpanded]);
  return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(DescendantProvider, {
    context: DropdownDescendantContext,
    items: descendants,
    set: setDescendants
  }, /*#__PURE__*/(0,external_react_namespaceObject.createElement)(DropdownContext.Provider, {
    value: context
  }, isFunction(children) ? children({
    isExpanded: state.isExpanded,
    // TODO: Remove in 1.0
    isOpen: state.isExpanded
  }) : children));
};

if (false) {} ////////////////////////////////////////////////////////////////////////////////


function useDropdownTrigger(_ref2) {
  var onKeyDown = _ref2.onKeyDown,
      onMouseDown = _ref2.onMouseDown,
      id = _ref2.id,
      forwardedRef = _ref2.ref,
      props = reach_dropdown_esm_objectWithoutPropertiesLoose(_ref2, reach_dropdown_esm_excluded);

  var _useDropdownContext = reach_dropdown_esm_useDropdownContext(),
      dispatch = _useDropdownContext.dispatch,
      dropdownId = _useDropdownContext.dropdownId,
      mouseDownStartPosRef = _useDropdownContext.mouseDownStartPosRef,
      triggerClickedRef = _useDropdownContext.triggerClickedRef,
      triggerRef = _useDropdownContext.triggerRef,
      _useDropdownContext$s = _useDropdownContext.state,
      triggerId = _useDropdownContext$s.triggerId,
      isExpanded = _useDropdownContext$s.isExpanded;

  var ref = useComposedRefs(triggerRef, forwardedRef);
  var items = useDropdownDescendants();
  var firstNonDisabledIndex = (0,external_react_namespaceObject.useMemo)(function () {
    return items.findIndex(function (item) {
      return !item.disabled;
    });
  }, [items]);
  (0,external_react_namespaceObject.useEffect)(function () {
    if (id != null && id !== triggerId) {
      dispatch({
        type: SET_BUTTON_ID,
        payload: id
      });
    }
  }, [triggerId, dispatch, id]);

  function handleKeyDown(event) {
    switch (event.key) {
      case "ArrowDown":
      case "ArrowUp":
        event.preventDefault(); // prevent scroll

        dispatch({
          type: OPEN_MENU_AT_INDEX,
          payload: {
            index: firstNonDisabledIndex
          }
        });
        break;

      case "Enter":
      case " ":
        dispatch({
          type: OPEN_MENU_AT_INDEX,
          payload: {
            index: firstNonDisabledIndex
          }
        });
        break;
    }
  }

  function handleMouseDown(event) {
    if (isRightClick(event.nativeEvent)) {
      return;
    }

    mouseDownStartPosRef.current = {
      x: event.clientX,
      y: event.clientY
    };

    if (!isExpanded) {
      triggerClickedRef.current = true;
    }

    if (isExpanded) {
      dispatch({
        type: CLOSE_MENU
      });
    } else {
      dispatch({
        type: OPEN_MENU_CLEARED
      });
    }
  }

  return {
    data: {
      isExpanded: isExpanded,
      controls: dropdownId
    },
    props: reach_dropdown_esm_extends({}, props, {
      ref: ref,
      id: triggerId || undefined,
      onKeyDown: composeEventHandlers(onKeyDown, handleKeyDown),
      onMouseDown: composeEventHandlers(onMouseDown, handleMouseDown),
      type: "button"
    })
  };
}

var DropdownTrigger = /*#__PURE__*/(/* unused pure expression or super */ null && (forwardRef(function (_ref3, forwardedRef) {
  var _ref3$as = _ref3.as,
      Comp = _ref3$as === void 0 ? "button" : _ref3$as,
      rest = reach_dropdown_esm_objectWithoutPropertiesLoose(_ref3, reach_dropdown_esm_excluded2);

  var _useDropdownTrigger = useDropdownTrigger(reach_dropdown_esm_extends({}, rest, {
    ref: forwardedRef
  })),
      props = _useDropdownTrigger.props;

  return /*#__PURE__*/createElement(Comp, reach_dropdown_esm_extends({
    "data-reach-dropdown-trigger": ""
  }, props));
})));

if (false) {} ////////////////////////////////////////////////////////////////////////////////


function useDropdownItem(_ref4) {
  var indexProp = _ref4.index,
      _ref4$isLink = _ref4.isLink,
      isLink = _ref4$isLink === void 0 ? false : _ref4$isLink,
      onClick = _ref4.onClick,
      onDragStart = _ref4.onDragStart,
      onMouseDown = _ref4.onMouseDown,
      onMouseEnter = _ref4.onMouseEnter,
      onMouseLeave = _ref4.onMouseLeave,
      onMouseMove = _ref4.onMouseMove,
      onMouseUp = _ref4.onMouseUp,
      onSelect = _ref4.onSelect,
      disabled = _ref4.disabled,
      onFocus = _ref4.onFocus,
      valueTextProp = _ref4.valueText,
      forwardedRef = _ref4.ref,
      props = reach_dropdown_esm_objectWithoutPropertiesLoose(_ref4, reach_dropdown_esm_excluded3);

  var _useDropdownContext2 = reach_dropdown_esm_useDropdownContext(),
      dispatch = _useDropdownContext2.dispatch,
      dropdownRef = _useDropdownContext2.dropdownRef,
      mouseDownStartPosRef = _useDropdownContext2.mouseDownStartPosRef,
      readyToSelect = _useDropdownContext2.readyToSelect,
      selectCallbacks = _useDropdownContext2.selectCallbacks,
      triggerRef = _useDropdownContext2.triggerRef,
      _useDropdownContext2$ = _useDropdownContext2.state,
      selectionIndex = _useDropdownContext2$.selectionIndex,
      isExpanded = _useDropdownContext2$.isExpanded;

  var ownRef = (0,external_react_namespaceObject.useRef)(null); // After the ref is mounted to the DOM node, we check to see if we have an
  // explicit valueText prop before looking for the node's textContent for
  // typeahead functionality.

  var _React$useState = (0,external_react_namespaceObject.useState)(valueTextProp || ""),
      valueText = _React$useState[0],
      setValueText = _React$useState[1];

  var setValueTextFromDOM = (0,external_react_namespaceObject.useCallback)(function (node) {
    if (!valueTextProp && node != null && node.textContent) {
      setValueText(node.textContent);
    }
  }, [valueTextProp]);
  var mouseEventStarted = (0,external_react_namespaceObject.useRef)(false);

  var _useStatefulRefValue = useStatefulRefValue(ownRef, null),
      element = _useStatefulRefValue[0],
      handleRefSet = _useStatefulRefValue[1];

  var descendant = (0,external_react_namespaceObject.useMemo)(function () {
    return {
      element: element,
      key: valueText,
      disabled: disabled,
      isLink: isLink
    };
  }, [disabled, element, isLink, valueText]);
  var index = useDescendant(descendant, DropdownDescendantContext, indexProp);
  var isSelected = index === selectionIndex && !disabled;
  var ref = useComposedRefs(forwardedRef, handleRefSet, setValueTextFromDOM); // Update the callback ref array on every render

  selectCallbacks.current[index] = onSelect;

  function select() {
    reach_dropdown_esm_focus(triggerRef.current);
    onSelect && onSelect();
    dispatch({
      type: CLICK_MENU_ITEM
    });
  }

  function handleClick(event) {
    if (isRightClick(event.nativeEvent)) {
      return;
    }

    if (isLink) {
      if (disabled) {
        event.preventDefault();
      } else {
        select();
      }
    }
  }

  function handleDragStart(event) {
    // Because we don't preventDefault on mousedown for links (we need the
    // native click event), clicking and holding on a link triggers a
    // dragstart which we don't want.
    if (isLink) {
      event.preventDefault();
    }
  }

  function handleMouseDown(event) {
    if (isRightClick(event.nativeEvent)) {
      return;
    }

    if (isLink) {
      // Signal that the mouse is down so we can call the right function if the
      // user is clicking on a link.
      mouseEventStarted.current = true;
    } else {
      event.preventDefault();
    }
  }

  function handleMouseEnter(event) {
    var doc = getOwnerDocument(dropdownRef.current);

    if (!isSelected && index != null && !disabled) {
      if (dropdownRef != null && dropdownRef.current && dropdownRef.current !== doc.activeElement && ownRef.current !== doc.activeElement) {
        dropdownRef.current.focus();
      }

      dispatch({
        type: SELECT_ITEM_AT_INDEX,
        payload: {
          index: index
        }
      });
    }
  }

  function handleMouseLeave(event) {
    // Clear out selection when mouse over a non-dropdown-item child.
    dispatch({
      type: CLEAR_SELECTION_INDEX
    });
  }

  function handleMouseMove(event) {
    if (!readyToSelect.current) {
      var threshold = 8;
      var deltaX = Math.abs(event.clientX - mouseDownStartPosRef.current.x);
      var deltaY = Math.abs(event.clientY - mouseDownStartPosRef.current.y);

      if (deltaX > threshold || deltaY > threshold) {
        readyToSelect.current = true;
      }
    }

    if (!isSelected && index != null && !disabled) {
      dispatch({
        type: SELECT_ITEM_AT_INDEX,
        payload: {
          index: index,
          dropdownRef: dropdownRef
        }
      });
    }
  }

  function handleFocus() {
    readyToSelect.current = true;

    if (!isSelected && index != null && !disabled) {
      dispatch({
        type: SELECT_ITEM_AT_INDEX,
        payload: {
          index: index
        }
      });
    }
  }

  function handleMouseUp(event) {
    if (isRightClick(event.nativeEvent)) {
      return;
    }

    if (!readyToSelect.current) {
      readyToSelect.current = true;
      return;
    }

    if (isLink) {
      // If a mousedown event was initiated on a link item followed by a mouseup
      // event on the same link, we do nothing; a click event will come next and
      // handle selection. Otherwise, we trigger a click event.
      if (mouseEventStarted.current) {
        mouseEventStarted.current = false;
      } else if (ownRef.current) {
        ownRef.current.click();
      }
    } else {
      if (!disabled) {
        select();
      }
    }
  }

  (0,external_react_namespaceObject.useEffect)(function () {
    if (isExpanded) {
      // When the dropdown opens, wait for about half a second before enabling
      // selection. This is designed to mirror dropdown menus on macOS, where
      // opening a menu on top of a trigger would otherwise result in an
      // immediate accidental selection once the click trigger is released.
      var id = window.setTimeout(function () {
        readyToSelect.current = true;
      }, 400);
      return function () {
        window.clearTimeout(id);
      };
    } else {
      // When the dropdown closes, reset readyToSelect for the next interaction.
      readyToSelect.current = false;
    }
  }, [isExpanded, readyToSelect]); // Any time a mouseup event occurs anywhere in the document, we reset the
  // mouseEventStarted ref so we can check it again when needed.

  (0,external_react_namespaceObject.useEffect)(function () {
    var ownerDocument = getOwnerDocument(ownRef.current);
    ownerDocument.addEventListener("mouseup", listener);
    return function () {
      ownerDocument.removeEventListener("mouseup", listener);
    };

    function listener() {
      mouseEventStarted.current = false;
    }
  }, []);
  return {
    data: {
      disabled: disabled
    },
    props: reach_dropdown_esm_extends({
      id: useItemId(index),
      tabIndex: -1
    }, props, {
      ref: ref,
      "data-disabled": disabled ? "" : undefined,
      "data-selected": isSelected ? "" : undefined,
      "data-valuetext": valueText,
      onClick: composeEventHandlers(onClick, handleClick),
      onDragStart: composeEventHandlers(onDragStart, handleDragStart),
      onMouseDown: composeEventHandlers(onMouseDown, handleMouseDown),
      onMouseEnter: composeEventHandlers(onMouseEnter, handleMouseEnter),
      onMouseLeave: composeEventHandlers(onMouseLeave, handleMouseLeave),
      onMouseMove: composeEventHandlers(onMouseMove, handleMouseMove),
      onFocus: composeEventHandlers(onFocus, handleFocus),
      onMouseUp: composeEventHandlers(onMouseUp, handleMouseUp)
    })
  };
}
/**
 * DropdownItem
 */


var DropdownItem = /*#__PURE__*/(/* unused pure expression or super */ null && (forwardRef(function (_ref5, forwardedRef) {
  var _ref5$as = _ref5.as,
      Comp = _ref5$as === void 0 ? "div" : _ref5$as,
      rest = reach_dropdown_esm_objectWithoutPropertiesLoose(_ref5, reach_dropdown_esm_excluded4);

  var _useDropdownItem = useDropdownItem(reach_dropdown_esm_extends({}, rest, {
    ref: forwardedRef
  })),
      props = _useDropdownItem.props;

  return /*#__PURE__*/createElement(Comp, reach_dropdown_esm_extends({
    "data-reach-dropdown-item": ""
  }, props));
})));

if (false) {} ////////////////////////////////////////////////////////////////////////////////


function useDropdownItems(_ref6) {
  _ref6.id;

  var onKeyDown = _ref6.onKeyDown,
      forwardedRef = _ref6.ref,
      props = reach_dropdown_esm_objectWithoutPropertiesLoose(_ref6, _excluded5);

  var _useDropdownContext3 = reach_dropdown_esm_useDropdownContext(),
      dispatch = _useDropdownContext3.dispatch,
      triggerRef = _useDropdownContext3.triggerRef,
      dropdownRef = _useDropdownContext3.dropdownRef,
      selectCallbacks = _useDropdownContext3.selectCallbacks,
      dropdownId = _useDropdownContext3.dropdownId,
      _useDropdownContext3$ = _useDropdownContext3.state,
      isExpanded = _useDropdownContext3$.isExpanded,
      triggerId = _useDropdownContext3$.triggerId,
      selectionIndex = _useDropdownContext3$.selectionIndex,
      typeaheadQuery = _useDropdownContext3$.typeaheadQuery;

  var items = useDropdownDescendants();
  var ref = useComposedRefs(dropdownRef, forwardedRef);
  (0,external_react_namespaceObject.useEffect)(function () {
    // Respond to user char key input with typeahead
    var match = findItemFromTypeahead(items, typeaheadQuery);

    if (typeaheadQuery && match != null) {
      dispatch({
        type: SELECT_ITEM_AT_INDEX,
        payload: {
          index: match,
          dropdownRef: dropdownRef
        }
      });
    }

    var timeout = window.setTimeout(function () {
      return typeaheadQuery && dispatch({
        type: SEARCH_FOR_ITEM,
        payload: ""
      });
    }, 1000);
    return function () {
      return window.clearTimeout(timeout);
    };
  }, [dispatch, items, typeaheadQuery, dropdownRef]);
  var prevItemsLength = usePrevious(items.length);
  var prevSelected = usePrevious(items[selectionIndex]);
  var prevSelectionIndex = usePrevious(selectionIndex);
  (0,external_react_namespaceObject.useEffect)(function () {
    if (selectionIndex > items.length - 1) {
      // If for some reason our selection index is larger than our possible
      // index range (let's say the last item is selected and the list
      // dynamically updates), we need to select the last item in the list.
      dispatch({
        type: SELECT_ITEM_AT_INDEX,
        payload: {
          index: items.length - 1,
          dropdownRef: dropdownRef
        }
      });
    } else if ( // Checks if
    //  - item length has changed
    //  - selection index has not changed BUT selected item has changed
    //
    // This prevents any dynamic adding/removing of items from actually
    // changing a user's expected selection.
    prevItemsLength !== items.length && selectionIndex > -1 && prevSelected && prevSelectionIndex === selectionIndex && items[selectionIndex] !== prevSelected) {
      dispatch({
        type: SELECT_ITEM_AT_INDEX,
        payload: {
          index: items.findIndex(function (i) {
            return i.key === (prevSelected == null ? void 0 : prevSelected.key);
          }),
          dropdownRef: dropdownRef
        }
      });
    }
  }, [dropdownRef, dispatch, items, prevItemsLength, prevSelected, prevSelectionIndex, selectionIndex]);
  var handleKeyDown = composeEventHandlers(function handleKeyDown(event) {
    var key = event.key;

    if (!isExpanded) {
      return;
    }

    switch (key) {
      case "Enter":
      case " ":
        var selected = items.find(function (item) {
          return item.index === selectionIndex;
        }); // For links, the Enter key will trigger a click by default, but for
        // consistent behavior across items we'll trigger a click when the
        // spacebar is pressed.

        if (selected && !selected.disabled) {
          event.preventDefault();

          if (selected.isLink && selected.element) {
            selected.element.click();
          } else {
            // Focus the button first by default when an item is selected.
            // We fire the onSelect callback next so the app can manage
            // focus if needed.
            reach_dropdown_esm_focus(triggerRef.current);
            selectCallbacks.current[selected.index] && selectCallbacks.current[selected.index]();
            dispatch({
              type: CLICK_MENU_ITEM
            });
          }
        }

        break;

      case "Escape":
        reach_dropdown_esm_focus(triggerRef.current);
        dispatch({
          type: CLOSE_MENU
        });
        break;

      case "Tab":
        // prevent leaving
        event.preventDefault();
        break;

      default:
        // Check if a user is typing some char keys and respond by setting
        // the query state.
        if (isString(key) && key.length === 1) {
          var query = typeaheadQuery + key.toLowerCase();
          dispatch({
            type: SEARCH_FOR_ITEM,
            payload: query
          });
        }

        break;
    }
  }, useDescendantKeyDown(DropdownDescendantContext, {
    currentIndex: selectionIndex,
    orientation: "vertical",
    rotate: false,
    filter: function filter(item) {
      return !item.disabled;
    },
    callback: function callback(index) {
      dispatch({
        type: SELECT_ITEM_AT_INDEX,
        payload: {
          index: index,
          dropdownRef: dropdownRef
        }
      });
    },
    key: "index"
  }));
  return {
    data: {
      activeDescendant: useItemId(selectionIndex) || undefined,
      triggerId: triggerId
    },
    props: reach_dropdown_esm_extends({
      tabIndex: -1
    }, props, {
      ref: ref,
      id: dropdownId,
      onKeyDown: composeEventHandlers(onKeyDown, handleKeyDown)
    })
  };
}
/**
 * DropdownItem
 */


var DropdownItems = /*#__PURE__*/(/* unused pure expression or super */ null && (forwardRef(function (_ref7, forwardedRef) {
  var _ref7$as = _ref7.as,
      Comp = _ref7$as === void 0 ? "div" : _ref7$as,
      rest = reach_dropdown_esm_objectWithoutPropertiesLoose(_ref7, _excluded6);

  var _useDropdownItems = useDropdownItems(reach_dropdown_esm_extends({}, rest, {
    ref: forwardedRef
  })),
      props = _useDropdownItems.props;

  return /*#__PURE__*/createElement(Comp, reach_dropdown_esm_extends({
    "data-reach-dropdown-items": ""
  }, props));
})));

if (false) {} ////////////////////////////////////////////////////////////////////////////////


function useDropdownPopover(_ref8) {
  var onBlur = _ref8.onBlur,
      _ref8$portal = _ref8.portal,
      portal = _ref8$portal === void 0 ? true : _ref8$portal,
      position = _ref8.position,
      forwardedRef = _ref8.ref,
      props = reach_dropdown_esm_objectWithoutPropertiesLoose(_ref8, _excluded7);

  var _useDropdownContext4 = reach_dropdown_esm_useDropdownContext(),
      triggerRef = _useDropdownContext4.triggerRef,
      triggerClickedRef = _useDropdownContext4.triggerClickedRef,
      dispatch = _useDropdownContext4.dispatch,
      dropdownRef = _useDropdownContext4.dropdownRef,
      popoverRef = _useDropdownContext4.popoverRef,
      isExpanded = _useDropdownContext4.state.isExpanded;

  var ref = useComposedRefs(popoverRef, forwardedRef);
  (0,external_react_namespaceObject.useEffect)(function () {
    if (!isExpanded) {
      return;
    }

    var ownerDocument = getOwnerDocument(popoverRef.current);

    function listener(event) {
      if (triggerClickedRef.current) {
        triggerClickedRef.current = false;
      } else if (!popoverContainsEventTarget(popoverRef.current, event.target)) {
        // We on want to close only if focus rests outside the dropdown
        dispatch({
          type: CLOSE_MENU
        });
      }
    }

    ownerDocument.addEventListener("mousedown", listener); // see https://github.com/reach/reach-ui/pull/700#discussion_r530369265
    // ownerDocument.addEventListener("touchstart", listener);

    return function () {
      ownerDocument.removeEventListener("mousedown", listener); // ownerDocument.removeEventListener("touchstart", listener);
    };
  }, [triggerClickedRef, triggerRef, dispatch, dropdownRef, popoverRef, isExpanded]);
  return {
    data: {
      portal: portal,
      position: position,
      targetRef: triggerRef,
      isExpanded: isExpanded
    },
    props: reach_dropdown_esm_extends({
      ref: ref,
      hidden: !isExpanded,
      onBlur: composeEventHandlers(onBlur, function (event) {
        if (event.currentTarget.contains(event.relatedTarget)) {
          return;
        }

        dispatch({
          type: CLOSE_MENU
        });
      })
    }, props)
  };
}

var DropdownPopover = /*#__PURE__*/(/* unused pure expression or super */ null && (forwardRef(function (_ref9, forwardedRef) {
  var _ref9$as = _ref9.as,
      Comp = _ref9$as === void 0 ? "div" : _ref9$as,
      rest = reach_dropdown_esm_objectWithoutPropertiesLoose(_ref9, _excluded8);

  var _useDropdownPopover = useDropdownPopover(reach_dropdown_esm_extends({}, rest, {
    ref: forwardedRef
  })),
      _useDropdownPopover$d = _useDropdownPopover.data,
      portal = _useDropdownPopover$d.portal,
      targetRef = _useDropdownPopover$d.targetRef,
      position = _useDropdownPopover$d.position,
      props = _useDropdownPopover.props;

  var sharedProps = {
    "data-reach-dropdown-popover": ""
  };
  return portal ? /*#__PURE__*/createElement(Popover, reach_dropdown_esm_extends({}, props, sharedProps, {
    as: Comp,
    targetRef: targetRef,
    position: position
  })) : /*#__PURE__*/createElement(Comp, reach_dropdown_esm_extends({}, props, sharedProps));
})));

if (false) {} ////////////////////////////////////////////////////////////////////////////////

/**
 * When a user's typed input matches the string displayed in an item, it is
 * expected that the matching item is selected. This is our matching function.
 */


function findItemFromTypeahead(items, string) {
  if (string === void 0) {
    string = "";
  }

  if (!string) {
    return null;
  }

  var found = items.find(function (item) {
    var _item$element, _item$element$dataset, _item$element$dataset2;

    return item.disabled ? false : (_item$element = item.element) == null ? void 0 : (_item$element$dataset = _item$element.dataset) == null ? void 0 : (_item$element$dataset2 = _item$element$dataset.valuetext) == null ? void 0 : _item$element$dataset2.toLowerCase().startsWith(string);
  });
  return found ? items.indexOf(found) : null;
}

function useItemId(index) {
  var _React$useContext = (0,external_react_namespaceObject.useContext)(DropdownContext),
      dropdownId = _React$useContext.dropdownId;

  return index != null && index > -1 ? makeId("option-" + index, dropdownId) : undefined;
}

function reach_dropdown_esm_focus(element) {
  element && element.focus();
}

function popoverContainsEventTarget(popover, target) {
  return !!(popover && popover.contains(target));
}

function reducer(state, action) {
  if (action === void 0) {
    action = {};
  }

  switch (action.type) {
    case CLICK_MENU_ITEM:
      return reach_dropdown_esm_extends({}, state, {
        isExpanded: false,
        selectionIndex: -1
      });

    case CLOSE_MENU:
      return reach_dropdown_esm_extends({}, state, {
        isExpanded: false,
        selectionIndex: -1
      });

    case OPEN_MENU_AT_FIRST_ITEM:
      return reach_dropdown_esm_extends({}, state, {
        isExpanded: true,
        selectionIndex: 0
      });

    case OPEN_MENU_AT_INDEX:
      return reach_dropdown_esm_extends({}, state, {
        isExpanded: true,
        selectionIndex: action.payload.index
      });

    case OPEN_MENU_CLEARED:
      return reach_dropdown_esm_extends({}, state, {
        isExpanded: true,
        selectionIndex: -1
      });

    case SELECT_ITEM_AT_INDEX:
      {
        var _action$payload$dropd = action.payload.dropdownRef,
            dropdownRef = _action$payload$dropd === void 0 ? {
          current: null
        } : _action$payload$dropd;

        if (action.payload.index >= 0 && action.payload.index !== state.selectionIndex) {
          if (dropdownRef.current) {
            var doc = getOwnerDocument(dropdownRef.current);

            if (dropdownRef.current !== (doc == null ? void 0 : doc.activeElement)) {
              dropdownRef.current.focus();
            }
          }

          return reach_dropdown_esm_extends({}, state, {
            selectionIndex: action.payload.max != null ? Math.min(Math.max(action.payload.index, 0), action.payload.max) : Math.max(action.payload.index, 0)
          });
        }

        return state;
      }

    case CLEAR_SELECTION_INDEX:
      return reach_dropdown_esm_extends({}, state, {
        selectionIndex: -1
      });

    case SET_BUTTON_ID:
      return reach_dropdown_esm_extends({}, state, {
        triggerId: action.payload
      });

    case SEARCH_FOR_ITEM:
      if (typeof action.payload !== "undefined") {
        return reach_dropdown_esm_extends({}, state, {
          typeaheadQuery: action.payload
        });
      }

      return state;

    default:
      return state;
  }
}

function reach_dropdown_esm_useDropdownContext() {
  return (0,external_react_namespaceObject.useContext)(DropdownContext);
}

function useDropdownDescendants() {
  return useDescendants(DropdownDescendantContext);
} ////////////////////////////////////////////////////////////////////////////////



;// CONCATENATED MODULE: external "react-is"
var external_react_is_x = y => { var x = {}; __webpack_require__.d(x, y); return x; }
var external_react_is_y = x => () => x
const external_react_is_namespaceObject = external_react_is_x({ ["isFragment"]: () => __WEBPACK_EXTERNAL_MODULE_react_is_5160a61b__.isFragment });
;// CONCATENATED MODULE: ../../node_modules/@reach/menu-button/dist/reach-menu-button.esm.js









function reach_menu_button_esm_extends() {
  reach_menu_button_esm_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return reach_menu_button_esm_extends.apply(this, arguments);
}

function reach_menu_button_esm_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var reach_menu_button_esm_excluded = ["as", "id", "children"],
    reach_menu_button_esm_excluded2 = ["as"],
    reach_menu_button_esm_excluded3 = ["as"],
    reach_menu_button_esm_excluded4 = ["as"],
    reach_menu_button_esm_excluded5 = ["as"],
    reach_menu_button_esm_excluded6 = (/* unused pure expression or super */ null && (["as", "component", "onSelect"])),
    reach_menu_button_esm_excluded7 = ["portal"],
    reach_menu_button_esm_excluded8 = ["as"]; ////////////////////////////////////////////////////////////////////////////////

/**
 * Menu
 *
 * The wrapper component for the other components. No DOM element is rendered.
 *
 * @see Docs https://reach.tech/menu-button#menu
 */

var Menu = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)(function (_ref, forwardedRef) {
  var _ref$as = _ref.as,
      Comp = _ref$as === void 0 ? external_react_namespaceObject.Fragment : _ref$as,
      id = _ref.id,
      children = _ref.children,
      rest = reach_menu_button_esm_objectWithoutPropertiesLoose(_ref, reach_menu_button_esm_excluded);

  useCheckStyles("menu-button");
  var parentIsFragment = (0,external_react_namespaceObject.useMemo)(function () {
    try {
      // To test if the component renders a fragment we need to actually
      // render it, but this may throw an error since we can't predict what is
      // actually provided. There's technically a small chance that this could
      // get it wrong but I don't think it's too likely in practice.
      return (0,external_react_is_namespaceObject.isFragment)( /*#__PURE__*/(0,external_react_namespaceObject.createElement)(Comp, null));
    } catch (err) {
      return false;
    }
  }, [Comp]);
  var props = parentIsFragment ? {} : reach_menu_button_esm_extends({
    ref: forwardedRef,
    id: id,
    "data-reach-menu": ""
  }, rest);
  return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(Comp, props, /*#__PURE__*/(0,external_react_namespaceObject.createElement)(DropdownProvider, {
    id: id,
    children: children
  }));
});
/**
 * @see Docs https://reach.tech/menu-button#menu-props
 */

if (false) {} ////////////////////////////////////////////////////////////////////////////////

/**
 * MenuButton
 *
 * Wraps a DOM `button` that toggles the opening and closing of the dropdown
 * menu. Must be rendered inside of a `<Menu>`.
 *
 * @see Docs https://reach.tech/menu-button#menubutton
 */


var MenuButton = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)(function (_ref2, forwardedRef) {
  var _ref2$as = _ref2.as,
      Comp = _ref2$as === void 0 ? "button" : _ref2$as,
      rest = reach_menu_button_esm_objectWithoutPropertiesLoose(_ref2, reach_menu_button_esm_excluded2);

  var _useDropdownTrigger = useDropdownTrigger(reach_menu_button_esm_extends({}, rest, {
    ref: forwardedRef
  })),
      _useDropdownTrigger$d = _useDropdownTrigger.data,
      isExpanded = _useDropdownTrigger$d.isExpanded,
      controls = _useDropdownTrigger$d.controls,
      props = _useDropdownTrigger.props;

  return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(Comp // When the menu is displayed, the element with role `button` has
  // `aria-expanded` set to `true`. When the menu is hidden, it is
  // recommended that `aria-expanded` is not present.
  // https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton
  , reach_menu_button_esm_extends({
    "aria-expanded": isExpanded ? true : undefined // The element with role `button` has `aria-haspopup` set to either
    // `"menu"` or `true`.
    // https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton
    ,
    "aria-haspopup": true // Optionally, the element with role `button` has a value specified for
    // `aria-controls` that refers to the element with role `menu`.
    // https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton
    ,
    "aria-controls": controls
  }, props, {
    "data-reach-menu-button": ""
  }));
});
/**
 * @see Docs https://reach.tech/menu-button#menubutton-props
 */

if (false) {} ////////////////////////////////////////////////////////////////////////////////

/**
 * MenuItemImpl
 *
 * MenuItem and MenuLink share most of the same functionality captured here.
 */


var MenuItemImpl = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)(function (_ref3, forwardedRef) {
  var _ref3$as = _ref3.as,
      Comp = _ref3$as === void 0 ? "div" : _ref3$as,
      rest = reach_menu_button_esm_objectWithoutPropertiesLoose(_ref3, reach_menu_button_esm_excluded3);

  var _useDropdownItem = useDropdownItem(reach_menu_button_esm_extends({}, rest, {
    ref: forwardedRef
  })),
      disabled = _useDropdownItem.data.disabled,
      props = _useDropdownItem.props;

  return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(Comp, reach_menu_button_esm_extends({
    role: "menuitem"
  }, props, {
    "aria-disabled": disabled || undefined,
    "data-reach-menu-item": ""
  }));
}); ////////////////////////////////////////////////////////////////////////////////

/**
 * MenuItem
 *
 * Handles menu selection. Must be a direct child of a `<MenuList>`.
 *
 * @see Docs https://reach.tech/menu-button#menuitem
 */

var MenuItem = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)(function (_ref4, forwardedRef) {
  var _ref4$as = _ref4.as,
      as = _ref4$as === void 0 ? "div" : _ref4$as,
      props = reach_menu_button_esm_objectWithoutPropertiesLoose(_ref4, reach_menu_button_esm_excluded4);

  return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(MenuItemImpl, reach_menu_button_esm_extends({}, props, {
    ref: forwardedRef,
    as: as
  }));
});
/**
 * @see Docs https://reach.tech/menu-button#menuitem-props
 */

if (false) {} ////////////////////////////////////////////////////////////////////////////////

/**
 * MenuItems
 *
 * A low-level wrapper for menu items. Compose it with `MenuPopover` for more
 * control over the nested components and their rendered DOM nodes, or if you
 * need to nest arbitrary components between the outer wrapper and your list.
 *
 * @see Docs https://reach.tech/menu-button#menuitems
 */


var MenuItems = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)(function (_ref5, forwardedRef) {
  var _ref5$as = _ref5.as,
      Comp = _ref5$as === void 0 ? "div" : _ref5$as,
      rest = reach_menu_button_esm_objectWithoutPropertiesLoose(_ref5, reach_menu_button_esm_excluded5);

  var _useDropdownItems = useDropdownItems(reach_menu_button_esm_extends({}, rest, {
    ref: forwardedRef
  })),
      _useDropdownItems$dat = _useDropdownItems.data,
      activeDescendant = _useDropdownItems$dat.activeDescendant,
      triggerId = _useDropdownItems$dat.triggerId,
      props = _useDropdownItems.props;

  return (
    /*#__PURE__*/
    // TODO: Should probably file a but in jsx-a11y, but this is correct
    // according to https://www.w3.org/TR/wai-aria-practices-1.2/examples/menu-button/menu-button-actions-active-descendant.html
    // eslint-disable-next-line jsx-a11y/aria-activedescendant-has-tabindex
    (0,external_react_namespaceObject.createElement)(Comp // Refers to the descendant menuitem element that is visually indicated
    // as focused.
    // https://www.w3.org/TR/wai-aria-practices-1.2/examples/menu-button/menu-button-actions-active-descendant.html
    , reach_menu_button_esm_extends({
      "aria-activedescendant": activeDescendant // Refers to the element that contains the accessible name for the
      // `menu`. The menu is labeled by the menu button.
      // https://www.w3.org/TR/wai-aria-practices-1.2/examples/menu-button/menu-button-actions-active-descendant.html
      ,
      "aria-labelledby": triggerId || undefined // The element that contains the menu items displayed by activating the
      // button has role menu.
      // https://www.w3.org/TR/wai-aria-practices-1.2/#menubutton
      ,
      role: "menu"
    }, props, {
      "data-reach-menu-items": ""
    }))
  );
});
/**
 * @see Docs https://reach.tech/menu-button#menuitems-props
 */

if (false) {} ////////////////////////////////////////////////////////////////////////////////

/**
 * MenuLink
 *
 * Handles linking to a different page in the menu. By default it renders `<a>`,
 * but also accepts any other kind of Link as long as the `Link` uses the
 * `React.forwardRef` API.
 *
 * Must be a direct child of a `<MenuList>`.
 *
 * @see Docs https://reach.tech/menu-button#menulink
 */


var MenuLink = /*#__PURE__*/(/* unused pure expression or super */ null && (forwardRef(function (_ref6, forwardedRef) {
  var _ref6$as = _ref6.as,
      as = _ref6$as === void 0 ? "a" : _ref6$as,
      component = _ref6.component,
      onSelect = _ref6.onSelect,
      props = reach_menu_button_esm_objectWithoutPropertiesLoose(_ref6, reach_menu_button_esm_excluded6);

  useDevWarning(!component, "[@reach/menu-button]: Please use the `as` prop instead of `component`");
  return /*#__PURE__*/createElement(MenuItemImpl, reach_menu_button_esm_extends({}, props, {
    ref: forwardedRef,
    "data-reach-menu-link": "",
    as: as,
    isLink: true,
    onSelect: onSelect || noop
  }));
})));
/**
 * @see Docs https://reach.tech/menu-button#menulink-props
 */

if (false) {} ////////////////////////////////////////////////////////////////////////////////

/**
 * MenuList
 *
 * Wraps a DOM element that renders the menu items. Must be rendered inside of
 * a `<Menu>`.
 *
 * @see Docs https://reach.tech/menu-button#menulist
 */


var MenuList = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)(function (_ref7, forwardedRef) {
  var _ref7$portal = _ref7.portal,
      portal = _ref7$portal === void 0 ? true : _ref7$portal,
      props = reach_menu_button_esm_objectWithoutPropertiesLoose(_ref7, reach_menu_button_esm_excluded7);

  return /*#__PURE__*/(0,external_react_namespaceObject.createElement)(MenuPopover, {
    portal: portal
  }, /*#__PURE__*/(0,external_react_namespaceObject.createElement)(MenuItems, reach_menu_button_esm_extends({}, props, {
    ref: forwardedRef,
    "data-reach-menu-list": ""
  })));
});
/**
 * @see Docs https://reach.tech/menu-button#menulist-props
 */

if (false) {} ////////////////////////////////////////////////////////////////////////////////

/**
 * MenuPopover
 *
 * A low-level wrapper for the popover that appears when a menu button is open.
 * You can compose it with `MenuItems` for more control over the nested
 * components and their rendered DOM nodes, or if you need to nest arbitrary
 * components between the outer wrapper and your list.
 *
 * @see Docs https://reach.tech/menu-button#menupopover
 */


var MenuPopover = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)(function (_ref8, forwardedRef) {
  var _ref8$as = _ref8.as,
      Comp = _ref8$as === void 0 ? "div" : _ref8$as,
      rest = reach_menu_button_esm_objectWithoutPropertiesLoose(_ref8, reach_menu_button_esm_excluded8);

  var _useDropdownPopover = useDropdownPopover(reach_menu_button_esm_extends({}, rest, {
    ref: forwardedRef
  })),
      _useDropdownPopover$d = _useDropdownPopover.data,
      portal = _useDropdownPopover$d.portal,
      targetRef = _useDropdownPopover$d.targetRef,
      position = _useDropdownPopover$d.position,
      props = _useDropdownPopover.props;

  var sharedProps = {
    "data-reach-menu-popover": ""
  };
  return portal ? /*#__PURE__*/(0,external_react_namespaceObject.createElement)(reach_popover_esm_Popover, reach_menu_button_esm_extends({}, props, sharedProps, {
    as: Comp,
    targetRef: targetRef,
    position: position
  })) : /*#__PURE__*/(0,external_react_namespaceObject.createElement)(Comp, reach_menu_button_esm_extends({}, props, sharedProps));
});
/**
 * @see Docs https://reach.tech/menu-button#menupopover-props
 */

if (false) {} ////////////////////////////////////////////////////////////////////////////////

/**
 * A hook that exposes data for a given `Menu` component to its descendants.
 *
 * @see Docs https://reach.tech/menu-button#usemenubuttoncontext
 */


function useMenuButtonContext() {
  var _useDropdownContext = useDropdownContext(),
      isExpanded = _useDropdownContext.state.isExpanded;

  return useMemo(function () {
    return {
      isExpanded: isExpanded
    };
  }, [isExpanded]);
} ////////////////////////////////////////////////////////////////////////////////


function useDevWarning(condition, message) {
  if (false) { var messageRef; }
} ////////////////////////////////////////////////////////////////////////////////



;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/reach-ui/menu-button.js
function menu_button_extends() { menu_button_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return menu_button_extends.apply(this, arguments); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




const menu_button_MenuList = ({
  children,
  ...props
}) => {
  const style = views_useThemeStyles();
  return (
    /*#__PURE__*/
    // $FlowFixMe[cannot-spread-inexact] unsafe spread
    external_react_namespaceObject.createElement(MenuList, menu_button_extends({
      style: style
    }, props), children)
  );
};


// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/OwnersStack.css
var OwnersStack = __webpack_require__(2916);
var OwnersStack_default = /*#__PURE__*/__webpack_require__.n(OwnersStack);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/OwnersStack.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */














function dialogReducer(state, action) {
  switch (action.type) {
    case 'UPDATE_OWNER_ID':
      const selectedIndex = action.owners.findIndex(owner => owner.id === action.ownerID);
      return {
        ownerID: action.ownerID,
        owners: action.owners,
        selectedIndex
      };

    case 'UPDATE_SELECTED_INDEX':
      return { ...state,
        selectedIndex: action.selectedIndex
      };

    default:
      throw new Error(`Invalid action "${action.type}"`);
  }
}

function OwnerStack() {
  const read = (0,external_react_namespaceObject.useContext)(OwnersListContext);
  const {
    ownerID
  } = (0,external_react_namespaceObject.useContext)(TreeStateContext);
  const treeDispatch = (0,external_react_namespaceObject.useContext)(TreeDispatcherContext);
  const [state, dispatch] = (0,external_react_namespaceObject.useReducer)(dialogReducer, {
    ownerID: null,
    owners: [],
    selectedIndex: 0
  }); // When an owner is selected, we either need to update the selected index, or we need to fetch a new list of owners.
  // We use a reducer here so that we can avoid fetching a new list unless the owner ID has actually changed.

  if (ownerID === null) {
    dispatch({
      type: 'UPDATE_OWNER_ID',
      ownerID: null,
      owners: []
    });
  } else if (ownerID !== state.ownerID) {
    const isInStore = state.owners.findIndex(owner => owner.id === ownerID) >= 0;
    dispatch({
      type: 'UPDATE_OWNER_ID',
      ownerID,
      owners: isInStore ? state.owners : read(ownerID) || []
    });
  }

  const {
    owners,
    selectedIndex
  } = state;
  const selectOwner = (0,external_react_namespaceObject.useCallback)(owner => {
    if (owner !== null) {
      const index = owners.indexOf(owner);
      dispatch({
        type: 'UPDATE_SELECTED_INDEX',
        selectedIndex: index >= 0 ? index : 0
      });
      treeDispatch({
        type: 'SELECT_OWNER',
        payload: owner.id
      });
    } else {
      dispatch({
        type: 'UPDATE_SELECTED_INDEX',
        selectedIndex: 0
      });
      treeDispatch({
        type: 'RESET_OWNER_STACK'
      });
    }
  }, [owners, treeDispatch]);
  const [elementsTotalWidth, setElementsTotalWidth] = (0,external_react_namespaceObject.useState)(0);
  const elementsBarRef = (0,external_react_namespaceObject.useRef)(null);
  const isOverflowing = useIsOverflowing(elementsBarRef, elementsTotalWidth);
  const selectedOwner = owners[selectedIndex];
  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    // If we're already overflowing, then we don't need to re-measure items.
    // That's because once the owners stack is open, it can only get larger (by drilling in).
    // A totally new stack can only be reached by exiting this mode and re-entering it.
    if (elementsBarRef.current === null || isOverflowing) {
      return () => {};
    }

    let totalWidth = 0;

    for (let i = 0; i < owners.length; i++) {
      const element = elementsBarRef.current.children[i];
      const computedStyle = getComputedStyle(element);
      totalWidth += element.offsetWidth + parseInt(computedStyle.marginLeft, 10) + parseInt(computedStyle.marginRight, 10);
    }

    setElementsTotalWidth(totalWidth);
  }, [elementsBarRef, isOverflowing, owners.length]);
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (OwnersStack_default()).OwnerStack
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (OwnersStack_default()).Bar,
    ref: elementsBarRef
  }, isOverflowing && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement(ElementsDropdown, {
    owners: owners,
    selectedIndex: selectedIndex,
    selectOwner: selectOwner
  }), /*#__PURE__*/external_react_namespaceObject.createElement(BackToOwnerButton, {
    owners: owners,
    selectedIndex: selectedIndex,
    selectOwner: selectOwner
  }), selectedOwner != null && /*#__PURE__*/external_react_namespaceObject.createElement(ElementView, {
    owner: selectedOwner,
    isSelected: true,
    selectOwner: selectOwner
  })), !isOverflowing && owners.map((owner, index) => /*#__PURE__*/external_react_namespaceObject.createElement(ElementView, {
    key: index,
    owner: owner,
    isSelected: index === selectedIndex,
    selectOwner: selectOwner
  }))), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (OwnersStack_default()).VRule
  }), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: () => selectOwner(null),
    title: "Back to tree view"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "close"
  })));
}

function ElementsDropdown({
  owners,
  selectOwner
}) {
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const menuItems = [];

  for (let index = owners.length - 1; index >= 0; index--) {
    const owner = owners[index];
    const isInStore = store.containsElement(owner.id);
    menuItems.push( /*#__PURE__*/external_react_namespaceObject.createElement(MenuItem, {
      key: owner.id,
      className: `${(OwnersStack_default()).Component} ${isInStore ? '' : (OwnersStack_default()).NotInStore}`,
      onSelect: () => isInStore ? selectOwner(owner) : null
    }, owner.displayName, /*#__PURE__*/external_react_namespaceObject.createElement(ElementBadges_ElementBadges, {
      hocDisplayNames: owner.hocDisplayNames,
      compiledWithForget: owner.compiledWithForget,
      className: (OwnersStack_default()).BadgesBlock
    })));
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(Menu, null, /*#__PURE__*/external_react_namespaceObject.createElement(MenuButton, {
    className: (OwnersStack_default()).MenuButton
  }, /*#__PURE__*/external_react_namespaceObject.createElement(tooltip, {
    label: "Open elements dropdown"
  }, /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (OwnersStack_default()).MenuButtonContent,
    tabIndex: -1
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "more"
  })))), /*#__PURE__*/external_react_namespaceObject.createElement(menu_button_MenuList, {
    className: (OwnersStack_default()).Modal
  }, menuItems));
}

function ElementView({
  isSelected,
  owner,
  selectOwner
}) {
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    displayName,
    hocDisplayNames,
    compiledWithForget
  } = owner;
  const isInStore = store.containsElement(owner.id);
  const handleChange = (0,external_react_namespaceObject.useCallback)(() => {
    if (isInStore) {
      selectOwner(owner);
    }
  }, [isInStore, selectOwner, owner]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(Toggle_Toggle, {
    className: `${(OwnersStack_default()).Component} ${isInStore ? '' : (OwnersStack_default()).NotInStore}`,
    isChecked: isSelected,
    onChange: handleChange
  }, displayName, /*#__PURE__*/external_react_namespaceObject.createElement(ElementBadges_ElementBadges, {
    hocDisplayNames: hocDisplayNames,
    compiledWithForget: compiledWithForget,
    className: (OwnersStack_default()).BadgesBlock
  }));
}

function BackToOwnerButton({
  owners,
  selectedIndex,
  selectOwner
}) {
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);

  if (selectedIndex <= 0) {
    return null;
  }

  const owner = owners[selectedIndex - 1];
  const isInStore = store.containsElement(owner.id);
  return /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    className: isInStore ? undefined : (OwnersStack_default()).NotInStore,
    onClick: () => isInStore ? selectOwner(owner) : null,
    title: `Up to ${owner.displayName || 'owner'}`
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "previous"
  }));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/SearchInput.css
var SearchInput = __webpack_require__(2530);
var SearchInput_default = /*#__PURE__*/__webpack_require__.n(SearchInput);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/SearchInput.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






function SearchInput_SearchInput({
  goToNextResult,
  goToPreviousResult,
  placeholder,
  search,
  searchIndex,
  searchResultsCount,
  searchText,
  testName
}) {
  const inputRef = (0,external_react_namespaceObject.useRef)(null);

  const resetSearch = () => search(''); // $FlowFixMe[missing-local-annot]


  const handleChange = ({
    currentTarget
  }) => {
    search(currentTarget.value);
  }; // $FlowFixMe[missing-local-annot]


  const handleKeyPress = ({
    key,
    shiftKey
  }) => {
    if (key === 'Enter') {
      if (shiftKey) {
        goToPreviousResult();
      } else {
        goToNextResult();
      }
    }
  }; // Auto-focus search input


  (0,external_react_namespaceObject.useEffect)(() => {
    if (inputRef.current === null) {
      return () => {};
    }

    const handleKeyDown = event => {
      const {
        key,
        metaKey
      } = event;

      if (key === 'f' && metaKey) {
        if (inputRef.current !== null) {
          inputRef.current.focus();
          event.preventDefault();
          event.stopPropagation();
        }
      }
    }; // It's important to listen to the ownerDocument to support the browser extension.
    // Here we use portals to render individual tabs (e.g. Profiler),
    // and the root document might belong to a different window.


    const ownerDocument = inputRef.current.ownerDocument;
    ownerDocument.addEventListener('keydown', handleKeyDown);
    return () => ownerDocument.removeEventListener('keydown', handleKeyDown);
  }, []);
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SearchInput_default()).SearchInput,
    "data-testname": testName
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Icon_Icon, {
    className: (SearchInput_default()).InputIcon,
    type: "search"
  }), /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    "data-testname": testName ? `${testName}-Input` : undefined,
    className: (SearchInput_default()).Input,
    onChange: handleChange,
    onKeyPress: handleKeyPress,
    placeholder: placeholder,
    ref: inputRef,
    value: searchText
  }), !!searchText && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (SearchInput_default()).IndexLabel,
    "data-testname": testName ? `${testName}-ResultsCount` : undefined
  }, Math.min(searchIndex + 1, searchResultsCount), " |", ' ', searchResultsCount), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SearchInput_default()).LeftVRule
  }), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    "data-testname": testName ? `${testName}-PreviousButton` : undefined,
    disabled: !searchText,
    onClick: goToPreviousResult,
    title: /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, "Scroll to previous search result (", /*#__PURE__*/external_react_namespaceObject.createElement("kbd", null, "Shift"), " +", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("kbd", null, "Enter"), ")")
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "up"
  })), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    "data-testname": testName ? `${testName}-NextButton` : undefined,
    disabled: !searchText,
    onClick: goToNextResult,
    title: /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, "Scroll to next search result (", /*#__PURE__*/external_react_namespaceObject.createElement("kbd", null, "Enter"), ")")
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "down"
  })), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    "data-testname": testName ? `${testName}-ResetButton` : undefined,
    disabled: !searchText,
    onClick: resetSearch,
    title: "Reset search"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "close"
  }))));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/ComponentSearchInput.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




function ComponentSearchInput(props) {
  const {
    searchIndex,
    searchResults,
    searchText
  } = (0,external_react_namespaceObject.useContext)(TreeStateContext);
  const dispatch = (0,external_react_namespaceObject.useContext)(TreeDispatcherContext);

  const search = text => dispatch({
    type: 'SET_SEARCH_TEXT',
    payload: text
  });

  const goToNextResult = () => dispatch({
    type: 'GO_TO_NEXT_SEARCH_RESULT'
  });

  const goToPreviousResult = () => dispatch({
    type: 'GO_TO_PREVIOUS_SEARCH_RESULT'
  });

  return /*#__PURE__*/external_react_namespaceObject.createElement(SearchInput_SearchInput, {
    goToNextResult: goToNextResult,
    goToPreviousResult: goToPreviousResult,
    placeholder: "Search (text or /regex/)",
    search: search,
    searchIndex: searchIndex,
    searchResultsCount: searchResults.length,
    searchText: searchText,
    testName: "ComponentSearchInput"
  });
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Settings/SettingsModalContext.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



const SettingsModalContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
SettingsModalContext.displayName = 'SettingsModalContext';

function fetchEnvironmentNames(bridge) {
  return new Promise(resolve => {
    function onEnvironmentNames(names) {
      bridge.removeListener('environmentNames', onEnvironmentNames);
      resolve(names);
    }

    bridge.addListener('environmentNames', onEnvironmentNames);
    bridge.send('getEnvironmentNames');
  });
}

function fetchHookSettings(store) {
  return new Promise(resolve => {
    function onHookSettings(settings) {
      store.removeListener('hookSettings', onHookSettings);
      resolve(settings);
    }

    store.addListener('hookSettings', onHookSettings);
    store.getHookSettings();
  });
}

function SettingsModalContextController({
  children
}) {
  const bridge = (0,external_react_namespaceObject.useContext)(BridgeContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const setIsModalShowing = (0,external_react_namespaceObject.useCallback)(value => {
    (0,external_react_namespaceObject.startTransition)(() => {
      setContext({
        isModalShowing: value,
        setIsModalShowing,
        environmentNames: value ? fetchEnvironmentNames(bridge) : null,
        hookSettings: value ? fetchHookSettings(store) : null
      });
    });
  }, [bridge, store]);
  const [currentContext, setContext] = (0,external_react_namespaceObject.useState)({
    isModalShowing: false,
    setIsModalShowing,
    environmentNames: null,
    hookSettings: null
  });
  return /*#__PURE__*/external_react_namespaceObject.createElement(SettingsModalContext.Provider, {
    value: currentContext
  }, children);
}


;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Settings/SettingsModalContextToggle.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */







function SettingsModalContextToggle() {
  const {
    setIsModalShowing
  } = (0,external_react_namespaceObject.useContext)(SettingsModalContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    profilerStore
  } = store;
  const showFilterModal = (0,external_react_namespaceObject.useCallback)(() => setIsModalShowing(true), [setIsModalShowing]); // Updating preferences while profiling is in progress could break things (e.g. filtering)
  // Explicitly disallow it for now.

  const isProfilingSubscription = (0,external_react_namespaceObject.useMemo)(() => ({
    getCurrentValue: () => profilerStore.isProfilingBasedOnUserInput,
    subscribe: callback => {
      profilerStore.addListener('isProfiling', callback);
      return () => profilerStore.removeListener('isProfiling', callback);
    }
  }), [profilerStore]);
  const isProfiling = useSubscription(isProfilingSubscription);
  return /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    disabled: isProfiling,
    onClick: showFilterModal,
    title: "View settings"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "settings"
  }));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/TreeFocusedContext.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

const TreeFocusedContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(false);
/* harmony default export */ const Components_TreeFocusedContext = (TreeFocusedContext);
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/SelectedTreeHighlight.css
var SelectedTreeHighlight = __webpack_require__(563);
var SelectedTreeHighlight_default = /*#__PURE__*/__webpack_require__.n(SelectedTreeHighlight);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/SelectedTreeHighlight.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */








function SelectedTreeHighlight_SelectedTreeHighlight(_) {
  const {
    lineHeight
  } = (0,external_react_namespaceObject.useContext)(SettingsContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const treeFocused = (0,external_react_namespaceObject.useContext)(Components_TreeFocusedContext);
  const {
    ownerID,
    inspectedElementID
  } = (0,external_react_namespaceObject.useContext)(TreeStateContext);
  const subscription = (0,external_react_namespaceObject.useMemo)(() => ({
    getCurrentValue: () => {
      if (inspectedElementID === null || store.isInsideCollapsedSubTree(inspectedElementID)) {
        return null;
      }

      const element = store.getElementByID(inspectedElementID);

      if (element === null || element.isCollapsed || element.children.length === 0) {
        return null;
      }

      const startIndex = store.getIndexOfElementID(element.children[0]);

      if (startIndex === null) {
        return null;
      }

      let stopIndex = null;
      let current = element;

      while (current !== null) {
        if (current.isCollapsed || current.children.length === 0) {
          // We've found the last/deepest descendant.
          stopIndex = store.getIndexOfElementID(current.id);
          current = null;
        } else {
          const lastChildID = current.children[current.children.length - 1];
          current = store.getElementByID(lastChildID);
        }
      }

      if (stopIndex === null) {
        return null;
      }

      return {
        startIndex,
        stopIndex
      };
    },
    subscribe: callback => {
      store.addListener('mutated', callback);
      return () => {
        store.removeListener('mutated', callback);
      };
    }
  }), [inspectedElementID, store]);
  const data = useSubscription(subscription);

  if (ownerID !== null) {
    return null;
  }

  if (data === null) {
    return null;
  }

  const {
    startIndex,
    stopIndex
  } = data;
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: treeFocused ? (SelectedTreeHighlight_default()).Active : (SelectedTreeHighlight_default()).Inactive,
    style: {
      position: 'absolute',
      top: `${startIndex * lineHeight}px`,
      height: `${(stopIndex + 1 - startIndex) * lineHeight}px`
    }
  });
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/errors/TimeoutError.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
class TimeoutError extends Error {
  constructor(message) {
    super(message); // Maintains proper stack trace for where our error was thrown (only available on V8)

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, TimeoutError);
    }

    this.name = 'TimeoutError';
  }

}
;// CONCATENATED MODULE: ../react-devtools-shared/src/errors/ElementPollingCancellationError.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
class ElementPollingCancellationError extends Error {
  constructor() {
    super(); // Maintains proper stack trace for where our error was thrown (only available on V8)

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, ElementPollingCancellationError);
    }

    this.name = 'ElementPollingCancellationError';
  }

}
;// CONCATENATED MODULE: ../react-devtools-shared/src/backendAPI.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





function backendAPI_clearErrorsAndWarnings({
  bridge,
  store
}) {
  store.rootIDToRendererID.forEach(rendererID => {
    bridge.send('clearErrorsAndWarnings', {
      rendererID
    });
  });
}
function clearErrorsForElement({
  bridge,
  id,
  rendererID
}) {
  bridge.send('clearErrorsForElementID', {
    rendererID,
    id
  });
}
function clearWarningsForElement({
  bridge,
  id,
  rendererID
}) {
  bridge.send('clearWarningsForElementID', {
    rendererID,
    id
  });
}
function copyInspectedElementPath({
  bridge,
  id,
  path,
  rendererID
}) {
  bridge.send('copyElementPath', {
    id,
    path,
    rendererID
  });
}
function inspectElement(bridge, forceFullData, id, path, rendererID, shouldListenToPauseEvents = false) {
  const requestID = requestCounter++;
  const promise = getPromiseForRequestID(requestID, 'inspectedElement', bridge, `Timed out while inspecting element ${id}.`, shouldListenToPauseEvents);
  bridge.send('inspectElement', {
    forceFullData,
    id,
    path,
    rendererID,
    requestID
  });
  return promise;
}
let storeAsGlobalCount = 0;
function storeAsGlobal({
  bridge,
  id,
  path,
  rendererID
}) {
  bridge.send('storeAsGlobal', {
    count: storeAsGlobalCount++,
    id,
    path,
    rendererID
  });
}
const TIMEOUT_DELAY = 10_000;
let requestCounter = 0;

function getPromiseForRequestID(requestID, eventType, bridge, timeoutMessage, shouldListenToPauseEvents = false) {
  return new Promise((resolve, reject) => {
    const cleanup = () => {
      bridge.removeListener(eventType, onInspectedElement);
      bridge.removeListener('shutdown', onShutdown);

      if (shouldListenToPauseEvents) {
        bridge.removeListener('pauseElementPolling', onDisconnect);
      }

      clearTimeout(timeoutID);
    };

    const onShutdown = () => {
      cleanup();
      reject(new Error('Failed to inspect element. Try again or restart React DevTools.'));
    };

    const onDisconnect = () => {
      cleanup();
      reject(new ElementPollingCancellationError());
    };

    const onInspectedElement = data => {
      if (data.responseID === requestID) {
        cleanup();
        resolve(data);
      }
    };

    const onTimeout = () => {
      cleanup();
      reject(new TimeoutError(timeoutMessage));
    };

    bridge.addListener(eventType, onInspectedElement);
    bridge.addListener('shutdown', onShutdown);

    if (shouldListenToPauseEvents) {
      bridge.addListener('pauseElementPolling', onDisconnect);
    }

    const timeoutID = setTimeout(onTimeout, TIMEOUT_DELAY);
  });
}

function cloneInspectedElementWithPath(inspectedElement, path, value) {
  const hydratedValue = hydrateHelper(value, path);
  const clonedInspectedElement = { ...inspectedElement
  };
  fillInPath(clonedInspectedElement, value, path, hydratedValue);
  return clonedInspectedElement;
}
function convertInspectedElementBackendToFrontend(inspectedElementBackend) {
  const {
    canEditFunctionProps,
    canEditFunctionPropsDeletePaths,
    canEditFunctionPropsRenamePaths,
    canEditHooks,
    canEditHooksAndDeletePaths,
    canEditHooksAndRenamePaths,
    canToggleError,
    isErrored,
    canToggleSuspense,
    canViewSource,
    hasLegacyContext,
    id,
    type,
    owners,
    source,
    context,
    hooks,
    plugins,
    props,
    rendererPackageName,
    rendererVersion,
    rootType,
    state,
    key,
    errors,
    warnings,
    nativeTag
  } = inspectedElementBackend;
  const inspectedElement = {
    canEditFunctionProps,
    canEditFunctionPropsDeletePaths,
    canEditFunctionPropsRenamePaths,
    canEditHooks,
    canEditHooksAndDeletePaths,
    canEditHooksAndRenamePaths,
    canToggleError,
    isErrored,
    canToggleSuspense,
    canViewSource,
    hasLegacyContext,
    id,
    key,
    plugins,
    rendererPackageName,
    rendererVersion,
    rootType,
    // Previous backend implementations (<= 5.0.1) have a different interface for Source, with fileName.
    // This gates the source features for only compatible backends: >= 5.0.2
    source: source && source.sourceURL ? source : null,
    type,
    owners: owners === null ? null : owners.map(backendToFrontendSerializedElementMapper),
    context: hydrateHelper(context),
    hooks: hydrateHelper(hooks),
    props: hydrateHelper(props),
    state: hydrateHelper(state),
    errors,
    warnings,
    nativeTag
  };
  return inspectedElement;
}
function hydrateHelper(dehydratedData, path) {
  if (dehydratedData !== null) {
    const {
      cleaned,
      data,
      unserializable
    } = dehydratedData;

    if (path) {
      const {
        length
      } = path;

      if (length > 0) {
        // Hydration helper requires full paths, but inspection dehydrates with relative paths.
        // In that event it's important that we adjust the "cleaned" paths to match.
        return hydrate(data, cleaned.map(cleanedPath => cleanedPath.slice(length)), unserializable.map(unserializablePath => unserializablePath.slice(length)));
      }
    }

    return hydrate(data, cleaned, unserializable);
  } else {
    return null;
  }
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/Tree.css
var Tree = __webpack_require__(6764);
var Tree_default = /*#__PURE__*/__webpack_require__.n(Tree);
;// CONCATENATED MODULE: ../react-devtools-shared/src/frontend/hooks/useExtensionComponentsPanelVisibility.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

// Events that are prefixed with `extension` will only be emitted for the browser extension implementation.
// For other implementations, this hook will just return constant `true` value.
function useExtensionComponentsPanelVisibility(bridge) {
  const [isVisible, setIsVisible] = (0,external_react_namespaceObject.useState)(true);
  (0,external_react_namespaceObject.useEffect)(() => {
    function onPanelShown() {
      setIsVisible(true);
    }

    function onPanelHidden() {
      setIsVisible(false);
    }

    bridge.addListener('extensionComponentsPanelShown', onPanelShown);
    bridge.addListener('extensionComponentsPanelHidden', onPanelHidden);
    return () => {
      bridge.removeListener('extensionComponentsPanelShown', onPanelShown);
      bridge.removeListener('extensionComponentsPanelHidden', onPanelHidden);
    };
  }, [bridge]);
  return isVisible;
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/Tree.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





















 // Never indent more than this number of pixels (even if we have the room).

const DEFAULT_INDENTATION_SIZE = 12;

function calculateInitialScrollOffset(inspectedElementIndex, elementHeight) {
  if (inspectedElementIndex === null) {
    return undefined;
  }

  if (inspectedElementIndex < 3) {
    return undefined;
  } // Make 3 elements on top of the inspected one visible


  return (inspectedElementIndex - 3) * elementHeight;
}

function Tree_Tree() {
  const dispatch = (0,external_react_namespaceObject.useContext)(TreeDispatcherContext);
  const {
    numElements,
    ownerID,
    searchIndex,
    searchResults,
    inspectedElementID,
    inspectedElementIndex
  } = (0,external_react_namespaceObject.useContext)(TreeStateContext);
  const bridge = (0,external_react_namespaceObject.useContext)(BridgeContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    hideSettings
  } = (0,external_react_namespaceObject.useContext)(OptionsContext);
  const {
    lineHeight
  } = (0,external_react_namespaceObject.useContext)(SettingsContext);
  const [isNavigatingWithKeyboard, setIsNavigatingWithKeyboard] = (0,external_react_namespaceObject.useState)(false);
  const {
    highlightHostInstance,
    clearHighlightHostInstance
  } = useHighlightHostInstance();
  const [treeFocused, setTreeFocused] = (0,external_react_namespaceObject.useState)(false);
  const componentsPanelVisible = useExtensionComponentsPanelVisibility(bridge);
  const treeRef = (0,external_react_namespaceObject.useRef)(null);
  const focusTargetRef = (0,external_react_namespaceObject.useRef)(null);
  const listRef = (0,external_react_namespaceObject.useRef)(null);
  (0,external_react_namespaceObject.useEffect)(() => {
    if (!componentsPanelVisible) {
      return;
    }

    if (listRef.current != null && inspectedElementIndex !== null) {
      listRef.current.scrollToItem(inspectedElementIndex, 'smart');
    }
  }, [inspectedElementIndex, componentsPanelVisible]); // Picking an element in the inspector should put focus into the tree.
  // If possible, navigation works right after picking a node.
  // NOTE: This is not guaranteed to work, because browser extension panels are hosted inside an iframe.

  (0,external_react_namespaceObject.useEffect)(() => {
    function handleStopInspectingHost(didSelectNode) {
      if (didSelectNode && focusTargetRef.current !== null) {
        focusTargetRef.current.focus();
        logEvent({
          event_name: 'select-element',
          metadata: {
            source: 'inspector'
          }
        });
      }
    }

    bridge.addListener('stopInspectingHost', handleStopInspectingHost);
    return () => bridge.removeListener('stopInspectingHost', handleStopInspectingHost);
  }, [bridge]); // Navigate the tree with up/down arrow keys.

  (0,external_react_namespaceObject.useEffect)(() => {
    if (treeRef.current === null) {
      return () => {};
    }

    const handleKeyDown = event => {
      if (event.target.tagName === 'INPUT' || event.defaultPrevented) {
        return;
      }

      let element;

      switch (event.key) {
        case 'ArrowDown':
          event.preventDefault();

          if (event.altKey) {
            dispatch({
              type: 'SELECT_NEXT_SIBLING_IN_TREE'
            });
          } else {
            dispatch({
              type: 'SELECT_NEXT_ELEMENT_IN_TREE'
            });
          }

          break;

        case 'ArrowLeft':
          event.preventDefault();
          element = inspectedElementID !== null ? store.getElementByID(inspectedElementID) : null;

          if (element !== null) {
            if (event.altKey) {
              if (element.ownerID !== null) {
                dispatch({
                  type: 'SELECT_OWNER_LIST_PREVIOUS_ELEMENT_IN_TREE'
                });
              }
            } else {
              if (element.children.length > 0 && !element.isCollapsed) {
                store.toggleIsCollapsed(element.id, true);
              } else {
                dispatch({
                  type: 'SELECT_PARENT_ELEMENT_IN_TREE'
                });
              }
            }
          }

          break;

        case 'ArrowRight':
          event.preventDefault();
          element = inspectedElementID !== null ? store.getElementByID(inspectedElementID) : null;

          if (element !== null) {
            if (event.altKey) {
              dispatch({
                type: 'SELECT_OWNER_LIST_NEXT_ELEMENT_IN_TREE'
              });
            } else {
              if (element.children.length > 0 && element.isCollapsed) {
                store.toggleIsCollapsed(element.id, false);
              } else {
                dispatch({
                  type: 'SELECT_CHILD_ELEMENT_IN_TREE'
                });
              }
            }
          }

          break;

        case 'ArrowUp':
          event.preventDefault();

          if (event.altKey) {
            dispatch({
              type: 'SELECT_PREVIOUS_SIBLING_IN_TREE'
            });
          } else {
            dispatch({
              type: 'SELECT_PREVIOUS_ELEMENT_IN_TREE'
            });
          }

          break;

        default:
          return;
      }

      setIsNavigatingWithKeyboard(true);
    }; // We used to listen to at the document level for this event.
    // That allowed us to listen to up/down arrow key events while another section
    // of DevTools (like the search input) was focused.
    // This was a minor UX positive.
    //
    // (We had to use ownerDocument rather than document for this, because the
    // DevTools extension renders the Components and Profiler tabs into portals.)
    //
    // This approach caused a problem though: it meant that a react-devtools-inline
    // instance could steal (and prevent/block) keyboard events from other JavaScript
    // on the page– which could even include other react-devtools-inline instances.
    // This is a potential major UX negative.
    //
    // Given the above trade offs, we now listen on the root of the Tree itself.


    const container = treeRef.current;
    container.addEventListener('keydown', handleKeyDown);
    return () => {
      container.removeEventListener('keydown', handleKeyDown);
    };
  }, [dispatch, inspectedElementID, store]); // Focus management.

  const handleBlur = (0,external_react_namespaceObject.useCallback)(() => setTreeFocused(false), []);
  const handleFocus = (0,external_react_namespaceObject.useCallback)(() => setTreeFocused(true), []);
  const handleKeyPress = (0,external_react_namespaceObject.useCallback)(event => {
    switch (event.key) {
      case 'Enter':
      case ' ':
        if (inspectedElementID !== null) {
          dispatch({
            type: 'SELECT_OWNER',
            payload: inspectedElementID
          });
        }

        break;

      default:
        break;
    }
  }, [dispatch, inspectedElementID]); // If we switch the selected element while using the keyboard,
  // start highlighting it in the DOM instead of the last hovered node.

  const searchRef = (0,external_react_namespaceObject.useRef)({
    searchIndex,
    searchResults
  });
  (0,external_react_namespaceObject.useEffect)(() => {
    let didSelectNewSearchResult = false;

    if (searchRef.current.searchIndex !== searchIndex || searchRef.current.searchResults !== searchResults) {
      searchRef.current.searchIndex = searchIndex;
      searchRef.current.searchResults = searchResults;
      didSelectNewSearchResult = true;
    }

    if (isNavigatingWithKeyboard || didSelectNewSearchResult) {
      if (inspectedElementID !== null) {
        highlightHostInstance(inspectedElementID);
      } else {
        clearHighlightHostInstance();
      }
    }
  }, [bridge, isNavigatingWithKeyboard, highlightHostInstance, searchIndex, searchResults, inspectedElementID]); // Highlight last hovered element.

  const handleElementMouseEnter = (0,external_react_namespaceObject.useCallback)(id => {
    // Ignore hover while we're navigating with keyboard.
    // This avoids flicker from the hovered nodes under the mouse.
    if (!isNavigatingWithKeyboard) {
      highlightHostInstance(id);
    }
  }, [isNavigatingWithKeyboard, highlightHostInstance]);
  const handleMouseMove = (0,external_react_namespaceObject.useCallback)(() => {
    // We started using the mouse again.
    // This will enable hover styles in individual rows.
    setIsNavigatingWithKeyboard(false);
  }, []);
  const handleMouseLeave = clearHighlightHostInstance; // Let react-window know to re-render any time the underlying tree data changes.
  // This includes the owner context, since it controls a filtered view of the tree.

  const itemData = (0,external_react_namespaceObject.useMemo)(() => ({
    isNavigatingWithKeyboard,
    onElementMouseEnter: handleElementMouseEnter,
    treeFocused
  }), [isNavigatingWithKeyboard, handleElementMouseEnter, treeFocused]);
  const itemKey = (0,external_react_namespaceObject.useCallback)(index => store.getElementIDAtIndex(index), [store]);
  const handlePreviousErrorOrWarningClick = external_react_namespaceObject.useCallback(() => {
    dispatch({
      type: 'SELECT_PREVIOUS_ELEMENT_WITH_ERROR_OR_WARNING_IN_TREE'
    });
  }, []);
  const handleNextErrorOrWarningClick = external_react_namespaceObject.useCallback(() => {
    dispatch({
      type: 'SELECT_NEXT_ELEMENT_WITH_ERROR_OR_WARNING_IN_TREE'
    });
  }, []);
  const errorsOrWarningsSubscription = (0,external_react_namespaceObject.useMemo)(() => ({
    getCurrentValue: () => ({
      errors: store.componentWithErrorCount,
      warnings: store.componentWithWarningCount
    }),
    subscribe: callback => {
      store.addListener('mutated', callback);
      return () => store.removeListener('mutated', callback);
    }
  }), [store]);
  const {
    errors,
    warnings
  } = useSubscription(errorsOrWarningsSubscription);

  const clearErrorsAndWarnings = () => {
    backendAPI_clearErrorsAndWarnings({
      bridge,
      store
    });
  };

  const zeroElementsNotice = /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Tree_default()).ZeroElementsNotice
  }, /*#__PURE__*/external_react_namespaceObject.createElement("p", null, "Loading React Element Tree..."), /*#__PURE__*/external_react_namespaceObject.createElement("p", null, "If this seems stuck, please follow the", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("a", {
    className: (Tree_default()).Link,
    href: "https://github.com/facebook/react/blob/main/packages/react-devtools/README.md#the-react-tab-shows-no-components",
    target: "_blank"
  }, "troubleshooting instructions"), "."));
  return /*#__PURE__*/external_react_namespaceObject.createElement(Components_TreeFocusedContext.Provider, {
    value: treeFocused
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Tree_default()).Tree,
    ref: treeRef
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Tree_default()).SearchInput
  }, store.supportsClickToInspect && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement(InspectHostNodesToggle, null), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Tree_default()).VRule
  })), /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Suspense, {
    fallback: /*#__PURE__*/external_react_namespaceObject.createElement(Loading, null)
  }, ownerID !== null ? /*#__PURE__*/external_react_namespaceObject.createElement(OwnerStack, null) : /*#__PURE__*/external_react_namespaceObject.createElement(ComponentSearchInput, null)), ownerID === null && (errors > 0 || warnings > 0) && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Tree_default()).VRule
  }), errors > 0 && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Tree_default()).IconAndCount
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Icon_Icon, {
    className: (Tree_default()).ErrorIcon,
    type: "error"
  }), errors), warnings > 0 && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Tree_default()).IconAndCount
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Icon_Icon, {
    className: (Tree_default()).WarningIcon,
    type: "warning"
  }), warnings), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: handlePreviousErrorOrWarningClick,
    title: "Scroll to previous error or warning"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "up"
  })), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: handleNextErrorOrWarningClick,
    title: "Scroll to next error or warning"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "down"
  })), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: clearErrorsAndWarnings,
    title: "Clear all errors and warnings"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "clear"
  }))), !hideSettings && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Tree_default()).VRule
  }), /*#__PURE__*/external_react_namespaceObject.createElement(SettingsModalContextToggle, null))), numElements === 0 ? zeroElementsNotice : /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Tree_default()).AutoSizerWrapper,
    onBlur: handleBlur,
    onFocus: handleFocus,
    onKeyPress: handleKeyPress,
    onMouseMove: handleMouseMove,
    onMouseLeave: handleMouseLeave,
    ref: focusTargetRef,
    tabIndex: 0
  }, /*#__PURE__*/external_react_namespaceObject.createElement(AutoSizer, null, ({
    height,
    width
  }) => /*#__PURE__*/external_react_namespaceObject.createElement(FixedSizeList, {
    className: (Tree_default()).List,
    height: height,
    initialScrollOffset: calculateInitialScrollOffset(inspectedElementIndex, lineHeight),
    innerElementType: InnerElementType,
    itemCount: numElements,
    itemData: itemData,
    itemKey: itemKey,
    itemSize: lineHeight,
    ref: listRef,
    width: width
  }, Element_Element)))));
} // Indentation size can be adjusted but child width is fixed.
// We need to adjust indentations so the widest child can fit without overflowing.
// Sometimes the widest child is also the deepest in the tree:
//   ┏----------------------┓
//   ┆ <Foo>                ┆
//   ┆ ••••<Foobar>         ┆
//   ┆ ••••••••<Baz>        ┆
//   ┗----------------------┛
//
// But this is not always the case.
// Even with the above example, a change in indentation may change the overall widest child:
//   ┏----------------------┓
//   ┆ <Foo>                ┆
//   ┆ ••<Foobar>           ┆
//   ┆ ••••<Baz>            ┆
//   ┗----------------------┛
//
// In extreme cases this difference can be important:
//   ┏----------------------┓
//   ┆ <ReallyLongName>     ┆
//   ┆ ••<Foo>              ┆
//   ┆ ••••<Bar>            ┆
//   ┆ ••••••<Baz>          ┆
//   ┆ ••••••••<Qux>        ┆
//   ┗----------------------┛
//
// In the above example, the current indentation is fine,
// but if we naively assumed that the widest element is also the deepest element,
// we would end up compressing the indentation unnecessarily:
//   ┏----------------------┓
//   ┆ <ReallyLongName>     ┆
//   ┆ •<Foo>               ┆
//   ┆ ••<Bar>              ┆
//   ┆ •••<Baz>             ┆
//   ┆ ••••<Qux>            ┆
//   ┗----------------------┛
//
// The way we deal with this is to compute the max indentation size that can fit each child,
// given the child's fixed width and depth within the tree.
// Then we take the smallest of these indentation sizes...

function updateIndentationSizeVar(innerDiv, cachedChildWidths, indentationSizeRef, prevListWidthRef) {
  const list = innerDiv.parentElement;
  const listWidth = list.clientWidth; // Skip measurements when the Components panel is hidden.

  if (listWidth === 0) {
    return;
  } // Reset the max indentation size if the width of the tree has increased.


  if (listWidth > prevListWidthRef.current) {
    indentationSizeRef.current = DEFAULT_INDENTATION_SIZE;
  }

  prevListWidthRef.current = listWidth;
  let maxIndentationSize = indentationSizeRef.current; // eslint-disable-next-line no-for-of-loops/no-for-of-loops

  for (const child of innerDiv.children) {
    const depth = parseInt(child.getAttribute('data-depth'), 10) || 0;
    let childWidth = 0;
    const cachedChildWidth = cachedChildWidths.get(child);

    if (cachedChildWidth != null) {
      childWidth = cachedChildWidth;
    } else {
      const {
        firstElementChild
      } = child; // Skip over e.g. the guideline element

      if (firstElementChild != null) {
        childWidth = firstElementChild.clientWidth;
        cachedChildWidths.set(child, childWidth);
      }
    }

    const remainingWidth = Math.max(0, listWidth - childWidth);
    maxIndentationSize = Math.min(maxIndentationSize, remainingWidth / depth);
  }

  indentationSizeRef.current = maxIndentationSize;
  list.style.setProperty('--indentation-size', `${maxIndentationSize}px`);
} // $FlowFixMe[missing-local-annot]


function InnerElementType({
  children,
  style
}) {
  const {
    ownerID
  } = (0,external_react_namespaceObject.useContext)(TreeStateContext);
  const cachedChildWidths = (0,external_react_namespaceObject.useMemo)(() => new WeakMap(), []); // This ref tracks the current indentation size.
  // We decrease indentation to fit wider/deeper trees.
  // We intentionally do not increase it again afterward, to avoid the perception of content "jumping"
  // e.g. clicking to toggle/collapse a row might otherwise jump horizontally beneath your cursor,
  // e.g. scrolling a wide row off screen could cause narrower rows to jump to the right some.
  //
  // There are two exceptions for this:
  // 1. The first is when the width of the tree increases.
  // The user may have resized the window specifically to make more room for DevTools.
  // In either case, this should reset our max indentation size logic.
  // 2. The second is when the user enters or exits an owner tree.

  const indentationSizeRef = (0,external_react_namespaceObject.useRef)(DEFAULT_INDENTATION_SIZE);
  const prevListWidthRef = (0,external_react_namespaceObject.useRef)(0);
  const prevOwnerIDRef = (0,external_react_namespaceObject.useRef)(ownerID);
  const divRef = (0,external_react_namespaceObject.useRef)(null); // We shouldn't retain this width across different conceptual trees though,
  // so when the user opens the "owners tree" view, we should discard the previous width.

  if (ownerID !== prevOwnerIDRef.current) {
    prevOwnerIDRef.current = ownerID;
    indentationSizeRef.current = DEFAULT_INDENTATION_SIZE;
  } // When we render new content, measure to see if we need to shrink indentation to fit it.


  (0,external_react_namespaceObject.useEffect)(() => {
    if (divRef.current !== null) {
      updateIndentationSizeVar(divRef.current, cachedChildWidths, indentationSizeRef, prevListWidthRef);
    }
  }); // This style override enables the background color to fill the full visible width,
  // when combined with the CSS tweaks in Element.
  // A lot of options were considered; this seemed the one that requires the least code.
  // See https://github.com/bvaughn/react-devtools-experimental/issues/9

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Tree_default()).InnerElementType,
    ref: divRef,
    style: { ...style,
      pointerEvents: null
    }
  }, /*#__PURE__*/external_react_namespaceObject.createElement(SelectedTreeHighlight_SelectedTreeHighlight, null), children);
}

function Loading() {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Tree_default()).Loading
  }, "Loading...");
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/ErrorBoundary/shared.css
var shared = __webpack_require__(2726);
var shared_default = /*#__PURE__*/__webpack_require__.n(shared);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ErrorBoundary/UnsupportedBridgeOperationView.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function UnsupportedBridgeOperationView({
  callStack,
  children,
  componentStack,
  errorMessage
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorBoundary
  }, children, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorInfo
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).HeaderRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorHeader
  }, errorMessage || 'Bridge protocol mismatch')), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).InfoBox
  }, "An incompatible version of ", /*#__PURE__*/external_react_namespaceObject.createElement("code", null, "react-devtools-core"), " has been embedded in a renderer like React Native. To fix this, update the", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("code", null, "react-devtools-core"), " package within the React Native application, or downgrade the ", /*#__PURE__*/external_react_namespaceObject.createElement("code", null, "react-devtools"), " package you use to open the DevTools UI."), !!callStack && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorStack
  }, "The error was thrown ", callStack.trim())));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ErrorBoundary/ErrorView.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




function ErrorView({
  callStack,
  children,
  componentStack,
  dismissError = null,
  errorMessage
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorBoundary
  }, children, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorInfo
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).HeaderRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorHeader
  }, "Uncaught Error: ", errorMessage || ''), dismissError !== null && /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    className: (shared_default()).CloseButton,
    onClick: dismissError
  }, "Dismiss", /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    className: (shared_default()).CloseButtonIcon,
    type: "close"
  }))), !!callStack && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorStack
  }, "The error was thrown ", callStack.trim()), !!componentStack && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorStack
  }, "The error occurred ", componentStack.trim())));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/LoadingAnimation.css
var LoadingAnimation = __webpack_require__(3770);
var LoadingAnimation_default = /*#__PURE__*/__webpack_require__.n(LoadingAnimation);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/LoadingAnimation.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function LoadingAnimation_LoadingAnimation({
  className = ''
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    className: `${(LoadingAnimation_default()).Icon} ${className}`,
    width: "24",
    height: "24",
    viewBox: "0 0 100 100"
  }, /*#__PURE__*/external_react_namespaceObject.createElement("path", {
    d: "M0 0h100v100H0z",
    fill: "none"
  }), /*#__PURE__*/external_react_namespaceObject.createElement("circle", {
    fill: "currentColor",
    stroke: "none",
    cx: "20",
    cy: "50",
    r: "10"
  }, /*#__PURE__*/external_react_namespaceObject.createElement("animate", {
    attributeName: "opacity",
    dur: "1s",
    values: "0;1;0",
    repeatCount: "indefinite",
    begin: "0.1"
  })), /*#__PURE__*/external_react_namespaceObject.createElement("circle", {
    fill: "currentColor",
    stroke: "none",
    cx: "50",
    cy: "50",
    r: "10"
  }, /*#__PURE__*/external_react_namespaceObject.createElement("animate", {
    attributeName: "opacity",
    dur: "1s",
    values: "0;1;0",
    repeatCount: "indefinite",
    begin: "0.2"
  })), /*#__PURE__*/external_react_namespaceObject.createElement("circle", {
    fill: "currentColor",
    stroke: "none",
    cx: "80",
    cy: "50",
    r: "10"
  }, /*#__PURE__*/external_react_namespaceObject.createElement("animate", {
    attributeName: "opacity",
    dur: "1s",
    values: "0;1;0",
    repeatCount: "indefinite",
    begin: "0.3"
  })));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ErrorBoundary/SearchingGitHubIssues.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



function SearchingGitHubIssues() {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).GitHubLinkRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement(LoadingAnimation_LoadingAnimation, {
    className: (shared_default()).LoadingIcon
  }), "Searching GitHub for reports of this error...");
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ErrorBoundary/githubAPI.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
const GITHUB_ISSUES_API = 'https://api.github.com/search/issues';
function searchGitHubIssuesURL(message) {
  // Remove Fiber IDs from error message (as those will be unique).
  message = message.replace(/"[0-9]+"/g, '');
  const filters = ['in:title', 'is:issue', 'is:open', 'is:public', 'label:"Component: Developer Tools"', 'repo:facebook/react'];
  return GITHUB_ISSUES_API + '?q=' + encodeURIComponent(message) + '%20' + filters.map(encodeURIComponent).join('%20');
}
async function searchGitHubIssues(message) {
  const response = await fetch(searchGitHubIssuesURL(message));
  const data = await response.json();

  if (data.items.length > 0) {
    const item = data.items[0];
    return {
      title: item.title,
      url: item.html_url
    };
  } else {
    return null;
  }
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ErrorBoundary/cache.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


const API_TIMEOUT = 3000;
const cache_Pending = 0;
const cache_Resolved = 1;
const cache_Rejected = 2;

function readRecord(record) {
  if (record.status === cache_Resolved) {
    // This is just a type refinement.
    return record;
  } else if (record.status === cache_Rejected) {
    // This is just a type refinement.
    return record;
  } else {
    throw record.value;
  }
}

function createMap() {
  return new Map();
}

function getRecordMap() {
  return (0,external_react_namespaceObject.unstable_getCacheForType)(createMap);
}

function findGitHubIssue(errorMessage) {
  errorMessage = normalizeErrorMessage(errorMessage);
  const map = getRecordMap();
  let record = map.get(errorMessage);

  if (!record) {
    const callbacks = new Set();
    const wakeable = {
      then(callback) {
        callbacks.add(callback);
      },

      // Optional property used by Timeline:
      displayName: `Searching GitHub issues for error "${errorMessage}"`
    };

    const wake = () => {
      // This assumes they won't throw.
      callbacks.forEach(callback => callback());
      callbacks.clear();
    };

    const newRecord = record = {
      status: cache_Pending,
      value: wakeable
    };
    let didTimeout = false;
    searchGitHubIssues(errorMessage).then(maybeItem => {
      if (didTimeout) {
        return;
      }

      if (maybeItem) {
        const resolvedRecord = newRecord;
        resolvedRecord.status = cache_Resolved;
        resolvedRecord.value = maybeItem;
      } else {
        const notFoundRecord = newRecord;
        notFoundRecord.status = cache_Rejected;
        notFoundRecord.value = null;
      }

      wake();
    }).catch(error => {
      const thrownRecord = newRecord;
      thrownRecord.status = cache_Rejected;
      thrownRecord.value = null;
      wake();
    }); // Only wait a little while for GitHub results before showing a fallback.

    setTimeout(() => {
      didTimeout = true;
      const timedoutRecord = newRecord;
      timedoutRecord.status = cache_Rejected;
      timedoutRecord.value = null;
      wake();
    }, API_TIMEOUT);
    map.set(errorMessage, record);
  }

  const response = readRecord(record).value;
  return response;
}

function normalizeErrorMessage(errorMessage) {
  // Remove Fiber IDs from error message (as those will be unique).
  errorMessage = errorMessage.replace(/"[0-9]+"/, '');
  return errorMessage;
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ErrorBoundary/UpdateExistingIssue.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



function UpdateExistingIssue({
  gitHubIssue
}) {
  const {
    title,
    url
  } = gitHubIssue;
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).GitHubLinkRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Icon_Icon, {
    className: (shared_default()).ReportIcon,
    type: "bug"
  }), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).UpdateExistingIssuePrompt
  }, "Update existing issue:"), /*#__PURE__*/external_react_namespaceObject.createElement("a", {
    className: (shared_default()).ReportLink,
    href: url,
    rel: "noopener noreferrer",
    target: "_blank",
    title: "Report bug"
  }, title));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ErrorBoundary/ReportNewIssue.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




const LABELS = ['Component: Developer Tools', 'Type: Bug', 'Status: Unconfirmed']; // This must match the filename in ".github/ISSUE_TEMPLATE/"

const TEMPLATE = 'devtools_bug_report.yml';
function ReportNewIssue({
  callStack,
  componentStack,
  errorMessage
}) {
  let bugURL = "https://github.com/facebook/react";

  if (!bugURL) {
    return null;
  }

  const gitHubAPISearch = errorMessage !== null ? searchGitHubIssuesURL(errorMessage) : '(none)';
  const title = `[DevTools Bug] ${errorMessage || ''}`;
  const parameters = [`template=${TEMPLATE}`, `labels=${encodeURIComponent(LABELS.join(','))}`, `title=${encodeURIComponent(title)}`, `automated_package=${"react-devtools-inline" || 0}`, `automated_version=${"6.1.1-3366146796" || 0}`, `automated_error_message=${encodeURIComponent(errorMessage || '')}`, `automated_call_stack=${encodeURIComponent(callStack || '')}`, `automated_component_stack=${encodeURIComponent(componentStack || '')}`, `automated_github_query_string=${gitHubAPISearch}`];
  bugURL += `/issues/new?${parameters.join('&')}`;
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).GitHubLinkRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Icon_Icon, {
    className: (shared_default()).ReportIcon,
    type: "bug"
  }), /*#__PURE__*/external_react_namespaceObject.createElement("a", {
    className: (shared_default()).ReportLink,
    href: bugURL,
    rel: "noopener noreferrer",
    target: "_blank",
    title: "Report bug"
  }, "Report this issue"), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ReproSteps
  }, "(Please include steps on how to reproduce it and the components used.)"));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ErrorBoundary/WorkplaceGroup.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





function WorkplaceGroup() {
  if (!isInternalFacebookBuild) {
    return null;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).WorkplaceGroupRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Icon_Icon, {
    className: (shared_default()).ReportIcon,
    type: "facebook"
  }), /*#__PURE__*/external_react_namespaceObject.createElement("a", {
    className: (shared_default()).ReportLink,
    href: REACT_DEVTOOLS_WORKPLACE_URL,
    rel: "noopener noreferrer",
    target: "_blank",
    title: "Report bug"
  }, "Report this on Workplace"), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).FacebookOnly
  }, "(Facebook employees only.)"));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ErrorBoundary/SuspendingErrorView.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





function SuspendingErrorView({
  callStack,
  componentStack,
  errorMessage
}) {
  const maybeItem = errorMessage !== null ? findGitHubIssue(errorMessage) : null;
  let GitHubUI;

  if (maybeItem != null) {
    GitHubUI = /*#__PURE__*/external_react_namespaceObject.createElement(UpdateExistingIssue, {
      gitHubIssue: maybeItem
    });
  } else {
    GitHubUI = /*#__PURE__*/external_react_namespaceObject.createElement(ReportNewIssue, {
      callStack: callStack,
      componentStack: componentStack,
      errorMessage: errorMessage
    });
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, GitHubUI, /*#__PURE__*/external_react_namespaceObject.createElement(WorkplaceGroup, null));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ErrorBoundary/TimeoutView.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




function TimeoutView({
  callStack,
  children,
  componentStack,
  dismissError = null,
  errorMessage
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorBoundary
  }, children, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorInfo
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).HeaderRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).TimeoutHeader
  }, errorMessage || 'Timed out waiting'), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    className: (shared_default()).CloseButton,
    onClick: dismissError
  }, "Retry", /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    className: (shared_default()).CloseButtonIcon,
    type: "close"
  }))), !!componentStack && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).TimeoutStack
  }, "The timeout occurred ", componentStack.trim())));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ErrorBoundary/CaughtErrorView.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function CaughtErrorView({
  callStack,
  children,
  info,
  componentStack,
  errorMessage
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorBoundary
  }, children, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorInfo
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).HeaderRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorHeader
  }, errorMessage)), !!info && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).InfoBox
  }, info), !!callStack && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (shared_default()).ErrorStack
  }, "The error was thrown ", callStack.trim())));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/errors/UserError.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
class UserError extends Error {
  constructor(message) {
    super(message); // Maintains proper stack trace for where our error was thrown (only available on V8)

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, UserError);
    }

    this.name = 'UserError';
  }

}
;// CONCATENATED MODULE: ../react-devtools-shared/src/errors/UnknownHookError.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
class UnknownHookError extends Error {
  constructor(message) {
    super(message); // Maintains proper stack trace for where our error was thrown (only available on V8)

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, UnknownHookError);
    }

    this.name = 'UnknownHookError';
  }

}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ErrorBoundary/ErrorBoundary.js
function ErrorBoundary_defineProperty(obj, key, value) { key = ErrorBoundary_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function ErrorBoundary_toPropertyKey(t) { var i = ErrorBoundary_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function ErrorBoundary_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */














const InitialState = {
  callStack: null,
  canDismiss: false,
  componentStack: null,
  errorMessage: null,
  hasError: false,
  isUnsupportedBridgeOperationError: false,
  isTimeout: false,
  isUserError: false,
  isUnknownHookError: false
};
class ErrorBoundary extends external_react_namespaceObject.Component {
  constructor(...args) {
    super(...args);

    ErrorBoundary_defineProperty(this, "state", InitialState);

    ErrorBoundary_defineProperty(this, "_logError", (error, componentStack) => {
      logEvent({
        event_name: 'error',
        error_message: error.message ?? null,
        error_stack: error.stack ?? null,
        error_component_stack: componentStack ?? null
      });
    });

    ErrorBoundary_defineProperty(this, "_dismissError", () => {
      const onBeforeDismissCallback = this.props.onBeforeDismissCallback;

      if (typeof onBeforeDismissCallback === 'function') {
        onBeforeDismissCallback();
      }

      this.setState(InitialState);
    });

    ErrorBoundary_defineProperty(this, "_onStoreError", error => {
      if (!this.state.hasError) {
        this._logError(error, null);

        this.setState({ ...ErrorBoundary.getDerivedStateFromError(error),
          canDismiss: true
        });
      }
    });
  }

  static getDerivedStateFromError(error) {
    const errorMessage = typeof error === 'object' && error !== null && typeof error.message === 'string' ? error.message : null;
    const isTimeout = error instanceof TimeoutError;
    const isUserError = error instanceof UserError;
    const isUnknownHookError = error instanceof UnknownHookError;
    const isUnsupportedBridgeOperationError = error instanceof UnsupportedBridgeOperationError;
    const callStack = typeof error === 'object' && error !== null && typeof error.stack === 'string' ? error.stack.split('\n').slice(1).join('\n') : null;
    return {
      callStack,
      errorMessage,
      hasError: true,
      isUnsupportedBridgeOperationError,
      isUnknownHookError,
      isTimeout,
      isUserError
    };
  }

  componentDidCatch(error, {
    componentStack
  }) {
    this._logError(error, componentStack);

    this.setState({
      componentStack
    });
  }

  componentDidMount() {
    const {
      store
    } = this.props;

    if (store != null) {
      store.addListener('error', this._onStoreError);
    }
  }

  componentWillUnmount() {
    const {
      store
    } = this.props;

    if (store != null) {
      store.removeListener('error', this._onStoreError);
    }
  }

  render() {
    const {
      canDismiss: canDismissProp,
      children
    } = this.props;
    const {
      callStack,
      canDismiss: canDismissState,
      componentStack,
      errorMessage,
      hasError,
      isUnsupportedBridgeOperationError,
      isTimeout,
      isUserError,
      isUnknownHookError
    } = this.state;

    if (hasError) {
      if (isTimeout) {
        return /*#__PURE__*/external_react_namespaceObject.createElement(TimeoutView, {
          callStack: callStack,
          componentStack: componentStack,
          dismissError: canDismissProp || canDismissState ? this._dismissError : null,
          errorMessage: errorMessage
        });
      } else if (isUnsupportedBridgeOperationError) {
        return /*#__PURE__*/external_react_namespaceObject.createElement(UnsupportedBridgeOperationView, {
          callStack: callStack,
          componentStack: componentStack,
          errorMessage: errorMessage
        });
      } else if (isUserError) {
        return /*#__PURE__*/external_react_namespaceObject.createElement(CaughtErrorView, {
          callStack: callStack,
          componentStack: componentStack,
          errorMessage: errorMessage || 'Error occured in inspected element',
          info: /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, "React DevTools encountered an error while trying to inspect the hooks. This is most likely caused by a developer error in the currently inspected element. Please see your console for logged error.")
        });
      } else if (isUnknownHookError) {
        return /*#__PURE__*/external_react_namespaceObject.createElement(CaughtErrorView, {
          callStack: callStack,
          componentStack: componentStack,
          errorMessage: errorMessage || 'Encountered an unknown hook',
          info: /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, "React DevTools encountered an unknown hook. This is probably because the react-debug-tools package is out of date. To fix, upgrade the React DevTools to the most recent version.")
        });
      } else {
        return /*#__PURE__*/external_react_namespaceObject.createElement(ErrorView, {
          callStack: callStack,
          componentStack: componentStack,
          dismissError: canDismissProp || canDismissState ? this._dismissError : null,
          errorMessage: errorMessage
        }, /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Suspense, {
          fallback: /*#__PURE__*/external_react_namespaceObject.createElement(SearchingGitHubIssues, null)
        }, /*#__PURE__*/external_react_namespaceObject.createElement(SuspendingErrorView, {
          callStack: callStack,
          componentStack: componentStack,
          errorMessage: errorMessage
        })));
      }
    }

    return children;
  }

}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ErrorBoundary/index.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/* harmony default export */ const views_ErrorBoundary = (ErrorBoundary);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ThemeProvider.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function ThemeProvider({
  children
}) {
  const themeStyle = views_useThemeStyles();
  const style = external_react_namespaceObject.useMemo(() => {
    return { ...themeStyle,
      width: '100%',
      height: '100%'
    };
  }, [themeStyle]);
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    style: style
  }, children);
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/portaledContent.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






function portaledContent(Component) {
  return function PortaledContent({
    portalContainer,
    ...rest
  }) {
    const store = (0,external_react_namespaceObject.useContext)(StoreContext);
    let children = /*#__PURE__*/external_react_namespaceObject.createElement(views_ErrorBoundary, {
      store: store
    }, /*#__PURE__*/external_react_namespaceObject.createElement(Component, rest));

    if (portalContainer != null) {
      // The ThemeProvider works by writing DOM style variables to an HTMLDivElement.
      // Because Portals render in a different DOM subtree, these variables don't propagate.
      // So in this case, we need to re-wrap portaled content in a second ThemeProvider.
      children = /*#__PURE__*/external_react_namespaceObject.createElement(ThemeProvider, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        "data-react-devtools-portal-root": true,
        style: {
          width: '100vw',
          height: '100vh'
        }
      }, children));
    }

    return portalContainer != null ? /*#__PURE__*/(0,external_react_dom_namespaceObject.createPortal)(children, portalContainer) : children;
  };
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/inspectedElementMutableSource.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





// Maps element ID to inspected data.
// We use an LRU for this rather than a WeakMap because of how the "no-change" optimization works.
// When the frontend polls the backend for an update on the element that's currently inspected,
// the backend will send a "no-change" message if the element hasn't updated (rendered) since the last time it was asked.
// In this case, the frontend cache should reuse the previous (cached) value.
// Using a WeakMap keyed on Element generally works well for this, since Elements are mutable and stable in the Store.
// This doens't work properly though when component filters are changed,
// because this will cause the Store to dump all roots and re-initialize the tree (recreating the Element objects).
// So instead we key on Element ID (which is stable in this case) and use an LRU for eviction.
const inspectedElementCache = new (lru_cache_default())({
  max: 25
});
function inspectedElementMutableSource_inspectElement(bridge, element, path, rendererID, shouldListenToPauseEvents = false) {
  const {
    id
  } = element; // This could indicate that the DevTools UI has been closed and reopened.
  // The in-memory cache will be clear but the backend still thinks we have cached data.
  // In this case, we need to tell it to resend the full data.

  const forceFullData = !inspectedElementCache.has(id);
  return inspectElement(bridge, forceFullData, id, path, rendererID, shouldListenToPauseEvents).then(data => {
    const {
      type
    } = data;
    let inspectedElement;

    switch (type) {
      case 'error':
        {
          const {
            message,
            stack,
            errorType
          } = data; // create a different error class for each error type
          // and keep useful information from backend.

          let error;

          if (errorType === 'user') {
            error = new UserError(message);
          } else if (errorType === 'unknown-hook') {
            error = new UnknownHookError(message);
          } else {
            error = new Error(message);
          } // The backend's stack (where the error originated) is more meaningful than this stack.


          error.stack = stack || error.stack;
          throw error;
        }

      case 'no-change':
        // This is a no-op for the purposes of our cache.
        inspectedElement = inspectedElementCache.get(id);

        if (inspectedElement != null) {
          return [inspectedElement, type];
        } // We should only encounter this case in the event of a bug.


        throw Error(`Cached data for element "${id}" not found`);

      case 'not-found':
        // This is effectively a no-op.
        // If the Element is still in the Store, we can eagerly remove it from the Map.
        inspectedElementCache.del(id);
        throw Error(`Element "${id}" not found`);

      case 'full-data':
        const fullData = data; // New data has come in.
        // We should replace the data in our local mutable copy.

        inspectedElement = convertInspectedElementBackendToFrontend(fullData.value);
        inspectedElementCache.set(id, inspectedElement);
        return [inspectedElement, type];

      case 'hydrated-path':
        const hydratedPathData = data;
        const {
          value
        } = hydratedPathData; // A path has been hydrated.
        // Merge it with the latest copy we have locally and resolve with the merged value.

        inspectedElement = inspectedElementCache.get(id) || null;

        if (inspectedElement !== null) {
          // Clone element
          inspectedElement = { ...inspectedElement
          }; // Merge hydrated data

          if (path != null) {
            hydration_fillInPath(inspectedElement, value, path, hydrateHelper(value, path));
          }

          inspectedElementCache.set(id, inspectedElement);
          return [inspectedElement, type];
        }

        break;

      default:
        // Should never happen.
        if (false) {}

        break;
    }

    throw Error(`Unable to inspect element with id "${id}"`);
  });
}
function clearCacheForTests() {
  inspectedElementCache.reset();
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/inspectedElementCache.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




const inspectedElementCache_Pending = 0;
const inspectedElementCache_Resolved = 1;
const inspectedElementCache_Rejected = 2;

function inspectedElementCache_readRecord(record) {
  if (record.status === inspectedElementCache_Resolved) {
    // This is just a type refinement.
    return record;
  } else {
    throw record.value;
  }
}

function inspectedElementCache_createMap() {
  return new WeakMap();
}

function inspectedElementCache_getRecordMap() {
  return (0,external_react_namespaceObject.unstable_getCacheForType)(inspectedElementCache_createMap);
}

function createCacheSeed(element, inspectedElement) {
  const newRecord = {
    status: inspectedElementCache_Resolved,
    value: inspectedElement
  };
  const map = inspectedElementCache_createMap();
  map.set(element, newRecord);
  return [inspectedElementCache_createMap, map];
}
/**
 * Fetches element props and state from the backend for inspection.
 * This method should be called during render; it will suspend if data has not yet been fetched.
 */


function inspectedElementCache_inspectElement(element, path, store, bridge) {
  const map = inspectedElementCache_getRecordMap();
  let record = map.get(element);

  if (!record) {
    const callbacks = new Set();
    const wakeable = {
      then(callback) {
        callbacks.add(callback);
      },

      // Optional property used by Timeline:
      displayName: `Inspecting ${element.displayName || 'Unknown'}`
    };

    const wake = () => {
      // This assumes they won't throw.
      callbacks.forEach(callback => callback());
      callbacks.clear();
    };

    const newRecord = record = {
      status: inspectedElementCache_Pending,
      value: wakeable
    };
    const rendererID = store.getRendererIDForElement(element.id);

    if (rendererID == null) {
      const rejectedRecord = newRecord;
      rejectedRecord.status = inspectedElementCache_Rejected;
      rejectedRecord.value = new Error(`Could not inspect element with id "${element.id}". No renderer found.`);
      map.set(element, record);
      return null;
    }

    inspectedElementMutableSource_inspectElement(bridge, element, path, rendererID).then(([inspectedElement]) => {
      const resolvedRecord = newRecord;
      resolvedRecord.status = inspectedElementCache_Resolved;
      resolvedRecord.value = inspectedElement;
      wake();
    }, error => {
      console.error(error);
      const rejectedRecord = newRecord;
      rejectedRecord.status = inspectedElementCache_Rejected;
      rejectedRecord.value = error;
      wake();
    });
    map.set(element, record);
  }

  const response = inspectedElementCache_readRecord(record).value;
  return response;
}

/**
 * Asks the backend for updated props and state from an expected element.
 * This method should never be called during render; call it from an effect or event handler.
 * This method will schedule an update if updated information is returned.
 */
function checkForUpdate({
  bridge,
  element,
  refresh,
  store
}) {
  const {
    id
  } = element;
  const rendererID = store.getRendererIDForElement(id);

  if (rendererID == null) {
    return;
  }

  return inspectedElementMutableSource_inspectElement(bridge, element, null, rendererID, true).then(([inspectedElement, responseType]) => {
    if (responseType === 'full-data') {
      (0,external_react_namespaceObject.startTransition)(() => {
        const [key, value] = createCacheSeed(element, inspectedElement);
        refresh(key, value);
      });
    }
  });
}

function createPromiseWhichResolvesInOneSecond() {
  return new Promise(resolve => setTimeout(resolve, 1000));
}

function startElementUpdatesPolling({
  bridge,
  element,
  refresh,
  store
}) {
  let status = 'idle';

  function abort() {
    status = 'aborted';
  }

  function resume() {
    if (status === 'running' || status === 'aborted') {
      return;
    }

    status = 'idle';
    poll();
  }

  function pause() {
    if (status === 'paused' || status === 'aborted') {
      return;
    }

    status = 'paused';
  }

  function poll() {
    status = 'running';
    return Promise.allSettled([checkForUpdate({
      bridge,
      element,
      refresh,
      store
    }), createPromiseWhichResolvesInOneSecond()]).then(([{
      status: updateStatus,
      reason
    }]) => {
      // There isn't much to do about errors in this case,
      // but we should at least log them, so they aren't silent.
      // Log only if polling is still active, we can't handle the case when
      // request was sent, and then bridge was remounted (for example, when user did navigate to a new page),
      // but at least we can mark that polling was aborted
      if (updateStatus === 'rejected' && status !== 'aborted') {
        // This is expected Promise rejection, no need to log it
        if (reason instanceof ElementPollingCancellationError) {
          return;
        }

        console.error(reason);
      }
    }).finally(() => {
      const shouldContinuePolling = status !== 'aborted' && status !== 'paused';
      status = 'idle';

      if (shouldContinuePolling) {
        return poll();
      }
    });
  }

  poll();
  return {
    abort,
    resume,
    pause
  };
}
function clearCacheBecauseOfError(refresh) {
  (0,external_react_namespaceObject.startTransition)(() => {
    const map = inspectedElementCache_createMap();
    refresh(inspectedElementCache_createMap, map);
  });
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementErrorBoundary.css
var InspectedElementErrorBoundary = __webpack_require__(5893);
var InspectedElementErrorBoundary_default = /*#__PURE__*/__webpack_require__.n(InspectedElementErrorBoundary);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementErrorBoundary.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






function InspectedElementErrorBoundaryWrapper({
  children
}) {
  // Key on the selected element ID so that changing the selected element automatically hides the boundary.
  // This seems best since an error inspecting one element isn't likely to be relevant to another element.
  const {
    inspectedElementID
  } = (0,external_react_namespaceObject.useContext)(TreeStateContext);
  const refresh = (0,external_react_namespaceObject.unstable_useCacheRefresh)();
  const handleDsmiss = (0,external_react_namespaceObject.useCallback)(() => {
    clearCacheBecauseOfError(refresh);
  }, [refresh]);
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementErrorBoundary_default()).Wrapper
  }, /*#__PURE__*/external_react_namespaceObject.createElement(views_ErrorBoundary, {
    key: inspectedElementID,
    canDismiss: true,
    onBeforeDismissCallback: handleDsmiss
  }, children));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/NativeTagBadge.css
var NativeTagBadge = __webpack_require__(8533);
var NativeTagBadge_default = /*#__PURE__*/__webpack_require__.n(NativeTagBadge);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/NativeTagBadge.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





const NativeTagBadge_noop = () => {};

const title = 'Unique identifier for the corresponding native component. React Native only.';
function NativeTagBadge_NativeTagBadge({
  nativeTag
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement(Toggle_Toggle, {
    onChange: NativeTagBadge_noop,
    className: (NativeTagBadge_default()).Toggle,
    title: title
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Badge_Badge, {
    className: (NativeTagBadge_default()).Badge
  }, "Tag ", nativeTag));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementBadges.css
var InspectedElementBadges = __webpack_require__(3142);
var InspectedElementBadges_default = /*#__PURE__*/__webpack_require__.n(InspectedElementBadges);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementBadges.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





function InspectedElementBadges_InspectedElementBadges({
  hocDisplayNames,
  compiledWithForget,
  nativeTag
}) {
  if (!compiledWithForget && (hocDisplayNames == null || hocDisplayNames.length === 0) && nativeTag === null) {
    return null;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementBadges_default()).Root
  }, compiledWithForget && /*#__PURE__*/external_react_namespaceObject.createElement(ForgetBadge_ForgetBadge, {
    indexable: false
  }), nativeTag !== null && /*#__PURE__*/external_react_namespaceObject.createElement(NativeTagBadge_NativeTagBadge, {
    nativeTag: nativeTag
  }), hocDisplayNames !== null && hocDisplayNames.map(hocDisplayName => /*#__PURE__*/external_react_namespaceObject.createElement(Badge_Badge, {
    key: hocDisplayName
  }, hocDisplayName)));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/NativeStyleEditor/AutoSizeInput.css
var AutoSizeInput = __webpack_require__(3194);
var AutoSizeInput_default = /*#__PURE__*/__webpack_require__.n(AutoSizeInput);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/NativeStyleEditor/AutoSizeInput.js
function AutoSizeInput_extends() { AutoSizeInput_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return AutoSizeInput_extends.apply(this, arguments); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function AutoSizeInput_AutoSizeInput({
  className,
  onFocus,
  placeholder = '',
  testName,
  value,
  ...rest
}) {
  // $FlowFixMe[missing-local-annot]
  const onFocusWrapper = event => {
    const input = event.target;

    if (input !== null) {
      input.selectionStart = 0;
      input.selectionEnd = value.length;
    }

    if (typeof onFocus === 'function') {
      onFocus(event);
    }
  };

  const isEmpty = value === '' || value === '""';
  return (
    /*#__PURE__*/
    // $FlowFixMe[cannot-spread-inexact] unsafe rest spread
    external_react_namespaceObject.createElement("input", AutoSizeInput_extends({
      className: [(AutoSizeInput_default()).Input, className].join(' '),
      "data-testname": testName,
      onFocus: onFocusWrapper,
      placeholder: placeholder,
      style: {
        width: `calc(${isEmpty ? placeholder.length : value.length}ch + 1px)`
      },
      value: isEmpty ? '' : value
    }, rest))
  );
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/EditableName.css
var EditableName = __webpack_require__(9206);
var EditableName_default = /*#__PURE__*/__webpack_require__.n(EditableName);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/EditableName.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




function EditableName_EditableName({
  allowEmpty = false,
  allowWhiteSpace = false,
  autoFocus = false,
  className = '',
  initialValue = '',
  overrideName,
  path,
  type
}) {
  const [editableName, setEditableName] = (0,external_react_namespaceObject.useState)(initialValue);
  const [isValid, setIsValid] = (0,external_react_namespaceObject.useState)(false);
  const handleChange = (0,external_react_namespaceObject.useCallback)(({
    target
  }) => {
    let value = target.value;

    if (!allowWhiteSpace) {
      value = value.trim();
    }

    if (allowEmpty || value !== '') {
      setIsValid(true);
    } else {
      setIsValid(false);
    }

    setEditableName(value);
  }, [overrideName]);
  const handleKeyDown = (0,external_react_namespaceObject.useCallback)(event => {
    // Prevent keydown events from e.g. change selected element in the tree
    event.stopPropagation();

    switch (event.key) {
      case 'Enter':
      case 'Tab':
        if (isValid) {
          const basePath = path.slice(0, path.length - 1);
          overrideName([...basePath, initialValue], [...basePath, editableName]);
        }

        break;

      case 'Escape':
        setEditableName(initialValue);
        break;

      default:
        break;
    }
  }, [editableName, setEditableName, isValid, initialValue, overrideName]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(AutoSizeInput_AutoSizeInput, {
    autoFocus: autoFocus,
    className: [(EditableName_default()).Input, className].join(' '),
    onChange: handleChange,
    onKeyDown: handleKeyDown,
    placeholder: "new entry",
    testName: "EditableName",
    type: "text",
    value: editableName
  });
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/EditableValue.css
var EditableValue = __webpack_require__(9328);
var EditableValue_default = /*#__PURE__*/__webpack_require__.n(EditableValue);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/EditableValue.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




function EditableValue_EditableValue({
  className = '',
  overrideValue,
  path,
  value
}) {
  const [state, dispatch] = useEditableValue(value);
  const {
    editableValue,
    hasPendingChanges,
    isValid,
    parsedValue
  } = state;

  const reset = () => dispatch({
    type: 'RESET',
    externalValue: value
  }); // $FlowFixMe[missing-local-annot]


  const handleChange = ({
    target
  }) => dispatch({
    type: 'UPDATE',
    editableValue: target.value,
    externalValue: value
  }); // $FlowFixMe[missing-local-annot]


  const handleCheckBoxToggle = ({
    target
  }) => {
    dispatch({
      type: 'UPDATE',
      editableValue: target.checked,
      externalValue: value
    }); // Unlike <input type="text"> which has both an onChange and an onBlur,
    // <input type="checkbox"> updates state *and* applies changes in a single event.
    // So we read from target.checked rather than parsedValue (which has not yet updated).
    // We also don't check isValid (because that hasn't changed yet either);
    // we don't need to check it anyway, since target.checked is always a boolean.

    overrideValue(path, target.checked);
  }; // $FlowFixMe[missing-local-annot]


  const handleKeyDown = event => {
    // Prevent keydown events from e.g. change selected element in the tree
    event.stopPropagation();

    switch (event.key) {
      case 'Enter':
        applyChanges();
        break;

      case 'Escape':
        reset();
        break;

      default:
        break;
    }
  };

  const applyChanges = () => {
    if (isValid && hasPendingChanges) {
      overrideValue(path, parsedValue);
    }
  };

  let placeholder = '';

  if (editableValue === undefined) {
    placeholder = '(undefined)';
  } else {
    placeholder = 'Enter valid JSON';
  }

  const isBool = parsedValue === true || parsedValue === false;
  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    autoComplete: "new-password",
    className: `${isValid ? (EditableValue_default()).Input : (EditableValue_default()).Invalid} ${className}`,
    "data-testname": "EditableValue",
    onBlur: applyChanges,
    onChange: handleChange,
    onKeyDown: handleKeyDown,
    placeholder: placeholder,
    type: "text",
    value: editableValue
  }), isBool && /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    className: (EditableValue_default()).Checkbox,
    checked: parsedValue,
    type: "checkbox",
    onChange: handleCheckBoxToggle
  }));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/utils.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/**
 * Converts nested hooks paths to the format expected by the backend.
 * e.g. [''] => ['']
 * e.g. [1, 'value', ...] => [...]
 * e.g. [2, 'subhooks', 1, 'value', ...] => [...]
 * e.g. [1, 'subhooks', 3, 'subhooks', 2, 'value', ...] => [...]
 */
function parseHookPathForEdit(path) {
  let index = 0;

  for (let i = 0; i < path.length; i++) {
    if (path[i] === 'value') {
      index = i + 1;
      break;
    }
  }

  return path.slice(index);
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/NewArrayValue.css
var NewArrayValue = __webpack_require__(9963);
var NewArrayValue_default = /*#__PURE__*/__webpack_require__.n(NewArrayValue);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/NewArrayValue.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */







function NewArrayValue_NewArrayValue({
  bridge,
  depth,
  hidden,
  hookID,
  index,
  inspectedElement,
  path,
  store,
  type
}) {
  const [key, setKey] = (0,external_react_namespaceObject.useState)(0);
  const [isInvalid, setIsInvalid] = (0,external_react_namespaceObject.useState)(false); // This is a bit of an unusual usage of the EditableName component,
  // but otherwise it acts the way we want for a new Array entry.
  // $FlowFixMe[missing-local-annot]

  const overrideName = (oldPath, newPath) => {
    const value = newPath[newPath.length - 1];
    let parsedValue;
    let newIsInvalid = true;

    try {
      parsedValue = smartParse(value);
      newIsInvalid = false;
    } catch (error) {}

    if (isInvalid !== newIsInvalid) {
      setIsInvalid(newIsInvalid);
    }

    if (!newIsInvalid) {
      setKey(key + 1);
      const {
        id
      } = inspectedElement;
      const rendererID = store.getRendererIDForElement(id);

      if (rendererID !== null) {
        let basePath = path;

        if (hookID != null) {
          basePath = parseHookPathForEdit(basePath);
        }

        bridge.send('overrideValueAtPath', {
          type,
          hookID,
          id,
          path: [...basePath, index],
          rendererID,
          value: parsedValue
        });
      }
    }
  };

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    key: key,
    hidden: hidden,
    style: {
      paddingLeft: `${(depth - 1) * 0.75}rem`
    }
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (NewArrayValue_default()).NewArrayValue
  }, /*#__PURE__*/external_react_namespaceObject.createElement(EditableName_EditableName, {
    allowWhiteSpace: true,
    autoFocus: key > 0,
    className: [(NewArrayValue_default()).EditableName, isInvalid && (NewArrayValue_default()).Invalid].join(' '),
    initialValue: "",
    overrideName: overrideName,
    path: path
  })));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/NewKeyValue.css
var NewKeyValue = __webpack_require__(1085);
var NewKeyValue_default = /*#__PURE__*/__webpack_require__.n(NewKeyValue);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/NewKeyValue.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */







function NewKeyValue_NewKeyValue({
  bridge,
  depth,
  hidden,
  hookID,
  inspectedElement,
  path,
  store,
  type
}) {
  const [newPropKey, setNewPropKey] = (0,external_react_namespaceObject.useState)(0);
  const [newPropName, setNewPropName] = (0,external_react_namespaceObject.useState)(''); // $FlowFixMe[missing-local-annot]

  const overrideNewEntryName = (oldPath, newPath) => {
    setNewPropName(newPath[newPath.length - 1]);
  };

  const overrideNewEntryValue = (newPath, value) => {
    if (!newPropName) {
      return;
    }

    setNewPropName('');
    setNewPropKey(newPropKey + 1);
    const {
      id
    } = inspectedElement;
    const rendererID = store.getRendererIDForElement(id);

    if (rendererID !== null) {
      let basePath = newPath;

      if (hookID != null) {
        basePath = parseHookPathForEdit(basePath);
      }

      bridge.send('overrideValueAtPath', {
        type,
        hookID,
        id,
        path: basePath,
        rendererID,
        value
      });
    }
  };

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    "data-testname": "NewKeyValue",
    key: newPropKey,
    hidden: hidden,
    style: {
      paddingLeft: `${(depth - 1) * 0.75}rem`
    }
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (NewKeyValue_default()).NewKeyValue
  }, /*#__PURE__*/external_react_namespaceObject.createElement(EditableName_EditableName, {
    autoFocus: newPropKey > 0,
    className: (NewKeyValue_default()).EditableName,
    overrideName: overrideNewEntryName,
    path: []
  }), ":\xA0", /*#__PURE__*/external_react_namespaceObject.createElement(EditableValue_EditableValue, {
    className: (NewKeyValue_default()).EditableValue,
    overrideValue: overrideNewEntryValue,
    path: [...path, newPropName],
    value: ''
  })));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/ExpandCollapseToggle.css
var Components_ExpandCollapseToggle = __webpack_require__(9870);
var ExpandCollapseToggle_default = /*#__PURE__*/__webpack_require__.n(Components_ExpandCollapseToggle);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/ExpandCollapseToggle.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




function ExpandCollapseToggle_ExpandCollapseToggle({
  disabled,
  isOpen,
  setIsOpen
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    className: (ExpandCollapseToggle_default()).ExpandCollapseToggle,
    disabled: disabled,
    onClick: () => setIsOpen(prevIsOpen => !prevIsOpen),
    title: `${isOpen ? 'Collapse' : 'Expand'} prop value`
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: isOpen ? 'expanded' : 'collapsed'
  }));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/KeyValue.css
var KeyValue = __webpack_require__(53);
var KeyValue_default = /*#__PURE__*/__webpack_require__.n(KeyValue);
;// CONCATENATED MODULE: ../react-devtools-shared/src/PerformanceLoggingUtils.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

const supportsUserTiming = typeof performance !== 'undefined' && // $FlowFixMe[method-unbinding]
typeof performance.mark === 'function' && // $FlowFixMe[method-unbinding]
typeof performance.clearMarks === 'function';
const supportsPerformanceNow = // $FlowFixMe[method-unbinding]
typeof performance !== 'undefined' && typeof performance.now === 'function';

function mark(markName) {
  if (supportsUserTiming) {
    performance.mark(markName + '-start');
  }
}

function measure(markName) {
  if (supportsUserTiming) {
    performance.mark(markName + '-end');
    performance.measure(markName, markName + '-start', markName + '-end');
    performance.clearMarks(markName + '-start');
    performance.clearMarks(markName + '-end');
  }
}

function PerformanceLoggingUtils_now() {
  if (supportsPerformanceNow) {
    return performance.now();
  }

  return Date.now();
}

async function withAsyncPerfMeasurements(markName, callback, onComplete) {
  const start = PerformanceLoggingUtils_now();

  if (__PERFORMANCE_PROFILE__) {
    mark(markName);
  }

  const result = await callback();

  if (__PERFORMANCE_PROFILE__) {
    measure(markName);
  }

  if (onComplete != null) {
    const duration = PerformanceLoggingUtils_now() - start;
    onComplete(duration);
  }

  return result;
}
function withSyncPerfMeasurements(markName, callback, onComplete) {
  const start = PerformanceLoggingUtils_now();

  if (constants_PERFORMANCE_PROFILE_) {
    mark(markName);
  }

  const result = callback();

  if (constants_PERFORMANCE_PROFILE_) {
    measure(markName);
  }

  if (onComplete != null) {
    const duration = PerformanceLoggingUtils_now() - start;
    onComplete(duration);
  }

  return result;
}
function withCallbackPerfMeasurements(markName, callback, onComplete) {
  const start = PerformanceLoggingUtils_now();

  if (constants_PERFORMANCE_PROFILE_) {
    mark(markName);
  }

  const done = () => {
    if (constants_PERFORMANCE_PROFILE_) {
      measure(markName);
    }

    if (onComplete != null) {
      const duration = PerformanceLoggingUtils_now() - start;
      onComplete(duration);
    }
  };

  return callback(done);
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/hookNamesCache.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



const TIMEOUT = 30000;
const hookNamesCache_Pending = 0;
const hookNamesCache_Resolved = 1;
const hookNamesCache_Rejected = 2;

function hookNamesCache_readRecord(record) {
  if (record.status === hookNamesCache_Resolved) {
    // This is just a type refinement.
    return record;
  } else if (record.status === hookNamesCache_Rejected) {
    // This is just a type refinement.
    return record;
  } else {
    throw record.value;
  }
}

// This is intentionally a module-level Map, rather than a React-managed one.
// Otherwise, refreshing the inspected element cache would also clear this cache.
// TODO Rethink this if the React API constraints change.
// See https://github.com/reactwg/react-18/discussions/25#discussioncomment-980435
let map = new WeakMap();
function hasAlreadyLoadedHookNames(element) {
  const record = map.get(element);
  return record != null && record.status === hookNamesCache_Resolved;
}
function loadHookNames(element, hooksTree, loadHookNamesFunction, fetchFileWithCaching) {
  let record = map.get(element);

  if (__DEBUG__) {
    console.groupCollapsed('loadHookNames() record:');
    console.log(record);
    console.groupEnd();
  }

  if (!record) {
    const callbacks = new Set();
    const wakeable = {
      then(callback) {
        callbacks.add(callback);
      },

      // Optional property used by Timeline:
      displayName: `Loading hook names for ${element.displayName || 'Unknown'}`
    };
    let timeoutID;
    let didTimeout = false;
    let status = 'unknown';
    let resolvedHookNames = null;

    const wake = () => {
      if (timeoutID) {
        clearTimeout(timeoutID);
        timeoutID = null;
      } // This assumes they won't throw.


      callbacks.forEach(callback => callback());
      callbacks.clear();
    };

    const handleLoadComplete = durationMs => {
      // Log duration for parsing hook names
      logEvent({
        event_name: 'load-hook-names',
        event_status: status,
        duration_ms: durationMs,
        inspected_element_display_name: element.displayName,
        inspected_element_number_of_hooks: resolvedHookNames?.size ?? null
      });
    };

    const newRecord = record = {
      status: hookNamesCache_Pending,
      value: wakeable
    };
    withCallbackPerfMeasurements('loadHookNames', done => {
      loadHookNamesFunction(hooksTree, fetchFileWithCaching).then(function onSuccess(hookNames) {
        if (didTimeout) {
          return;
        }

        if (__DEBUG__) {
          console.log('[hookNamesCache] onSuccess() hookNames:', hookNames);
        }

        if (hookNames) {
          const resolvedRecord = newRecord;
          resolvedRecord.status = hookNamesCache_Resolved;
          resolvedRecord.value = hookNames;
        } else {
          const notFoundRecord = newRecord;
          notFoundRecord.status = hookNamesCache_Rejected;
          notFoundRecord.value = null;
        }

        status = 'success';
        resolvedHookNames = hookNames;
        done();
        wake();
      }, function onError(error) {
        if (didTimeout) {
          return;
        }

        if (__DEBUG__) {
          console.log('[hookNamesCache] onError()');
        }

        console.error(error);
        const thrownRecord = newRecord;
        thrownRecord.status = hookNamesCache_Rejected;
        thrownRecord.value = null;
        status = 'error';
        done();
        wake();
      }); // Eventually timeout and stop trying to load names.

      timeoutID = setTimeout(function onTimeout() {
        if (__DEBUG__) {
          console.log('[hookNamesCache] onTimeout()');
        }

        timeoutID = null;
        didTimeout = true;
        const timedoutRecord = newRecord;
        timedoutRecord.status = hookNamesCache_Rejected;
        timedoutRecord.value = null;
        status = 'timeout';
        done();
        wake();
      }, TIMEOUT);
    }, handleLoadComplete);
    map.set(element, record);
  }

  const response = hookNamesCache_readRecord(record).value;
  return response;
}
function getHookSourceLocationKey({
  fileName,
  lineNumber,
  columnNumber
}) {
  if (fileName == null || lineNumber == null || columnNumber == null) {
    throw Error('Hook source code location not found.');
  }

  return `${fileName}:${lineNumber}:${columnNumber}`;
}
function clearHookNamesCache() {
  map = new WeakMap();
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/dynamicImportCache.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

const dynamicImportCache_TIMEOUT = 30000;
const dynamicImportCache_Pending = 0;
const dynamicImportCache_Resolved = 1;
const dynamicImportCache_Rejected = 2;
// This is intentionally a module-level Map, rather than a React-managed one.
// Otherwise, refreshing the inspected element cache would also clear this cache.
// Modules are static anyway.
const moduleLoaderFunctionToModuleMap = new Map();

function dynamicImportCache_readRecord(record) {
  if (record.status === dynamicImportCache_Resolved) {
    // This is just a type refinement.
    return record;
  } else if (record.status === dynamicImportCache_Rejected) {
    // This is just a type refinement.
    return record;
  } else {
    throw record.value;
  }
} // TODO Flow type


function loadModule(moduleLoaderFunction) {
  let record = moduleLoaderFunctionToModuleMap.get(moduleLoaderFunction);

  if (__DEBUG__) {
    console.log(`[dynamicImportCache] loadModule("${moduleLoaderFunction.name}")`);
  }

  if (!record) {
    const callbacks = new Set();
    const wakeable = {
      then(callback) {
        callbacks.add(callback);
      },

      // Optional property used by Timeline:
      displayName: `Loading module "${moduleLoaderFunction.name}"`
    };

    const wake = () => {
      if (timeoutID) {
        clearTimeout(timeoutID);
        timeoutID = null;
      } // This assumes they won't throw.


      callbacks.forEach(callback => callback());
      callbacks.clear();
    };

    const newRecord = record = {
      status: dynamicImportCache_Pending,
      value: wakeable
    };
    let didTimeout = false;
    moduleLoaderFunction().then(module => {
      if (__DEBUG__) {
        console.log(`[dynamicImportCache] loadModule("${moduleLoaderFunction.name}") then()`);
      }

      if (didTimeout) {
        return;
      }

      const resolvedRecord = newRecord;
      resolvedRecord.status = dynamicImportCache_Resolved;
      resolvedRecord.value = module;
      wake();
    }, error => {
      if (__DEBUG__) {
        console.log(`[dynamicImportCache] loadModule("${moduleLoaderFunction.name}") catch()`);
      }

      if (didTimeout) {
        return;
      }

      console.log(error);
      const thrownRecord = newRecord;
      thrownRecord.status = dynamicImportCache_Rejected;
      thrownRecord.value = null;
      wake();
    }); // Eventually timeout and stop trying to load the module.

    let timeoutID = setTimeout(function onTimeout() {
      if (__DEBUG__) {
        console.log(`[dynamicImportCache] loadModule("${moduleLoaderFunction.name}") onTimeout()`);
      }

      timeoutID = null;
      didTimeout = true;
      const timedoutRecord = newRecord;
      timedoutRecord.status = dynamicImportCache_Rejected;
      timedoutRecord.value = null;
      wake();
    }, dynamicImportCache_TIMEOUT);
    moduleLoaderFunctionToModuleMap.set(moduleLoaderFunction, record);
  } // $FlowFixMe[underconstrained-implicit-instantiation]


  const response = dynamicImportCache_readRecord(record).value;
  return response;
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/FetchFileWithCachingContext.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

const FetchFileWithCachingContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
FetchFileWithCachingContext.displayName = 'FetchFileWithCachingContext';
/* harmony default export */ const Components_FetchFileWithCachingContext = (FetchFileWithCachingContext);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/HookNamesModuleLoaderContext.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

// TODO (Webpack 5) Hopefully we can remove this context entirely once the Webpack 5 upgrade is completed.
const HookNamesModuleLoaderContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
HookNamesModuleLoaderContext.displayName = 'HookNamesModuleLoaderContext';
/* harmony default export */ const Components_HookNamesModuleLoaderContext = (HookNamesModuleLoaderContext);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementContext.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */










const InspectedElementContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
function InspectedElementContextController({
  children
}) {
  const {
    inspectedElementID
  } = (0,external_react_namespaceObject.useContext)(TreeStateContext);
  const fetchFileWithCaching = (0,external_react_namespaceObject.useContext)(Components_FetchFileWithCachingContext);
  const bridge = (0,external_react_namespaceObject.useContext)(BridgeContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    parseHookNames: parseHookNamesByDefault
  } = (0,external_react_namespaceObject.useContext)(SettingsContext); // parseHookNames has a lot of code.
  // Embedding it into a build makes the build large.
  // This function enables DevTools to make use of Suspense to lazily import() it only if the feature will be used.
  // TODO (Webpack 5) Hopefully we can remove this indirection once the Webpack 5 upgrade is completed.

  const hookNamesModuleLoader = (0,external_react_namespaceObject.useContext)(Components_HookNamesModuleLoaderContext);
  const refresh = (0,external_react_namespaceObject.unstable_useCacheRefresh)(); // Temporarily stores most recently-inspected (hydrated) path.
  // The transition that updates this causes the component to re-render and ask the cache->backend for the new path.
  // When a path is sent along with an "inspectElement" request,
  // the backend knows to send its dehydrated data even if the element hasn't updated since the last request.

  const [state, setState] = (0,external_react_namespaceObject.useState)({
    element: null,
    path: null
  });
  const element = inspectedElementID !== null ? store.getElementByID(inspectedElementID) : null;
  const alreadyLoadedHookNames = element != null && hasAlreadyLoadedHookNames(element); // Parse the currently inspected element's hook names.
  // This may be enabled by default (for all elements)
  // or it may be opted into on a per-element basis (if it's too slow to be on by default).

  const [parseHookNames, setParseHookNames] = (0,external_react_namespaceObject.useState)(parseHookNamesByDefault || alreadyLoadedHookNames);
  const [bridgeIsAlive, setBridgeIsAliveStatus] = (0,external_react_namespaceObject.useState)(true);
  const elementHasChanged = element !== null && element !== state.element; // Reset the cached inspected paths when a new element is selected.

  if (elementHasChanged) {
    setState({
      element,
      path: null
    });
    setParseHookNames(parseHookNamesByDefault || alreadyLoadedHookNames);
  }

  const purgeCachedMetadataRef = (0,external_react_namespaceObject.useRef)(null); // Don't load a stale element from the backend; it wastes bridge bandwidth.

  let hookNames = null;
  let inspectedElement = null;

  if (!elementHasChanged && element !== null) {
    inspectedElement = inspectedElementCache_inspectElement(element, state.path, store, bridge);

    if (typeof hookNamesModuleLoader === 'function') {
      if (parseHookNames || alreadyLoadedHookNames) {
        const hookNamesModule = loadModule(hookNamesModuleLoader);

        if (hookNamesModule !== null) {
          const {
            parseHookNames: loadHookNamesFunction,
            purgeCachedMetadata
          } = hookNamesModule;
          purgeCachedMetadataRef.current = purgeCachedMetadata;

          if (inspectedElement !== null && inspectedElement.hooks !== null && loadHookNamesFunction !== null) {
            hookNames = loadHookNames(element, inspectedElement.hooks, loadHookNamesFunction, fetchFileWithCaching);
          }
        }
      }
    }
  }

  const toggleParseHookNames = (0,external_react_namespaceObject.useCallback)(() => {
    (0,external_react_namespaceObject.startTransition)(() => {
      setParseHookNames(value => !value);
      refresh();
    });
  }, [setParseHookNames]);
  const inspectPaths = (0,external_react_namespaceObject.useCallback)(path => {
    (0,external_react_namespaceObject.startTransition)(() => {
      setState({
        element: state.element,
        path
      });
      refresh();
    });
  }, [setState, state]);
  (0,external_react_namespaceObject.useEffect)(() => {
    const purgeCachedMetadata = purgeCachedMetadataRef.current;

    if (typeof purgeCachedMetadata === 'function') {
      // When Fast Refresh updates a component, any cached AST metadata may be invalid.
      const fastRefreshScheduled = () => {
        (0,external_react_namespaceObject.startTransition)(() => {
          clearHookNamesCache();
          purgeCachedMetadata();
          refresh();
        });
      };

      bridge.addListener('fastRefreshScheduled', fastRefreshScheduled);
      return () => bridge.removeListener('fastRefreshScheduled', fastRefreshScheduled);
    }
  }, [bridge]); // Reset path now that we've asked the backend to hydrate it.
  // The backend is stateful, so we don't need to remember this path the next time we inspect.

  (0,external_react_namespaceObject.useEffect)(() => {
    if (state.path !== null) {
      setState({
        element: state.element,
        path: null
      });
    }
  }, [state]);
  (0,external_react_namespaceObject.useEffect)(() => {
    // Assuming that new bridge is always alive at this moment
    setBridgeIsAliveStatus(true);

    const listener = () => setBridgeIsAliveStatus(false);

    bridge.addListener('shutdown', listener);
    return () => bridge.removeListener('shutdown', listener);
  }, [bridge]); // Periodically poll the selected element for updates.

  (0,external_react_namespaceObject.useEffect)(() => {
    if (element !== null && bridgeIsAlive) {
      const {
        abort,
        pause,
        resume
      } = startElementUpdatesPolling({
        bridge,
        element,
        refresh,
        store
      });
      bridge.addListener('resumeElementPolling', resume);
      bridge.addListener('pauseElementPolling', pause);
      return () => {
        bridge.removeListener('resumeElementPolling', resume);
        bridge.removeListener('pauseElementPolling', pause);
        abort();
      };
    }
  }, [element, hookNames, // Reset this timer any time the element we're inspecting gets a new response.
  // No sense to ping right away after e.g. inspecting/hydrating a path.
  inspectedElement, state, bridgeIsAlive]);
  const value = (0,external_react_namespaceObject.useMemo)(() => ({
    hookNames,
    inspectedElement,
    inspectPaths,
    parseHookNames,
    toggleParseHookNames
  }), [hookNames, inspectedElement, inspectPaths, parseHookNames, toggleParseHookNames]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementContext.Provider, {
    value: value
  }, children);
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/constants.js
const PROTOCOLS_SUPPORTED_AS_LINKS_IN_KEY_VALUE = ['file:///', 'http://', 'https://', 'vscode://'];
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/ContextMenu/ContextMenuItem.css
var ContextMenuItem = __webpack_require__(2568);
var ContextMenuItem_default = /*#__PURE__*/__webpack_require__.n(ContextMenuItem);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/ContextMenu/ContextMenuItem.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function ContextMenuItem_ContextMenuItem({
  children,
  onClick,
  hide
}) {
  const handleClick = () => {
    onClick();
    hide();
  };

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (ContextMenuItem_default()).ContextMenuItem,
    onClick: handleClick,
    onTouchEnd: handleClick
  }, children);
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/ContextMenu/ContextMenu.css
var ContextMenu = __webpack_require__(821);
var ContextMenu_default = /*#__PURE__*/__webpack_require__.n(ContextMenu);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/ContextMenu/ContextMenu.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






function repositionToFit(element, x, y) {
  const ownerWindow = element.ownerDocument.defaultView;

  if (y + element.offsetHeight >= ownerWindow.innerHeight) {
    if (y - element.offsetHeight > 0) {
      element.style.top = `${y - element.offsetHeight}px`;
    } else {
      element.style.top = '0px';
    }
  } else {
    element.style.top = `${y}px`;
  }

  if (x + element.offsetWidth >= ownerWindow.innerWidth) {
    if (x - element.offsetWidth > 0) {
      element.style.left = `${x - element.offsetWidth}px`;
    } else {
      element.style.left = '0px';
    }
  } else {
    element.style.left = `${x}px`;
  }
}

function ContextMenu_ContextMenu({
  anchorElementRef,
  position,
  items,
  hide,
  ref = /*#__PURE__*/(0,external_react_namespaceObject.createRef)()
}) {
  // This works on the assumption that ContextMenu component is only rendered when it should be shown
  const anchor = anchorElementRef.current;

  if (anchor == null) {
    throw new Error('Attempted to open a context menu for an element, which is not mounted');
  }

  const ownerDocument = anchor.ownerDocument;
  const portalContainer = ownerDocument.querySelector('[data-react-devtools-portal-root]');
  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    const menu = ref.current;

    function hideUnlessContains(event) {
      if (!menu.contains(event.target)) {
        hide();
      }
    }

    ownerDocument.addEventListener('mousedown', hideUnlessContains);
    ownerDocument.addEventListener('touchstart', hideUnlessContains);
    ownerDocument.addEventListener('keydown', hideUnlessContains);
    const ownerWindow = ownerDocument.defaultView;
    ownerWindow.addEventListener('resize', hide);
    repositionToFit(menu, position.x, position.y);
    return () => {
      ownerDocument.removeEventListener('mousedown', hideUnlessContains);
      ownerDocument.removeEventListener('touchstart', hideUnlessContains);
      ownerDocument.removeEventListener('keydown', hideUnlessContains);
      ownerWindow.removeEventListener('resize', hide);
    };
  }, []);

  if (portalContainer == null || items.length === 0) {
    return null;
  }

  return /*#__PURE__*/(0,external_react_dom_namespaceObject.createPortal)( /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (ContextMenu_default()).ContextMenu,
    ref: ref
  }, items.map(({
    onClick,
    content
  }, index) => /*#__PURE__*/external_react_namespaceObject.createElement(ContextMenuItem_ContextMenuItem, {
    key: index,
    onClick: onClick,
    hide: hide
  }, content))), portalContainer);
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/ContextMenu/useContextMenu.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function useContextMenu(anchorElementRef) {
  const [shouldShow, setShouldShow] = (0,external_react_namespaceObject.useState)(false);
  const [position, setPosition] = external_react_namespaceObject.useState(null);
  const hide = (0,external_react_namespaceObject.useCallback)(() => {
    setShouldShow(false);
    setPosition(null);
  }, []);
  (0,external_react_namespaceObject.useEffect)(() => {
    const anchor = anchorElementRef.current;
    if (anchor == null) return;

    function handleAnchorContextMenu(e) {
      e.preventDefault();
      e.stopPropagation();
      const {
        pageX,
        pageY
      } = e;
      const ownerDocument = anchor?.ownerDocument;
      const portalContainer = ownerDocument?.querySelector('[data-react-devtools-portal-root]');

      if (portalContainer == null) {
        throw new Error("DevTools tooltip root node not found: can't display the context menu");
      } // `x` and `y` should be relative to the container, to which these context menus will be portaled
      // we can't use just `pageX` or `pageY` for Fusebox integration, because RDT frontend is inlined with the whole document
      // meaning that `pageY` will have an offset of 27, which is the tab bar height
      // for the browser extension, these will equal to 0


      const {
        top: containerTop,
        left: containerLeft
      } = portalContainer.getBoundingClientRect();
      setShouldShow(true);
      setPosition({
        x: pageX - containerLeft,
        y: pageY - containerTop
      });
    }

    anchor.addEventListener('contextmenu', handleAnchorContextMenu);
    return () => {
      anchor.removeEventListener('contextmenu', handleAnchorContextMenu);
    };
  }, [anchorElementRef]);
  return {
    shouldShow,
    position,
    hide
  };
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/ContextMenu/ContextMenuContainer.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




function ContextMenuContainer({
  anchorElementRef,
  items,
  closedMenuStub = null,
  ref
}) {
  const {
    shouldShow,
    position,
    hide
  } = useContextMenu(anchorElementRef);
  (0,external_react_namespaceObject.useImperativeHandle)(ref, () => ({
    isShown() {
      return shouldShow;
    },

    hide
  }), [shouldShow, hide]);

  if (!shouldShow) {
    return closedMenuStub;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(ContextMenu_ContextMenu, {
    anchorElementRef: anchorElementRef,
    position: position,
    hide: hide,
    items: items,
    ref: ref
  });
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/KeyValueContextMenuContainer.css
var KeyValueContextMenuContainer = __webpack_require__(701);
var KeyValueContextMenuContainer_default = /*#__PURE__*/__webpack_require__.n(KeyValueContextMenuContainer);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/KeyValueContextMenuContainer.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */







function KeyValueContextMenuContainer_KeyValueContextMenuContainer({
  children,
  anchorElementRef,
  store,
  attributeSourceCanBeInspected,
  bridge,
  id,
  path,
  canBeCopiedToClipboard
}) {
  const {
    isEnabledForInspectedElement: isContextMenuEnabledForInspectedElement,
    viewAttributeSourceFunction
  } = (0,external_react_namespaceObject.useContext)(ContextMenuContext);
  const menuItems = external_react_namespaceObject.useMemo(() => {
    const items = [{
      onClick: () => {
        const rendererID = store.getRendererIDForElement(id);

        if (rendererID !== null) {
          storeAsGlobal({
            bridge,
            id,
            path,
            rendererID
          });
        }
      },
      content: /*#__PURE__*/external_react_namespaceObject.createElement("span", {
        className: (KeyValueContextMenuContainer_default()).ContextMenuItemContent
      }, /*#__PURE__*/external_react_namespaceObject.createElement(Icon_Icon, {
        type: "store-as-global-variable"
      }), /*#__PURE__*/external_react_namespaceObject.createElement("label", null, "Store as global variable"))
    }];

    if (canBeCopiedToClipboard) {
      items.unshift({
        onClick: () => {
          const rendererID = store.getRendererIDForElement(id);

          if (rendererID !== null) {
            copyInspectedElementPath({
              bridge,
              id,
              path,
              rendererID
            });
          }
        },
        content: /*#__PURE__*/external_react_namespaceObject.createElement("span", {
          className: (KeyValueContextMenuContainer_default()).ContextMenuItemContent
        }, /*#__PURE__*/external_react_namespaceObject.createElement(Icon_Icon, {
          type: "copy"
        }), /*#__PURE__*/external_react_namespaceObject.createElement("label", null, "Copy value to clipboard"))
      });
    }

    if (viewAttributeSourceFunction != null && attributeSourceCanBeInspected) {
      items.push({
        onClick: () => viewAttributeSourceFunction(id, path),
        content: /*#__PURE__*/external_react_namespaceObject.createElement("span", {
          className: (KeyValueContextMenuContainer_default()).ContextMenuItemContent
        }, /*#__PURE__*/external_react_namespaceObject.createElement(Icon_Icon, {
          type: "code"
        }), /*#__PURE__*/external_react_namespaceObject.createElement("label", null, "Go to definition"))
      });
    }

    return items;
  }, [store, viewAttributeSourceFunction, attributeSourceCanBeInspected, canBeCopiedToClipboard, bridge, id, path]);

  if (!isContextMenuEnabledForInspectedElement) {
    return children;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, children, /*#__PURE__*/external_react_namespaceObject.createElement(ContextMenuContainer, {
    anchorElementRef: anchorElementRef,
    items: menuItems
  }));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/KeyValue.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





















// $FlowFixMe[method-unbinding]
const KeyValue_hasOwnProperty = Object.prototype.hasOwnProperty;
function KeyValue_KeyValue({
  alphaSort,
  bridge,
  canDeletePaths,
  canEditValues,
  canRenamePaths,
  canRenamePathsAtDepth,
  depth,
  element,
  inspectedElement,
  isDirectChildOfAnArray,
  hidden,
  hookID,
  hookName,
  name,
  path,
  pathRoot,
  store,
  value
}) {
  const {
    readOnly: readOnlyGlobalFlag
  } = (0,external_react_namespaceObject.useContext)(OptionsContext);
  canDeletePaths = !readOnlyGlobalFlag && canDeletePaths;
  canEditValues = !readOnlyGlobalFlag && canEditValues;
  canRenamePaths = !readOnlyGlobalFlag && canRenamePaths;
  const {
    id
  } = inspectedElement;
  const fullPath = (0,external_react_namespaceObject.useMemo)(() => [pathRoot, ...path], [pathRoot, path]);
  const [isOpen, setIsOpen] = (0,external_react_namespaceObject.useState)(false);
  const contextMenuTriggerRef = (0,external_react_namespaceObject.useRef)(null);
  const {
    inspectPaths
  } = (0,external_react_namespaceObject.useContext)(InspectedElementContext);
  const {
    viewAttributeSourceFunction
  } = (0,external_react_namespaceObject.useContext)(ContextMenuContext);
  let isInspectable = false;
  let isReadOnlyBasedOnMetadata = false;

  if (value !== null && typeof value === 'object') {
    isInspectable = value[meta.inspectable] && value[meta.size] !== 0;
    isReadOnlyBasedOnMetadata = value[meta.readonly];
  }

  const [isInspectPathsPending, startInspectPathsTransition] = (0,external_react_namespaceObject.useTransition)();

  const toggleIsOpen = () => {
    if (isOpen) {
      setIsOpen(false);
    } else {
      setIsOpen(true);

      if (isInspectable) {
        startInspectPathsTransition(() => {
          inspectPaths([pathRoot, ...path]);
        });
      }
    }
  };

  const dataType = typeof value;
  const isSimpleType = dataType === 'number' || dataType === 'string' || dataType === 'boolean' || value == null;
  const pathType = value !== null && typeof value === 'object' && KeyValue_hasOwnProperty.call(value, meta.type) ? value[meta.type] : typeof value;
  const pathIsFunction = pathType === 'function';
  const style = {
    paddingLeft: `${(depth - 1) * 0.75}rem`
  };

  const overrideValue = (newPath, newValue) => {
    if (hookID != null) {
      newPath = parseHookPathForEdit(newPath);
    }

    const rendererID = store.getRendererIDForElement(id);

    if (rendererID !== null) {
      bridge.send('overrideValueAtPath', {
        hookID,
        id,
        path: newPath,
        rendererID,
        type: pathRoot,
        value: newValue
      });
    }
  };

  const deletePath = pathToDelete => {
    if (hookID != null) {
      pathToDelete = parseHookPathForEdit(pathToDelete);
    }

    const rendererID = store.getRendererIDForElement(id);

    if (rendererID !== null) {
      bridge.send('deletePath', {
        hookID,
        id,
        path: pathToDelete,
        rendererID,
        type: pathRoot
      });
    }
  };

  const renamePath = (oldPath, newPath) => {
    if (newPath[newPath.length - 1] === '') {
      // Deleting the key suggests an intent to delete the whole path.
      if (canDeletePaths) {
        deletePath(oldPath);
      }
    } else {
      if (hookID != null) {
        oldPath = parseHookPathForEdit(oldPath);
        newPath = parseHookPathForEdit(newPath);
      }

      const rendererID = store.getRendererIDForElement(id);

      if (rendererID !== null) {
        bridge.send('renamePath', {
          hookID,
          id,
          newPath,
          oldPath,
          rendererID,
          type: pathRoot
        });
      }
    }
  }; // TRICKY This is a bit of a hack to account for context and hooks.
  // In these cases, paths can be renamed but only at certain depths.
  // The special "value" wrapper for context shouldn't be editable.
  // Only certain types of hooks should be editable.


  let canRenameTheCurrentPath = canRenamePaths;

  if (canRenameTheCurrentPath && typeof canRenamePathsAtDepth === 'function') {
    canRenameTheCurrentPath = canRenamePathsAtDepth(depth);
  }

  let renderedName;

  if (isDirectChildOfAnArray) {
    if (canDeletePaths) {
      renderedName = /*#__PURE__*/external_react_namespaceObject.createElement(DeleteToggle, {
        name: name,
        deletePath: deletePath,
        path: path
      });
    } else {
      renderedName = /*#__PURE__*/external_react_namespaceObject.createElement("span", {
        className: (KeyValue_default()).Name
      }, name, !!hookName && /*#__PURE__*/external_react_namespaceObject.createElement("span", {
        className: (KeyValue_default()).HookName
      }, "(", hookName, ")"));
    }
  } else if (canRenameTheCurrentPath) {
    renderedName = /*#__PURE__*/external_react_namespaceObject.createElement(EditableName_EditableName, {
      allowEmpty: canDeletePaths,
      className: (KeyValue_default()).EditableName,
      initialValue: name,
      overrideName: renamePath,
      path: path
    });
  } else {
    renderedName = /*#__PURE__*/external_react_namespaceObject.createElement("span", {
      className: (KeyValue_default()).Name,
      "data-testname": "NonEditableName"
    }, name, !!hookName && /*#__PURE__*/external_react_namespaceObject.createElement("span", {
      className: (KeyValue_default()).HookName
    }, "(", hookName, ")"));
  }

  let children = null;

  if (isSimpleType) {
    let displayValue = value;

    if (dataType === 'string') {
      displayValue = `"${value}"`;
    } else if (dataType === 'boolean') {
      displayValue = value ? 'true' : 'false';
    } else if (value === null) {
      displayValue = 'null';
    } else if (value === undefined) {
      displayValue = 'undefined';
    } else if (isNaN(value)) {
      displayValue = 'NaN';
    }

    let shouldDisplayValueAsLink = false;

    if (dataType === 'string' && PROTOCOLS_SUPPORTED_AS_LINKS_IN_KEY_VALUE.some(protocolPrefix => value.startsWith(protocolPrefix))) {
      shouldDisplayValueAsLink = true;
    }

    children = /*#__PURE__*/external_react_namespaceObject.createElement(KeyValueContextMenuContainer_KeyValueContextMenuContainer, {
      key: "root",
      anchorElementRef: contextMenuTriggerRef,
      attributeSourceCanBeInspected: false,
      canBeCopiedToClipboard: true,
      store: store,
      bridge: bridge,
      id: id,
      path: fullPath
    }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      "data-testname": "KeyValue",
      className: (KeyValue_default()).Item,
      hidden: hidden,
      ref: contextMenuTriggerRef,
      style: style
    }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (KeyValue_default()).ExpandCollapseToggleSpacer
    }), renderedName, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (KeyValue_default()).AfterName
    }, ":"), canEditValues ? /*#__PURE__*/external_react_namespaceObject.createElement(EditableValue_EditableValue, {
      overrideValue: overrideValue,
      path: path,
      value: value
    }) : shouldDisplayValueAsLink ? /*#__PURE__*/external_react_namespaceObject.createElement("a", {
      className: (KeyValue_default()).Link,
      href: value,
      target: "_blank",
      rel: "noopener noreferrer"
    }, displayValue) : /*#__PURE__*/external_react_namespaceObject.createElement("span", {
      className: (KeyValue_default()).Value,
      "data-testname": "NonEditableValue"
    }, displayValue)));
  } else if (pathIsFunction && viewAttributeSourceFunction != null) {
    children = /*#__PURE__*/external_react_namespaceObject.createElement(KeyValueContextMenuContainer_KeyValueContextMenuContainer, {
      key: "root",
      anchorElementRef: contextMenuTriggerRef,
      attributeSourceCanBeInspected: true,
      canBeCopiedToClipboard: false,
      store: store,
      bridge: bridge,
      id: id,
      path: fullPath
    }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      "data-testname": "KeyValue",
      className: (KeyValue_default()).Item,
      hidden: hidden,
      ref: contextMenuTriggerRef,
      style: style
    }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (KeyValue_default()).ExpandCollapseToggleSpacer
    }), renderedName, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (KeyValue_default()).AfterName
    }, ":"), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
      className: (KeyValue_default()).Link,
      onClick: () => {
        viewAttributeSourceFunction(id, fullPath);
      }
    }, getMetaValueLabel(value))));
  } else if (KeyValue_hasOwnProperty.call(value, meta.type) && !KeyValue_hasOwnProperty.call(value, meta.unserializable)) {
    children = /*#__PURE__*/external_react_namespaceObject.createElement(KeyValueContextMenuContainer_KeyValueContextMenuContainer, {
      key: "root",
      anchorElementRef: contextMenuTriggerRef,
      attributeSourceCanBeInspected: false,
      canBeCopiedToClipboard: true,
      store: store,
      bridge: bridge,
      id: id,
      path: fullPath
    }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      "data-testname": "KeyValue",
      className: (KeyValue_default()).Item,
      hidden: hidden,
      ref: contextMenuTriggerRef,
      style: style
    }, isInspectable ? /*#__PURE__*/external_react_namespaceObject.createElement(ExpandCollapseToggle_ExpandCollapseToggle, {
      isOpen: isOpen,
      setIsOpen: toggleIsOpen
    }) : /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (KeyValue_default()).ExpandCollapseToggleSpacer
    }), renderedName, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (KeyValue_default()).AfterName
    }, ":"), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
      className: (KeyValue_default()).Value,
      onClick: isInspectable ? toggleIsOpen : undefined
    }, getMetaValueLabel(value))));

    if (isInspectPathsPending) {
      children = /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, children, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (KeyValue_default()).Item,
        style: style
      }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (KeyValue_default()).ExpandCollapseToggleSpacer
      }), /*#__PURE__*/external_react_namespaceObject.createElement(LoadingAnimation_LoadingAnimation, null)));
    }
  } else {
    if (src_isArray(value)) {
      const hasChildren = value.length > 0 || canEditValues;
      const displayName = getMetaValueLabel(value);
      children = value.map((innerValue, index) => /*#__PURE__*/external_react_namespaceObject.createElement(KeyValue_KeyValue, {
        key: index,
        alphaSort: alphaSort,
        bridge: bridge,
        canDeletePaths: canDeletePaths && !isReadOnlyBasedOnMetadata,
        canEditValues: canEditValues && !isReadOnlyBasedOnMetadata,
        canRenamePaths: canRenamePaths && !isReadOnlyBasedOnMetadata,
        canRenamePathsAtDepth: canRenamePathsAtDepth,
        depth: depth + 1,
        element: element,
        hookID: hookID,
        inspectedElement: inspectedElement,
        isDirectChildOfAnArray: true,
        hidden: hidden || !isOpen,
        name: index,
        path: path.concat(index),
        pathRoot: pathRoot,
        store: store,
        value: value[index]
      }));

      if (canEditValues && !isReadOnlyBasedOnMetadata) {
        children.push( /*#__PURE__*/external_react_namespaceObject.createElement(NewArrayValue_NewArrayValue, {
          key: "NewKeyValue",
          bridge: bridge,
          depth: depth + 1,
          hidden: hidden || !isOpen,
          hookID: hookID,
          index: value.length,
          element: element,
          inspectedElement: inspectedElement,
          path: path,
          store: store,
          type: pathRoot
        }));
      }

      children.unshift( /*#__PURE__*/external_react_namespaceObject.createElement(KeyValueContextMenuContainer_KeyValueContextMenuContainer, {
        key: `${depth}-root`,
        anchorElementRef: contextMenuTriggerRef,
        attributeSourceCanBeInspected: pathIsFunction,
        canBeCopiedToClipboard: !pathIsFunction,
        store: store,
        bridge: bridge,
        id: id,
        path: fullPath
      }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        "data-testname": "KeyValue",
        className: (KeyValue_default()).Item,
        hidden: hidden,
        ref: contextMenuTriggerRef,
        style: style
      }, hasChildren ? /*#__PURE__*/external_react_namespaceObject.createElement(ExpandCollapseToggle_ExpandCollapseToggle, {
        isOpen: isOpen,
        setIsOpen: setIsOpen
      }) : /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (KeyValue_default()).ExpandCollapseToggleSpacer
      }), renderedName, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (KeyValue_default()).AfterName
      }, ":"), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
        className: (KeyValue_default()).Value,
        onClick: hasChildren ? toggleIsOpen : undefined
      }, displayName))));
    } else {
      // TRICKY
      // It's important to use Object.entries() rather than Object.keys()
      // because of the hidden meta Symbols used for hydration and unserializable values.
      const entries = Object.entries(value);

      if (alphaSort) {
        entries.sort(alphaSortEntries);
      }

      const hasChildren = entries.length > 0 || canEditValues;
      const displayName = getMetaValueLabel(value);
      children = entries.map(([key, keyValue]) => /*#__PURE__*/external_react_namespaceObject.createElement(KeyValue_KeyValue, {
        key: key,
        alphaSort: alphaSort,
        bridge: bridge,
        canDeletePaths: canDeletePaths && !isReadOnlyBasedOnMetadata,
        canEditValues: canEditValues && !isReadOnlyBasedOnMetadata,
        canRenamePaths: canRenamePaths && !isReadOnlyBasedOnMetadata,
        canRenamePathsAtDepth: canRenamePathsAtDepth,
        depth: depth + 1,
        element: element,
        hookID: hookID,
        inspectedElement: inspectedElement,
        hidden: hidden || !isOpen,
        name: key,
        path: path.concat(key),
        pathRoot: pathRoot,
        store: store,
        value: keyValue
      }));

      if (canEditValues && !isReadOnlyBasedOnMetadata) {
        children.push( /*#__PURE__*/external_react_namespaceObject.createElement(NewKeyValue_NewKeyValue, {
          key: "NewKeyValue",
          bridge: bridge,
          depth: depth + 1,
          element: element,
          hidden: hidden || !isOpen,
          hookID: hookID,
          inspectedElement: inspectedElement,
          path: path,
          store: store,
          type: pathRoot
        }));
      }

      children.unshift( /*#__PURE__*/external_react_namespaceObject.createElement(KeyValueContextMenuContainer_KeyValueContextMenuContainer, {
        key: `${depth}-root`,
        anchorElementRef: contextMenuTriggerRef,
        attributeSourceCanBeInspected: pathIsFunction,
        canBeCopiedToClipboard: !pathIsFunction,
        store: store,
        bridge: bridge,
        id: id,
        path: fullPath
      }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        "data-testname": "KeyValue",
        className: (KeyValue_default()).Item,
        hidden: hidden,
        ref: contextMenuTriggerRef,
        style: style
      }, hasChildren ? /*#__PURE__*/external_react_namespaceObject.createElement(ExpandCollapseToggle_ExpandCollapseToggle, {
        isOpen: isOpen,
        setIsOpen: setIsOpen
      }) : /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (KeyValue_default()).ExpandCollapseToggleSpacer
      }), renderedName, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (KeyValue_default()).AfterName
      }, ":"), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
        className: (KeyValue_default()).Value,
        onClick: hasChildren ? toggleIsOpen : undefined
      }, displayName))));
    }
  }

  return children;
} // $FlowFixMe[missing-local-annot]

function DeleteToggle({
  deletePath,
  name,
  path
}) {
  // $FlowFixMe[missing-local-annot]
  const handleClick = event => {
    event.stopPropagation();
    deletePath(path);
  };

  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    className: (KeyValue_default()).DeleteArrayItemButton,
    onClick: handleClick,
    title: "Delete entry"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "delete"
  })), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (KeyValue_default()).Name
  }, name));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementSharedStyles.css
var InspectedElementSharedStyles = __webpack_require__(7894);
var InspectedElementSharedStyles_default = /*#__PURE__*/__webpack_require__.n(InspectedElementSharedStyles);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementContextTree.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */










function InspectedElementContextTree({
  bridge,
  element,
  inspectedElement,
  store
}) {
  const {
    hasLegacyContext,
    context,
    type
  } = inspectedElement;
  const isReadOnly = type !== ElementTypeClass && type !== ElementTypeFunction;

  if (context == null) {
    return null;
  }

  const entries = Object.entries(context);
  entries.sort(alphaSortEntries);
  const isEmpty = entries.length === 0;
  const handleCopy = withPermissionsCheck({
    permissions: ['clipboardWrite']
  }, () => (0,clipboard.copy)(serializeDataForCopy(context))); // We add an object with a "value" key as a wrapper around Context data
  // so that we can use the shared <KeyValue> component to display it.
  // This wrapper object can't be renamed.
  // $FlowFixMe[missing-local-annot]

  const canRenamePathsAtDepth = depth => depth > 1;

  if (isEmpty) {
    return null;
  } else {
    return /*#__PURE__*/external_react_namespaceObject.createElement("div", null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (InspectedElementSharedStyles_default()).HeaderRow
    }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (InspectedElementSharedStyles_default()).Header
    }, hasLegacyContext ? 'legacy context' : 'context'), !isEmpty && /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
      onClick: handleCopy,
      title: "Copy to clipboard"
    }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
      type: "copy"
    }))), isEmpty && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (InspectedElementSharedStyles_default()).Empty
    }, "None"), !isEmpty && entries.map(([name, value]) => /*#__PURE__*/external_react_namespaceObject.createElement(KeyValue_KeyValue, {
      key: name,
      alphaSort: true,
      bridge: bridge,
      canDeletePaths: !isReadOnly,
      canEditValues: !isReadOnly,
      canRenamePaths: !isReadOnly,
      canRenamePathsAtDepth: canRenamePathsAtDepth,
      depth: 1,
      element: element,
      hidden: false,
      inspectedElement: inspectedElement,
      name: name,
      path: [name],
      pathRoot: "context",
      store: store,
      type: "context",
      value: value
    })));
  }
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementErrorsAndWarningsTree.css
var InspectedElementErrorsAndWarningsTree = __webpack_require__(7754);
var InspectedElementErrorsAndWarningsTree_default = /*#__PURE__*/__webpack_require__.n(InspectedElementErrorsAndWarningsTree);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementErrorsAndWarningsTree.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */








function InspectedElementErrorsAndWarningsTree_InspectedElementErrorsAndWarningsTree({
  bridge,
  inspectedElement,
  store
}) {
  const refresh = (0,external_react_namespaceObject.unstable_useCacheRefresh)();
  const [isErrorsTransitionPending, startClearErrorsTransition] = (0,external_react_namespaceObject.useTransition)();

  const clearErrorsForInspectedElement = () => {
    const {
      id
    } = inspectedElement;
    const rendererID = store.getRendererIDForElement(id);

    if (rendererID !== null) {
      startClearErrorsTransition(() => {
        clearErrorsForElement({
          bridge,
          id,
          rendererID
        });
        refresh();
      });
    }
  };

  const [isWarningsTransitionPending, startClearWarningsTransition] = (0,external_react_namespaceObject.useTransition)();

  const clearWarningsForInspectedElement = () => {
    const {
      id
    } = inspectedElement;
    const rendererID = store.getRendererIDForElement(id);

    if (rendererID !== null) {
      startClearWarningsTransition(() => {
        clearWarningsForElement({
          bridge,
          id,
          rendererID
        });
        refresh();
      });
    }
  };

  if (!store.displayingErrorsAndWarningsEnabled) {
    return null;
  }

  const {
    errors,
    warnings
  } = inspectedElement;

  if (errors.length === 0 && warnings.length === 0) {
    return null;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, errors.length > 0 && /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementErrorsAndWarningsTree_Tree, {
    badgeClassName: (InspectedElementErrorsAndWarningsTree_default()).ErrorBadge,
    bridge: bridge,
    className: (InspectedElementErrorsAndWarningsTree_default()).ErrorTree,
    clearMessages: clearErrorsForInspectedElement,
    entries: errors,
    isTransitionPending: isErrorsTransitionPending,
    label: "errors",
    messageClassName: (InspectedElementErrorsAndWarningsTree_default()).Error
  }), warnings.length > 0 && /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementErrorsAndWarningsTree_Tree, {
    badgeClassName: (InspectedElementErrorsAndWarningsTree_default()).WarningBadge,
    bridge: bridge,
    className: (InspectedElementErrorsAndWarningsTree_default()).WarningTree,
    clearMessages: clearWarningsForInspectedElement,
    entries: warnings,
    isTransitionPending: isWarningsTransitionPending,
    label: "warnings",
    messageClassName: (InspectedElementErrorsAndWarningsTree_default()).Warning
  }));
}

function InspectedElementErrorsAndWarningsTree_Tree({
  badgeClassName,
  actions,
  className,
  clearMessages,
  entries,
  isTransitionPending,
  label,
  messageClassName
}) {
  if (entries.length === 0) {
    return null;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: className
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: `${(InspectedElementSharedStyles_default()).HeaderRow} ${(InspectedElementErrorsAndWarningsTree_default()).HeaderRow}`
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementSharedStyles_default()).Header
  }, label), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    disabled: isTransitionPending,
    onClick: clearMessages,
    title: `Clear all ${label} for this component`
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "clear"
  }))), entries.map(([message, count], index) => /*#__PURE__*/external_react_namespaceObject.createElement(ErrorOrWarningView, {
    key: `${label}-${index}`,
    badgeClassName: badgeClassName,
    className: messageClassName,
    count: count,
    message: message
  })));
}

function ErrorOrWarningView({
  className,
  badgeClassName,
  count,
  message
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: className
  }, count > 1 && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: badgeClassName
  }, count), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementErrorsAndWarningsTree_default()).Message,
    title: message
  }, message));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementHooksTree.css
var InspectedElementHooksTree = __webpack_require__(9520);
var InspectedElementHooksTree_default = /*#__PURE__*/__webpack_require__.n(InspectedElementHooksTree);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementHooksTree.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
















function InspectedElementHooksTree_InspectedElementHooksTree({
  bridge,
  element,
  hookNames,
  inspectedElement,
  parseHookNames,
  store,
  toggleParseHookNames
}) {
  const {
    hooks,
    id
  } = inspectedElement; // Changing parseHookNames is done in a transition, because it suspends.
  // This value is done outside of the transition, so the UI toggle feels responsive.

  const [parseHookNamesOptimistic, setParseHookNamesOptimistic] = (0,external_react_namespaceObject.useState)(parseHookNames);

  const handleChange = () => {
    setParseHookNamesOptimistic(!parseHookNames);
    toggleParseHookNames();
  };

  const hookNamesModuleLoader = (0,external_react_namespaceObject.useContext)(Components_HookNamesModuleLoaderContext);
  const hookParsingFailed = parseHookNames && hookNames === null;
  let toggleTitle;

  if (hookParsingFailed) {
    toggleTitle = 'Hook parsing failed';
  } else if (parseHookNames) {
    toggleTitle = 'Parsing hook names ...';
  } else {
    toggleTitle = 'Parse hook names (may be slow)';
  }

  const handleCopy = () => (0,clipboard.copy)(serializeHooksForCopy(hooks));

  if (hooks === null) {
    return null;
  } else {
    return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      "data-testname": "InspectedElementHooksTree"
    }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (InspectedElementHooksTree_default()).HeaderRow
    }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (InspectedElementHooksTree_default()).Header
    }, "hooks"), typeof hookNamesModuleLoader === 'function' && (!parseHookNames || hookParsingFailed) && /*#__PURE__*/external_react_namespaceObject.createElement(Toggle_Toggle, {
      className: hookParsingFailed ? (InspectedElementHooksTree_default()).ToggleError : null,
      isChecked: parseHookNamesOptimistic,
      isDisabled: parseHookNamesOptimistic || hookParsingFailed,
      onChange: handleChange,
      testName: "LoadHookNamesButton",
      title: toggleTitle
    }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
      type: "parse-hook-names"
    })), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
      onClick: handleCopy,
      title: "Copy to clipboard"
    }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
      type: "copy"
    }))), /*#__PURE__*/external_react_namespaceObject.createElement(InnerHooksTreeView, {
      hookNames: hookNames,
      hooks: hooks,
      id: id,
      element: element,
      inspectedElement: inspectedElement,
      path: []
    }));
  }
}
function InnerHooksTreeView({
  element,
  hookNames,
  hooks,
  id,
  inspectedElement,
  path
}) {
  return hooks.map((hook, index) => /*#__PURE__*/external_react_namespaceObject.createElement(HookView, {
    key: index,
    element: element,
    hook: hooks[index],
    hookNames: hookNames,
    id: id,
    inspectedElement: inspectedElement,
    path: path.concat([index])
  }));
}

function HookView({
  element,
  hook,
  hookNames,
  id,
  inspectedElement,
  path
}) {
  const {
    canEditHooks,
    canEditHooksAndDeletePaths,
    canEditHooksAndRenamePaths
  } = inspectedElement;
  const {
    id: hookID,
    isStateEditable,
    subHooks,
    value
  } = hook;
  const isReadOnly = hookID == null || !isStateEditable;
  const canDeletePaths = !isReadOnly && canEditHooksAndDeletePaths;
  const canEditValues = !isReadOnly && canEditHooks;
  const canRenamePaths = !isReadOnly && canEditHooksAndRenamePaths;
  const bridge = (0,external_react_namespaceObject.useContext)(BridgeContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const [isOpen, setIsOpen] = (0,external_react_namespaceObject.useState)(false);
  const toggleIsOpen = (0,external_react_namespaceObject.useCallback)(() => setIsOpen(prevIsOpen => !prevIsOpen), []);

  if (hook.hasOwnProperty(meta.inspected)) {
    // This Hook is too deep and hasn't been hydrated.
    if (false) {}

    return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (InspectedElementHooksTree_default()).Hook
    }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (InspectedElementHooksTree_default()).NameValueRow
    }, /*#__PURE__*/external_react_namespaceObject.createElement("span", {
      className: (InspectedElementHooksTree_default()).TruncationIndicator
    }, "...")));
  } // Certain hooks are not editable at all (as identified by react-debug-tools).
  // Primitive hook names (e.g. the "State" name for useState) are also never editable.
  // $FlowFixMe[missing-local-annot]


  const canRenamePathsAtDepth = depth => isStateEditable && depth > 1;

  const isCustomHook = subHooks.length > 0;
  let name = hook.name;

  if (hookID !== null) {
    name = /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("span", {
      className: (InspectedElementHooksTree_default()).PrimitiveHookNumber
    }, hookID + 1), name);
  }

  const type = typeof value;
  let displayValue;
  let isComplexDisplayValue = false;
  const hookSource = hook.hookSource;
  const hookName = hookNames != null && hookSource != null ? hookNames.get(getHookSourceLocationKey(hookSource)) : null;
  const hookDisplayName = hookName ? /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, name, !!hookName && /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (InspectedElementHooksTree_default()).HookName
  }, "(", hookName, ")")) : name; // Format data for display to mimic the props/state/context for now.

  if (type === 'string') {
    displayValue = `"${value}"`;
  } else if (type === 'boolean') {
    displayValue = value ? 'true' : 'false';
  } else if (type === 'number') {
    displayValue = value;
  } else if (value === null) {
    displayValue = 'null';
  } else if (value === undefined) {
    displayValue = null;
  } else if (src_isArray(value)) {
    isComplexDisplayValue = true;
    displayValue = 'Array';
  } else if (type === 'object') {
    isComplexDisplayValue = true;
    displayValue = 'Object';
  }

  if (isCustomHook) {
    const subHooksView = src_isArray(subHooks) ? /*#__PURE__*/external_react_namespaceObject.createElement(InnerHooksTreeView, {
      element: element,
      hooks: subHooks,
      hookNames: hookNames,
      id: id,
      inspectedElement: inspectedElement,
      path: path.concat(['subHooks'])
    }) : /*#__PURE__*/external_react_namespaceObject.createElement(KeyValue_KeyValue, {
      alphaSort: false,
      bridge: bridge,
      canDeletePaths: canDeletePaths,
      canEditValues: canEditValues,
      canRenamePaths: canRenamePaths,
      canRenamePathsAtDepth: canRenamePathsAtDepth,
      depth: 1,
      element: element,
      hookID: hookID,
      hookName: hookName,
      inspectedElement: inspectedElement,
      name: "subHooks",
      path: path.concat(['subHooks']),
      store: store,
      type: "hooks",
      value: subHooks
    });

    if (isComplexDisplayValue) {
      return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (InspectedElementHooksTree_default()).Hook
      }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (InspectedElementHooksTree_default()).NameValueRow
      }, /*#__PURE__*/external_react_namespaceObject.createElement(ExpandCollapseToggle_ExpandCollapseToggle, {
        isOpen: isOpen,
        setIsOpen: setIsOpen
      }), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
        onClick: toggleIsOpen,
        className: name !== '' ? (InspectedElementHooksTree_default()).Name : (InspectedElementHooksTree_default()).NameAnonymous
      }, hookDisplayName || 'Anonymous'), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
        className: (InspectedElementHooksTree_default()).Value,
        onClick: toggleIsOpen
      }, isOpen || getMetaValueLabel(value))), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (InspectedElementHooksTree_default()).Children,
        hidden: !isOpen
      }, /*#__PURE__*/external_react_namespaceObject.createElement(KeyValue_KeyValue, {
        alphaSort: false,
        bridge: bridge,
        canDeletePaths: canDeletePaths,
        canEditValues: canEditValues,
        canRenamePaths: canRenamePaths,
        canRenamePathsAtDepth: canRenamePathsAtDepth,
        depth: 1,
        element: element,
        hookID: hookID,
        hookName: hookName,
        inspectedElement: inspectedElement,
        name: "DebugValue",
        path: path.concat(['value']),
        pathRoot: "hooks",
        store: store,
        value: value
      }), subHooksView));
    } else {
      return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (InspectedElementHooksTree_default()).Hook
      }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (InspectedElementHooksTree_default()).NameValueRow
      }, /*#__PURE__*/external_react_namespaceObject.createElement(ExpandCollapseToggle_ExpandCollapseToggle, {
        isOpen: isOpen,
        setIsOpen: setIsOpen
      }), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
        onClick: toggleIsOpen,
        className: name !== '' ? (InspectedElementHooksTree_default()).Name : (InspectedElementHooksTree_default()).NameAnonymous
      }, hookDisplayName || 'Anonymous'), ' ', /*#__PURE__*/external_react_namespaceObject.createElement("span", {
        className: (InspectedElementHooksTree_default()).Value,
        onClick: toggleIsOpen
      }, displayValue)), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (InspectedElementHooksTree_default()).Children,
        hidden: !isOpen
      }, subHooksView));
    }
  } else {
    if (isComplexDisplayValue) {
      return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (InspectedElementHooksTree_default()).Hook
      }, /*#__PURE__*/external_react_namespaceObject.createElement(KeyValue_KeyValue, {
        alphaSort: false,
        bridge: bridge,
        canDeletePaths: canDeletePaths,
        canEditValues: canEditValues,
        canRenamePaths: canRenamePaths,
        canRenamePathsAtDepth: canRenamePathsAtDepth,
        depth: 1,
        element: element,
        hookID: hookID,
        hookName: hookName,
        inspectedElement: inspectedElement,
        name: name,
        path: path.concat(['value']),
        pathRoot: "hooks",
        store: store,
        value: value
      }));
    } else {
      return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (InspectedElementHooksTree_default()).Hook
      }, /*#__PURE__*/external_react_namespaceObject.createElement(KeyValue_KeyValue, {
        alphaSort: false,
        bridge: bridge,
        canDeletePaths: false,
        canEditValues: canEditValues,
        canRenamePaths: false,
        depth: 1,
        element: element,
        hookID: hookID,
        hookName: hookName,
        inspectedElement: inspectedElement,
        name: name,
        path: path.concat(['value']),
        pathRoot: "hooks",
        store: store,
        value: value
      }));
    }
  }
}

/* harmony default export */ const Components_InspectedElementHooksTree = (/*#__PURE__*/external_react_namespaceObject.memo(InspectedElementHooksTree_InspectedElementHooksTree));
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementPropsTree.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */












function InspectedElementPropsTree({
  bridge,
  element,
  inspectedElement,
  store
}) {
  const {
    readOnly
  } = external_react_namespaceObject.useContext(OptionsContext);
  const {
    canEditFunctionProps,
    canEditFunctionPropsDeletePaths,
    canEditFunctionPropsRenamePaths,
    props,
    type
  } = inspectedElement;
  const canDeletePaths = type === ElementTypeClass || canEditFunctionPropsDeletePaths;
  const canEditValues = !readOnly && (type === ElementTypeClass || canEditFunctionProps);
  const canRenamePaths = type === ElementTypeClass || canEditFunctionPropsRenamePaths; // Skip the section for null props.

  if (props == null) {
    return null;
  }

  const entries = Object.entries(props);
  entries.sort(alphaSortEntries);
  const isEmpty = entries.length === 0;
  const handleCopy = withPermissionsCheck({
    permissions: ['clipboardWrite']
  }, () => (0,clipboard.copy)(serializeDataForCopy(props)));
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    "data-testname": "InspectedElementPropsTree"
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementSharedStyles_default()).HeaderRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementSharedStyles_default()).Header
  }, "props"), !isEmpty && /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: handleCopy,
    title: "Copy to clipboard"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "copy"
  }))), !isEmpty && entries.map(([name, value]) => /*#__PURE__*/external_react_namespaceObject.createElement(KeyValue_KeyValue, {
    key: name,
    alphaSort: true,
    bridge: bridge,
    canDeletePaths: canDeletePaths,
    canEditValues: canEditValues,
    canRenamePaths: canRenamePaths,
    depth: 1,
    element: element,
    hidden: false,
    inspectedElement: inspectedElement,
    name: name,
    path: [name],
    pathRoot: "props",
    store: store,
    value: value
  })), canEditValues && /*#__PURE__*/external_react_namespaceObject.createElement(NewKeyValue_NewKeyValue, {
    bridge: bridge,
    depth: 0,
    hidden: false,
    inspectedElement: inspectedElement,
    path: [],
    store: store,
    type: "props"
  }));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementStateTree.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */










function InspectedElementStateTree({
  bridge,
  element,
  inspectedElement,
  store
}) {
  const {
    state,
    type
  } = inspectedElement;

  if (state == null) {
    return null;
  } // HostSingleton and HostHoistable may have state that we don't want to expose to users


  const isHostComponent = type === ElementTypeHostComponent;
  const entries = Object.entries(state);
  const isEmpty = entries.length === 0;

  if (isEmpty || isHostComponent) {
    return null;
  }

  entries.sort(alphaSortEntries);
  const handleCopy = withPermissionsCheck({
    permissions: ['clipboardWrite']
  }, () => (0,clipboard.copy)(serializeDataForCopy(state)));
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementSharedStyles_default()).HeaderRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementSharedStyles_default()).Header
  }, "state"), !isEmpty && /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: handleCopy,
    title: "Copy to clipboard"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "copy"
  }))), isEmpty && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementSharedStyles_default()).Empty
  }, "None"), !isEmpty && entries.map(([name, value]) => /*#__PURE__*/external_react_namespaceObject.createElement(KeyValue_KeyValue, {
    key: name,
    alphaSort: true,
    bridge: bridge,
    canDeletePaths: true,
    canEditValues: true,
    canRenamePaths: true,
    depth: 1,
    element: element,
    hidden: false,
    inspectedElement: inspectedElement,
    name: name,
    path: [name],
    pathRoot: "state",
    store: store,
    value: value
  })));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementStyleXPlugin.css
var InspectedElementStyleXPlugin = __webpack_require__(3002);
var InspectedElementStyleXPlugin_default = /*#__PURE__*/__webpack_require__.n(InspectedElementStyleXPlugin);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementStyleXPlugin.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






function InspectedElementStyleXPlugin_InspectedElementStyleXPlugin({
  bridge,
  element,
  inspectedElement,
  store
}) {
  if (!enableStyleXFeatures) {
    return null;
  }

  const styleXPlugin = inspectedElement.plugins.stylex;

  if (styleXPlugin == null) {
    return null;
  }

  const {
    resolvedStyles,
    sources
  } = styleXPlugin;
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementSharedStyles_default()).HeaderRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementSharedStyles_default()).Header
  }, "stylex")), sources.map(source => /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    key: source,
    className: (InspectedElementStyleXPlugin_default()).Source
  }, source)), Object.entries(resolvedStyles).map(([name, value]) => /*#__PURE__*/external_react_namespaceObject.createElement(KeyValue_KeyValue, {
    key: name,
    alphaSort: true,
    bridge: bridge,
    canDeletePaths: false,
    canEditValues: false,
    canRenamePaths: false,
    depth: 1,
    element: element,
    hidden: false,
    inspectedElement: inspectedElement,
    name: name,
    path: [name],
    pathRoot: "stylex",
    store: store,
    value: value
  })));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementSuspenseToggle.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






function InspectedElementSuspenseToggle({
  bridge,
  inspectedElement,
  store
}) {
  const {
    readOnly
  } = external_react_namespaceObject.useContext(OptionsContext);
  const {
    id,
    state,
    type
  } = inspectedElement;
  const canToggleSuspense = !readOnly && inspectedElement.canToggleSuspense;

  if (type !== ElementTypeSuspense) {
    return null;
  }

  const isSuspended = state !== null;

  const toggleSuspense = (path, value) => {
    const rendererID = store.getRendererIDForElement(id);

    if (rendererID !== null) {
      bridge.send('overrideSuspense', {
        id,
        rendererID,
        forceFallback: value
      });
    }
  };

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementSharedStyles_default()).HeaderRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementSharedStyles_default()).Header
  }, "suspense")), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementSharedStyles_default()).ToggleSuspenseRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (InspectedElementSharedStyles_default()).Name
  }, "Suspended"), canToggleSuspense ?
  /*#__PURE__*/
  // key is required to keep <EditableValue> and header row toggle button in sync
  external_react_namespaceObject.createElement(EditableValue_EditableValue, {
    key: isSuspended,
    overrideValue: toggleSuspense,
    path: ['suspense', 'Suspended'],
    value: isSuspended
  }) : /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (InspectedElementSharedStyles_default()).Value
  }, isSuspended ? 'true' : 'false')));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/NativeStyleEditor/context.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




const NativeStyleContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
NativeStyleContext.displayName = 'NativeStyleContext';

function NativeStyleContextController({
  children
}) {
  const bridge = (0,external_react_namespaceObject.useContext)(BridgeContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    inspectedElementID
  } = (0,external_react_namespaceObject.useContext)(TreeStateContext);
  const [currentStyleAndLayout, setCurrentStyleAndLayout] = (0,external_react_namespaceObject.useState)(null); // This effect handler polls for updates on the currently selected element.

  (0,external_react_namespaceObject.useEffect)(() => {
    if (inspectedElementID === null) {
      setCurrentStyleAndLayout(null);
      return () => {};
    }

    let requestTimeoutId = null;

    const sendRequest = () => {
      requestTimeoutId = null;
      const rendererID = store.getRendererIDForElement(inspectedElementID);

      if (rendererID !== null) {
        bridge.send('NativeStyleEditor_measure', {
          id: inspectedElementID,
          rendererID
        });
      }
    }; // Send the initial measurement request.
    // We'll poll for an update in the response handler below.


    sendRequest();

    const onStyleAndLayout = ({
      id,
      layout,
      style
    }) => {
      // If this is the element we requested, wait a little bit and then ask for another update.
      if (id === inspectedElementID) {
        if (requestTimeoutId !== null) {
          clearTimeout(requestTimeoutId);
        }

        requestTimeoutId = setTimeout(sendRequest, 1000);
      }

      const styleAndLayout = {
        layout,
        style
      };
      setCurrentStyleAndLayout(styleAndLayout);
    };

    bridge.addListener('NativeStyleEditor_styleAndLayout', onStyleAndLayout);
    return () => {
      bridge.removeListener('NativeStyleEditor_styleAndLayout', onStyleAndLayout);

      if (requestTimeoutId !== null) {
        clearTimeout(requestTimeoutId);
      }
    };
  }, [bridge, inspectedElementID, store]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(NativeStyleContext.Provider, {
    value: currentStyleAndLayout
  }, children);
}


// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/NativeStyleEditor/LayoutViewer.css
var LayoutViewer = __webpack_require__(7247);
var LayoutViewer_default = /*#__PURE__*/__webpack_require__.n(LayoutViewer);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/NativeStyleEditor/LayoutViewer.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function LayoutViewer_LayoutViewer({
  id,
  layout
}) {
  const {
    height,
    margin,
    padding,
    y,
    width,
    x
  } = layout;
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (LayoutViewer_default()).LayoutViewer
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (LayoutViewer_default()).Header
  }, "layout"), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (LayoutViewer_default()).DashedBox
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (LayoutViewer_default()).LabelRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (LayoutViewer_default()).Label
  }, "margin"), /*#__PURE__*/external_react_namespaceObject.createElement("label", null, margin.top || '-')), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (LayoutViewer_default()).BoxRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", null, margin.left || '-'), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (LayoutViewer_default()).SolidBox
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (LayoutViewer_default()).LabelRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (LayoutViewer_default()).Label
  }, "padding"), /*#__PURE__*/external_react_namespaceObject.createElement("label", null, padding.top || '-')), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (LayoutViewer_default()).BoxRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", null, padding.left || '-'), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (LayoutViewer_default()).DashedBox
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (LayoutViewer_default()).LabelRow
  }, format(width), " x ", format(height), " (", format(x), ", ", format(y), ")")), /*#__PURE__*/external_react_namespaceObject.createElement("label", null, padding.right || '-')), /*#__PURE__*/external_react_namespaceObject.createElement("label", null, padding.bottom || '-')), /*#__PURE__*/external_react_namespaceObject.createElement("label", null, margin.right || '-')), /*#__PURE__*/external_react_namespaceObject.createElement("label", null, margin.bottom || '-')));
}

function format(number) {
  if (Math.round(number) === number) {
    return number;
  } else {
    return number.toFixed(1);
  }
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/NativeStyleEditor/StyleEditor.css
var StyleEditor = __webpack_require__(6454);
var StyleEditor_default = /*#__PURE__*/__webpack_require__.n(StyleEditor);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/NativeStyleEditor/StyleEditor.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */











function StyleEditor_StyleEditor({
  id,
  style
}) {
  const bridge = (0,external_react_namespaceObject.useContext)(BridgeContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);

  const changeAttribute = (oldName, newName, value) => {
    const rendererID = store.getRendererIDForElement(id);

    if (rendererID !== null) {
      bridge.send('NativeStyleEditor_renameAttribute', {
        id,
        rendererID,
        oldName,
        newName,
        value
      });
    }
  };

  const changeValue = (name, value) => {
    const rendererID = store.getRendererIDForElement(id);

    if (rendererID !== null) {
      bridge.send('NativeStyleEditor_setValue', {
        id,
        rendererID,
        name,
        value
      });
    }
  };

  const keys = (0,external_react_namespaceObject.useMemo)(() => Array.from(Object.keys(style)), [style]);
  const handleCopy = withPermissionsCheck({
    permissions: ['clipboardWrite']
  }, () => (0,clipboard.copy)(serializeDataForCopy(style)));
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (StyleEditor_default()).StyleEditor
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (StyleEditor_default()).HeaderRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (StyleEditor_default()).Header
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (StyleEditor_default()).Brackets
  }, 'style {')), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: handleCopy,
    title: "Copy to clipboard"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "copy"
  }))), keys.length > 0 && keys.map(attribute => /*#__PURE__*/external_react_namespaceObject.createElement(Row, {
    key: `${attribute}/${style[attribute]}`,
    attribute: attribute,
    changeAttribute: changeAttribute,
    changeValue: changeValue,
    validAttributes: store.nativeStyleEditorValidAttributes,
    value: style[attribute]
  })), /*#__PURE__*/external_react_namespaceObject.createElement(NewRow, {
    changeAttribute: changeAttribute,
    changeValue: changeValue,
    validAttributes: store.nativeStyleEditorValidAttributes
  }), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (StyleEditor_default()).Brackets
  }, '}'));
}

function NewRow({
  changeAttribute,
  changeValue,
  validAttributes
}) {
  const [key, setKey] = (0,external_react_namespaceObject.useState)(0);

  const reset = () => setKey(key + 1);

  const newAttributeRef = (0,external_react_namespaceObject.useRef)('');

  const changeAttributeWrapper = (oldAttribute, newAttribute, value) => {
    // Ignore attribute changes until a value has been specified
    newAttributeRef.current = newAttribute;
  };

  const changeValueWrapper = (attribute, value) => {
    // Blur events should reset/cancel if there's no value or no attribute
    if (newAttributeRef.current !== '') {
      if (value !== '') {
        changeValue(newAttributeRef.current, value);
      }

      reset();
    }
  };

  return /*#__PURE__*/external_react_namespaceObject.createElement(Row, {
    key: key,
    attribute: '',
    attributePlaceholder: "attribute",
    changeAttribute: changeAttributeWrapper,
    changeValue: changeValueWrapper,
    validAttributes: validAttributes,
    value: '',
    valuePlaceholder: "value"
  });
}

function Row({
  attribute,
  attributePlaceholder,
  changeAttribute,
  changeValue,
  validAttributes,
  value,
  valuePlaceholder
}) {
  // TODO (RN style editor) Use @reach/combobox to auto-complete attributes.
  // The list of valid attributes would need to be injected by RN backend,
  // which would need to require them from ReactNativeViewViewConfig "validAttributes.style" keys.
  // This would need to degrade gracefully for react-native-web,
  // although we could let it also inject a custom set of allowed attributes.
  const [localAttribute, setLocalAttribute] = (0,external_react_namespaceObject.useState)(attribute);
  const [localValue, setLocalValue] = (0,external_react_namespaceObject.useState)(JSON.stringify(value));
  const [isAttributeValid, setIsAttributeValid] = (0,external_react_namespaceObject.useState)(true);
  const [isValueValid, setIsValueValid] = (0,external_react_namespaceObject.useState)(true); // $FlowFixMe[missing-local-annot]

  const validateAndSetLocalAttribute = newAttribute => {
    const isValid = newAttribute === '' || validAttributes === null || validAttributes.indexOf(newAttribute) >= 0;
    setLocalAttribute(newAttribute);
    setIsAttributeValid(isValid);
  }; // $FlowFixMe[missing-local-annot]


  const validateAndSetLocalValue = newValue => {
    let isValid = false;

    try {
      JSON.parse(sanitizeForParse(newValue));
      isValid = true;
    } catch (error) {}

    setLocalValue(newValue);
    setIsValueValid(isValid);
  };

  const resetAttribute = () => {
    setLocalAttribute(attribute);
  };

  const resetValue = () => {
    setLocalValue(value);
  };

  const submitValueChange = () => {
    if (isAttributeValid && isValueValid) {
      const parsedLocalValue = JSON.parse(sanitizeForParse(localValue));

      if (value !== parsedLocalValue) {
        changeValue(attribute, parsedLocalValue);
      }
    }
  };

  const submitAttributeChange = () => {
    if (isAttributeValid && isValueValid) {
      if (attribute !== localAttribute) {
        changeAttribute(attribute, localAttribute, value);
      }
    }
  };

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (StyleEditor_default()).Row
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Field, {
    className: isAttributeValid ? (StyleEditor_default()).Attribute : (StyleEditor_default()).Invalid,
    onChange: validateAndSetLocalAttribute,
    onReset: resetAttribute,
    onSubmit: submitAttributeChange,
    placeholder: attributePlaceholder,
    value: localAttribute
  }), ":\xA0", /*#__PURE__*/external_react_namespaceObject.createElement(Field, {
    className: isValueValid ? (StyleEditor_default()).Value : (StyleEditor_default()).Invalid,
    onChange: validateAndSetLocalValue,
    onReset: resetValue,
    onSubmit: submitValueChange,
    placeholder: valuePlaceholder,
    value: localValue
  }), ";");
}

function Field({
  className,
  onChange,
  onReset,
  onSubmit,
  placeholder,
  value
}) {
  // $FlowFixMe[missing-local-annot]
  const onKeyDown = event => {
    switch (event.key) {
      case 'Enter':
        onSubmit();
        break;

      case 'Escape':
        onReset();
        break;

      case 'ArrowDown':
      case 'ArrowLeft':
      case 'ArrowRight':
      case 'ArrowUp':
        event.stopPropagation();
        break;

      default:
        break;
    }
  };

  return /*#__PURE__*/external_react_namespaceObject.createElement(AutoSizeInput_AutoSizeInput, {
    className: `${className} ${(StyleEditor_default()).Input}`,
    onBlur: onSubmit,
    onChange: event => onChange(event.target.value),
    onKeyDown: onKeyDown,
    placeholder: placeholder,
    value: value
  });
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/NativeStyleEditor/index.css
var NativeStyleEditor = __webpack_require__(7665);
var NativeStyleEditor_default = /*#__PURE__*/__webpack_require__.n(NativeStyleEditor);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/NativeStyleEditor/index.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */









function NativeStyleEditorWrapper() {
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const subscription = (0,external_react_namespaceObject.useMemo)(() => ({
    getCurrentValue: () => store.supportsNativeStyleEditor,
    subscribe: callback => {
      store.addListener('supportsNativeStyleEditor', callback);
      return () => {
        store.removeListener('supportsNativeStyleEditor', callback);
      };
    }
  }), [store]);
  const supportsNativeStyleEditor = useSubscription(subscription);

  if (!supportsNativeStyleEditor) {
    return null;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(NativeStyleEditor_NativeStyleEditor, null);
}

function NativeStyleEditor_NativeStyleEditor() {
  const {
    inspectedElementID
  } = (0,external_react_namespaceObject.useContext)(TreeStateContext);
  const inspectedElementStyleAndLayout = (0,external_react_namespaceObject.useContext)(NativeStyleContext);

  if (inspectedElementID === null) {
    return null;
  }

  if (inspectedElementStyleAndLayout === null) {
    return null;
  }

  const {
    layout,
    style
  } = inspectedElementStyleAndLayout;

  if (layout === null && style === null) {
    return null;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (NativeStyleEditor_default()).Stack
  }, layout !== null && /*#__PURE__*/external_react_namespaceObject.createElement(LayoutViewer_LayoutViewer, {
    id: inspectedElementID,
    layout: layout
  }), style !== null && /*#__PURE__*/external_react_namespaceObject.createElement(StyleEditor_StyleEditor, {
    id: inspectedElementID,
    style: style
  }));
}
// EXTERNAL MODULE: ../../node_modules/jsc-safe-url/index.js
var jsc_safe_url = __webpack_require__(1148);
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/Skeleton.css
var Skeleton = __webpack_require__(1477);
var Skeleton_default = /*#__PURE__*/__webpack_require__.n(Skeleton);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/Skeleton.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



function Skeleton_Skeleton({
  height,
  width
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Skeleton_default()).root,
    style: {
      height,
      width
    }
  });
}

/* harmony default export */ const Components_Skeleton = (Skeleton_Skeleton);
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementSourcePanel.css
var InspectedElementSourcePanel = __webpack_require__(4373);
var InspectedElementSourcePanel_default = /*#__PURE__*/__webpack_require__.n(InspectedElementSourcePanel);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementSourcePanel.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */









function InspectedElementSourcePanel_InspectedElementSourcePanel({
  source,
  symbolicatedSourcePromise
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementSourcePanel_default()).SourceHeaderRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementSourcePanel_default()).SourceHeader
  }, "source"), /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Suspense, {
    fallback: /*#__PURE__*/external_react_namespaceObject.createElement(Components_Skeleton, {
      height: 16,
      width: 16
    })
  }, /*#__PURE__*/external_react_namespaceObject.createElement(CopySourceButton, {
    source: source,
    symbolicatedSourcePromise: symbolicatedSourcePromise
  }))), /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Suspense, {
    fallback: /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (InspectedElementSourcePanel_default()).SourceOneLiner
    }, /*#__PURE__*/external_react_namespaceObject.createElement(Components_Skeleton, {
      height: 16,
      width: "40%"
    }))
  }, /*#__PURE__*/external_react_namespaceObject.createElement(FormattedSourceString, {
    source: source,
    symbolicatedSourcePromise: symbolicatedSourcePromise
  })));
}

function CopySourceButton({
  source,
  symbolicatedSourcePromise
}) {
  const symbolicatedSource = external_react_namespaceObject.use(symbolicatedSourcePromise);

  if (symbolicatedSource == null) {
    const {
      sourceURL,
      line,
      column
    } = source;
    const handleCopy = withPermissionsCheck({
      permissions: ['clipboardWrite']
    }, () => (0,clipboard.copy)(`${sourceURL}:${line}:${column}`));
    return /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
      onClick: handleCopy,
      title: "Copy to clipboard"
    }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
      type: "copy"
    }));
  }

  const {
    sourceURL,
    line,
    column
  } = symbolicatedSource;
  const handleCopy = withPermissionsCheck({
    permissions: ['clipboardWrite']
  }, () => (0,clipboard.copy)(`${sourceURL}:${line}:${column}`));
  return /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: handleCopy,
    title: "Copy to clipboard"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "copy"
  }));
}

function FormattedSourceString({
  source,
  symbolicatedSourcePromise
}) {
  const symbolicatedSource = external_react_namespaceObject.use(symbolicatedSourcePromise);

  if (symbolicatedSource == null) {
    const {
      sourceURL,
      line
    } = source;
    return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (InspectedElementSourcePanel_default()).SourceOneLiner,
      "data-testname": "InspectedElementView-FormattedSourceString"
    }, formatSourceForDisplay(sourceURL, line));
  }

  const {
    sourceURL,
    line
  } = symbolicatedSource;
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementSourcePanel_default()).SourceOneLiner,
    "data-testname": "InspectedElementView-FormattedSourceString"
  }, formatSourceForDisplay(sourceURL, line));
} // This function is based on describeComponentFrame() in packages/shared/ReactComponentStackFrame


function formatSourceForDisplay(sourceURL, line) {
  // Metro can return JSC-safe URLs, which have `//&` as a delimiter
  // https://www.npmjs.com/package/jsc-safe-url
  const sanitizedSourceURL = sourceURL.includes('//&') ? (0,jsc_safe_url.toNormalUrl)(sourceURL) : sourceURL; // Note: this RegExp doesn't work well with URLs from Metro,
  // which provides bundle URL with query parameters prefixed with /&

  const BEFORE_SLASH_RE = /^(.*)[\\\/]/;
  let nameOnly = sanitizedSourceURL.replace(BEFORE_SLASH_RE, ''); // In DEV, include code for a common special case:
  // prefer "folder/index.js" instead of just "index.js".

  if (/^index\./.test(nameOnly)) {
    const match = sanitizedSourceURL.match(BEFORE_SLASH_RE);

    if (match) {
      const pathBeforeSlash = match[1];

      if (pathBeforeSlash) {
        const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
        nameOnly = folderName + '/' + nameOnly;
      }
    }
  }

  return `${nameOnly}:${line}`;
}

/* harmony default export */ const Components_InspectedElementSourcePanel = (InspectedElementSourcePanel_InspectedElementSourcePanel);
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementView.css
var InspectedElementView = __webpack_require__(1265);
var InspectedElementView_default = /*#__PURE__*/__webpack_require__.n(InspectedElementView);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementView.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




















function InspectedElementView_InspectedElementView({
  element,
  hookNames,
  inspectedElement,
  parseHookNames,
  toggleParseHookNames,
  symbolicatedSourcePromise
}) {
  const {
    owners,
    rendererPackageName,
    rendererVersion,
    rootType,
    source,
    nativeTag
  } = inspectedElement;
  const bridge = (0,external_react_namespaceObject.useContext)(BridgeContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const rendererLabel = rendererPackageName !== null && rendererVersion !== null ? `${rendererPackageName}@${rendererVersion}` : null;
  const showOwnersList = owners !== null && owners.length > 0;
  const showRenderedBy = showOwnersList || rendererLabel !== null || rootType !== null;
  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).InspectedElement
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).InspectedElementSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementBadges_InspectedElementBadges, {
    hocDisplayNames: element.hocDisplayNames,
    compiledWithForget: element.compiledWithForget,
    nativeTag: nativeTag
  })), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).InspectedElementSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementPropsTree, {
    bridge: bridge,
    element: element,
    inspectedElement: inspectedElement,
    store: store
  })), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).InspectedElementSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementSuspenseToggle, {
    bridge: bridge,
    inspectedElement: inspectedElement,
    store: store
  })), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).InspectedElementSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementStateTree, {
    bridge: bridge,
    element: element,
    inspectedElement: inspectedElement,
    store: store
  })), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).InspectedElementSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Components_InspectedElementHooksTree, {
    bridge: bridge,
    element: element,
    hookNames: hookNames,
    inspectedElement: inspectedElement,
    parseHookNames: parseHookNames,
    store: store,
    toggleParseHookNames: toggleParseHookNames
  })), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).InspectedElementSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementContextTree, {
    bridge: bridge,
    element: element,
    inspectedElement: inspectedElement,
    store: store
  })), enableStyleXFeatures && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).InspectedElementSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementStyleXPlugin_InspectedElementStyleXPlugin, {
    bridge: bridge,
    element: element,
    inspectedElement: inspectedElement,
    store: store
  })), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).InspectedElementSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementErrorsAndWarningsTree_InspectedElementErrorsAndWarningsTree, {
    bridge: bridge,
    element: element,
    inspectedElement: inspectedElement,
    store: store
  })), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).InspectedElementSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement(NativeStyleEditorWrapper, null)), showRenderedBy && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).InspectedElementSection,
    "data-testname": "InspectedElementView-Owners"
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).OwnersHeader
  }, "rendered by"), showOwnersList && owners?.map(owner => /*#__PURE__*/external_react_namespaceObject.createElement(OwnerView, {
    key: owner.id,
    displayName: owner.displayName || 'Anonymous',
    hocDisplayNames: owner.hocDisplayNames,
    compiledWithForget: owner.compiledWithForget,
    id: owner.id,
    isInStore: store.containsElement(owner.id),
    type: owner.type
  })), rootType !== null && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).OwnersMetaField
  }, rootType), rendererLabel !== null && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).OwnersMetaField
  }, rendererLabel)), source != null && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElementView_default()).InspectedElementSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Components_InspectedElementSourcePanel, {
    source: source,
    symbolicatedSourcePromise: symbolicatedSourcePromise
  }))));
}

function OwnerView({
  displayName,
  hocDisplayNames,
  compiledWithForget,
  id,
  isInStore
}) {
  const dispatch = (0,external_react_namespaceObject.useContext)(TreeDispatcherContext);
  const {
    highlightHostInstance,
    clearHighlightHostInstance
  } = useHighlightHostInstance();
  const handleClick = (0,external_react_namespaceObject.useCallback)(() => {
    logEvent({
      event_name: 'select-element',
      metadata: {
        source: 'owner-view'
      }
    });
    dispatch({
      type: 'SELECT_ELEMENT_BY_ID',
      payload: id
    });
  }, [dispatch, id]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    key: id,
    className: (InspectedElementView_default()).OwnerButton,
    disabled: !isInStore,
    onClick: handleClick,
    onMouseEnter: () => highlightHostInstance(id),
    onMouseLeave: clearHighlightHostInstance
  }, /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (InspectedElementView_default()).OwnerContent
  }, /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: `${(InspectedElementView_default()).Owner} ${isInStore ? '' : (InspectedElementView_default()).NotInStore}`,
    title: displayName
  }, displayName), /*#__PURE__*/external_react_namespaceObject.createElement(ElementBadges_ElementBadges, {
    hocDisplayNames: hocDisplayNames,
    compiledWithForget: compiledWithForget
  })));
}
;// CONCATENATED MODULE: ../../node_modules/sourcemap-codec/dist/sourcemap-codec.es.js
var charToInteger = {};
var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

for (var i = 0; i < chars.length; i++) {
  charToInteger[chars.charCodeAt(i)] = i;
}

function decode(mappings) {
  var decoded = [];
  var line = [];
  var segment = [0, 0, 0, 0, 0];
  var j = 0;

  for (var i = 0, shift = 0, value = 0; i < mappings.length; i++) {
    var c = mappings.charCodeAt(i);

    if (c === 44) {
      // ","
      segmentify(line, segment, j);
      j = 0;
    } else if (c === 59) {
      // ";"
      segmentify(line, segment, j);
      j = 0;
      decoded.push(line);
      line = [];
      segment[0] = 0;
    } else {
      var integer = charToInteger[c];

      if (integer === undefined) {
        throw new Error('Invalid character (' + String.fromCharCode(c) + ')');
      }

      var hasContinuationBit = integer & 32;
      integer &= 31;
      value += integer << shift;

      if (hasContinuationBit) {
        shift += 5;
      } else {
        var shouldNegate = value & 1;
        value >>>= 1;

        if (shouldNegate) {
          value = value === 0 ? -0x80000000 : -value;
        }

        segment[j] += value;
        j++;
        value = shift = 0; // reset
      }
    }
  }

  segmentify(line, segment, j);
  decoded.push(line);
  return decoded;
}

function segmentify(line, segment, j) {
  // This looks ugly, but we're creating specialized arrays with a specific
  // length. This is much faster than creating a new array (which v8 expands to
  // a capacity of 17 after pushing the first item), or slicing out a subarray
  // (which is slow). Length 4 is assumed to be the most frequent, followed by
  // length 5 (since not everything will have an associated name), followed by
  // length 1 (it's probably rare for a source substring to not have an
  // associated segment data).
  if (j === 4) line.push([segment[0], segment[1], segment[2], segment[3]]);else if (j === 5) line.push([segment[0], segment[1], segment[2], segment[3], segment[4]]);else if (j === 1) line.push([segment[0]]);
}

function encode(decoded) {
  var sourceFileIndex = 0; // second field

  var sourceCodeLine = 0; // third field

  var sourceCodeColumn = 0; // fourth field

  var nameIndex = 0; // fifth field

  var mappings = '';

  for (var i = 0; i < decoded.length; i++) {
    var line = decoded[i];
    if (i > 0) mappings += ';';
    if (line.length === 0) continue;
    var generatedCodeColumn = 0; // first field

    var lineMappings = [];

    for (var _i = 0, line_1 = line; _i < line_1.length; _i++) {
      var segment = line_1[_i];
      var segmentMappings = encodeInteger(segment[0] - generatedCodeColumn);
      generatedCodeColumn = segment[0];

      if (segment.length > 1) {
        segmentMappings += encodeInteger(segment[1] - sourceFileIndex) + encodeInteger(segment[2] - sourceCodeLine) + encodeInteger(segment[3] - sourceCodeColumn);
        sourceFileIndex = segment[1];
        sourceCodeLine = segment[2];
        sourceCodeColumn = segment[3];
      }

      if (segment.length === 5) {
        segmentMappings += encodeInteger(segment[4] - nameIndex);
        nameIndex = segment[4];
      }

      lineMappings.push(segmentMappings);
    }

    mappings += lineMappings.join(',');
  }

  return mappings;
}

function encodeInteger(num) {
  var result = '';
  num = num < 0 ? -num << 1 | 1 : num << 1;

  do {
    var clamped = num & 31;
    num >>>= 5;

    if (num > 0) {
      clamped |= 32;
    }

    result += chars[clamped];
  } while (num > 0);

  return result;
}


;// CONCATENATED MODULE: ../react-devtools-shared/src/hooks/SourceMapConsumer.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function SourceMapConsumer(sourceMapJSON) {
  if (sourceMapJSON.sections != null) {
    return IndexedSourceMapConsumer(sourceMapJSON);
  } else {
    return BasicSourceMapConsumer(sourceMapJSON);
  }
}

function BasicSourceMapConsumer(sourceMapJSON) {
  const decodedMappings = withSyncPerfMeasurements('Decoding source map mappings with sourcemap-codec', () => decode(sourceMapJSON.mappings));

  function originalPositionFor({
    columnNumber,
    lineNumber
  }) {
    // Error.prototype.stack columns are 1-based (like most IDEs) but ASTs are 0-based.
    const targetColumnNumber = columnNumber - 1;
    const lineMappings = decodedMappings[lineNumber - 1];
    let nearestEntry = null;
    let startIndex = 0;
    let stopIndex = lineMappings.length - 1;
    let index = -1;

    while (startIndex <= stopIndex) {
      index = Math.floor((stopIndex + startIndex) / 2);
      nearestEntry = lineMappings[index];
      const currentColumn = nearestEntry[0];

      if (currentColumn === targetColumnNumber) {
        break;
      } else {
        if (currentColumn > targetColumnNumber) {
          if (stopIndex - index > 0) {
            stopIndex = index;
          } else {
            index = stopIndex;
            break;
          }
        } else {
          if (index - startIndex > 0) {
            startIndex = index;
          } else {
            index = startIndex;
            break;
          }
        }
      }
    } // We have found either the exact element, or the next-closest element.
    // However there may be more than one such element.
    // Make sure we always return the smallest of these.


    while (index > 0) {
      const previousEntry = lineMappings[index - 1];
      const currentColumn = previousEntry[0];

      if (currentColumn !== targetColumnNumber) {
        break;
      }

      index--;
    }

    if (nearestEntry == null) {
      // TODO maybe fall back to the runtime source instead of throwing?
      throw Error(`Could not find runtime location for line:${lineNumber} and column:${columnNumber}`);
    }

    const sourceIndex = nearestEntry[1];
    const sourceContent = sourceMapJSON.sourcesContent != null ? sourceMapJSON.sourcesContent[sourceIndex] : null;
    const sourceURL = sourceMapJSON.sources[sourceIndex] ?? null;
    const line = nearestEntry[2] + 1;
    const column = nearestEntry[3];
    return {
      column,
      line,
      sourceContent: sourceContent,
      sourceURL: sourceURL
    };
  }

  return {
    originalPositionFor
  };
}

function IndexedSourceMapConsumer(sourceMapJSON) {
  let lastOffset = {
    line: -1,
    column: 0
  };
  const sections = sourceMapJSON.sections.map(section => {
    const offset = section.offset;
    const offsetLine = offset.line;
    const offsetColumn = offset.column;

    if (offsetLine < lastOffset.line || offsetLine === lastOffset.line && offsetColumn < lastOffset.column) {
      throw new Error('Section offsets must be ordered and non-overlapping.');
    }

    lastOffset = offset;
    return {
      // The offset fields are 0-based, but we use 1-based indices when encoding/decoding from VLQ.
      generatedLine: offsetLine + 1,
      generatedColumn: offsetColumn + 1,
      map: section.map,
      sourceMapConsumer: null
    };
  });

  function originalPositionFor({
    columnNumber,
    lineNumber
  }) {
    // Error.prototype.stack columns are 1-based (like most IDEs) but ASTs are 0-based.
    const targetColumnNumber = columnNumber - 1;
    let section = null;
    let startIndex = 0;
    let stopIndex = sections.length - 1;
    let index = -1;

    while (startIndex <= stopIndex) {
      index = Math.floor((stopIndex + startIndex) / 2);
      section = sections[index];
      const currentLine = section.generatedLine;

      if (currentLine === lineNumber) {
        const currentColumn = section.generatedColumn;

        if (currentColumn === lineNumber) {
          break;
        } else {
          if (currentColumn > targetColumnNumber) {
            if (stopIndex - index > 0) {
              stopIndex = index;
            } else {
              index = stopIndex;
              break;
            }
          } else {
            if (index - startIndex > 0) {
              startIndex = index;
            } else {
              index = startIndex;
              break;
            }
          }
        }
      } else {
        if (currentLine > lineNumber) {
          if (stopIndex - index > 0) {
            stopIndex = index;
          } else {
            index = stopIndex;
            break;
          }
        } else {
          if (index - startIndex > 0) {
            startIndex = index;
          } else {
            index = startIndex;
            break;
          }
        }
      }
    }

    if (section == null) {
      // TODO maybe fall back to the runtime source instead of throwing?
      throw Error(`Could not find matching section for line:${lineNumber} and column:${columnNumber}`);
    }

    if (section.sourceMapConsumer === null) {
      // Lazily parse the section only when it's needed.
      // $FlowFixMe[invalid-constructor] Flow no longer supports calling new on functions
      section.sourceMapConsumer = new SourceMapConsumer(section.map);
    }

    return section.sourceMapConsumer.originalPositionFor({
      columnNumber,
      lineNumber
    });
  }

  return {
    originalPositionFor
  };
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/symbolicateSource.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


const symbolicationCache = new Map();
async function symbolicateSourceWithCache(fetchFileWithCaching, sourceURL, line, // 1-based
column // 1-based
) {
  const key = `${sourceURL}:${line}:${column}`;
  const cachedPromise = symbolicationCache.get(key);

  if (cachedPromise != null) {
    return cachedPromise;
  }

  const promise = symbolicateSource(fetchFileWithCaching, sourceURL, line, column);
  symbolicationCache.set(key, promise);
  return promise;
}
const SOURCE_MAP_ANNOTATION_PREFIX = 'sourceMappingURL=';
async function symbolicateSource(fetchFileWithCaching, sourceURL, lineNumber, // 1-based
columnNumber // 1-based
) {
  const resource = await fetchFileWithCaching(sourceURL).catch(() => null);

  if (resource == null) {
    return null;
  }

  const resourceLines = resource.split(/[\r\n]+/);

  for (let i = resourceLines.length - 1; i >= 0; --i) {
    const resourceLine = resourceLines[i]; // In case there is empty last line

    if (!resourceLine) continue; // Not an annotation? Stop looking for a source mapping url.

    if (!resourceLine.startsWith('//#')) break;

    if (resourceLine.includes(SOURCE_MAP_ANNOTATION_PREFIX)) {
      const sourceMapAnnotationStartIndex = resourceLine.indexOf(SOURCE_MAP_ANNOTATION_PREFIX);
      const sourceMapAt = resourceLine.slice(sourceMapAnnotationStartIndex + SOURCE_MAP_ANNOTATION_PREFIX.length, resourceLine.length);
      const sourceMapURL = new URL(sourceMapAt, sourceURL).toString();
      const sourceMap = await fetchFileWithCaching(sourceMapURL).catch(() => null);

      if (sourceMap != null) {
        try {
          const parsedSourceMap = JSON.parse(sourceMap);
          const consumer = SourceMapConsumer(parsedSourceMap);
          const {
            sourceURL: possiblyURL,
            line,
            column
          } = consumer.originalPositionFor({
            lineNumber,
            // 1-based
            columnNumber // 1-based

          });

          if (possiblyURL === null) {
            return null;
          }

          try {
            // sourceMapURL = https://react.dev/script.js.map
            void new URL(possiblyURL); // test if it is a valid URL

            const normalizedURL = normalizeUrl(possiblyURL);
            return {
              sourceURL: normalizedURL,
              line,
              column
            };
          } catch (e) {
            // This is not valid URL
            if ( // sourceMapURL = /file
            possiblyURL.startsWith('/') || // sourceMapURL = C:\\...
            possiblyURL.slice(1).startsWith(':\\\\')) {
              // This is an absolute path
              return {
                sourceURL: possiblyURL,
                line,
                column
              };
            } // This is a relative path
            // possiblyURL = x.js.map, sourceMapURL = https://react.dev/script.js.map


            const absoluteSourcePath = new URL(possiblyURL, sourceMapURL).toString();
            return {
              sourceURL: absoluteSourcePath,
              line,
              column
            };
          }
        } catch (e) {
          return null;
        }
      }

      return null;
    }
  }

  return null;
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/OpenInEditorButton.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */




function checkConditions(editorURL, source) {
  try {
    const url = new URL(editorURL);
    let sourceURL = source.sourceURL; // Check if sourceURL is a correct URL, which has a protocol specified

    if (sourceURL.includes('://')) {
      if (!__IS_INTERNAL_VERSION__) {
        // In this case, we can't really determine the path to a file, disable a button
        return {
          url: null,
          shouldDisableButton: true
        };
      } else {
        const endOfSourceMapURLPattern = '.js/';
        const endOfSourceMapURLIndex = sourceURL.lastIndexOf(endOfSourceMapURLPattern);

        if (endOfSourceMapURLIndex === -1) {
          return {
            url: null,
            shouldDisableButton: true
          };
        } else {
          sourceURL = sourceURL.slice(endOfSourceMapURLIndex + endOfSourceMapURLPattern.length, sourceURL.length);
        }
      }
    }

    const lineNumberAsString = String(source.line);
    url.href = url.href.replace('{path}', sourceURL).replace('{line}', lineNumberAsString).replace('%7Bpath%7D', sourceURL).replace('%7Bline%7D', lineNumberAsString);
    return {
      url,
      shouldDisableButton: false
    };
  } catch (e) {
    // User has provided incorrect editor url
    return {
      url: null,
      shouldDisableButton: true
    };
  }
}

function OpenInEditorButton({
  editorURL,
  source,
  symbolicatedSourcePromise
}) {
  const symbolicatedSource = external_react_namespaceObject.use(symbolicatedSourcePromise);
  const {
    url,
    shouldDisableButton
  } = checkConditions(editorURL, symbolicatedSource ? symbolicatedSource : source);
  return /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    disabled: shouldDisableButton,
    onClick: () => window.open(url),
    title: "Open in editor"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "editor"
  }));
}

/* harmony default export */ const Components_OpenInEditorButton = (OpenInEditorButton);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/ViewElementSourceContext.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

const ViewElementSourceContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
ViewElementSourceContext.displayName = 'ViewElementSourceContext';
/* harmony default export */ const Components_ViewElementSourceContext = (ViewElementSourceContext);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElementViewSourceButton.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





const {
  useCallback,
  useContext: InspectedElementViewSourceButton_useContext
} = external_react_namespaceObject;

function InspectedElementViewSourceButton({
  canViewSource,
  source,
  symbolicatedSourcePromise
}) {
  const {
    canViewElementSourceFunction,
    viewElementSourceFunction
  } = InspectedElementViewSourceButton_useContext(Components_ViewElementSourceContext);
  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Suspense, {
    fallback: /*#__PURE__*/external_react_namespaceObject.createElement(Components_Skeleton, {
      height: 16,
      width: 24
    })
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ActualSourceButton, {
    canViewSource: canViewSource,
    source: source,
    symbolicatedSourcePromise: symbolicatedSourcePromise,
    canViewElementSourceFunction: canViewElementSourceFunction,
    viewElementSourceFunction: viewElementSourceFunction
  }));
}

function ActualSourceButton({
  canViewSource,
  source,
  symbolicatedSourcePromise,
  canViewElementSourceFunction,
  viewElementSourceFunction
}) {
  const symbolicatedSource = symbolicatedSourcePromise == null ? null : external_react_namespaceObject.use(symbolicatedSourcePromise); // In some cases (e.g. FB internal usage) the standalone shell might not be able to view the source.
  // To detect this case, we defer to an injected helper function (if present).

  const buttonIsEnabled = !!canViewSource && viewElementSourceFunction != null && source != null && (canViewElementSourceFunction == null || canViewElementSourceFunction(source, symbolicatedSource));
  const viewSource = useCallback(() => {
    if (viewElementSourceFunction != null && source != null) {
      viewElementSourceFunction(source, symbolicatedSource);
    }
  }, [source, symbolicatedSource]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    disabled: !buttonIsEnabled,
    onClick: viewSource,
    title: "View source for this element"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "view-source"
  }));
}

/* harmony default export */ const Components_InspectedElementViewSourceButton = (InspectedElementViewSourceButton);
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElement.css
var InspectedElement = __webpack_require__(8155);
var InspectedElement_default = /*#__PURE__*/__webpack_require__.n(InspectedElement);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/InspectedElement.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



















// TODO Make edits and deletes also use transition API!
function InspectedElementWrapper(_) {
  const {
    inspectedElementID
  } = (0,external_react_namespaceObject.useContext)(TreeStateContext);
  const bridge = (0,external_react_namespaceObject.useContext)(BridgeContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    hideToggleErrorAction,
    hideToggleSuspenseAction,
    hideLogAction,
    hideViewSourceAction
  } = (0,external_react_namespaceObject.useContext)(OptionsContext);
  const {
    hookNames,
    inspectedElement,
    parseHookNames,
    toggleParseHookNames
  } = (0,external_react_namespaceObject.useContext)(InspectedElementContext);
  const fetchFileWithCaching = (0,external_react_namespaceObject.useContext)(Components_FetchFileWithCachingContext);
  const symbolicatedSourcePromise = external_react_namespaceObject.useMemo(() => {
    if (inspectedElement == null) return null;
    if (fetchFileWithCaching == null) return Promise.resolve(null);
    const {
      source
    } = inspectedElement;
    if (source == null) return Promise.resolve(null);
    const {
      sourceURL,
      line,
      column
    } = source;
    return symbolicateSourceWithCache(fetchFileWithCaching, sourceURL, line, column);
  }, [inspectedElement]);
  const element = inspectedElementID !== null ? store.getElementByID(inspectedElementID) : null;
  const highlightElement = (0,external_react_namespaceObject.useCallback)(() => {
    if (element !== null && inspectedElementID !== null) {
      const rendererID = store.getRendererIDForElement(inspectedElementID);

      if (rendererID !== null) {
        bridge.send('highlightHostInstance', {
          displayName: element.displayName,
          hideAfterTimeout: true,
          id: inspectedElementID,
          openBuiltinElementsPanel: true,
          rendererID,
          scrollIntoView: true
        });
      }
    }
  }, [bridge, element, inspectedElementID, store]);
  const logElement = (0,external_react_namespaceObject.useCallback)(() => {
    if (inspectedElementID !== null) {
      const rendererID = store.getRendererIDForElement(inspectedElementID);

      if (rendererID !== null) {
        bridge.send('logElementToConsole', {
          id: inspectedElementID,
          rendererID
        });
      }
    }
  }, [bridge, inspectedElementID, store]);
  const isErrored = inspectedElement != null && inspectedElement.isErrored;
  const isSuspended = element !== null && element.type === ElementTypeSuspense && inspectedElement != null && inspectedElement.state != null;
  const canToggleError = !hideToggleErrorAction && inspectedElement != null && inspectedElement.canToggleError;
  const canToggleSuspense = !hideToggleSuspenseAction && inspectedElement != null && inspectedElement.canToggleSuspense;
  const editorURL = (0,external_react_namespaceObject.useSyncExternalStore)(function subscribe(callback) {
    window.addEventListener(LOCAL_STORAGE_OPEN_IN_EDITOR_URL, callback);
    return function unsubscribe() {
      window.removeEventListener(LOCAL_STORAGE_OPEN_IN_EDITOR_URL, callback);
    };
  }, function getState() {
    return getOpenInEditorURL();
  });
  const toggleErrored = (0,external_react_namespaceObject.useCallback)(() => {
    if (inspectedElement == null) {
      return;
    }

    const rendererID = store.getRendererIDForElement(inspectedElement.id);

    if (rendererID !== null) {
      // Toggle error.
      // Because triggering an error will always delete the children, we'll
      // automatically select the nearest still mounted instance which will be
      // the error boundary.
      bridge.send('overrideError', {
        id: inspectedElement.id,
        rendererID,
        forceError: !isErrored
      });
    }
  }, [bridge, store, isErrored, inspectedElement]); // TODO (suspense toggle) Would be nice to eventually use a two setState pattern here as well.

  const toggleSuspended = (0,external_react_namespaceObject.useCallback)(() => {
    if (inspectedElement == null) {
      return;
    }

    const rendererID = store.getRendererIDForElement(inspectedElement.id);

    if (rendererID !== null) {
      // Toggle suspended
      // Because suspending or unsuspending always delete the children or fallback,
      // we'll automatically select the nearest still mounted instance which will be
      // the Suspense boundary.
      bridge.send('overrideSuspense', {
        id: inspectedElement.id,
        rendererID,
        forceFallback: !isSuspended
      });
    }
  }, [bridge, store, isSuspended, inspectedElement]);

  if (element === null) {
    return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (InspectedElement_default()).InspectedElement
    }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (InspectedElement_default()).TitleRow
    }));
  }

  let strictModeBadge = null;

  if (element.isStrictModeNonCompliant) {
    strictModeBadge = /*#__PURE__*/external_react_namespaceObject.createElement("a", {
      className: (InspectedElement_default()).StrictModeNonCompliant,
      href: "https://react.dev/reference/react/StrictMode",
      rel: "noopener noreferrer",
      target: "_blank",
      title: "This component is not running in StrictMode. Click to learn more."
    }, /*#__PURE__*/external_react_namespaceObject.createElement(Icon_Icon, {
      type: "strict-mode-non-compliant"
    }));
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElement_default()).InspectedElement
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElement_default()).TitleRow,
    "data-testname": "InspectedElement-Title"
  }, strictModeBadge, element.key && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElement_default()).Key,
    title: `key "${element.key}"`
  }, element.key), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElement_default()).KeyArrow
  })), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElement_default()).SelectedComponentName
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: element.isStrictModeNonCompliant ? `${(InspectedElement_default()).ComponentName} ${(InspectedElement_default()).StrictModeNonCompliantComponentName}` : (InspectedElement_default()).ComponentName,
    title: element.displayName
  }, element.displayName)), !!editorURL && inspectedElement != null && inspectedElement.source != null && symbolicatedSourcePromise != null && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Suspense, {
    fallback: /*#__PURE__*/external_react_namespaceObject.createElement(Components_Skeleton, {
      height: 16,
      width: 24
    })
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Components_OpenInEditorButton, {
    editorURL: editorURL,
    source: inspectedElement.source,
    symbolicatedSourcePromise: symbolicatedSourcePromise
  })), canToggleError && /*#__PURE__*/external_react_namespaceObject.createElement(Toggle_Toggle, {
    isChecked: isErrored,
    onChange: toggleErrored,
    title: isErrored ? 'Clear the forced error' : 'Force the selected component into an errored state'
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "error"
  })), canToggleSuspense && /*#__PURE__*/external_react_namespaceObject.createElement(Toggle_Toggle, {
    isChecked: isSuspended,
    onChange: toggleSuspended,
    title: isSuspended ? 'Unsuspend the selected component' : 'Suspend the selected component'
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "suspend"
  })), store.supportsInspectMatchingDOMElement && /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: highlightElement,
    title: "Inspect the matching DOM element"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "view-dom"
  })), !hideLogAction && /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: logElement,
    title: "Log this component data to the console"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "log-data"
  })), !hideViewSourceAction && /*#__PURE__*/external_react_namespaceObject.createElement(Components_InspectedElementViewSourceButton, {
    canViewSource: inspectedElement?.canViewSource,
    source: inspectedElement?.source,
    symbolicatedSourcePromise: symbolicatedSourcePromise
  })), inspectedElement === null && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (InspectedElement_default()).Loading
  }, "Loading..."), inspectedElement !== null && symbolicatedSourcePromise != null && /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementView_InspectedElementView, {
    key: inspectedElementID
    /* Force reset when selected Element changes */
    ,
    element: element,
    hookNames: hookNames,
    inspectedElement: inspectedElement,
    parseHookNames: parseHookNames,
    toggleParseHookNames: toggleParseHookNames,
    symbolicatedSourcePromise: symbolicatedSourcePromise
  }));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/ModalDialog.css
var ModalDialog = __webpack_require__(3942);
var ModalDialog_default = /*#__PURE__*/__webpack_require__.n(ModalDialog);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ModalDialog.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





const ModalDialogContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
ModalDialogContext.displayName = 'ModalDialogContext';

function ModalDialog_dialogReducer(state, action) {
  switch (action.type) {
    case 'HIDE':
      return {
        dialogs: state.dialogs.filter(dialog => dialog.id !== action.id)
      };

    case 'SHOW':
      return {
        dialogs: [...state.dialogs, {
          canBeDismissed: action.canBeDismissed !== false,
          content: action.content,
          id: action.id,
          title: action.title || null
        }]
      };

    default:
      throw new Error(`Invalid action "${action.type}"`);
  }
}

function ModalDialogContextController({
  children
}) {
  const [state, dispatch] = (0,external_react_namespaceObject.useReducer)(ModalDialog_dialogReducer, {
    dialogs: []
  });
  const value = (0,external_react_namespaceObject.useMemo)(() => ({
    dialogs: state.dialogs,
    dispatch
  }), [state, dispatch]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(ModalDialogContext.Provider, {
    value: value
  }, children);
}

function ModalDialog_ModalDialog(_) {
  const {
    dialogs,
    dispatch
  } = (0,external_react_namespaceObject.useContext)(ModalDialogContext);

  if (dialogs.length === 0) {
    return null;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (ModalDialog_default()).Background
  }, dialogs.map(dialog => /*#__PURE__*/external_react_namespaceObject.createElement(ModalDialogImpl, {
    key: dialog.id,
    canBeDismissed: dialog.canBeDismissed,
    content: dialog.content,
    dispatch: dispatch,
    id: dialog.id,
    title: dialog.title
  })));
}

function ModalDialogImpl({
  canBeDismissed,
  content,
  dispatch,
  id,
  title
}) {
  const dismissModal = (0,external_react_namespaceObject.useCallback)(() => {
    if (canBeDismissed) {
      dispatch({
        type: 'HIDE',
        id
      });
    }
  }, [canBeDismissed, dispatch]);
  const dialogRef = (0,external_react_namespaceObject.useRef)(null); // It's important to trap click events within the dialog,
  // so the dismiss hook will use it for click hit detection.
  // Because multiple tabs may be showing this ModalDialog,
  // the normal `dialog.contains(target)` check would fail on a background tab.

  useModalDismissSignal(dialogRef, dismissModal, false); // Clicks on the dialog should not bubble.
  // This way we can dismiss by listening to clicks on the background.

  const handleDialogClick = event => {
    event.stopPropagation(); // It is important that we don't also prevent default,
    // or clicks within the dialog (e.g. on links) won't work.
  };

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    ref: dialogRef,
    className: (ModalDialog_default()).Dialog,
    onClick: handleDialogClick
  }, title !== null && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (ModalDialog_default()).Title
  }, title), content, canBeDismissed && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (ModalDialog_default()).Buttons
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    autoFocus: true,
    className: (ModalDialog_default()).Button,
    onClick: dismissModal
  }, "Okay")));
}


// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/TabBar.css
var TabBar = __webpack_require__(223);
var TabBar_default = /*#__PURE__*/__webpack_require__.n(TabBar);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/TabBar.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





function TabBar_TabBar({
  currentTab,
  disabled = false,
  id: groupName,
  selectTab,
  tabs,
  type
}) {
  if (!tabs.some(tab => tab !== null && tab.id === currentTab)) {
    const firstTab = tabs.find(tab => tab !== null);
    selectTab(firstTab.id);
  }

  const onChange = (0,external_react_namespaceObject.useCallback)(({
    currentTarget
  }) => selectTab(currentTarget.value), [selectTab]);
  const handleKeyDown = (0,external_react_namespaceObject.useCallback)(event => {
    switch (event.key) {
      case 'ArrowDown':
      case 'ArrowLeft':
      case 'ArrowRight':
      case 'ArrowUp':
        event.stopPropagation();
        break;

      default:
        break;
    }
  }, []);
  let iconSizeClassName;
  let tabLabelClassName;
  let tabSizeClassName;

  switch (type) {
    case 'navigation':
      iconSizeClassName = (TabBar_default()).IconSizeNavigation;
      tabLabelClassName = (TabBar_default()).TabLabelNavigation;
      tabSizeClassName = (TabBar_default()).TabSizeNavigation;
      break;

    case 'profiler':
      iconSizeClassName = (TabBar_default()).IconSizeProfiler;
      tabLabelClassName = (TabBar_default()).TabLabelProfiler;
      tabSizeClassName = (TabBar_default()).TabSizeProfiler;
      break;

    case 'settings':
      iconSizeClassName = (TabBar_default()).IconSizeSettings;
      tabLabelClassName = (TabBar_default()).TabLabelSettings;
      tabSizeClassName = (TabBar_default()).TabSizeSettings;
      break;

    default:
      throw Error(`Unsupported type "${type}"`);
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, tabs.map(tab => {
    if (tab === null) {
      return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        key: "VRule",
        className: (TabBar_default()).VRule
      });
    }

    const {
      icon,
      id,
      label,
      title
    } = tab;
    let button = /*#__PURE__*/external_react_namespaceObject.createElement("label", {
      className: [tabSizeClassName, disabled ? (TabBar_default()).TabDisabled : (TabBar_default()).Tab, !disabled && currentTab === id ? (TabBar_default()).TabCurrent : ''].join(' '),
      "data-testname": `TabBarButton-${id}`,
      key: id,
      onKeyDown: handleKeyDown,
      onMouseDown: () => selectTab(id)
    }, /*#__PURE__*/external_react_namespaceObject.createElement("input", {
      type: "radio",
      className: (TabBar_default()).Input,
      checked: currentTab === id,
      disabled: disabled,
      name: groupName,
      value: id,
      onChange: onChange
    }), /*#__PURE__*/external_react_namespaceObject.createElement(Icon_Icon, {
      className: `${disabled ? (TabBar_default()).IconDisabled : ''} ${iconSizeClassName}`,
      type: icon
    }), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
      className: tabLabelClassName
    }, label));

    if (title) {
      button = /*#__PURE__*/external_react_namespaceObject.createElement(tooltip, {
        key: id,
        label: title
      }, button);
    }

    return button;
  }));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Settings/SettingsShared.css
var SettingsShared = __webpack_require__(1654);
var SettingsShared_default = /*#__PURE__*/__webpack_require__.n(SettingsShared);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Settings/ComponentsSettings.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */













const vscodeFilepath = 'vscode://file/{path}:{line}';
function ComponentsSettings({
  environmentNames
}) {
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    parseHookNames,
    setParseHookNames
  } = (0,external_react_namespaceObject.useContext)(SettingsContext);
  const collapseNodesByDefaultSubscription = (0,external_react_namespaceObject.useMemo)(() => ({
    getCurrentValue: () => store.collapseNodesByDefault,
    subscribe: callback => {
      store.addListener('collapseNodesByDefault', callback);
      return () => store.removeListener('collapseNodesByDefault', callback);
    }
  }), [store]);
  const collapseNodesByDefault = useSubscription(collapseNodesByDefaultSubscription);
  const updateCollapseNodesByDefault = (0,external_react_namespaceObject.useCallback)(({
    currentTarget
  }) => {
    store.collapseNodesByDefault = !currentTarget.checked;
  }, [store]);
  const updateParseHookNames = (0,external_react_namespaceObject.useCallback)(({
    currentTarget
  }) => {
    setParseHookNames(currentTarget.checked);
  }, [setParseHookNames]);
  const [openInEditorURLPreset, setOpenInEditorURLPreset] = useLocalStorage(LOCAL_STORAGE_OPEN_IN_EDITOR_URL_PRESET, 'custom');
  const [openInEditorURL, setOpenInEditorURL] = useLocalStorage(LOCAL_STORAGE_OPEN_IN_EDITOR_URL, getDefaultOpenInEditorURL());
  const [componentFilters, setComponentFilters] = (0,external_react_namespaceObject.useState)(() => [...store.componentFilters]);
  const usedEnvironmentNames = (0,external_react_namespaceObject.use)(environmentNames);
  const resolvedEnvironmentNames = (0,external_react_namespaceObject.useMemo)(() => {
    const set = new Set(usedEnvironmentNames); // If there are other filters already specified but are not currently
    // on the page, we still allow them as options.

    for (let i = 0; i < componentFilters.length; i++) {
      const filter = componentFilters[i];

      if (filter.type === ComponentFilterEnvironmentName) {
        set.add(filter.value);
      }
    } // Client is special and is always available as a default.


    if (set.size > 0) {
      // Only show any options at all if there's any other option already
      // used by a filter or if any environments are used by the page.
      // Note that "Client" can have been added above which would mean
      // that we should show it as an option regardless if it's the only
      // option.
      set.add('Client');
    }

    return Array.from(set).sort();
  }, [usedEnvironmentNames, componentFilters]);
  const addFilter = (0,external_react_namespaceObject.useCallback)(() => {
    setComponentFilters(prevComponentFilters => {
      return [...prevComponentFilters, {
        type: ComponentFilterElementType,
        value: ElementTypeHostComponent,
        isEnabled: true
      }];
    });
  }, []);
  const changeFilterType = (0,external_react_namespaceObject.useCallback)((componentFilter, type) => {
    setComponentFilters(prevComponentFilters => {
      const cloned = [...prevComponentFilters];
      const index = prevComponentFilters.indexOf(componentFilter);

      if (index >= 0) {
        if (type === ComponentFilterElementType) {
          cloned[index] = {
            type: ComponentFilterElementType,
            isEnabled: componentFilter.isEnabled,
            value: ElementTypeHostComponent
          };
        } else if (type === ComponentFilterDisplayName) {
          cloned[index] = {
            type: ComponentFilterDisplayName,
            isEnabled: componentFilter.isEnabled,
            isValid: true,
            value: ''
          };
        } else if (type === ComponentFilterLocation) {
          cloned[index] = {
            type: ComponentFilterLocation,
            isEnabled: componentFilter.isEnabled,
            isValid: true,
            value: ''
          };
        } else if (type === ComponentFilterHOC) {
          cloned[index] = {
            type: ComponentFilterHOC,
            isEnabled: componentFilter.isEnabled,
            isValid: true
          };
        } else if (type === ComponentFilterEnvironmentName) {
          cloned[index] = {
            type: ComponentFilterEnvironmentName,
            isEnabled: componentFilter.isEnabled,
            isValid: true,
            value: 'Client'
          };
        }
      }

      return cloned;
    });
  }, []);
  const updateFilterValueElementType = (0,external_react_namespaceObject.useCallback)((componentFilter, value) => {
    if (componentFilter.type !== ComponentFilterElementType) {
      throw Error('Invalid value for element type filter');
    }

    setComponentFilters(prevComponentFilters => {
      const cloned = [...prevComponentFilters];

      if (componentFilter.type === ComponentFilterElementType) {
        const index = prevComponentFilters.indexOf(componentFilter);

        if (index >= 0) {
          cloned[index] = { ...componentFilter,
            value
          };
        }
      }

      return cloned;
    });
  }, []);
  const updateFilterValueRegExp = (0,external_react_namespaceObject.useCallback)((componentFilter, value) => {
    if (componentFilter.type === ComponentFilterElementType) {
      throw Error('Invalid value for element type filter');
    }

    setComponentFilters(prevComponentFilters => {
      const cloned = [...prevComponentFilters];

      if (componentFilter.type === ComponentFilterDisplayName || componentFilter.type === ComponentFilterLocation) {
        const index = prevComponentFilters.indexOf(componentFilter);

        if (index >= 0) {
          let isValid = true;

          try {
            new RegExp(value); // eslint-disable-line no-new
          } catch (error) {
            isValid = false;
          }

          cloned[index] = { ...componentFilter,
            isValid,
            value
          };
        }
      }

      return cloned;
    });
  }, []);
  const updateFilterValueEnvironmentName = (0,external_react_namespaceObject.useCallback)((componentFilter, value) => {
    if (componentFilter.type !== ComponentFilterEnvironmentName) {
      throw Error('Invalid value for environment name filter');
    }

    setComponentFilters(prevComponentFilters => {
      const cloned = [...prevComponentFilters];

      if (componentFilter.type === ComponentFilterEnvironmentName) {
        const index = prevComponentFilters.indexOf(componentFilter);

        if (index >= 0) {
          cloned[index] = { ...componentFilter,
            value
          };
        }
      }

      return cloned;
    });
  }, []);
  const removeFilter = (0,external_react_namespaceObject.useCallback)(index => {
    setComponentFilters(prevComponentFilters => {
      const cloned = [...prevComponentFilters];
      cloned.splice(index, 1);
      return cloned;
    });
  }, []);

  const removeAllFilter = () => {
    setComponentFilters([]);
  };

  const toggleFilterIsEnabled = (0,external_react_namespaceObject.useCallback)((componentFilter, isEnabled) => {
    setComponentFilters(prevComponentFilters => {
      const cloned = [...prevComponentFilters];
      const index = prevComponentFilters.indexOf(componentFilter);

      if (index >= 0) {
        if (componentFilter.type === ComponentFilterElementType) {
          cloned[index] = { ...cloned[index],
            isEnabled
          };
        } else if (componentFilter.type === ComponentFilterDisplayName || componentFilter.type === ComponentFilterLocation) {
          cloned[index] = { ...cloned[index],
            isEnabled
          };
        } else if (componentFilter.type === ComponentFilterHOC) {
          cloned[index] = { ...cloned[index],
            isEnabled
          };
        } else if (componentFilter.type === ComponentFilterEnvironmentName) {
          cloned[index] = { ...cloned[index],
            isEnabled
          };
        }
      }

      return cloned;
    });
  }, []); // Filter updates are expensive to apply (since they impact the entire tree).
  // Only apply them on unmount.
  // The Store will avoid doing any expensive work unless they've changed.
  // We just want to batch the work in the event that they do change.

  const componentFiltersRef = (0,external_react_namespaceObject.useRef)(componentFilters);
  (0,external_react_namespaceObject.useEffect)(() => {
    componentFiltersRef.current = componentFilters;
    return () => {};
  }, [componentFilters]);
  (0,external_react_namespaceObject.useEffect)(() => () => {
    store.componentFilters = [...componentFiltersRef.current];
  }, [store]);
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Settings
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (SettingsShared_default()).Setting
  }, /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    type: "checkbox",
    checked: !collapseNodesByDefault,
    onChange: updateCollapseNodesByDefault
  }), ' ', "Expand component tree by default"), /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (SettingsShared_default()).Setting
  }, /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    type: "checkbox",
    checked: parseHookNames,
    onChange: updateParseHookNames
  }), ' ', "Always parse hook names from source", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (SettingsShared_default()).Warning
  }, "(may be slow)")), /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (SettingsShared_default()).OpenInURLSetting
  }, "Open in Editor URL:", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("select", {
    className: (SettingsShared_default()).Select,
    value: openInEditorURLPreset,
    onChange: ({
      currentTarget
    }) => {
      const selectedValue = currentTarget.value;
      setOpenInEditorURLPreset(selectedValue);

      if (selectedValue === 'vscode') {
        setOpenInEditorURL(vscodeFilepath);
      } else if (selectedValue === 'custom') {
        setOpenInEditorURL('');
      }
    }
  }, /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: "vscode"
  }, "VS Code"), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: "custom"
  }, "Custom")), openInEditorURLPreset === 'custom' && /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    className: (SettingsShared_default()).Input,
    type: "text",
    placeholder:  false ? 0 : '',
    value: openInEditorURL,
    onChange: event => {
      setOpenInEditorURL(event.target.value);
    }
  })), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Header
  }, "Hide components where..."), /*#__PURE__*/external_react_namespaceObject.createElement("table", {
    className: (SettingsShared_default()).Table
  }, /*#__PURE__*/external_react_namespaceObject.createElement("tbody", null, componentFilters.length === 0 && /*#__PURE__*/external_react_namespaceObject.createElement("tr", {
    className: (SettingsShared_default()).TableRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("td", {
    className: (SettingsShared_default()).NoFiltersCell
  }, "No filters have been added.")), componentFilters.map((componentFilter, index) => /*#__PURE__*/external_react_namespaceObject.createElement("tr", {
    className: (SettingsShared_default()).TableRow,
    key: index
  }, /*#__PURE__*/external_react_namespaceObject.createElement("td", {
    className: (SettingsShared_default()).TableCell
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Toggle_Toggle, {
    className: componentFilter.isValid !== false ? '' : (SettingsShared_default()).InvalidRegExp,
    isChecked: componentFilter.isEnabled,
    onChange: isEnabled => toggleFilterIsEnabled(componentFilter, isEnabled),
    title: componentFilter.isValid === false ? 'Filter invalid' : componentFilter.isEnabled ? 'Filter enabled' : 'Filter disabled'
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ToggleIcon, {
    isEnabled: componentFilter.isEnabled,
    isValid: componentFilter.isValid == null || componentFilter.isValid === true
  }))), /*#__PURE__*/external_react_namespaceObject.createElement("td", {
    className: (SettingsShared_default()).TableCell
  }, /*#__PURE__*/external_react_namespaceObject.createElement("select", {
    className: (SettingsShared_default()).Select,
    value: componentFilter.type,
    onChange: ({
      currentTarget
    }) => changeFilterType(componentFilter, parseInt(currentTarget.value, 10))
  }, /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ComponentFilterDisplayName
  }, "name"), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ComponentFilterElementType
  }, "type"), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ComponentFilterHOC
  }, "hoc"), resolvedEnvironmentNames.length > 0 && /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ComponentFilterEnvironmentName
  }, "environment"))), /*#__PURE__*/external_react_namespaceObject.createElement("td", {
    className: (SettingsShared_default()).TableCell
  }, (componentFilter.type === ComponentFilterElementType || componentFilter.type === ComponentFilterEnvironmentName) && 'equals', (componentFilter.type === ComponentFilterLocation || componentFilter.type === ComponentFilterDisplayName) && 'matches'), /*#__PURE__*/external_react_namespaceObject.createElement("td", {
    className: (SettingsShared_default()).TableCell
  }, componentFilter.type === ComponentFilterElementType && /*#__PURE__*/external_react_namespaceObject.createElement("select", {
    className: (SettingsShared_default()).Select,
    value: componentFilter.value,
    onChange: ({
      currentTarget
    }) => updateFilterValueElementType(componentFilter, parseInt(currentTarget.value, 10))
  }, isInternalFacebookBuild && /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ElementTypeActivity
  }, "activity"), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ElementTypeClass
  }, "class"), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ElementTypeContext
  }, "context"), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ElementTypeFunction
  }, "function"), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ElementTypeForwardRef
  }, "forward ref"), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ElementTypeHostComponent
  },  false ? 0 : 'dom nodes (e.g. <div>)'), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ElementTypeMemo
  }, "memo"), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ElementTypeOtherOrUnknown
  }, "other"), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ElementTypeProfiler
  }, "profiler"), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ElementTypeSuspense
  }, "suspense"), isInternalFacebookBuild && /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: ElementTypeViewTransition
  }, "view transition")), (componentFilter.type === ComponentFilterLocation || componentFilter.type === ComponentFilterDisplayName) && /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    className: (SettingsShared_default()).Input,
    type: "text",
    placeholder: "Regular expression",
    onChange: ({
      currentTarget
    }) => updateFilterValueRegExp(componentFilter, currentTarget.value),
    value: componentFilter.value
  }), componentFilter.type === ComponentFilterEnvironmentName && /*#__PURE__*/external_react_namespaceObject.createElement("select", {
    className: (SettingsShared_default()).Select,
    value: componentFilter.value,
    onChange: ({
      currentTarget
    }) => updateFilterValueEnvironmentName(componentFilter, currentTarget.value)
  }, resolvedEnvironmentNames.map(name => /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    key: name,
    value: name
  }, name)))), /*#__PURE__*/external_react_namespaceObject.createElement("td", {
    className: (SettingsShared_default()).TableCell
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: () => removeFilter(index),
    title: "Delete filter"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "delete"
  }))))))), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: addFilter,
    title: "Add filter"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    className: (SettingsShared_default()).ButtonIcon,
    type: "add"
  }), "Add filter"), componentFilters.length > 0 && /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: removeAllFilter,
    title: "Delete all filters"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    className: (SettingsShared_default()).ButtonIcon,
    type: "delete"
  }), "Delete all filters"));
}

function ToggleIcon({
  isEnabled,
  isValid
}) {
  let className;

  if (isValid) {
    className = isEnabled ? (SettingsShared_default()).ToggleOn : (SettingsShared_default()).ToggleOff;
  } else {
    className = isEnabled ? (SettingsShared_default()).ToggleOnInvalid : (SettingsShared_default()).ToggleOffInvalid;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: className
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: isEnabled ? (SettingsShared_default()).ToggleInsideOn : (SettingsShared_default()).ToggleInsideOff
  }));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Settings/DebuggingSettings.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



function DebuggingSettings({
  hookSettings,
  store
}) {
  const usedHookSettings = (0,external_react_namespaceObject.use)(hookSettings);
  const [appendComponentStack, setAppendComponentStack] = (0,external_react_namespaceObject.useState)(usedHookSettings.appendComponentStack);
  const [breakOnConsoleErrors, setBreakOnConsoleErrors] = (0,external_react_namespaceObject.useState)(usedHookSettings.breakOnConsoleErrors);
  const [hideConsoleLogsInStrictMode, setHideConsoleLogsInStrictMode] = (0,external_react_namespaceObject.useState)(usedHookSettings.hideConsoleLogsInStrictMode);
  const [showInlineWarningsAndErrors, setShowInlineWarningsAndErrors] = (0,external_react_namespaceObject.useState)(usedHookSettings.showInlineWarningsAndErrors);
  (0,external_react_namespaceObject.useEffect)(() => {
    store.setShouldShowWarningsAndErrors(showInlineWarningsAndErrors);
  }, [showInlineWarningsAndErrors]);
  (0,external_react_namespaceObject.useEffect)(() => {
    store.updateHookSettings({
      appendComponentStack,
      breakOnConsoleErrors,
      showInlineWarningsAndErrors,
      hideConsoleLogsInStrictMode
    });
  }, [store, appendComponentStack, breakOnConsoleErrors, showInlineWarningsAndErrors, hideConsoleLogsInStrictMode]);
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Settings
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Setting
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", null, /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    type: "checkbox",
    checked: appendComponentStack,
    onChange: ({
      currentTarget
    }) => setAppendComponentStack(currentTarget.checked)
  }), ' ', "Append component stacks to console warnings and errors.")), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Setting
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", null, /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    type: "checkbox",
    checked: showInlineWarningsAndErrors,
    onChange: ({
      currentTarget
    }) => setShowInlineWarningsAndErrors(currentTarget.checked)
  }), ' ', "Show inline warnings and errors.")), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Setting
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", null, /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    type: "checkbox",
    checked: breakOnConsoleErrors,
    onChange: ({
      currentTarget
    }) => setBreakOnConsoleErrors(currentTarget.checked)
  }), ' ', "Break on warnings")), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Setting
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", null, /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    type: "checkbox",
    checked: hideConsoleLogsInStrictMode,
    onChange: ({
      currentTarget
    }) => setHideConsoleLogsInStrictMode(currentTarget.checked)
  }), ' ', "Hide logs during additional invocations in", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("a", {
    className: (SettingsShared_default()).StrictModeLink,
    target: "_blank",
    rel: "noopener noreferrer",
    href: "https://react.dev/reference/react/StrictMode"
  }, "Strict Mode"))));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Settings/GeneralSettings.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */








function getChangeLogUrl(version) {
  if (!version) {
    return null;
  } // Version numbers are in the format of: <major>.<minor>.<patch>-<sha>
  // e.g. "4.23.0-f0dd459e0"
  // GitHub CHANGELOG headers are in the format of: <major>.<minor>.<patch>
  // but the "." are stripped from anchor tags, becomming: <major><minor><patch>


  const versionAnchor = version.replace(/^(\d+)\.(\d+)\.(\d+).*/, '$1$2$3');
  return `${CHANGE_LOG_URL}#${versionAnchor}`;
}

function GeneralSettings(_) {
  const {
    displayDensity,
    setDisplayDensity,
    setTheme,
    setTraceUpdatesEnabled,
    theme,
    traceUpdatesEnabled
  } = (0,external_react_namespaceObject.useContext)(SettingsContext);
  const {
    backendVersion,
    supportsTraceUpdates
  } = (0,external_react_namespaceObject.useContext)(StoreContext);
  const frontendVersion = "6.1.1-3366146796";
  const showBackendVersion = backendVersion && backendVersion !== frontendVersion;
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Settings
  }, isInternalFacebookBuild && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Setting
  }, "This is an internal build of React DevTools for Meta"), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Setting
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).RadioLabel
  }, "Theme"), /*#__PURE__*/external_react_namespaceObject.createElement("select", {
    className: (SettingsShared_default()).Select,
    value: theme,
    onChange: ({
      currentTarget
    }) => setTheme(currentTarget.value)
  }, /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: "auto"
  }, "Auto"), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: "light"
  }, "Light"), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: "dark"
  }, "Dark"))), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Setting
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).RadioLabel
  }, "Display density"), /*#__PURE__*/external_react_namespaceObject.createElement("select", {
    className: (SettingsShared_default()).Select,
    value: displayDensity,
    onChange: ({
      currentTarget
    }) => setDisplayDensity(currentTarget.value)
  }, /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: "compact"
  }, "Compact"), /*#__PURE__*/external_react_namespaceObject.createElement("option", {
    value: "comfortable"
  }, "Comfortable"))), supportsTraceUpdates && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Setting
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", null, /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    type: "checkbox",
    checked: traceUpdatesEnabled,
    onChange: ({
      currentTarget
    }) => setTraceUpdatesEnabled(currentTarget.checked)
  }), ' ', "Highlight updates when components render.")), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).ReleaseNotes
  }, showBackendVersion && /*#__PURE__*/external_react_namespaceObject.createElement("div", null, /*#__PURE__*/external_react_namespaceObject.createElement("ul", {
    className: (SettingsShared_default()).VersionsList
  }, /*#__PURE__*/external_react_namespaceObject.createElement("li", null, /*#__PURE__*/external_react_namespaceObject.createElement(Version, {
    label: "DevTools backend version:",
    version: backendVersion
  })), /*#__PURE__*/external_react_namespaceObject.createElement("li", null, /*#__PURE__*/external_react_namespaceObject.createElement(Version, {
    label: "DevTools frontend version:",
    version: frontendVersion
  })))), !showBackendVersion && /*#__PURE__*/external_react_namespaceObject.createElement(Version, {
    label: "DevTools version:",
    version: frontendVersion
  })));
}

function Version({
  label,
  version
}) {
  const changelogLink = (0,external_react_namespaceObject.useMemo)(() => {
    return getChangeLogUrl(version);
  }, [version]);

  if (version == null) {
    return null;
  } else {
    return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, label, ' ', /*#__PURE__*/external_react_namespaceObject.createElement("a", {
      className: (SettingsShared_default()).ReleaseNotesLink,
      target: "_blank",
      rel: "noopener noreferrer",
      href: changelogLink
    }, version));
  }
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/ProfilerContext.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






const ProfilerContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
ProfilerContext.displayName = 'ProfilerContext';

function ProfilerContextController({
  children
}) {
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    inspectedElementID
  } = (0,external_react_namespaceObject.useContext)(TreeStateContext);
  const dispatch = (0,external_react_namespaceObject.useContext)(TreeDispatcherContext);
  const {
    profilerStore
  } = store;
  const subscription = (0,external_react_namespaceObject.useMemo)(() => ({
    getCurrentValue: () => ({
      didRecordCommits: profilerStore.didRecordCommits,
      isProcessingData: profilerStore.isProcessingData,
      isProfiling: profilerStore.isProfilingBasedOnUserInput,
      profilingData: profilerStore.profilingData,
      supportsProfiling: store.rootSupportsBasicProfiling
    }),
    subscribe: callback => {
      profilerStore.addListener('profilingData', callback);
      profilerStore.addListener('isProcessingData', callback);
      profilerStore.addListener('isProfiling', callback);
      store.addListener('rootSupportsBasicProfiling', callback);
      return () => {
        profilerStore.removeListener('profilingData', callback);
        profilerStore.removeListener('isProcessingData', callback);
        profilerStore.removeListener('isProfiling', callback);
        store.removeListener('rootSupportsBasicProfiling', callback);
      };
    }
  }), [profilerStore, store]);
  const {
    didRecordCommits,
    isProcessingData,
    isProfiling,
    profilingData,
    supportsProfiling
  } = useSubscription(subscription);
  const [prevProfilingData, setPrevProfilingData] = (0,external_react_namespaceObject.useState)(null);
  const [rootID, setRootID] = (0,external_react_namespaceObject.useState)(null);
  const [selectedFiberID, selectFiberID] = (0,external_react_namespaceObject.useState)(null);
  const [selectedFiberName, selectFiberName] = (0,external_react_namespaceObject.useState)(null);
  const selectFiber = (0,external_react_namespaceObject.useCallback)((id, name) => {
    selectFiberID(id);
    selectFiberName(name); // Sync selection to the Components tab for convenience.
    // Keep in mind that profiling data may be from a previous session.
    // If data has been imported, we should skip the selection sync.

    if (id !== null && profilingData !== null && profilingData.imported === false) {
      // We should still check to see if this element is still in the store.
      // It may have been removed during profiling.
      if (store.containsElement(id)) {
        dispatch({
          type: 'SELECT_ELEMENT_BY_ID',
          payload: id
        });
      }
    }
  }, [dispatch, selectFiberID, selectFiberName, store, profilingData]);
  const setRootIDAndClearFiber = (0,external_react_namespaceObject.useCallback)(id => {
    selectFiber(null, null);
    setRootID(id);
  }, [setRootID, selectFiber]);

  if (prevProfilingData !== profilingData) {
    setPrevProfilingData(profilingData);
    const dataForRoots = profilingData !== null ? profilingData.dataForRoots : null;

    if (dataForRoots != null) {
      const firstRootID = dataForRoots.keys().next().value || null;

      if (rootID === null || !dataForRoots.has(rootID)) {
        let selectedElementRootID = null;

        if (inspectedElementID !== null) {
          selectedElementRootID = store.getRootIDForElement(inspectedElementID);
        }

        if (selectedElementRootID !== null && dataForRoots.has(selectedElementRootID)) {
          setRootIDAndClearFiber(selectedElementRootID);
        } else {
          setRootIDAndClearFiber(firstRootID);
        }
      }
    }
  }

  const [isCommitFilterEnabled, setIsCommitFilterEnabled] = useLocalStorage('React::DevTools::isCommitFilterEnabled', false);
  const [minCommitDuration, setMinCommitDuration] = useLocalStorage('minCommitDuration', 0);
  const [selectedCommitIndex, selectCommitIndex] = (0,external_react_namespaceObject.useState)(null);
  const [selectedTabID, selectTab] = useLocalStorage('React::DevTools::Profiler::defaultTab', 'flame-chart', value => {
    logEvent({
      event_name: 'profiler-tab-changed',
      metadata: {
        tabId: value
      }
    });
  });
  const startProfiling = (0,external_react_namespaceObject.useCallback)(() => {
    logEvent({
      event_name: 'profiling-start',
      metadata: {
        current_tab: selectedTabID
      }
    });
    store.profilerStore.startProfiling();
  }, [store, selectedTabID]);
  const stopProfiling = (0,external_react_namespaceObject.useCallback)(() => store.profilerStore.stopProfiling(), [store]);

  if (isProfiling) {
    if (selectedCommitIndex !== null) {
      selectCommitIndex(null);
    }

    if (selectedFiberID !== null) {
      selectFiberID(null);
      selectFiberName(null);
    }
  }

  const value = (0,external_react_namespaceObject.useMemo)(() => ({
    selectedTabID,
    selectTab,
    didRecordCommits,
    isProcessingData,
    isProfiling,
    profilingData,
    startProfiling,
    stopProfiling,
    supportsProfiling,
    rootID,
    setRootID: setRootIDAndClearFiber,
    isCommitFilterEnabled,
    setIsCommitFilterEnabled,
    minCommitDuration,
    setMinCommitDuration,
    selectedCommitIndex,
    selectCommitIndex,
    selectedFiberID,
    selectedFiberName,
    selectFiber
  }), [selectedTabID, selectTab, didRecordCommits, isProcessingData, isProfiling, profilingData, startProfiling, stopProfiling, supportsProfiling, rootID, setRootID, setRootIDAndClearFiber, isCommitFilterEnabled, setIsCommitFilterEnabled, minCommitDuration, setMinCommitDuration, selectedCommitIndex, selectCommitIndex, selectedFiberID, selectedFiberName, selectFiber]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(ProfilerContext.Provider, {
    value: value
  }, children);
}


;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Settings/ProfilerSettings.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






function ProfilerSettings(_) {
  const {
    isCommitFilterEnabled,
    minCommitDuration,
    setIsCommitFilterEnabled,
    setMinCommitDuration
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const recordChangeDescriptionsSubscription = (0,external_react_namespaceObject.useMemo)(() => ({
    getCurrentValue: () => store.recordChangeDescriptions,
    subscribe: callback => {
      store.addListener('recordChangeDescriptions', callback);
      return () => store.removeListener('recordChangeDescriptions', callback);
    }
  }), [store]);
  const recordChangeDescriptions = useSubscription(recordChangeDescriptionsSubscription);
  const updateRecordChangeDescriptions = (0,external_react_namespaceObject.useCallback)(({
    currentTarget
  }) => {
    store.recordChangeDescriptions = currentTarget.checked;
  }, [store]);
  const updateMinCommitDuration = (0,external_react_namespaceObject.useCallback)(event => {
    const newValue = parseFloat(event.currentTarget.value);
    setMinCommitDuration(Number.isNaN(newValue) || newValue <= 0 ? 0 : newValue);
  }, [setMinCommitDuration]);
  const updateIsCommitFilterEnabled = (0,external_react_namespaceObject.useCallback)(event => {
    const checked = event.currentTarget.checked;
    setIsCommitFilterEnabled(checked);

    if (checked) {
      if (minCommitDurationInputRef.current !== null) {
        minCommitDurationInputRef.current.focus();
      }
    }
  }, [setIsCommitFilterEnabled]);
  const minCommitDurationInputRef = (0,external_react_namespaceObject.useRef)(null);
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Settings
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Setting
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", null, /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    type: "checkbox",
    checked: recordChangeDescriptions,
    onChange: updateRecordChangeDescriptions
  }), ' ', "Record why each component rendered while profiling.")), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsShared_default()).Setting
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", null, /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    checked: isCommitFilterEnabled,
    onChange: updateIsCommitFilterEnabled,
    type: "checkbox"
  }), ' ', "Hide commits below"), ' ', /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    className: (SettingsShared_default()).Input,
    onChange: updateMinCommitDuration,
    ref: minCommitDurationInputRef,
    type: "number",
    value: minCommitDuration
  }), ' ', "(ms)"));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Settings/SettingsModal.css
var SettingsModal = __webpack_require__(8272);
var SettingsModal_default = /*#__PURE__*/__webpack_require__.n(SettingsModal);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Settings/SettingsModal.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */













function SettingsModal_SettingsModal() {
  const {
    isModalShowing,
    setIsModalShowing
  } = (0,external_react_namespaceObject.useContext)(SettingsModalContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    profilerStore
  } = store; // Updating preferences while profiling is in progress could break things (e.g. filtering)
  // Explicitly disallow it for now.

  const isProfilingSubscription = (0,external_react_namespaceObject.useMemo)(() => ({
    getCurrentValue: () => profilerStore.isProfilingBasedOnUserInput,
    subscribe: callback => {
      profilerStore.addListener('isProfiling', callback);
      return () => profilerStore.removeListener('isProfiling', callback);
    }
  }), [profilerStore]);
  const isProfiling = useSubscription(isProfilingSubscription);

  if (isProfiling && isModalShowing) {
    setIsModalShowing(false);
  }

  if (!isModalShowing) {
    return null;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(SettingsModalImpl, {
    store: store
  });
}

function SettingsModalImpl({
  store
}) {
  const {
    setIsModalShowing,
    environmentNames,
    hookSettings
  } = (0,external_react_namespaceObject.useContext)(SettingsModalContext);
  const dismissModal = (0,external_react_namespaceObject.useCallback)(() => setIsModalShowing(false), [setIsModalShowing]);
  const [selectedTabID, selectTab] = useLocalStorage('React::DevTools::selectedSettingsTabID', 'general');
  const modalRef = (0,external_react_namespaceObject.useRef)(null);
  useModalDismissSignal(modalRef, dismissModal);
  (0,external_react_namespaceObject.useEffect)(() => {
    if (modalRef.current !== null) {
      modalRef.current.focus();
    }
  }, [modalRef]);
  let view = null;

  switch (selectedTabID) {
    case 'components':
      view = /*#__PURE__*/external_react_namespaceObject.createElement(ComponentsSettings, {
        environmentNames: environmentNames
      });
      break;

    case 'debugging':
      view = /*#__PURE__*/external_react_namespaceObject.createElement(DebuggingSettings, {
        hookSettings: hookSettings,
        store: store
      });
      break;

    case 'general':
      view = /*#__PURE__*/external_react_namespaceObject.createElement(GeneralSettings, null);
      break;

    case 'profiler':
      view = /*#__PURE__*/external_react_namespaceObject.createElement(ProfilerSettings, null);
      break;

    default:
      break;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsModal_default()).Background
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsModal_default()).Modal,
    ref: modalRef
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsModal_default()).Tabs
  }, /*#__PURE__*/external_react_namespaceObject.createElement(TabBar_TabBar, {
    currentTab: selectedTabID,
    id: "Settings",
    selectTab: selectTab,
    tabs: tabs,
    type: "settings"
  }), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsModal_default()).Spacer
  }), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: dismissModal,
    title: "Close settings dialog"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "close"
  }))), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SettingsModal_default()).Content
  }, view)));
}

const tabs = [{
  id: 'general',
  icon: 'settings',
  label: 'General'
}, {
  id: 'debugging',
  icon: 'bug',
  label: 'Debugging'
}, {
  id: 'components',
  icon: 'components',
  label: 'Components'
}, {
  id: 'profiler',
  icon: 'profiler',
  label: 'Profiler'
}];
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Components/Components.css
var Components = __webpack_require__(3975);
var Components_default = /*#__PURE__*/__webpack_require__.n(Components);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Components/Components.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */















function Components_Components(_) {
  const wrapperElementRef = (0,external_react_namespaceObject.useRef)(null);
  const resizeElementRef = (0,external_react_namespaceObject.useRef)(null);
  const [state, dispatch] = (0,external_react_namespaceObject.useReducer)(resizeReducer, null, initResizeState);
  const {
    horizontalPercentage,
    verticalPercentage
  } = state;
  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    const resizeElement = resizeElementRef.current;
    setResizeCSSVariable(resizeElement, 'horizontal', horizontalPercentage * 100);
    setResizeCSSVariable(resizeElement, 'vertical', verticalPercentage * 100);
  }, []);
  (0,external_react_namespaceObject.useEffect)(() => {
    const timeoutID = setTimeout(() => {
      localStorageSetItem(LOCAL_STORAGE_KEY, JSON.stringify({
        horizontalPercentage,
        verticalPercentage
      }));
    }, 500);
    return () => clearTimeout(timeoutID);
  }, [horizontalPercentage, verticalPercentage]);
  const {
    isResizing
  } = state;

  const onResizeStart = () => dispatch({
    type: 'ACTION_SET_IS_RESIZING',
    payload: true
  });

  let onResize;
  let onResizeEnd;

  if (isResizing) {
    onResizeEnd = () => dispatch({
      type: 'ACTION_SET_IS_RESIZING',
      payload: false
    }); // $FlowFixMe[missing-local-annot]


    onResize = event => {
      const resizeElement = resizeElementRef.current;
      const wrapperElement = wrapperElementRef.current;

      if (!isResizing || wrapperElement === null || resizeElement === null) {
        return;
      }

      event.preventDefault();
      const orientation = getOrientation(wrapperElement);
      const {
        height,
        width,
        left,
        top
      } = wrapperElement.getBoundingClientRect();
      const currentMousePosition = orientation === 'horizontal' ? event.clientX - left : event.clientY - top;
      const boundaryMin = MINIMUM_SIZE;
      const boundaryMax = orientation === 'horizontal' ? width - MINIMUM_SIZE : height - MINIMUM_SIZE;
      const isMousePositionInBounds = currentMousePosition > boundaryMin && currentMousePosition < boundaryMax;

      if (isMousePositionInBounds) {
        const resizedElementDimension = orientation === 'horizontal' ? width : height;
        const actionType = orientation === 'horizontal' ? 'ACTION_SET_HORIZONTAL_PERCENTAGE' : 'ACTION_SET_VERTICAL_PERCENTAGE';
        const percentage = currentMousePosition / resizedElementDimension * 100;
        setResizeCSSVariable(resizeElement, orientation, percentage);
        dispatch({
          type: actionType,
          payload: currentMousePosition / resizedElementDimension
        });
      }
    };
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(SettingsModalContextController, null, /*#__PURE__*/external_react_namespaceObject.createElement(OwnersListContextController, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    ref: wrapperElementRef,
    className: (Components_default()).Components,
    onMouseMove: onResize,
    onMouseLeave: onResizeEnd,
    onMouseUp: onResizeEnd
  }, /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    ref: resizeElementRef,
    className: (Components_default()).TreeWrapper
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Tree_Tree, null)), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Components_default()).ResizeBarWrapper
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    onMouseDown: onResizeStart,
    className: (Components_default()).ResizeBar
  })), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Components_default()).InspectedElementWrapper
  }, /*#__PURE__*/external_react_namespaceObject.createElement(NativeStyleContextController, null, /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementErrorBoundaryWrapper, null, /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementContextController, null, /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementWrapper, null))))), /*#__PURE__*/external_react_namespaceObject.createElement(ModalDialog_ModalDialog, null), /*#__PURE__*/external_react_namespaceObject.createElement(SettingsModal_SettingsModal, null)))));
}

const LOCAL_STORAGE_KEY = 'React::DevTools::createResizeReducer';
const VERTICAL_MODE_MAX_WIDTH = 600;
const MINIMUM_SIZE = 50;

function initResizeState() {
  let horizontalPercentage = 0.65;
  let verticalPercentage = 0.5;

  try {
    let data = localStorageGetItem(LOCAL_STORAGE_KEY);

    if (data != null) {
      data = JSON.parse(data);
      horizontalPercentage = data.horizontalPercentage;
      verticalPercentage = data.verticalPercentage;
    }
  } catch (error) {}

  return {
    horizontalPercentage,
    isResizing: false,
    verticalPercentage
  };
}

function resizeReducer(state, action) {
  switch (action.type) {
    case 'ACTION_SET_IS_RESIZING':
      return { ...state,
        isResizing: action.payload
      };

    case 'ACTION_SET_HORIZONTAL_PERCENTAGE':
      return { ...state,
        horizontalPercentage: action.payload
      };

    case 'ACTION_SET_VERTICAL_PERCENTAGE':
      return { ...state,
        verticalPercentage: action.payload
      };

    default:
      return state;
  }
}

function getOrientation(wrapperElement) {
  if (wrapperElement != null) {
    const {
      width
    } = wrapperElement.getBoundingClientRect();
    return width > VERTICAL_MODE_MAX_WIDTH ? 'horizontal' : 'vertical';
  }

  return null;
}

function setResizeCSSVariable(resizeElement, orientation, percentage) {
  if (resizeElement !== null && orientation !== null) {
    resizeElement.style.setProperty(`--${orientation}-resize-percentage`, `${percentage}%`);
  }
}

/* harmony default export */ const views_Components_Components = (portaledContent(Components_Components));
;// CONCATENATED MODULE: ../react-devtools-timeline/src/TimelineContext.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



const TimelineContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
TimelineContext.displayName = 'TimelineContext';

function TimelineContextController({
  children
}) {
  const searchInputContainerRef = (0,external_react_namespaceObject.useRef)(null);
  const [file, setFile] = (0,external_react_namespaceObject.useState)(null);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const isTimelineSupported = (0,external_react_namespaceObject.useSyncExternalStore)(function subscribe(callback) {
    store.addListener('rootSupportsTimelineProfiling', callback);
    return function unsubscribe() {
      store.removeListener('rootSupportsTimelineProfiling', callback);
    };
  }, function getState() {
    return store.rootSupportsTimelineProfiling;
  });
  const inMemoryTimelineData = (0,external_react_namespaceObject.useSyncExternalStore)(function subscribe(callback) {
    store.profilerStore.addListener('isProcessingData', callback);
    store.profilerStore.addListener('profilingData', callback);
    return function unsubscribe() {
      store.profilerStore.removeListener('isProcessingData', callback);
      store.profilerStore.removeListener('profilingData', callback);
    };
  }, function getState() {
    return store.profilerStore.profilingData?.timelineData || null;
  }); // Recreate view state any time new profiling data is imported.

  const viewState = (0,external_react_namespaceObject.useMemo)(() => {
    const horizontalScrollStateChangeCallbacks = new Set();
    const searchRegExpStateChangeCallbacks = new Set();
    const horizontalScrollState = {
      offset: 0,
      length: 0
    };
    const state = {
      horizontalScrollState,
      onHorizontalScrollStateChange: callback => {
        horizontalScrollStateChangeCallbacks.add(callback);
      },
      onSearchRegExpStateChange: callback => {
        searchRegExpStateChangeCallbacks.add(callback);
      },
      searchRegExp: null,
      updateHorizontalScrollState: scrollState => {
        if (horizontalScrollState.offset === scrollState.offset && horizontalScrollState.length === scrollState.length) {
          return;
        }

        horizontalScrollState.offset = scrollState.offset;
        horizontalScrollState.length = scrollState.length;
        horizontalScrollStateChangeCallbacks.forEach(callback => {
          callback(scrollState);
        });
      },
      updateSearchRegExpState: searchRegExp => {
        state.searchRegExp = searchRegExp;
        searchRegExpStateChangeCallbacks.forEach(callback => {
          callback(searchRegExp);
        });
      },
      viewToMutableViewStateMap: new Map()
    };
    return state;
  }, [file]);
  const [selectedEvent, selectEvent] = (0,external_react_namespaceObject.useState)(null);
  const value = (0,external_react_namespaceObject.useMemo)(() => ({
    file,
    inMemoryTimelineData,
    isTimelineSupported,
    searchInputContainerRef,
    setFile,
    viewState,
    selectEvent,
    selectedEvent
  }), [file, inMemoryTimelineData, isTimelineSupported, setFile, viewState, selectEvent, selectedEvent]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(TimelineContext.Provider, {
    value: value
  }, children);
}


;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/ClearProfilingDataButton.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */







function ClearProfilingDataButton() {
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    didRecordCommits,
    isProfiling
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const {
    file,
    setFile
  } = (0,external_react_namespaceObject.useContext)(TimelineContext);
  const {
    profilerStore
  } = store;
  const doesHaveInMemoryData = didRecordCommits;
  const doesHaveUserTimingData = file !== null;

  const clear = () => {
    if (doesHaveInMemoryData) {
      profilerStore.clear();
    }

    if (doesHaveUserTimingData) {
      setFile(null);
    }
  };

  return /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    disabled: isProfiling || !(doesHaveInMemoryData || doesHaveUserTimingData),
    onClick: clear,
    title: "Clear profiling data"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "clear"
  }));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/NoCommitData.css
var NoCommitData = __webpack_require__(9752);
var NoCommitData_default = /*#__PURE__*/__webpack_require__.n(NoCommitData);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/NoCommitData.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function NoCommitData_NoCommitData(_) {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (NoCommitData_default()).NoCommitData
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (NoCommitData_default()).Header
  }, "There is no data matching the current filter criteria."), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (NoCommitData_default()).FilterMessage
  }, "Try adjusting the commit filter in Profiler settings."));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/constants.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
const barWidthThreshold = 2;
const maxBarWidth = 30;
const minBarWidth = 5;
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/ChartNode.css
var ChartNode = __webpack_require__(6148);
var ChartNode_default = /*#__PURE__*/__webpack_require__.n(ChartNode);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/ChartNode.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


const minWidthToDisplay = 35;
function ChartNode_ChartNode({
  color,
  height,
  isDimmed = false,
  label,
  onClick,
  onMouseEnter,
  onMouseLeave,
  onDoubleClick,
  textStyle,
  width,
  x,
  y
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement("g", {
    className: (ChartNode_default()).Group,
    transform: `translate(${x},${y})`
  }, /*#__PURE__*/external_react_namespaceObject.createElement("rect", {
    width: width,
    height: height,
    fill: color,
    onClick: onClick,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onDoubleClick: onDoubleClick,
    className: (ChartNode_default()).Rect,
    style: {
      opacity: isDimmed ? 0.5 : 1
    }
  }), width >= minWidthToDisplay && /*#__PURE__*/external_react_namespaceObject.createElement("foreignObject", {
    width: width,
    height: height,
    className: (ChartNode_default()).ForeignObject,
    style: {
      paddingLeft: x < 0 ? -x : 0,
      opacity: isDimmed ? 0.75 : 1,
      display: width < minWidthToDisplay ? 'none' : 'block'
    },
    y: 0
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (ChartNode_default()).Div,
    style: textStyle
  }, label)));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/CommitFlamegraphListItem.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */








function CommitFlamegraphListItem({
  data,
  index,
  style
}) {
  const {
    chartData,
    onElementMouseEnter,
    onElementMouseLeave,
    scaleX,
    selectedChartNode,
    selectedChartNodeIndex,
    selectFiber,
    width
  } = data;
  const {
    renderPathNodes,
    maxSelfDuration,
    rows
  } = chartData;
  const {
    lineHeight
  } = (0,external_react_namespaceObject.useContext)(SettingsContext);
  const handleClick = (0,external_react_namespaceObject.useCallback)((event, id, name) => {
    event.stopPropagation();
    selectFiber(id, name);
  }, [selectFiber]);

  const handleMouseEnter = nodeData => {
    const {
      id,
      name
    } = nodeData;
    onElementMouseEnter({
      id,
      name
    });
  };

  const handleMouseLeave = () => {
    onElementMouseLeave();
  }; // List items are absolutely positioned using the CSS "top" attribute.
  // The "left" value will always be 0.
  // Since height is fixed, and width is based on the node's duration,
  // We can ignore those values as well.


  const top = parseInt(style.top, 10);
  const row = rows[index];
  const selectedNodeOffset = scaleX(selectedChartNode !== null ? selectedChartNode.offset : 0, width);
  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, row.map(chartNode => {
    const {
      didRender,
      id,
      label,
      name,
      offset,
      selfDuration,
      treeBaseDuration
    } = chartNode;
    const nodeOffset = scaleX(offset, width);
    const nodeWidth = scaleX(treeBaseDuration, width); // Filter out nodes that are too small to see or click.
    // This also helps render large trees faster.

    if (nodeWidth < barWidthThreshold) {
      return null;
    } // Filter out nodes that are outside of the horizontal window.


    if (nodeOffset + nodeWidth < selectedNodeOffset || nodeOffset > selectedNodeOffset + width) {
      return null;
    }

    let color = 'url(#didNotRenderPattern)';
    let textColor = 'var(--color-commit-did-not-render-pattern-text)';

    if (didRender) {
      color = getGradientColor(selfDuration / maxSelfDuration);
      textColor = 'var(--color-commit-gradient-text)';
    } else if (renderPathNodes.has(id)) {
      color = 'var(--color-commit-did-not-render-fill)';
      textColor = 'var(--color-commit-did-not-render-fill-text)';
    }

    return /*#__PURE__*/external_react_namespaceObject.createElement(ChartNode_ChartNode, {
      color: color,
      height: lineHeight,
      isDimmed: index < selectedChartNodeIndex,
      key: id,
      label: label,
      onClick: event => handleClick(event, id, name),
      onMouseEnter: () => handleMouseEnter(chartNode),
      onMouseLeave: handleMouseLeave,
      textStyle: {
        color: textColor
      },
      width: nodeWidth,
      x: nodeOffset - selectedNodeOffset,
      y: top
    });
  }));
}

/* harmony default export */ const Profiler_CommitFlamegraphListItem = (/*#__PURE__*/(0,external_react_namespaceObject.memo)(CommitFlamegraphListItem, areEqual));
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/WhatChanged.css
var WhatChanged = __webpack_require__(7295);
var WhatChanged_default = /*#__PURE__*/__webpack_require__.n(WhatChanged);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/WhatChanged.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






function hookIndicesToString(indices) {
  // This is debatable but I think 1-based might ake for a nicer UX.
  const numbers = indices.map(value => value + 1);

  switch (numbers.length) {
    case 0:
      return 'No hooks changed';

    case 1:
      return `Hook ${numbers[0]} changed`;

    case 2:
      return `Hooks ${numbers[0]} and ${numbers[1]} changed`;

    default:
      return `Hooks ${numbers.slice(0, numbers.length - 1).join(', ')} and ${numbers[numbers.length - 1]} changed`;
  }
}

function WhatChanged_WhatChanged({
  fiberID
}) {
  const {
    profilerStore
  } = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    rootID,
    selectedCommitIndex
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext); // TRICKY
  // Handle edge case where no commit is selected because of a min-duration filter update.
  // If the commit index is null, suspending for data below would throw an error.
  // TODO (ProfilerContext) This check should not be necessary.

  if (selectedCommitIndex === null) {
    return null;
  }

  const {
    changeDescriptions
  } = profilerStore.getCommitData(rootID, selectedCommitIndex);

  if (changeDescriptions === null) {
    return null;
  }

  const changeDescription = changeDescriptions.get(fiberID);

  if (changeDescription == null) {
    return null;
  }

  const {
    context,
    didHooksChange,
    hooks,
    isFirstMount,
    props,
    state
  } = changeDescription;

  if (isFirstMount) {
    return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (WhatChanged_default()).Component
    }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
      className: (WhatChanged_default()).Label
    }, "Why did this render?"), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (WhatChanged_default()).Item
    }, "This is the first time the component rendered."));
  }

  const changes = [];

  if (context === true) {
    changes.push( /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      key: "context",
      className: (WhatChanged_default()).Item
    }, "\u2022 Context changed"));
  } else if (typeof context === 'object' && context !== null && context.length !== 0) {
    changes.push( /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      key: "context",
      className: (WhatChanged_default()).Item
    }, "\u2022 Context changed:", context.map(key => /*#__PURE__*/external_react_namespaceObject.createElement("span", {
      key: key,
      className: (WhatChanged_default()).Key
    }, key))));
  }

  if (didHooksChange) {
    if (Array.isArray(hooks)) {
      changes.push( /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        key: "hooks",
        className: (WhatChanged_default()).Item
      }, "\u2022 ", hookIndicesToString(hooks)));
    } else {
      changes.push( /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        key: "hooks",
        className: (WhatChanged_default()).Item
      }, "\u2022 Hooks changed"));
    }
  }

  if (props !== null && props.length !== 0) {
    changes.push( /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      key: "props",
      className: (WhatChanged_default()).Item
    }, "\u2022 Props changed:", props.map(key => /*#__PURE__*/external_react_namespaceObject.createElement("span", {
      key: key,
      className: (WhatChanged_default()).Key
    }, key))));
  }

  if (state !== null && state.length !== 0) {
    changes.push( /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      key: "state",
      className: (WhatChanged_default()).Item
    }, "\u2022 State changed:", state.map(key => /*#__PURE__*/external_react_namespaceObject.createElement("span", {
      key: key,
      className: (WhatChanged_default()).Key
    }, key))));
  }

  if (changes.length === 0) {
    changes.push( /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      key: "nothing",
      className: (WhatChanged_default()).Item
    }, "The parent component rendered."));
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", null, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (WhatChanged_default()).Label
  }, "Why did this render?"), changes);
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/HoveredFiberInfo.css
var HoveredFiberInfo = __webpack_require__(36);
var HoveredFiberInfo_default = /*#__PURE__*/__webpack_require__.n(HoveredFiberInfo);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/HoveredFiberInfo.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */








function HoveredFiberInfo_HoveredFiberInfo({
  fiberData
}) {
  const {
    profilerStore
  } = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    rootID,
    selectedCommitIndex
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const {
    id,
    name
  } = fiberData;
  const {
    profilingCache
  } = profilerStore;

  if (rootID === null || selectedCommitIndex === null) {
    return null;
  }

  const commitIndices = profilingCache.getFiberCommits({
    fiberID: id,
    rootID
  });
  const {
    nodes
  } = profilingCache.getCommitTree({
    rootID,
    commitIndex: selectedCommitIndex
  });
  const node = nodes.get(id);
  let renderDurationInfo = null;
  let i = 0;

  for (i = 0; i < commitIndices.length; i++) {
    const commitIndex = commitIndices[i];

    if (selectedCommitIndex === commitIndex) {
      const {
        fiberActualDurations,
        fiberSelfDurations
      } = profilerStore.getCommitData(rootID, commitIndex);
      const actualDuration = fiberActualDurations.get(id) || 0;
      const selfDuration = fiberSelfDurations.get(id) || 0;
      renderDurationInfo = /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        key: commitIndex,
        className: (HoveredFiberInfo_default()).CurrentCommit
      }, /*#__PURE__*/external_react_namespaceObject.createElement("strong", null, "Duration:"), " ", formatDuration(selfDuration), "ms of", ' ', formatDuration(actualDuration), "ms");
      break;
    }
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (HoveredFiberInfo_default()).Toolbar
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (HoveredFiberInfo_default()).Component
  }, name), node != null && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (HoveredFiberInfo_default()).BadgesContainer
  }, /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementBadges_InspectedElementBadges, {
    hocDisplayNames: node.hocDisplayNames,
    compiledWithForget: node.compiledWithForget
  }), node.compiledWithForget && /*#__PURE__*/external_react_namespaceObject.createElement("div", null, "\u2728 This component has been auto-memoized by the React Compiler.")), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (HoveredFiberInfo_default()).Content
  }, renderDurationInfo || /*#__PURE__*/external_react_namespaceObject.createElement("div", null, "Did not client render."), /*#__PURE__*/external_react_namespaceObject.createElement(WhatChanged_WhatChanged, {
    fiberID: id
  }))));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/Tooltip.css
var Profiler_Tooltip = __webpack_require__(9606);
var Profiler_Tooltip_default = /*#__PURE__*/__webpack_require__.n(Profiler_Tooltip);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/Tooltip.js



const initialTooltipState = {
  height: 0,
  mouseX: 0,
  mouseY: 0,
  width: 0
};
function Tooltip_Tooltip({
  children,
  className,
  label,
  style
}) {
  const containerRef = (0,external_react_namespaceObject.useRef)(null);
  const tooltipRef = (0,external_react_namespaceObject.useRef)(null); // update the position of the tooltip based on current mouse position

  const updateTooltipPosition = event => {
    const element = tooltipRef.current;

    if (element != null) {
      // first find the mouse position
      const mousePosition = getMousePosition(containerRef.current, event); // use the mouse position to find the position of tooltip

      const {
        left,
        top
      } = getTooltipPosition(element, mousePosition); // update tooltip position

      element.style.left = left;
      element.style.top = top;
    }
  };

  const onMouseMove = event => {
    updateTooltipPosition(event);
  };

  const tooltipClassName = label === null ? (Profiler_Tooltip_default()).hidden : '';
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_Tooltip_default()).Container,
    onMouseMove: onMouseMove,
    ref: containerRef
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: `${(Profiler_Tooltip_default()).Tooltip} ${tooltipClassName} ${className || ''}`,
    ref: tooltipRef,
    style: style
  }, label), children);
}
const TOOLTIP_OFFSET = 5; // Method used to find the position of the tooltip based on current mouse position

function getTooltipPosition(element, mousePosition) {
  const {
    height,
    mouseX,
    mouseY,
    width
  } = mousePosition;
  let top = 0;
  let left = 0;

  if (mouseY + TOOLTIP_OFFSET + element.offsetHeight >= height) {
    if (mouseY - TOOLTIP_OFFSET - element.offsetHeight > 0) {
      top = `${mouseY - element.offsetHeight - TOOLTIP_OFFSET}px`;
    } else {
      top = '0px';
    }
  } else {
    top = `${mouseY + TOOLTIP_OFFSET}px`;
  }

  if (mouseX + TOOLTIP_OFFSET + element.offsetWidth >= width) {
    if (mouseX - TOOLTIP_OFFSET - element.offsetWidth > 0) {
      left = `${mouseX - element.offsetWidth - TOOLTIP_OFFSET}px`;
    } else {
      left = '0px';
    }
  } else {
    left = `${mouseX + TOOLTIP_OFFSET * 2}px`;
  }

  return {
    left,
    top
  };
} // method used to find the current mouse position inside the container


function getMousePosition(relativeContainer, mouseEvent) {
  if (relativeContainer !== null) {
    // Position within the nearest position:relative container.
    let targetContainer = relativeContainer;

    while (targetContainer.parentElement != null) {
      if (targetContainer.style.position === 'relative') {
        break;
      } else {
        targetContainer = targetContainer.parentElement;
      }
    }

    const {
      height,
      left,
      top,
      width
    } = targetContainer.getBoundingClientRect();
    const mouseX = mouseEvent.clientX - left;
    const mouseY = mouseEvent.clientY - top;
    return {
      height,
      mouseX,
      mouseY,
      width
    };
  } else {
    return initialTooltipState;
  }
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/CommitFlamegraph.css
var CommitFlamegraph = __webpack_require__(3541);
var CommitFlamegraph_default = /*#__PURE__*/__webpack_require__.n(CommitFlamegraph);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/CommitFlamegraph.js
function CommitFlamegraph_extends() { CommitFlamegraph_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return CommitFlamegraph_extends.apply(this, arguments); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */














function CommitFlamegraphAutoSizer(_) {
  const {
    profilerStore
  } = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    rootID,
    selectedCommitIndex,
    selectFiber
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const {
    profilingCache
  } = profilerStore;
  const deselectCurrentFiber = (0,external_react_namespaceObject.useCallback)(event => {
    event.stopPropagation();
    selectFiber(null, null);
  }, [selectFiber]);
  let commitTree = null;
  let chartData = null;

  if (selectedCommitIndex !== null) {
    commitTree = profilingCache.getCommitTree({
      commitIndex: selectedCommitIndex,
      rootID: rootID
    });
    chartData = profilingCache.getFlamegraphChartData({
      commitIndex: selectedCommitIndex,
      commitTree,
      rootID: rootID
    });
  }

  if (commitTree != null && chartData != null && chartData.depth > 0) {
    return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (CommitFlamegraph_default()).Container,
      onClick: deselectCurrentFiber
    }, /*#__PURE__*/external_react_namespaceObject.createElement(AutoSizer, null, ({
      height,
      width
    }) =>
    /*#__PURE__*/
    // Force Flow types to avoid checking for `null` here because there's no static proof that
    // by the time this render prop function is called, the values of the `let` variables have not changed.
    external_react_namespaceObject.createElement(CommitFlamegraph_CommitFlamegraph, {
      chartData: chartData,
      commitTree: commitTree,
      height: height,
      width: width
    })));
  } else {
    return /*#__PURE__*/external_react_namespaceObject.createElement(NoCommitData_NoCommitData, null);
  }
}

function CommitFlamegraph_CommitFlamegraph({
  chartData,
  commitTree,
  height,
  width
}) {
  const [hoveredFiberData, setHoveredFiberData] = (0,external_react_namespaceObject.useState)(null);
  const {
    lineHeight
  } = (0,external_react_namespaceObject.useContext)(SettingsContext);
  const {
    selectFiber,
    selectedFiberID
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const {
    highlightHostInstance,
    clearHighlightHostInstance
  } = useHighlightHostInstance();
  const selectedChartNodeIndex = (0,external_react_namespaceObject.useMemo)(() => {
    if (selectedFiberID === null) {
      return 0;
    } // The selected node might not be in the tree for this commit,
    // so it's important that we have a fallback plan.


    const depth = chartData.idToDepthMap.get(selectedFiberID);
    return depth !== undefined ? depth - 1 : 0;
  }, [chartData, selectedFiberID]);
  const selectedChartNode = (0,external_react_namespaceObject.useMemo)(() => {
    if (selectedFiberID !== null) {
      return chartData.rows[selectedChartNodeIndex].find(chartNode => chartNode.id === selectedFiberID) || null;
    }

    return null;
  }, [chartData, selectedFiberID, selectedChartNodeIndex]);
  const handleElementMouseEnter = (0,external_react_namespaceObject.useCallback)(({
    id,
    name
  }) => {
    highlightHostInstance(id); // Highlight last hovered element.

    setHoveredFiberData({
      id,
      name
    }); // Set hovered fiber data for tooltip
  }, [highlightHostInstance]);
  const handleElementMouseLeave = (0,external_react_namespaceObject.useCallback)(() => {
    clearHighlightHostInstance(); // clear highlighting of element on mouse leave

    setHoveredFiberData(null); // clear hovered fiber data for tooltip
  }, [clearHighlightHostInstance]);
  const itemData = (0,external_react_namespaceObject.useMemo)(() => ({
    chartData,
    onElementMouseEnter: handleElementMouseEnter,
    onElementMouseLeave: handleElementMouseLeave,
    scaleX: scale(0, selectedChartNode !== null ? selectedChartNode.treeBaseDuration : chartData.baseDuration, 0, width),
    selectedChartNode,
    selectedChartNodeIndex,
    selectFiber,
    width
  }), [chartData, handleElementMouseEnter, handleElementMouseLeave, selectedChartNode, selectedChartNodeIndex, selectFiber, width]); // Tooltip used to show summary of fiber info on hover

  const tooltipLabel = (0,external_react_namespaceObject.useMemo)(() => hoveredFiberData !== null ? /*#__PURE__*/external_react_namespaceObject.createElement(HoveredFiberInfo_HoveredFiberInfo, {
    fiberData: hoveredFiberData
  }) : null, [hoveredFiberData]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(Tooltip_Tooltip, {
    label: tooltipLabel
  }, /*#__PURE__*/external_react_namespaceObject.createElement(FixedSizeList, {
    height: height,
    innerElementType: CommitFlamegraph_InnerElementType,
    itemCount: chartData.depth,
    itemData: itemData,
    itemSize: lineHeight,
    width: width
  }, Profiler_CommitFlamegraphListItem));
}

const CommitFlamegraph_InnerElementType = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)(({
  children,
  ...rest
}, ref) => /*#__PURE__*/external_react_namespaceObject.createElement("svg", CommitFlamegraph_extends({
  ref: ref
}, rest), /*#__PURE__*/external_react_namespaceObject.createElement("defs", null, /*#__PURE__*/external_react_namespaceObject.createElement("pattern", {
  id: "didNotRenderPattern",
  patternUnits: "userSpaceOnUse",
  width: "4",
  height: "4"
}, /*#__PURE__*/external_react_namespaceObject.createElement("path", {
  d: "M-1,1 l2,-2 M0,4 l4,-4 M3,5 l2,-2",
  className: (CommitFlamegraph_default()).PatternPath
}))), children));
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/CommitRankedListItem.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */








function CommitRankedListItem({
  data,
  index,
  style
}) {
  const {
    chartData,
    onElementMouseEnter,
    onElementMouseLeave,
    scaleX,
    selectedFiberIndex,
    selectFiber,
    width
  } = data;
  const node = chartData.nodes[index];
  const {
    lineHeight
  } = (0,external_react_namespaceObject.useContext)(SettingsContext);
  const handleClick = (0,external_react_namespaceObject.useCallback)(event => {
    event.stopPropagation();
    const {
      id,
      name
    } = node;
    selectFiber(id, name);
  }, [node, selectFiber]);

  const handleMouseEnter = () => {
    const {
      id,
      name
    } = node;
    onElementMouseEnter({
      id,
      name
    });
  };

  const handleMouseLeave = () => {
    onElementMouseLeave();
  }; // List items are absolutely positioned using the CSS "top" attribute.
  // The "left" value will always be 0.
  // Since height is fixed, and width is based on the node's duration,
  // We can ignore those values as well.


  const top = parseInt(style.top, 10);
  return /*#__PURE__*/external_react_namespaceObject.createElement(ChartNode_ChartNode, {
    color: getGradientColor(node.value / chartData.maxValue),
    height: lineHeight,
    isDimmed: index < selectedFiberIndex,
    key: node.id,
    label: node.label,
    onClick: handleClick,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    width: Math.max(minBarWidth, scaleX(node.value, width)),
    x: 0,
    y: top
  });
}

/* harmony default export */ const Profiler_CommitRankedListItem = (/*#__PURE__*/(0,external_react_namespaceObject.memo)(CommitRankedListItem, areEqual));
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/CommitRanked.css
var CommitRanked = __webpack_require__(9363);
var CommitRanked_default = /*#__PURE__*/__webpack_require__.n(CommitRanked);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/CommitRanked.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */














function CommitRankedAutoSizer(_) {
  const {
    profilerStore
  } = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    rootID,
    selectedCommitIndex,
    selectFiber
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const {
    profilingCache
  } = profilerStore;
  const deselectCurrentFiber = (0,external_react_namespaceObject.useCallback)(event => {
    event.stopPropagation();
    selectFiber(null, null);
  }, [selectFiber]);
  let commitTree = null;
  let chartData = null;

  if (selectedCommitIndex !== null) {
    commitTree = profilingCache.getCommitTree({
      commitIndex: selectedCommitIndex,
      rootID: rootID
    });
    chartData = profilingCache.getRankedChartData({
      commitIndex: selectedCommitIndex,
      commitTree,
      rootID: rootID
    });
  }

  if (commitTree != null && chartData != null && chartData.nodes.length > 0) {
    return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (CommitRanked_default()).Container,
      onClick: deselectCurrentFiber
    }, /*#__PURE__*/external_react_namespaceObject.createElement(AutoSizer, null, ({
      height,
      width
    }) => /*#__PURE__*/external_react_namespaceObject.createElement(CommitRanked_CommitRanked, {
      chartData: chartData,
      commitTree: commitTree,
      height: height,
      width: width
    })));
  } else {
    return /*#__PURE__*/external_react_namespaceObject.createElement(NoCommitData_NoCommitData, null);
  }
}

function CommitRanked_CommitRanked({
  chartData,
  commitTree,
  height,
  width
}) {
  const [hoveredFiberData, setHoveredFiberData] = (0,external_react_namespaceObject.useState)(null);
  const {
    lineHeight
  } = (0,external_react_namespaceObject.useContext)(SettingsContext);
  const {
    selectedFiberID,
    selectFiber
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const {
    highlightHostInstance,
    clearHighlightHostInstance
  } = useHighlightHostInstance();
  const selectedFiberIndex = (0,external_react_namespaceObject.useMemo)(() => getNodeIndex(chartData, selectedFiberID), [chartData, selectedFiberID]);
  const handleElementMouseEnter = (0,external_react_namespaceObject.useCallback)(({
    id,
    name
  }) => {
    highlightHostInstance(id); // Highlight last hovered element.

    setHoveredFiberData({
      id,
      name
    }); // Set hovered fiber data for tooltip
  }, [highlightHostInstance]);
  const handleElementMouseLeave = (0,external_react_namespaceObject.useCallback)(() => {
    clearHighlightHostInstance(); // clear highlighting of element on mouse leave

    setHoveredFiberData(null); // clear hovered fiber data for tooltip
  }, [clearHighlightHostInstance]);
  const itemData = (0,external_react_namespaceObject.useMemo)(() => ({
    chartData,
    onElementMouseEnter: handleElementMouseEnter,
    onElementMouseLeave: handleElementMouseLeave,
    scaleX: scale(0, chartData.nodes[selectedFiberIndex].value, 0, width),
    selectedFiberID,
    selectedFiberIndex,
    selectFiber,
    width
  }), [chartData, handleElementMouseEnter, handleElementMouseLeave, selectedFiberID, selectedFiberIndex, selectFiber, width]); // Tooltip used to show summary of fiber info on hover

  const tooltipLabel = (0,external_react_namespaceObject.useMemo)(() => hoveredFiberData !== null ? /*#__PURE__*/external_react_namespaceObject.createElement(HoveredFiberInfo_HoveredFiberInfo, {
    fiberData: hoveredFiberData
  }) : null, [hoveredFiberData]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(Tooltip_Tooltip, {
    label: tooltipLabel
  }, /*#__PURE__*/external_react_namespaceObject.createElement(FixedSizeList, {
    height: height,
    innerElementType: "svg",
    itemCount: chartData.nodes.length,
    itemData: itemData,
    itemSize: lineHeight,
    width: width
  }, Profiler_CommitRankedListItem));
}

const getNodeIndex = (chartData, id) => {
  if (id === null) {
    return 0;
  }

  const {
    nodes
  } = chartData;

  for (let index = 0; index < nodes.length; index++) {
    if (nodes[index].id === id) {
      return index;
    }
  }

  return 0;
};
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/RootSelector.css
var RootSelector = __webpack_require__(699);
var RootSelector_default = /*#__PURE__*/__webpack_require__.n(RootSelector);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/RootSelector.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




function RootSelector_RootSelector(_) {
  const {
    profilingData,
    rootID,
    setRootID
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const options = [];

  if (profilingData !== null) {
    profilingData.dataForRoots.forEach((dataForRoot, id) => {
      options.push( /*#__PURE__*/external_react_namespaceObject.createElement("option", {
        key: id,
        value: id
      }, dataForRoot.displayName));
    });
  }

  const handleChange = (0,external_react_namespaceObject.useCallback)(({
    currentTarget
  }) => {
    setRootID(parseInt(currentTarget.value, 10));
  }, [setRootID]);

  if (profilingData === null || profilingData.dataForRoots.size <= 1) {
    // Don't take up visual space if there's only one root.
    return null;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (RootSelector_default()).Spacer
  }), /*#__PURE__*/external_react_namespaceObject.createElement("select", {
    value: rootID,
    onChange: handleChange
  }, options));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/RecordToggle.css
var RecordToggle = __webpack_require__(2841);
var RecordToggle_default = /*#__PURE__*/__webpack_require__.n(RecordToggle);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/RecordToggle.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






function RecordToggle_RecordToggle({
  disabled
}) {
  const {
    isProfiling,
    startProfiling,
    stopProfiling
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  let className = (RecordToggle_default()).InactiveRecordToggle;

  if (disabled) {
    className = (RecordToggle_default()).DisabledRecordToggle;
  } else if (isProfiling) {
    className = (RecordToggle_default()).ActiveRecordToggle;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    className: className,
    disabled: disabled,
    onClick: isProfiling ? stopProfiling : startProfiling,
    testName: "ProfilerToggleButton",
    title: isProfiling ? 'Stop profiling' : 'Start profiling'
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "record"
  }));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/Profiler.css
var Profiler = __webpack_require__(7852);
var Profiler_default = /*#__PURE__*/__webpack_require__.n(Profiler);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/NoProfilingData.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



function NoProfilingData() {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Column
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Header
  }, "No profiling data has been recorded."), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Row
  }, "Click the record button ", /*#__PURE__*/external_react_namespaceObject.createElement(RecordToggle_RecordToggle, null), " to start recording."), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: `${(Profiler_default()).Row} ${(Profiler_default()).LearnMoreRow}`
  }, "Click", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("a", {
    className: (Profiler_default()).LearnMoreLink,
    href: "https://fb.me/react-devtools-profiling",
    rel: "noopener noreferrer",
    target: "_blank"
  }, "here"), ' ', "to learn more about profiling."));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/RecordingInProgress.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



function RecordingInProgress() {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Column
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Header
  }, "Profiling is in progress..."), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Row
  }, "Click the record button ", /*#__PURE__*/external_react_namespaceObject.createElement(RecordToggle_RecordToggle, null), " to stop recording."));
}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/constants.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
const DPR = window.devicePixelRatio || 1;
const LABEL_SIZE = 80;
const MARKER_HEIGHT = 20;
const MARKER_TICK_HEIGHT = 8;
const FONT_SIZE = 10;
const MARKER_TEXT_PADDING = 8;
const COLOR_HOVER_DIM_DELTA = 5;
const TOP_ROW_PADDING = 4;
const NATIVE_EVENT_HEIGHT = 14;
const SUSPENSE_EVENT_HEIGHT = 14;
const PENDING_SUSPENSE_EVENT_SIZE = 8;
const REACT_EVENT_DIAMETER = 6;
const USER_TIMING_MARK_SIZE = 8;
const REACT_MEASURE_HEIGHT = 14;
const BORDER_SIZE = 1 / DPR;
const FLAMECHART_FRAME_HEIGHT = 14;
const TEXT_PADDING = 3;
const SNAPSHOT_SCRUBBER_SIZE = 3;
const INTERVAL_TIMES = [1, 2, 5, 10, 20, 50, 100, 200, 500, 1000, 2000, 5000];
const MIN_INTERVAL_SIZE_PX = 70; // TODO Replace this with "export let" vars

let COLORS = {
  BACKGROUND: '',
  INTERNAL_MODULE_FRAME: '',
  INTERNAL_MODULE_FRAME_HOVER: '',
  INTERNAL_MODULE_FRAME_TEXT: '',
  NATIVE_EVENT: '',
  NATIVE_EVENT_HOVER: '',
  NETWORK_PRIMARY: '',
  NETWORK_PRIMARY_HOVER: '',
  NETWORK_SECONDARY: '',
  NETWORK_SECONDARY_HOVER: '',
  PRIORITY_BACKGROUND: '',
  PRIORITY_BORDER: '',
  PRIORITY_LABEL: '',
  USER_TIMING: '',
  USER_TIMING_HOVER: '',
  REACT_IDLE: '',
  REACT_IDLE_HOVER: '',
  REACT_RENDER: '',
  REACT_RENDER_HOVER: '',
  REACT_RENDER_TEXT: '',
  REACT_COMMIT: '',
  REACT_COMMIT_HOVER: '',
  REACT_COMMIT_TEXT: '',
  REACT_LAYOUT_EFFECTS: '',
  REACT_LAYOUT_EFFECTS_HOVER: '',
  REACT_LAYOUT_EFFECTS_TEXT: '',
  REACT_PASSIVE_EFFECTS: '',
  REACT_PASSIVE_EFFECTS_HOVER: '',
  REACT_PASSIVE_EFFECTS_TEXT: '',
  REACT_RESIZE_BAR: '',
  REACT_RESIZE_BAR_ACTIVE: '',
  REACT_RESIZE_BAR_BORDER: '',
  REACT_RESIZE_BAR_DOT: '',
  REACT_SCHEDULE: '',
  REACT_SCHEDULE_HOVER: '',
  REACT_SUSPENSE_REJECTED_EVENT: '',
  REACT_SUSPENSE_REJECTED_EVENT_HOVER: '',
  REACT_SUSPENSE_RESOLVED_EVENT: '',
  REACT_SUSPENSE_RESOLVED_EVENT_HOVER: '',
  REACT_SUSPENSE_UNRESOLVED_EVENT: '',
  REACT_SUSPENSE_UNRESOLVED_EVENT_HOVER: '',
  REACT_THROWN_ERROR: '',
  REACT_THROWN_ERROR_HOVER: '',
  REACT_WORK_BORDER: '',
  SCROLL_CARET: '',
  SCRUBBER_BACKGROUND: '',
  SCRUBBER_BORDER: '',
  SEARCH_RESULT_FILL: '',
  TEXT_COLOR: '',
  TEXT_DIM_COLOR: '',
  TIME_MARKER_LABEL: '',
  WARNING_BACKGROUND: '',
  WARNING_BACKGROUND_HOVER: '',
  WARNING_TEXT: '',
  WARNING_TEXT_INVERED: ''
};
function updateColorsToMatchTheme(element) {
  const computedStyle = getComputedStyle(element); // Check to see if styles have been initialized...

  if (computedStyle.getPropertyValue('--color-background') == null) {
    return false;
  }

  COLORS = {
    BACKGROUND: computedStyle.getPropertyValue('--color-background'),
    INTERNAL_MODULE_FRAME: computedStyle.getPropertyValue('--color-timeline-internal-module'),
    INTERNAL_MODULE_FRAME_HOVER: computedStyle.getPropertyValue('--color-timeline-internal-module-hover'),
    INTERNAL_MODULE_FRAME_TEXT: computedStyle.getPropertyValue('--color-timeline-internal-module-text'),
    NATIVE_EVENT: computedStyle.getPropertyValue('--color-timeline-native-event'),
    NATIVE_EVENT_HOVER: computedStyle.getPropertyValue('--color-timeline-native-event-hover'),
    NETWORK_PRIMARY: computedStyle.getPropertyValue('--color-timeline-network-primary'),
    NETWORK_PRIMARY_HOVER: computedStyle.getPropertyValue('--color-timeline-network-primary-hover'),
    NETWORK_SECONDARY: computedStyle.getPropertyValue('--color-timeline-network-secondary'),
    NETWORK_SECONDARY_HOVER: computedStyle.getPropertyValue('--color-timeline-network-secondary-hover'),
    PRIORITY_BACKGROUND: computedStyle.getPropertyValue('--color-timeline-priority-background'),
    PRIORITY_BORDER: computedStyle.getPropertyValue('--color-timeline-priority-border'),
    PRIORITY_LABEL: computedStyle.getPropertyValue('--color-text'),
    USER_TIMING: computedStyle.getPropertyValue('--color-timeline-user-timing'),
    USER_TIMING_HOVER: computedStyle.getPropertyValue('--color-timeline-user-timing-hover'),
    REACT_IDLE: computedStyle.getPropertyValue('--color-timeline-react-idle'),
    REACT_IDLE_HOVER: computedStyle.getPropertyValue('--color-timeline-react-idle-hover'),
    REACT_RENDER: computedStyle.getPropertyValue('--color-timeline-react-render'),
    REACT_RENDER_HOVER: computedStyle.getPropertyValue('--color-timeline-react-render-hover'),
    REACT_RENDER_TEXT: computedStyle.getPropertyValue('--color-timeline-react-render-text'),
    REACT_COMMIT: computedStyle.getPropertyValue('--color-timeline-react-commit'),
    REACT_COMMIT_HOVER: computedStyle.getPropertyValue('--color-timeline-react-commit-hover'),
    REACT_COMMIT_TEXT: computedStyle.getPropertyValue('--color-timeline-react-commit-text'),
    REACT_LAYOUT_EFFECTS: computedStyle.getPropertyValue('--color-timeline-react-layout-effects'),
    REACT_LAYOUT_EFFECTS_HOVER: computedStyle.getPropertyValue('--color-timeline-react-layout-effects-hover'),
    REACT_LAYOUT_EFFECTS_TEXT: computedStyle.getPropertyValue('--color-timeline-react-layout-effects-text'),
    REACT_PASSIVE_EFFECTS: computedStyle.getPropertyValue('--color-timeline-react-passive-effects'),
    REACT_PASSIVE_EFFECTS_HOVER: computedStyle.getPropertyValue('--color-timeline-react-passive-effects-hover'),
    REACT_PASSIVE_EFFECTS_TEXT: computedStyle.getPropertyValue('--color-timeline-react-passive-effects-text'),
    REACT_RESIZE_BAR: computedStyle.getPropertyValue('--color-resize-bar'),
    REACT_RESIZE_BAR_ACTIVE: computedStyle.getPropertyValue('--color-resize-bar-active'),
    REACT_RESIZE_BAR_BORDER: computedStyle.getPropertyValue('--color-resize-bar-border'),
    REACT_RESIZE_BAR_DOT: computedStyle.getPropertyValue('--color-resize-bar-dot'),
    REACT_SCHEDULE: computedStyle.getPropertyValue('--color-timeline-react-schedule'),
    REACT_SCHEDULE_HOVER: computedStyle.getPropertyValue('--color-timeline-react-schedule-hover'),
    REACT_SUSPENSE_REJECTED_EVENT: computedStyle.getPropertyValue('--color-timeline-react-suspense-rejected'),
    REACT_SUSPENSE_REJECTED_EVENT_HOVER: computedStyle.getPropertyValue('--color-timeline-react-suspense-rejected-hover'),
    REACT_SUSPENSE_RESOLVED_EVENT: computedStyle.getPropertyValue('--color-timeline-react-suspense-resolved'),
    REACT_SUSPENSE_RESOLVED_EVENT_HOVER: computedStyle.getPropertyValue('--color-timeline-react-suspense-resolved-hover'),
    REACT_SUSPENSE_UNRESOLVED_EVENT: computedStyle.getPropertyValue('--color-timeline-react-suspense-unresolved'),
    REACT_SUSPENSE_UNRESOLVED_EVENT_HOVER: computedStyle.getPropertyValue('--color-timeline-react-suspense-unresolved-hover'),
    REACT_THROWN_ERROR: computedStyle.getPropertyValue('--color-timeline-thrown-error'),
    REACT_THROWN_ERROR_HOVER: computedStyle.getPropertyValue('--color-timeline-thrown-error-hover'),
    REACT_WORK_BORDER: computedStyle.getPropertyValue('--color-timeline-react-work-border'),
    SCROLL_CARET: computedStyle.getPropertyValue('--color-scroll-caret'),
    SCRUBBER_BACKGROUND: computedStyle.getPropertyValue('--color-timeline-react-suspense-rejected'),
    SEARCH_RESULT_FILL: computedStyle.getPropertyValue('--color-timeline-react-suspense-rejected'),
    SCRUBBER_BORDER: computedStyle.getPropertyValue('--color-timeline-text-color'),
    TEXT_COLOR: computedStyle.getPropertyValue('--color-timeline-text-color'),
    TEXT_DIM_COLOR: computedStyle.getPropertyValue('--color-timeline-text-dim-color'),
    TIME_MARKER_LABEL: computedStyle.getPropertyValue('--color-text'),
    WARNING_BACKGROUND: computedStyle.getPropertyValue('--color-warning-background'),
    WARNING_BACKGROUND_HOVER: computedStyle.getPropertyValue('--color-warning-background-hover'),
    WARNING_TEXT: computedStyle.getPropertyValue('--color-warning-text-color'),
    WARNING_TEXT_INVERED: computedStyle.getPropertyValue('--color-warning-text-color-inverted')
  };
  return true;
}
;// CONCATENATED MODULE: ../../node_modules/memoize-one/dist/memoize-one.esm.js
function memoize_one_esm_areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }

  for (var i = 0; i < newInputs.length; i++) {
    if (newInputs[i] !== lastInputs[i]) {
      return false;
    }
  }

  return true;
}

function memoize_one_esm_memoizeOne(resultFn, isEqual) {
  if (isEqual === void 0) {
    isEqual = memoize_one_esm_areInputsEqual;
  }

  var lastThis;
  var lastArgs = [];
  var lastResult;
  var calledOnce = false;

  function memoized() {
    var newArgs = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }

    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {
      return lastResult;
    }

    lastResult = resultFn.apply(this, newArgs);
    calledOnce = true;
    lastThis = this;
    lastArgs = newArgs;
    return lastResult;
  }

  return memoized;
}

/* harmony default export */ const dist_memoize_one_esm = (memoize_one_esm_memoizeOne);
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/geometry.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/**
 * Alternative representation of `Rect`.
 * A tuple of (`top`, `right`, `bottom`, `left`) coordinates.
 */
const zeroPoint = Object.freeze({
  x: 0,
  y: 0
});
const zeroSize = Object.freeze({
  width: 0,
  height: 0
});
const zeroRect = Object.freeze({
  origin: zeroPoint,
  size: zeroSize
});
function pointEqualToPoint(point1, point2) {
  return point1.x === point2.x && point1.y === point2.y;
}
function sizeEqualToSize(size1, size2) {
  return size1.width === size2.width && size1.height === size2.height;
}
function rectEqualToRect(rect1, rect2) {
  return pointEqualToPoint(rect1.origin, rect2.origin) && sizeEqualToSize(rect1.size, rect2.size);
}
function sizeIsValid({
  width,
  height
}) {
  return width >= 0 && height >= 0;
}
function sizeIsEmpty({
  width,
  height
}) {
  return width <= 0 || height <= 0;
}

function rectToBox(rect) {
  const top = rect.origin.y;
  const right = rect.origin.x + rect.size.width;
  const bottom = rect.origin.y + rect.size.height;
  const left = rect.origin.x;
  return [top, right, bottom, left];
}

function boxToRect(box) {
  const [top, right, bottom, left] = box;
  return {
    origin: {
      x: left,
      y: top
    },
    size: {
      width: right - left,
      height: bottom - top
    }
  };
}

function rectIntersectsRect(rect1, rect2) {
  if (rect1.size.width === 0 || rect1.size.height === 0 || rect2.size.width === 0 || rect2.size.height === 0) {
    return false;
  }

  const [top1, right1, bottom1, left1] = rectToBox(rect1);
  const [top2, right2, bottom2, left2] = rectToBox(rect2);
  return !(right1 < left2 || right2 < left1 || bottom1 < top2 || bottom2 < top1);
}
/**
 * Returns the intersection of the 2 rectangles.
 *
 * Prerequisite: `rect1` must intersect with `rect2`.
 */

function intersectionOfRects(rect1, rect2) {
  const [top1, right1, bottom1, left1] = rectToBox(rect1);
  const [top2, right2, bottom2, left2] = rectToBox(rect2);
  return boxToRect([Math.max(top1, top2), Math.min(right1, right2), Math.min(bottom1, bottom2), Math.max(left1, left2)]);
}
function rectContainsPoint({
  x,
  y
}, rect) {
  const [top, right, bottom, left] = rectToBox(rect);
  return left <= x && x <= right && top <= y && y <= bottom;
}
/**
 * Returns the smallest rectangle that contains all provided rects.
 *
 * @returns Union of `rects`. If `rects` is empty, returns `zeroRect`.
 */

function unionOfRects(...rects) {
  if (rects.length === 0) {
    return zeroRect;
  }

  const [firstRect, ...remainingRects] = rects;
  const boxUnion = remainingRects.map(rectToBox).reduce((intermediateUnion, nextBox) => {
    const [unionTop, unionRight, unionBottom, unionLeft] = intermediateUnion;
    const [nextTop, nextRight, nextBottom, nextLeft] = nextBox;
    return [Math.min(unionTop, nextTop), Math.max(unionRight, nextRight), Math.max(unionBottom, nextBottom), Math.min(unionLeft, nextLeft)];
  }, rectToBox(firstRect));
  return boxToRect(boxUnion);
}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/Surface.js
function Surface_defineProperty(obj, key, value) { key = Surface_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function Surface_toPropertyKey(t) { var i = Surface_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function Surface_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





// hidpi canvas: https://web.dev/articles/canvas-hidipi
function configureRetinaCanvas(canvas, height, width) {
  canvas.width = width * DPR;
  canvas.height = height * DPR;
  canvas.style.width = `${width}px`;
  canvas.style.height = `${height}px`;
}

const getCanvasContext = dist_memoize_one_esm((canvas, height, width, scaleCanvas = true) => {
  const context = canvas.getContext('2d', {
    alpha: false
  });

  if (scaleCanvas) {
    configureRetinaCanvas(canvas, height, width); // Scale all drawing operations by the dpr, so you don't have to worry about the difference.

    context.scale(DPR, DPR);
  }

  return context;
});

/**
 * Represents the canvas surface and a view heirarchy. A surface is also the
 * place where all interactions enter the view heirarchy.
 */
class Surface {
  constructor(resetHoveredEvent) {
    Surface_defineProperty(this, "_viewRefs", {
      activeView: null,
      hoveredView: null
    });

    this._resetHoveredEvent = resetHoveredEvent;
  }

  hasActiveView() {
    return this._viewRefs.activeView !== null;
  }

  setCanvas(canvas, canvasSize) {
    this._context = getCanvasContext(canvas, canvasSize.height, canvasSize.width);
    this._canvasSize = canvasSize;

    if (this.rootView) {
      this.rootView.setNeedsDisplay();
    }
  }

  displayIfNeeded() {
    const {
      rootView,
      _canvasSize,
      _context
    } = this;

    if (!rootView || !_context || !_canvasSize) {
      return;
    }

    rootView.setFrame({
      origin: zeroPoint,
      size: _canvasSize
    });
    rootView.setVisibleArea({
      origin: zeroPoint,
      size: _canvasSize
    });
    rootView.displayIfNeeded(_context, this._viewRefs);
  }

  getCurrentCursor() {
    const {
      activeView,
      hoveredView
    } = this._viewRefs;

    if (activeView !== null) {
      return activeView.currentCursor;
    } else if (hoveredView !== null) {
      return hoveredView.currentCursor;
    } else {
      return null;
    }
  }

  handleInteraction(interaction) {
    const rootView = this.rootView;

    if (rootView != null) {
      const viewRefs = this._viewRefs;

      switch (interaction.type) {
        case 'mousemove':
        case 'wheel-control':
        case 'wheel-meta':
        case 'wheel-plain':
        case 'wheel-shift':
          // Clean out the hovered view before processing this type of interaction.
          const hoveredView = viewRefs.hoveredView;
          viewRefs.hoveredView = null;
          rootView.handleInteractionAndPropagateToSubviews(interaction, viewRefs); // If a previously hovered view is no longer hovered, update the outer state.

          if (hoveredView !== null && viewRefs.hoveredView === null) {
            this._resetHoveredEvent();
          }

          break;

        default:
          rootView.handleInteractionAndPropagateToSubviews(interaction, viewRefs);
          break;
      }
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/layouter.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/**
 * A function that takes a list of subviews, currently laid out in
 * `existingLayout`, and lays them out into `containingFrame`.
 */
function viewToLayoutInfo(view) {
  return {
    view,
    frame: view.frame
  };
}

function viewsToLayout(views) {
  return views.map(viewToLayoutInfo);
}
/**
 * Applies `layout`'s `frame`s to its corresponding `view`.
 */

function collapseLayoutIntoViews(layout) {
  layout.forEach(({
    view,
    frame
  }) => view.setFrame(frame));
}
/**
 * A no-operation layout; does not modify the layout.
 */

const noopLayout = layout => layout;
/**
 * Layer views on top of each other. All views' frames will be set to `containerFrame`.
 *
 * Equivalent to composing:
 * - `alignToContainerXLayout`,
 * - `alignToContainerYLayout`,
 * - `containerWidthLayout`, and
 * - `containerHeightLayout`.
 */

const layeredLayout = (layout, containerFrame) => {
  return layout.map(layoutInfo => ({ ...layoutInfo,
    frame: containerFrame
  }));
};
/**
 * Stacks `views` vertically in `frame`.
 * All views in `views` will have their widths set to the frame's width.
 */

const verticallyStackedLayout = (layout, containerFrame) => {
  let currentY = containerFrame.origin.y;
  return layout.map(layoutInfo => {
    const desiredSize = layoutInfo.view.desiredSize();
    const height = desiredSize ? desiredSize.height : containerFrame.origin.y + containerFrame.size.height - currentY;
    const proposedFrame = {
      origin: {
        x: containerFrame.origin.x,
        y: currentY
      },
      size: {
        width: containerFrame.size.width,
        height
      }
    };
    currentY += height;
    return { ...layoutInfo,
      frame: proposedFrame
    };
  });
};
/**
 * A layouter that aligns all frames' lefts to the container frame's left.
 */

const alignToContainerXLayout = (layout, containerFrame) => {
  return layout.map(layoutInfo => ({ ...layoutInfo,
    frame: {
      origin: {
        x: containerFrame.origin.x,
        y: layoutInfo.frame.origin.y
      },
      size: layoutInfo.frame.size
    }
  }));
};
/**
 * A layouter that aligns all frames' tops to the container frame's top.
 */

const alignToContainerYLayout = (layout, containerFrame) => {
  return layout.map(layoutInfo => ({ ...layoutInfo,
    frame: {
      origin: {
        x: layoutInfo.frame.origin.x,
        y: containerFrame.origin.y
      },
      size: layoutInfo.frame.size
    }
  }));
};
/**
 * A layouter that sets all frames' widths to `containerFrame.size.width`.
 */

const containerWidthLayout = (layout, containerFrame) => {
  return layout.map(layoutInfo => ({ ...layoutInfo,
    frame: {
      origin: layoutInfo.frame.origin,
      size: {
        width: containerFrame.size.width,
        height: layoutInfo.frame.size.height
      }
    }
  }));
};
/**
 * A layouter that sets all frames' heights to `containerFrame.size.height`.
 */

const containerHeightLayout = (layout, containerFrame) => {
  return layout.map(layoutInfo => ({ ...layoutInfo,
    frame: {
      origin: layoutInfo.frame.origin,
      size: {
        width: layoutInfo.frame.size.width,
        height: containerFrame.size.height
      }
    }
  }));
};
/**
 * A layouter that sets all frames' heights to the desired height of its view.
 * If the view has no desired size, the frame's height is set to 0.
 */

const desiredHeightLayout = layout => {
  return layout.map(layoutInfo => {
    const desiredSize = layoutInfo.view.desiredSize();
    const height = desiredSize ? desiredSize.height : 0;
    return { ...layoutInfo,
      frame: {
        origin: layoutInfo.frame.origin,
        size: {
          width: layoutInfo.frame.size.width,
          height
        }
      }
    };
  });
};
/**
 * A layouter that sets all frames' heights to the height of the tallest frame.
 */

const uniformMaxSubviewHeightLayout = layout => {
  const maxHeight = Math.max(...layout.map(layoutInfo => layoutInfo.frame.size.height));
  return layout.map(layoutInfo => ({ ...layoutInfo,
    frame: {
      origin: layoutInfo.frame.origin,
      size: {
        width: layoutInfo.frame.size.width,
        height: maxHeight
      }
    }
  }));
};
/**
 * A layouter that sets heights in this fashion:
 * - If a frame's height >= `containerFrame.size.height`, the frame is left unchanged.
 * - Otherwise, sets the frame's height to `containerFrame.size.height`.
 */

const atLeastContainerHeightLayout = (layout, containerFrame) => {
  return layout.map(layoutInfo => ({ ...layoutInfo,
    frame: {
      origin: layoutInfo.frame.origin,
      size: {
        width: layoutInfo.frame.size.width,
        height: Math.max(containerFrame.size.height, layoutInfo.frame.size.height)
      }
    }
  }));
};
/**
 * Create a layouter that applies each layouter in `layouters` in sequence.
 */

function createComposedLayout(...layouters) {
  if (layouters.length === 0) {
    return noopLayout;
  }

  const composedLayout = (layout, containerFrame) => {
    return layouters.reduce((intermediateLayout, layouter) => layouter(intermediateLayout, containerFrame), layout);
  };

  return composedLayout;
}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/View.js
function View_defineProperty(obj, key, value) { key = View_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function View_toPropertyKey(t) { var i = View_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function View_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



/**
 * Base view class that can be subclassed to draw custom content or manage
 * subclasses.
 */

class View {
  /**
   * An injected function that lays out our subviews.
   * @private
   */

  /**
   * Whether this view needs to be drawn.
   *
   * NOTE: Do not set directly! Use `setNeedsDisplay`.
   *
   * @see setNeedsDisplay
   * @private
   */

  /**
   * Whether the hierarchy below this view has subviews that need display.
   *
   * NOTE: Do not set directly! Use `setSubviewsNeedDisplay`.
   *
   * @see setSubviewsNeedDisplay
   * @private
   */
  constructor(surface, frame, layouter = noopLayout, visibleArea = frame, backgroundColor = null) {
    View_defineProperty(this, "currentCursor", null);

    View_defineProperty(this, "subviews", []);

    View_defineProperty(this, "_needsDisplay", true);

    View_defineProperty(this, "_subviewsNeedDisplay", false);

    this._backgroundColor = backgroundColor || null;
    this.surface = surface;
    this.frame = frame;
    this._layouter = layouter;
    this.visibleArea = visibleArea;
  }
  /**
   * Invalidates view's contents.
   *
   * Downward propagating; once called, all subviews of this view should also
   * be invalidated.
   */


  setNeedsDisplay() {
    this._needsDisplay = true;

    if (this.superview) {
      this.superview._setSubviewsNeedDisplay();
    }

    this.subviews.forEach(subview => subview.setNeedsDisplay());
  }
  /**
   * Informs superview that it has subviews that need to be drawn.
   *
   * Upward propagating; once called, all superviews of this view should also
   * have `subviewsNeedDisplay` = true.
   *
   * @private
   */


  _setSubviewsNeedDisplay() {
    this._subviewsNeedDisplay = true;

    if (this.superview) {
      this.superview._setSubviewsNeedDisplay();
    }
  }

  setFrame(newFrame) {
    if (!rectEqualToRect(this.frame, newFrame)) {
      this.frame = newFrame;

      if (sizeIsValid(newFrame.size)) {
        this.frame = newFrame;
      } else {
        this.frame = zeroRect;
      }

      this.setNeedsDisplay();
    }
  }

  setVisibleArea(newVisibleArea) {
    if (!rectEqualToRect(this.visibleArea, newVisibleArea)) {
      if (sizeIsValid(newVisibleArea.size)) {
        this.visibleArea = newVisibleArea;
      } else {
        this.visibleArea = zeroRect;
      }

      this.setNeedsDisplay();
    }
  }
  /**
   * A size that can be used as a hint by layout functions.
   *
   * Implementations should typically return the intrinsic content size or a
   * size that fits all the view's content.
   *
   * The default implementation returns a size that fits all the view's
   * subviews.
   *
   * Can be overridden by subclasses.
   */


  desiredSize() {
    if (this._needsDisplay) {
      this.layoutSubviews();
    }

    const frames = this.subviews.map(subview => subview.frame);
    return unionOfRects(...frames).size;
  }
  /**
   * Appends `view` to the list of this view's `subviews`.
   */


  addSubview(view) {
    if (this.subviews.includes(view)) {
      return;
    }

    this.subviews.push(view);
    view.superview = this;
  }
  /**
   * Breaks the subview-superview relationship between `view` and this view, if
   * `view` is a subview of this view.
   */


  removeSubview(view) {
    const subviewIndex = this.subviews.indexOf(view);

    if (subviewIndex === -1) {
      return;
    }

    view.superview = undefined;
    this.subviews.splice(subviewIndex, 1);
  }
  /**
   * Removes all subviews from this view.
   */


  removeAllSubviews() {
    this.subviews.forEach(subview => subview.superview = undefined);
    this.subviews = [];
  }
  /**
   * Executes the display flow if this view needs to be drawn.
   *
   * 1. Lays out subviews with `layoutSubviews`.
   * 2. Draws content with `draw`.
   */


  displayIfNeeded(context, viewRefs) {
    if ((this._needsDisplay || this._subviewsNeedDisplay) && rectIntersectsRect(this.frame, this.visibleArea) && !sizeIsEmpty(this.visibleArea.size)) {
      this.layoutSubviews();

      if (this._needsDisplay) {
        this._needsDisplay = false;
      }

      if (this._subviewsNeedDisplay) this._subviewsNeedDisplay = false; // Clip anything drawn by the view to prevent it from overflowing its visible area.

      const visibleArea = this.visibleArea;
      const region = new Path2D();
      region.rect(visibleArea.origin.x, visibleArea.origin.y, visibleArea.size.width, visibleArea.size.height);
      context.save();
      context.clip(region);
      context.beginPath();
      this.draw(context, viewRefs); // Stop clipping

      context.restore();
    }
  }
  /**
   * Layout self and subviews.
   *
   * Implementations should call `setNeedsDisplay` if a draw is required.
   *
   * The default implementation uses `this.layouter` to lay out subviews.
   *
   * Can be overwritten by subclasses that wish to manually manage their
   * subviews' layout.
   *
   * NOTE: Do not call directly! Use `displayIfNeeded`.
   *
   * @see displayIfNeeded
   */


  layoutSubviews() {
    const {
      frame,
      _layouter,
      subviews,
      visibleArea
    } = this;
    const existingLayout = viewsToLayout(subviews);

    const newLayout = _layouter(existingLayout, frame);

    collapseLayoutIntoViews(newLayout);
    subviews.forEach((subview, subviewIndex) => {
      if (rectIntersectsRect(visibleArea, subview.frame)) {
        subview.setVisibleArea(intersectionOfRects(visibleArea, subview.frame));
      } else {
        subview.setVisibleArea(zeroRect);
      }
    });
  }
  /**
   * Draw the contents of this view in the given canvas `context`.
   *
   * Defaults to drawing this view's `subviews`.
   *
   * To be overwritten by subclasses that wish to draw custom content.
   *
   * NOTE: Do not call directly! Use `displayIfNeeded`.
   *
   * @see displayIfNeeded
   */


  draw(context, viewRefs) {
    const {
      subviews,
      visibleArea
    } = this;
    subviews.forEach(subview => {
      if (rectIntersectsRect(visibleArea, subview.visibleArea)) {
        subview.displayIfNeeded(context, viewRefs);
      }
    });
    const backgroundColor = this._backgroundColor;

    if (backgroundColor !== null) {
      const desiredSize = this.desiredSize();

      if (visibleArea.size.height > desiredSize.height) {
        context.fillStyle = backgroundColor;
        context.fillRect(visibleArea.origin.x, visibleArea.origin.y + desiredSize.height, visibleArea.size.width, visibleArea.size.height - desiredSize.height);
      }
    }
  }
  /**
   * Handle an `interaction`.
   *
   * To be overwritten by subclasses that wish to handle interactions.
   *
   * NOTE: Do not call directly! Use `handleInteractionAndPropagateToSubviews`
   */


  handleInteraction(interaction, viewRefs) {}
  /**
   * Handle an `interaction` and propagates it to all of this view's
   * `subviews`.
   *
   * NOTE: Should not be overridden! Subclasses should override
   * `handleInteraction` instead.
   *
   * @see handleInteraction
   * @protected
   */


  handleInteractionAndPropagateToSubviews(interaction, viewRefs) {
    const {
      subviews,
      visibleArea
    } = this;

    if (visibleArea.size.height === 0) {
      return false;
    } // Pass the interaction to subviews first,
    // so they have the opportunity to claim it before it bubbles.
    //
    // Views are painted first to last,
    // so they should process interactions last to first,
    // so views in front (on top) can claim the interaction first.


    for (let i = subviews.length - 1; i >= 0; i--) {
      const subview = subviews[i];

      if (rectIntersectsRect(visibleArea, subview.visibleArea)) {
        const didSubviewHandle = subview.handleInteractionAndPropagateToSubviews(interaction, viewRefs) === true;

        if (didSubviewHandle) {
          return true;
        }
      }
    }

    const didSelfHandle = this.handleInteraction(interaction, viewRefs) === true;

    if (didSelfHandle) {
      return true;
    }

    return false;
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/BackgroundColorView.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


/**
 * View that fills its visible area with a CSS color.
 */

class BackgroundColorView extends View {
  draw(context) {
    const {
      visibleArea
    } = this;
    context.fillStyle = COLORS.BACKGROUND;
    context.fillRect(visibleArea.origin.x, visibleArea.origin.y, visibleArea.size.width, visibleArea.size.height);
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/utils/clamp.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
function clamp(min, max, value) {
  if (Number.isNaN(min) || Number.isNaN(max) || Number.isNaN(value)) {
    throw new Error(`Clamp was called with NaN. Args: min: ${min}, max: ${max}, value: ${value}.`);
  }

  return Math.min(max, Math.max(min, value));
}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/utils/scrollState.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/**
 * Single-axis offset and length state.
 *
 * ```
 * contentStart   containerStart  containerEnd   contentEnd
 *     |<----------offset|              |             |
 *     |<-------------------length------------------->|
 * ```
 */

function clampOffset(state, containerLength) {
  return {
    offset: clamp(-(state.length - containerLength), 0, state.offset),
    length: state.length
  };
}

function clampLength({
  state,
  minContentLength,
  maxContentLength,
  containerLength
}) {
  return {
    offset: state.offset,
    length: clamp(Math.max(minContentLength, containerLength), Math.max(containerLength, maxContentLength), state.length)
  };
}
/**
 * Returns `state` clamped such that:
 * - `length`: you won't be able to zoom in/out such that the content is
 *   shorter than the `containerLength`.
 * - `offset`: content remains in `containerLength`.
 */


function clampState({
  state,
  minContentLength,
  maxContentLength,
  containerLength
}) {
  return clampOffset(clampLength({
    state,
    minContentLength,
    maxContentLength,
    containerLength
  }), containerLength);
}
function translateState({
  state,
  delta,
  containerLength
}) {
  return clampOffset({
    offset: state.offset + delta,
    length: state.length
  }, containerLength);
}
/**
 * Returns a new clamped `state` zoomed by `multiplier`.
 *
 * The provided fixed point will also remain stationary relative to
 * `containerStart`.
 *
 * ```
 * contentStart   containerStart                fixedPoint containerEnd
 *     |<---------offset-|                          x           |
 *     |-fixedPoint-------------------------------->x           |
 *                       |-fixedPointFromContainer->x           |
 *                       |<----------containerLength----------->|
 * ```
 */

function zoomState({
  state,
  multiplier,
  fixedPoint,
  minContentLength,
  maxContentLength,
  containerLength
}) {
  // Length and offset must be computed separately, so that if the length is
  // clamped the offset will still be correct (unless it gets clamped too).
  const zoomedState = clampLength({
    state: {
      offset: state.offset,
      length: state.length * multiplier
    },
    minContentLength,
    maxContentLength,
    containerLength
  }); // Adjust offset so that distance between containerStart<->fixedPoint is fixed

  const fixedPointFromContainer = fixedPoint + state.offset;
  const scaledFixedPoint = fixedPoint * (zoomedState.length / state.length);
  const offsetAdjustedState = clampOffset({
    offset: fixedPointFromContainer - scaledFixedPoint,
    length: zoomedState.length
  }, containerLength);
  return offsetAdjustedState;
}
function moveStateToRange({
  state,
  rangeStart,
  rangeEnd,
  contentLength,
  minContentLength,
  maxContentLength,
  containerLength
}) {
  // Length and offset must be computed separately, so that if the length is
  // clamped the offset will still be correct (unless it gets clamped too).
  const lengthClampedState = clampLength({
    state: {
      offset: state.offset,
      length: contentLength * (containerLength / (rangeEnd - rangeStart))
    },
    minContentLength,
    maxContentLength,
    containerLength
  });
  const offsetAdjustedState = clampOffset({
    offset: -rangeStart * (lengthClampedState.length / contentLength),
    length: lengthClampedState.length
  }, containerLength);
  return offsetAdjustedState;
}
function areScrollStatesEqual(state1, state2) {
  return state1.offset === state2.offset && state1.length === state2.length;
}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/constants.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
const MOVE_WHEEL_DELTA_THRESHOLD = 1;
const ZOOM_WHEEL_DELTA_THRESHOLD = 1;
const MIN_ZOOM_LEVEL = 0.25;
const MAX_ZOOM_LEVEL = 1000;
const DEFAULT_ZOOM_LEVEL = 0.25;
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/HorizontalPanAndZoomView.js
function HorizontalPanAndZoomView_defineProperty(obj, key, value) { key = HorizontalPanAndZoomView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function HorizontalPanAndZoomView_toPropertyKey(t) { var i = HorizontalPanAndZoomView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function HorizontalPanAndZoomView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





class HorizontalPanAndZoomView extends View {
  constructor(surface, frame, contentView, intrinsicContentWidth, viewState) {
    super(surface, frame);

    HorizontalPanAndZoomView_defineProperty(this, "_isPanning", false);

    this._contentView = contentView;
    this._intrinsicContentWidth = intrinsicContentWidth;
    this._viewState = viewState;
    viewState.onHorizontalScrollStateChange(scrollState => {
      this.zoomToRange(scrollState.offset, scrollState.length);
    });
    this.addSubview(contentView);
  }
  /**
   * Just sets scroll state.
   * Use `_setStateAndInformCallbacksIfChanged` if this view's callbacks should also be called.
   *
   * @returns Whether state was changed
   * @private
   */


  setScrollState(proposedState) {
    const clampedState = clampState({
      state: proposedState,
      minContentLength: this._intrinsicContentWidth * MIN_ZOOM_LEVEL,
      maxContentLength: this._intrinsicContentWidth * MAX_ZOOM_LEVEL,
      containerLength: this.frame.size.width
    });

    if (!areScrollStatesEqual(clampedState, this._viewState.horizontalScrollState)) {
      this.setNeedsDisplay();
    }
  }
  /**
   * Zoom to a specific range of the content specified as a range of the
   * content view's intrinsic content size.
   *
   * Does not inform callbacks of state change since this is a public API.
   */


  zoomToRange(rangeStart, rangeEnd) {
    const newState = moveStateToRange({
      state: this._viewState.horizontalScrollState,
      rangeStart,
      rangeEnd,
      contentLength: this._intrinsicContentWidth,
      minContentLength: this._intrinsicContentWidth * MIN_ZOOM_LEVEL,
      maxContentLength: this._intrinsicContentWidth * MAX_ZOOM_LEVEL,
      containerLength: this.frame.size.width
    });
    this.setScrollState(newState);
  }

  desiredSize() {
    return this._contentView.desiredSize();
  }

  layoutSubviews() {
    const {
      offset,
      length
    } = this._viewState.horizontalScrollState;
    const proposedFrame = {
      origin: {
        x: this.frame.origin.x + offset,
        y: this.frame.origin.y
      },
      size: {
        width: length,
        height: this.frame.size.height
      }
    };

    this._contentView.setFrame(proposedFrame);

    super.layoutSubviews();
  }

  handleInteraction(interaction, viewRefs) {
    switch (interaction.type) {
      case 'mousedown':
        this._handleMouseDown(interaction, viewRefs);

        break;

      case 'mousemove':
        this._handleMouseMove(interaction, viewRefs);

        break;

      case 'mouseup':
        this._handleMouseUp(interaction, viewRefs);

        break;

      case 'wheel-plain':
      case 'wheel-shift':
        this._handleWheel(interaction);

        break;
    }
  }

  _handleMouseDown(interaction, viewRefs) {
    if (rectContainsPoint(interaction.payload.location, this.frame)) {
      this._isPanning = true;
      viewRefs.activeView = this;
      this.currentCursor = 'grabbing';
    }
  }

  _handleMouseMove(interaction, viewRefs) {
    const isHovered = rectContainsPoint(interaction.payload.location, this.frame);

    if (isHovered && viewRefs.hoveredView === null) {
      viewRefs.hoveredView = this;
    }

    if (viewRefs.activeView === this) {
      this.currentCursor = 'grabbing';
    } else if (isHovered) {
      this.currentCursor = 'grab';
    }

    if (!this._isPanning) {
      return;
    } // Don't prevent mouse-move events from bubbling if they are vertical drags.


    const {
      movementX,
      movementY
    } = interaction.payload.event;

    if (Math.abs(movementX) < Math.abs(movementY)) {
      return;
    }

    const newState = translateState({
      state: this._viewState.horizontalScrollState,
      delta: movementX,
      containerLength: this.frame.size.width
    });

    this._viewState.updateHorizontalScrollState(newState);
  }

  _handleMouseUp(interaction, viewRefs) {
    if (this._isPanning) {
      this._isPanning = false;
    }

    if (viewRefs.activeView === this) {
      viewRefs.activeView = null;
    }
  }

  _handleWheel(interaction) {
    const {
      location,
      delta: {
        deltaX,
        deltaY
      }
    } = interaction.payload;

    if (!rectContainsPoint(location, this.frame)) {
      return; // Not scrolling on view
    }

    const absDeltaX = Math.abs(deltaX);
    const absDeltaY = Math.abs(deltaY); // Vertical scrolling zooms in and out (unless the SHIFT modifier is used).
    // Horizontal scrolling pans.

    if (absDeltaY > absDeltaX) {
      if (absDeltaY < MOVE_WHEEL_DELTA_THRESHOLD) {
        return;
      }

      if (interaction.type === 'wheel-shift') {
        // Shift modifier is for scrolling, not zooming.
        return;
      }

      const newState = zoomState({
        state: this._viewState.horizontalScrollState,
        multiplier: 1 + 0.005 * -deltaY,
        fixedPoint: location.x - this._viewState.horizontalScrollState.offset,
        minContentLength: this._intrinsicContentWidth * MIN_ZOOM_LEVEL,
        maxContentLength: this._intrinsicContentWidth * MAX_ZOOM_LEVEL,
        containerLength: this.frame.size.width
      });

      this._viewState.updateHorizontalScrollState(newState);
    } else {
      if (absDeltaX < MOVE_WHEEL_DELTA_THRESHOLD) {
        return;
      }

      const newState = translateState({
        state: this._viewState.horizontalScrollState,
        delta: -deltaX,
        containerLength: this.frame.size.width
      });

      this._viewState.updateHorizontalScrollState(newState);
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/VerticalScrollView.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






const CARET_MARGIN = 3;
const CARET_WIDTH = 5;
const CARET_HEIGHT = 3;
class VerticalScrollView extends View {
  constructor(surface, frame, contentView, viewState, label) {
    super(surface, frame);
    this._contentView = contentView;
    this._isPanning = false;
    this._mutableViewStateKey = label + ':VerticalScrollView';
    this._onChangeCallback = null;
    this._scrollState = {
      offset: 0,
      length: 0
    };
    this._viewState = viewState;
    this.addSubview(contentView);

    this._restoreMutableViewState();
  }

  setFrame(newFrame) {
    super.setFrame(newFrame); // Revalidate scrollState

    this._setScrollState(this._scrollState);
  }

  desiredSize() {
    return this._contentView.desiredSize();
  }

  draw(context, viewRefs) {
    super.draw(context, viewRefs); // Show carets if there's scroll overflow above or below the viewable area.

    if (this.frame.size.height > CARET_HEIGHT * 2 + CARET_MARGIN * 3) {
      const offset = this._scrollState.offset;

      const desiredSize = this._contentView.desiredSize();

      const above = offset;
      const below = this.frame.size.height - desiredSize.height - offset;

      if (above < 0 || below < 0) {
        const {
          visibleArea
        } = this;
        const {
          x,
          y
        } = visibleArea.origin;
        const {
          width,
          height
        } = visibleArea.size;
        const horizontalCenter = x + width / 2;
        const halfWidth = CARET_WIDTH;
        const left = horizontalCenter + halfWidth;
        const right = horizontalCenter - halfWidth;

        if (above < 0) {
          const topY = y + CARET_MARGIN;
          context.beginPath();
          context.moveTo(horizontalCenter, topY);
          context.lineTo(left, topY + CARET_HEIGHT);
          context.lineTo(right, topY + CARET_HEIGHT);
          context.closePath();
          context.fillStyle = COLORS.SCROLL_CARET;
          context.fill();
        }

        if (below < 0) {
          const bottomY = y + height - CARET_MARGIN;
          context.beginPath();
          context.moveTo(horizontalCenter, bottomY);
          context.lineTo(left, bottomY - CARET_HEIGHT);
          context.lineTo(right, bottomY - CARET_HEIGHT);
          context.closePath();
          context.fillStyle = COLORS.SCROLL_CARET;
          context.fill();
        }
      }
    }
  }

  layoutSubviews() {
    const {
      offset
    } = this._scrollState;

    const desiredSize = this._contentView.desiredSize();

    const minimumHeight = this.frame.size.height;
    const desiredHeight = desiredSize ? desiredSize.height : 0; // Force view to take up at least all remaining vertical space.

    const height = Math.max(desiredHeight, minimumHeight);
    const proposedFrame = {
      origin: {
        x: this.frame.origin.x,
        y: this.frame.origin.y + offset
      },
      size: {
        width: this.frame.size.width,
        height
      }
    };

    this._contentView.setFrame(proposedFrame);

    super.layoutSubviews();
  }

  handleInteraction(interaction) {
    switch (interaction.type) {
      case 'mousedown':
        return this._handleMouseDown(interaction);

      case 'mousemove':
        return this._handleMouseMove(interaction);

      case 'mouseup':
        return this._handleMouseUp(interaction);

      case 'wheel-shift':
        return this._handleWheelShift(interaction);
    }
  }

  onChange(callback) {
    this._onChangeCallback = callback;
  }

  scrollBy(deltaY) {
    const newState = translateState({
      state: this._scrollState,
      delta: -deltaY,
      containerLength: this.frame.size.height
    }); // If the state is updated by this wheel scroll,
    // return true to prevent the interaction from bubbling.
    // For instance, this prevents the outermost container from also scrolling.

    return this._setScrollState(newState);
  }

  _handleMouseDown(interaction) {
    if (rectContainsPoint(interaction.payload.location, this.frame)) {
      const frameHeight = this.frame.size.height;

      const contentHeight = this._contentView.desiredSize().height; // Don't claim drag operations if the content is not tall enough to be scrollable.
      // This would block any outer scroll views from working.


      if (frameHeight < contentHeight) {
        this._isPanning = true;
      }
    }
  }

  _handleMouseMove(interaction) {
    if (!this._isPanning) {
      return;
    } // Don't prevent mouse-move events from bubbling if they are horizontal drags.


    const {
      movementX,
      movementY
    } = interaction.payload.event;

    if (Math.abs(movementX) > Math.abs(movementY)) {
      return;
    }

    const newState = translateState({
      state: this._scrollState,
      delta: interaction.payload.event.movementY,
      containerLength: this.frame.size.height
    });

    this._setScrollState(newState);

    return true;
  }

  _handleMouseUp(interaction) {
    if (this._isPanning) {
      this._isPanning = false;
    }
  }

  _handleWheelShift(interaction) {
    const {
      location,
      delta: {
        deltaX,
        deltaY
      }
    } = interaction.payload;

    if (!rectContainsPoint(location, this.frame)) {
      return false; // Not scrolling on view
    }

    const absDeltaX = Math.abs(deltaX);
    const absDeltaY = Math.abs(deltaY);

    if (absDeltaX > absDeltaY) {
      return false; // Scrolling horizontally
    }

    if (absDeltaY < MOVE_WHEEL_DELTA_THRESHOLD) {
      return false; // Movement was too small and should be ignored.
    }

    return this.scrollBy(deltaY);
  }

  _restoreMutableViewState() {
    if (this._viewState.viewToMutableViewStateMap.has(this._mutableViewStateKey)) {
      this._scrollState = this._viewState.viewToMutableViewStateMap.get(this._mutableViewStateKey);
    } else {
      this._viewState.viewToMutableViewStateMap.set(this._mutableViewStateKey, this._scrollState);
    }

    this.setNeedsDisplay();
  }

  _setScrollState(proposedState) {
    const contentHeight = this._contentView.frame.size.height;
    const containerHeight = this.frame.size.height;
    const clampedState = clampState({
      state: proposedState,
      minContentLength: contentHeight,
      maxContentLength: contentHeight,
      containerLength: containerHeight
    });

    if (!areScrollStatesEqual(clampedState, this._scrollState)) {
      this._scrollState.offset = clampedState.offset;
      this._scrollState.length = clampedState.length;
      this.setNeedsDisplay();

      if (this._onChangeCallback !== null) {
        this._onChangeCallback(clampedState, this.frame.size.height);
      }

      return true;
    } // Don't allow wheel events to bubble past this view even if we've scrolled to the edge.
    // It just feels bad to have the scrolling jump unexpectedly from in a container to the outer page.
    // The only exception is when the container fits the content (no scrolling).


    if (contentHeight === containerHeight) {
      return false;
    }

    return true;
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/utils/text.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


const cachedTextWidths = new Map();
function getTextWidth(context, text) {
  let measuredWidth = cachedTextWidths.get(text);

  if (measuredWidth == null) {
    measuredWidth = context.measureText(text).width;
    cachedTextWidths.set(text, measuredWidth);
  }

  return measuredWidth;
}
function trimText(context, text, width) {
  const maxIndex = text.length - 1;
  let startIndex = 0;
  let stopIndex = maxIndex;
  let longestValidIndex = 0;
  let longestValidText = null; // Trimming long text could be really slow if we decrease only 1 character at a time.
  // Trimming with more of a binary search approach is faster in the worst cases.

  while (startIndex <= stopIndex) {
    const currentIndex = Math.floor((startIndex + stopIndex) / 2);
    const trimmedText = currentIndex === maxIndex ? text : text.slice(0, currentIndex) + '…';

    if (getTextWidth(context, trimmedText) <= width) {
      if (longestValidIndex < currentIndex) {
        longestValidIndex = currentIndex;
        longestValidText = trimmedText;
      }

      startIndex = currentIndex + 1;
    } else {
      stopIndex = currentIndex - 1;
    }
  }

  return longestValidText;
}
function drawText(text, context, fullRect, drawableRect, config) {
  const {
    fillStyle = COLORS.TEXT_COLOR,
    fontSize = FONT_SIZE,
    textAlign = 'left'
  } = config || {};

  if (fullRect.size.width > TEXT_PADDING * 2) {
    context.textAlign = textAlign;
    context.textBaseline = 'middle';
    context.font = `${fontSize}px sans-serif`;
    const {
      x,
      y
    } = fullRect.origin;
    const trimmedName = trimText(context, text, fullRect.size.width - TEXT_PADDING * 2 + (x < 0 ? x : 0));

    if (trimmedName !== null) {
      context.fillStyle = fillStyle; // Prevent text from visibly overflowing its container when clipped.

      const textOverflowsViewableArea = !rectEqualToRect(drawableRect, fullRect);

      if (textOverflowsViewableArea) {
        context.save();
        context.beginPath();
        context.rect(drawableRect.origin.x, drawableRect.origin.y, drawableRect.size.width, drawableRect.size.height);
        context.closePath();
        context.clip();
      }

      let textX;

      if (textAlign === 'center') {
        textX = x + fullRect.size.width / 2 + TEXT_PADDING - (x < 0 ? x : 0);
      } else {
        textX = x + TEXT_PADDING - (x < 0 ? x : 0);
      }

      const textY = y + fullRect.size.height / 2;
      context.fillText(trimmedName, textX, textY);

      if (textOverflowsViewableArea) {
        context.restore();
      }
    }
  }
}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/resizable/ResizeBarView.js
function ResizeBarView_defineProperty(obj, key, value) { key = ResizeBarView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function ResizeBarView_toPropertyKey(t) { var i = ResizeBarView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function ResizeBarView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






const RESIZE_BAR_DOT_RADIUS = 1;
const RESIZE_BAR_DOT_SPACING = 4;
const RESIZE_BAR_HEIGHT = 8;
const RESIZE_BAR_WITH_LABEL_HEIGHT = 16;
class ResizeBarView extends View {
  constructor(surface, frame, label) {
    super(surface, frame, noopLayout);

    ResizeBarView_defineProperty(this, "_interactionState", 'normal');

    ResizeBarView_defineProperty(this, "showLabel", false);

    this._label = label;
  }

  desiredSize() {
    return this.showLabel ? {
      height: RESIZE_BAR_WITH_LABEL_HEIGHT,
      width: 0
    } : {
      height: RESIZE_BAR_HEIGHT,
      width: 0
    };
  }

  draw(context, viewRefs) {
    const {
      frame
    } = this;
    const {
      x,
      y
    } = frame.origin;
    const {
      width,
      height
    } = frame.size;
    const isActive = this._interactionState === 'dragging' || this._interactionState === 'hovered' && viewRefs.activeView === null;
    context.fillStyle = isActive ? COLORS.REACT_RESIZE_BAR_ACTIVE : COLORS.REACT_RESIZE_BAR;
    context.fillRect(x, y, width, height);
    context.fillStyle = COLORS.REACT_RESIZE_BAR_BORDER;
    context.fillRect(x, y, width, BORDER_SIZE);
    context.fillRect(x, y + height - BORDER_SIZE, width, BORDER_SIZE);
    const horizontalCenter = x + width / 2;
    const verticalCenter = y + height / 2;

    if (this.showLabel) {
      // When the resize view is collapsed entirely,
      // rather than showing a resize bar– this view displays a label.
      const labelRect = {
        origin: {
          x: 0,
          y: y + height - RESIZE_BAR_WITH_LABEL_HEIGHT
        },
        size: {
          width: frame.size.width,
          height: RESIZE_BAR_WITH_LABEL_HEIGHT
        }
      };
      drawText(this._label, context, labelRect, frame, {
        fillStyle: COLORS.REACT_RESIZE_BAR_DOT,
        textAlign: 'center'
      });
    } else {
      // Otherwise draw horizontally centered resize bar dots
      context.beginPath();
      context.fillStyle = COLORS.REACT_RESIZE_BAR_DOT;
      context.arc(horizontalCenter, verticalCenter, RESIZE_BAR_DOT_RADIUS, 0, 2 * Math.PI);
      context.arc(horizontalCenter + RESIZE_BAR_DOT_SPACING, verticalCenter, RESIZE_BAR_DOT_RADIUS, 0, 2 * Math.PI);
      context.arc(horizontalCenter - RESIZE_BAR_DOT_SPACING, verticalCenter, RESIZE_BAR_DOT_RADIUS, 0, 2 * Math.PI);
      context.fill();
    }
  }

  _setInteractionState(state) {
    if (this._interactionState === state) {
      return;
    }

    this._interactionState = state;
    this.setNeedsDisplay();
  }

  _handleMouseDown(interaction, viewRefs) {
    const cursorInView = rectContainsPoint(interaction.payload.location, this.frame);

    if (cursorInView) {
      this._setInteractionState('dragging');

      viewRefs.activeView = this;
    }
  }

  _handleMouseMove(interaction, viewRefs) {
    const cursorInView = rectContainsPoint(interaction.payload.location, this.frame);

    if (viewRefs.activeView === this) {
      // If we're actively dragging this resize bar,
      // show the cursor even if the pointer isn't hovering over this view.
      this.currentCursor = 'ns-resize';
    } else if (cursorInView) {
      if (this.showLabel) {
        this.currentCursor = 'pointer';
      } else {
        this.currentCursor = 'ns-resize';
      }
    }

    if (cursorInView) {
      viewRefs.hoveredView = this;
    }

    if (this._interactionState === 'dragging') {
      return;
    }

    this._setInteractionState(cursorInView ? 'hovered' : 'normal');
  }

  _handleMouseUp(interaction, viewRefs) {
    const cursorInView = rectContainsPoint(interaction.payload.location, this.frame);

    if (this._interactionState === 'dragging') {
      this._setInteractionState(cursorInView ? 'hovered' : 'normal');
    }

    if (viewRefs.activeView === this) {
      viewRefs.activeView = null;
    }
  }

  handleInteraction(interaction, viewRefs) {
    switch (interaction.type) {
      case 'mousedown':
        this._handleMouseDown(interaction, viewRefs);

        break;

      case 'mousemove':
        this._handleMouseMove(interaction, viewRefs);

        break;

      case 'mouseup':
        this._handleMouseUp(interaction, viewRefs);

        break;
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/resizable/ResizableView.js
function ResizableView_defineProperty(obj, key, value) { key = ResizableView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function ResizableView_toPropertyKey(t) { var i = ResizableView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function ResizableView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






const ResizableView_RESIZE_BAR_HEIGHT = 8;
const ResizableView_RESIZE_BAR_WITH_LABEL_HEIGHT = 16;
const HIDDEN_RECT = {
  origin: {
    x: 0,
    y: 0
  },
  size: {
    width: 0,
    height: 0
  }
};
class ResizableView extends View {
  constructor(surface, frame, subview, viewState, canvasRef, label) {
    super(surface, frame, noopLayout);

    ResizableView_defineProperty(this, "_resizingState", null);

    this._canvasRef = canvasRef;
    this._layoutState = {
      barOffsetY: 0
    };
    this._mutableViewStateKey = label + ':ResizableView';
    this._subview = subview;
    this._resizeBar = new ResizeBarView(surface, frame, label);
    this._viewState = viewState;
    this.addSubview(this._subview);
    this.addSubview(this._resizeBar);

    this._restoreMutableViewState();
  }

  desiredSize() {
    const subviewDesiredSize = this._subview.desiredSize();

    if (this._shouldRenderResizeBar()) {
      const resizeBarDesiredSize = this._resizeBar.desiredSize();

      return {
        width: this.frame.size.width,
        height: this._layoutState.barOffsetY + resizeBarDesiredSize.height
      };
    } else {
      return {
        width: this.frame.size.width,
        height: subviewDesiredSize.height
      };
    }
  }

  layoutSubviews() {
    this._updateLayoutState();

    this._updateSubviewFrames();

    super.layoutSubviews();
  }

  _restoreMutableViewState() {
    if (this._viewState.viewToMutableViewStateMap.has(this._mutableViewStateKey)) {
      this._layoutState = this._viewState.viewToMutableViewStateMap.get(this._mutableViewStateKey);

      this._updateLayoutStateAndResizeBar(this._layoutState.barOffsetY);
    } else {
      this._viewState.viewToMutableViewStateMap.set(this._mutableViewStateKey, this._layoutState);

      const subviewDesiredSize = this._subview.desiredSize();

      this._updateLayoutStateAndResizeBar(subviewDesiredSize.maxInitialHeight != null ? Math.min(subviewDesiredSize.maxInitialHeight, subviewDesiredSize.height) : subviewDesiredSize.height);
    }

    this.setNeedsDisplay();
  }

  _shouldRenderResizeBar() {
    const subviewDesiredSize = this._subview.desiredSize();

    return subviewDesiredSize.hideScrollBarIfLessThanHeight != null ? subviewDesiredSize.height > subviewDesiredSize.hideScrollBarIfLessThanHeight : true;
  }

  _updateLayoutStateAndResizeBar(barOffsetY) {
    if (barOffsetY <= ResizableView_RESIZE_BAR_WITH_LABEL_HEIGHT - ResizableView_RESIZE_BAR_HEIGHT) {
      barOffsetY = 0;
    }

    this._layoutState.barOffsetY = barOffsetY;
    this._resizeBar.showLabel = barOffsetY === 0;
  }

  _updateLayoutState() {
    const {
      frame,
      _resizingState
    } = this; // Allow bar to travel to bottom of the visible area of this view but no further

    const subviewDesiredSize = this._subview.desiredSize();

    const maxBarOffset = subviewDesiredSize.height;
    let proposedBarOffsetY = this._layoutState.barOffsetY; // Update bar offset if dragging bar

    if (_resizingState) {
      const {
        mouseY,
        cursorOffsetInBarFrame
      } = _resizingState;
      proposedBarOffsetY = mouseY - frame.origin.y - cursorOffsetInBarFrame;
    }

    this._updateLayoutStateAndResizeBar(clamp(0, maxBarOffset, proposedBarOffsetY));
  }

  _updateSubviewFrames() {
    const {
      frame: {
        origin: {
          x,
          y
        },
        size: {
          width
        }
      },
      _layoutState: {
        barOffsetY
      }
    } = this;

    const resizeBarDesiredSize = this._resizeBar.desiredSize();

    if (barOffsetY === 0) {
      this._subview.setFrame(HIDDEN_RECT);
    } else {
      this._subview.setFrame({
        origin: {
          x,
          y
        },
        size: {
          width,
          height: barOffsetY
        }
      });
    }

    this._resizeBar.setFrame({
      origin: {
        x,
        y: y + barOffsetY
      },
      size: {
        width,
        height: resizeBarDesiredSize.height
      }
    });
  }

  _handleClick(interaction) {
    if (!this._shouldRenderResizeBar()) {
      return;
    }

    const cursorInView = rectContainsPoint(interaction.payload.location, this.frame);

    if (cursorInView) {
      if (this._layoutState.barOffsetY === 0) {
        // Clicking on the collapsed label should expand.
        const subviewDesiredSize = this._subview.desiredSize();

        this._updateLayoutStateAndResizeBar(subviewDesiredSize.height);

        this.setNeedsDisplay();
        return true;
      }
    }
  }

  _handleDoubleClick(interaction) {
    if (!this._shouldRenderResizeBar()) {
      return;
    }

    const cursorInView = rectContainsPoint(interaction.payload.location, this.frame);

    if (cursorInView) {
      if (this._layoutState.barOffsetY > 0) {
        // Double clicking on the expanded view should collapse.
        this._updateLayoutStateAndResizeBar(0);

        this.setNeedsDisplay();
        return true;
      }
    }
  }

  _handleMouseDown(interaction) {
    const cursorLocation = interaction.payload.location;
    const resizeBarFrame = this._resizeBar.frame;

    if (rectContainsPoint(cursorLocation, resizeBarFrame)) {
      const mouseY = cursorLocation.y;
      this._resizingState = {
        cursorOffsetInBarFrame: mouseY - resizeBarFrame.origin.y,
        mouseY
      };
      return true;
    }
  }

  _handleMouseMove(interaction) {
    const {
      _resizingState
    } = this;

    if (_resizingState) {
      this._resizingState = { ..._resizingState,
        mouseY: interaction.payload.location.y
      };
      this.setNeedsDisplay();
      return true;
    }
  }

  _handleMouseUp(interaction) {
    if (this._resizingState) {
      this._resizingState = null;
    }
  }

  getCursorActiveSubView(interaction) {
    const cursorLocation = interaction.payload.location;
    const resizeBarFrame = this._resizeBar.frame;

    if (rectContainsPoint(cursorLocation, resizeBarFrame)) {
      return this;
    } else {
      return null;
    }
  }

  handleInteraction(interaction, viewRefs) {
    switch (interaction.type) {
      case 'click':
        return this._handleClick(interaction);

      case 'double-click':
        return this._handleDoubleClick(interaction);

      case 'mousedown':
        return this._handleMouseDown(interaction);

      case 'mousemove':
        return this._handleMouseMove(interaction);

      case 'mouseup':
        return this._handleMouseUp(interaction);
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/resizable/index.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/utils/normalizeWheel.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
// Adapted from: https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js
// Reasonable defaults
const LINE_HEIGHT = 40;
const PAGE_HEIGHT = 800;
/**
 * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is
 * complicated, thus this doc is long and (hopefully) detailed enough to answer
 * your questions.
 *
 * If you need to react to the mouse wheel in a predictable way, this code is
 * like your bestest friend. * hugs *
 *
 * In your event callback, use this code to get sane interpretation of the
 * deltas.  This code will return an object with properties:
 *
 *   - deltaX  -- normalized distance (to pixels) - x plane
 *   - deltaY  -- " - y plane
 *
 * Wheel values are provided by the browser assuming you are using the wheel to
 * scroll a web page by a number of lines or pixels (or pages).  Values can vary
 * significantly on different platforms and browsers, forgetting that you can
 * scroll at different speeds.  Some devices (like trackpads) emit more events
 * at smaller increments with fine granularity, and some emit massive jumps with
 * linear speed or acceleration.
 *
 * This code does its best to normalize the deltas for you:
 *
 *   - delta* is normalizing the desired scroll delta in pixel units.
 *
 *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This
 *     should translate to positive value zooming IN, negative zooming OUT.
 *     This matches the 'wheel' event.
 *
 * Implementation info:
 *
 * The basics of the standard 'wheel' event is that it includes a unit,
 * deltaMode (pixels, lines, pages), and deltaX, deltaY and deltaZ.
 * See: http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents
 *
 * Examples of 'wheel' event if you scroll slowly (down) by one step with an
 * average mouse:
 *
 *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)
 *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)
 *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)
 *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)
 *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)
 *
 * On the trackpad:
 *
 *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)
 *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)
 */

function normalizeWheel(event) {
  let deltaX = event.deltaX;
  let deltaY = event.deltaY;

  if (event.deltaMode === WheelEvent.DOM_DELTA_LINE) {
    // delta in LINE units
    deltaX *= LINE_HEIGHT;
    deltaY *= LINE_HEIGHT;
  } else if (event.deltaMode === WheelEvent.DOM_DELTA_PAGE) {
    // delta in PAGE units
    deltaX *= PAGE_HEIGHT;
    deltaY *= PAGE_HEIGHT;
  }

  return {
    deltaX,
    deltaY
  };
}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/useCanvasInteraction.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


let canvasBoundingRectCache = null;

function cacheFirstGetCanvasBoundingRect(canvas) {
  if (canvasBoundingRectCache && canvas.width === canvasBoundingRectCache.width && canvas.height === canvasBoundingRectCache.height) {
    return canvasBoundingRectCache.rect;
  }

  canvasBoundingRectCache = {
    width: canvas.width,
    height: canvas.height,
    rect: canvas.getBoundingClientRect()
  };
  return canvasBoundingRectCache.rect;
}

function useCanvasInteraction(canvasRef, interactor) {
  const isMouseDownRef = (0,external_react_namespaceObject.useRef)(false);
  const didMouseMoveWhileDownRef = (0,external_react_namespaceObject.useRef)(false);
  (0,external_react_namespaceObject.useEffect)(() => {
    const canvas = canvasRef.current;

    if (!canvas) {
      return;
    }

    function localToCanvasCoordinates(localCoordinates) {
      // $FlowFixMe[incompatible-call] found when upgrading Flow
      const canvasRect = cacheFirstGetCanvasBoundingRect(canvas);
      return {
        x: localCoordinates.x - canvasRect.left,
        y: localCoordinates.y - canvasRect.top
      };
    }

    const onCanvasClick = event => {
      if (didMouseMoveWhileDownRef.current) {
        return;
      }

      interactor({
        type: 'click',
        payload: {
          event,
          location: localToCanvasCoordinates({
            x: event.x,
            y: event.y
          })
        }
      });
    };

    const onCanvasDoubleClick = event => {
      if (didMouseMoveWhileDownRef.current) {
        return;
      }

      interactor({
        type: 'double-click',
        payload: {
          event,
          location: localToCanvasCoordinates({
            x: event.x,
            y: event.y
          })
        }
      });
    };

    const onCanvasMouseDown = event => {
      didMouseMoveWhileDownRef.current = false;
      isMouseDownRef.current = true;
      interactor({
        type: 'mousedown',
        payload: {
          event,
          location: localToCanvasCoordinates({
            x: event.x,
            y: event.y
          })
        }
      });
    };

    const onDocumentMouseMove = event => {
      if (isMouseDownRef.current) {
        didMouseMoveWhileDownRef.current = true;
      }

      interactor({
        type: 'mousemove',
        payload: {
          event,
          location: localToCanvasCoordinates({
            x: event.x,
            y: event.y
          })
        }
      });
    };

    const onDocumentMouseUp = event => {
      isMouseDownRef.current = false;
      interactor({
        type: 'mouseup',
        payload: {
          event,
          location: localToCanvasCoordinates({
            x: event.x,
            y: event.y
          })
        }
      });
    };

    const onCanvasWheel = event => {
      event.preventDefault();
      event.stopPropagation();
      const location = localToCanvasCoordinates({
        x: event.x,
        y: event.y
      });
      const delta = normalizeWheel(event);

      if (event.shiftKey) {
        interactor({
          type: 'wheel-shift',
          payload: {
            event,
            location,
            delta
          }
        });
      } else if (event.ctrlKey) {
        interactor({
          type: 'wheel-control',
          payload: {
            event,
            location,
            delta
          }
        });
      } else if (event.metaKey) {
        interactor({
          type: 'wheel-meta',
          payload: {
            event,
            location,
            delta
          }
        });
      } else {
        interactor({
          type: 'wheel-plain',
          payload: {
            event,
            location,
            delta
          }
        });
      }

      return false;
    };

    const ownerDocument = canvas.ownerDocument;
    ownerDocument.addEventListener('mousemove', onDocumentMouseMove);
    ownerDocument.addEventListener('mouseup', onDocumentMouseUp);
    canvas.addEventListener('click', onCanvasClick);
    canvas.addEventListener('dblclick', onCanvasDoubleClick);
    canvas.addEventListener('mousedown', onCanvasMouseDown);
    canvas.addEventListener('wheel', onCanvasWheel);
    return () => {
      ownerDocument.removeEventListener('mousemove', onDocumentMouseMove);
      ownerDocument.removeEventListener('mouseup', onDocumentMouseUp);
      canvas.removeEventListener('click', onCanvasClick);
      canvas.removeEventListener('dblclick', onCanvasDoubleClick);
      canvas.removeEventListener('mousedown', onCanvasMouseDown);
      canvas.removeEventListener('wheel', onCanvasWheel);
    };
  }, [canvasRef, interactor]);
}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/vertical-scroll-overflow/withVerticalScrollbarLayout.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/**
 * Assumes {@param layout} will only contain 2 views.
 */
const withVerticalScrollbarLayout = (layout, containerFrame) => {
  const [contentLayoutInfo, scrollbarLayoutInfo] = layout;
  const desiredContentSize = contentLayoutInfo.view.desiredSize();
  const shouldShowScrollbar = desiredContentSize.height > containerFrame.size.height;
  const scrollbarWidth = shouldShowScrollbar ? scrollbarLayoutInfo.view.desiredSize().width : 0;
  const laidOutContentLayoutInfo = { ...contentLayoutInfo,
    frame: {
      origin: contentLayoutInfo.view.frame.origin,
      size: {
        width: containerFrame.size.width - scrollbarWidth,
        height: containerFrame.size.height
      }
    }
  };
  const laidOutScrollbarLayoutInfo = { ...scrollbarLayoutInfo,
    frame: {
      origin: {
        x: laidOutContentLayoutInfo.frame.origin.x + laidOutContentLayoutInfo.frame.size.width,
        y: containerFrame.origin.y
      },
      size: {
        width: scrollbarWidth,
        height: containerFrame.size.height
      }
    }
  };
  return [laidOutContentLayoutInfo, laidOutScrollbarLayoutInfo];
};
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/vertical-scroll-overflow/VerticalScrollOverflowView.js
function VerticalScrollOverflowView_defineProperty(obj, key, value) { key = VerticalScrollOverflowView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function VerticalScrollOverflowView_toPropertyKey(t) { var i = VerticalScrollOverflowView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function VerticalScrollOverflowView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




class VerticalScrollOverflowView extends View {
  constructor(surface, frame, contentView, viewState) {
    super(surface, frame, withVerticalScrollbarLayout);

    VerticalScrollOverflowView_defineProperty(this, "_isProcessingOnChange", false);

    VerticalScrollOverflowView_defineProperty(this, "_isScrolling", false);

    VerticalScrollOverflowView_defineProperty(this, "_scrollOffset", 0);

    VerticalScrollOverflowView_defineProperty(this, "_onVerticalScrollViewChange", (scrollState, containerLength) => {
      const maxOffset = scrollState.length - containerLength;

      if (maxOffset === 0) {
        return;
      }

      const percentage = Math.abs(scrollState.offset) / maxOffset;

      const maxScrollThumbY = this._scrollBarView.getMaxScrollThumbY();

      this._isProcessingOnChange = true;

      this._scrollBarView.setScrollThumbY(percentage * maxScrollThumbY);

      this._isProcessingOnChange = false;
    });

    this._contentView = contentView;
    this._verticalScrollView = new VerticalScrollView(surface, frame, contentView, viewState, 'VerticalScrollOverflowView');

    this._verticalScrollView.onChange(this._onVerticalScrollViewChange);

    this._scrollBarView = new VerticalScrollBarView(surface, frame, this);
    this.addSubview(this._verticalScrollView);
    this.addSubview(this._scrollBarView);
  }

  layoutSubviews() {
    super.layoutSubviews();

    const contentSize = this._contentView.desiredSize(); // This should be done after calling super.layoutSubviews() – calling it
    // before somehow causes _contentView to need display on every mousemove
    // event when the scroll bar is shown.


    this._scrollBarView.setContentHeight(contentSize.height);
  }

  setScrollOffset(newScrollOffset, maxScrollOffset) {
    const deltaY = newScrollOffset - this._scrollOffset;

    if (!this._isProcessingOnChange) {
      this._verticalScrollView.scrollBy(-deltaY);
    }

    this._scrollOffset = newScrollOffset;
    this.setNeedsDisplay();
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/vertical-scroll-overflow/VerticalScrollBarView.js
function VerticalScrollBarView_defineProperty(obj, key, value) { key = VerticalScrollBarView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function VerticalScrollBarView_toPropertyKey(t) { var i = VerticalScrollBarView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function VerticalScrollBarView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




const SCROLL_BAR_SIZE = 14;
const VerticalScrollBarView_HIDDEN_RECT = {
  origin: {
    x: 0,
    y: 0
  },
  size: {
    width: 0,
    height: 0
  }
};
class VerticalScrollBarView extends View {
  constructor(surface, frame, verticalScrollOverflowView) {
    super(surface, frame);

    VerticalScrollBarView_defineProperty(this, "_contentHeight", 0);

    VerticalScrollBarView_defineProperty(this, "_isScrolling", false);

    VerticalScrollBarView_defineProperty(this, "_scrollBarRect", VerticalScrollBarView_HIDDEN_RECT);

    VerticalScrollBarView_defineProperty(this, "_scrollThumbRect", VerticalScrollBarView_HIDDEN_RECT);

    this._verticalScrollOverflowView = verticalScrollOverflowView;
  }

  desiredSize() {
    return {
      width: SCROLL_BAR_SIZE,
      height: 0 // No desired height

    };
  }

  getMaxScrollThumbY() {
    const {
      height
    } = this.frame.size;
    const maxScrollThumbY = height - this._scrollThumbRect.size.height;
    return maxScrollThumbY;
  }

  setContentHeight(contentHeight) {
    this._contentHeight = contentHeight;
    const {
      height,
      width
    } = this.frame.size;
    const proposedScrollThumbRect = {
      origin: {
        x: this.frame.origin.x,
        y: this._scrollThumbRect.origin.y
      },
      size: {
        width,
        height: height * (height / contentHeight)
      }
    };

    if (!rectEqualToRect(this._scrollThumbRect, proposedScrollThumbRect)) {
      this._scrollThumbRect = proposedScrollThumbRect;
      this.setNeedsDisplay();
    }
  }

  setScrollThumbY(value) {
    const {
      height
    } = this.frame.size;
    const maxScrollThumbY = this.getMaxScrollThumbY();
    const newScrollThumbY = Math.max(0, Math.min(maxScrollThumbY, value));
    this._scrollThumbRect = { ...this._scrollThumbRect,
      origin: {
        x: this.frame.origin.x,
        y: newScrollThumbY
      }
    };
    const maxContentOffset = this._contentHeight - height;
    const contentScrollOffset = newScrollThumbY / maxScrollThumbY * maxContentOffset * -1;

    this._verticalScrollOverflowView.setScrollOffset(contentScrollOffset, maxScrollThumbY);
  }

  draw(context, viewRefs) {
    const {
      x,
      y
    } = this.frame.origin;
    const {
      width,
      height
    } = this.frame.size; // TODO Use real color

    context.fillStyle = COLORS.REACT_RESIZE_BAR;
    context.fillRect(x, y, width, height); // TODO Use real color

    context.fillStyle = COLORS.SCROLL_CARET;
    context.fillRect(this._scrollThumbRect.origin.x, this._scrollThumbRect.origin.y, this._scrollThumbRect.size.width, this._scrollThumbRect.size.height); // TODO Use real color

    context.fillStyle = COLORS.REACT_RESIZE_BAR_BORDER;
    context.fillRect(x, y, BORDER_SIZE, height);
  }

  handleInteraction(interaction, viewRefs) {
    switch (interaction.type) {
      case 'click':
        this._handleClick(interaction, viewRefs);

        break;

      case 'mousedown':
        this._handleMouseDown(interaction, viewRefs);

        break;

      case 'mousemove':
        this._handleMouseMove(interaction, viewRefs);

        break;

      case 'mouseup':
        this._handleMouseUp(interaction, viewRefs);

        break;
    }
  }

  _handleClick(interaction, viewRefs) {
    const {
      location
    } = interaction.payload;

    if (rectContainsPoint(location, this.frame)) {
      if (rectContainsPoint(location, this._scrollThumbRect)) {
        // Ignore clicks on the track thumb directly.
        return;
      }

      const currentScrollThumbY = this._scrollThumbRect.origin.y;
      const y = location.y;
      const {
        height
      } = this.frame.size; // Scroll up or down about one viewport worth of content:

      const deltaY = height / this._contentHeight * height * 0.8;
      this.setScrollThumbY(y > currentScrollThumbY ? this._scrollThumbRect.origin.y + deltaY : this._scrollThumbRect.origin.y - deltaY);
    }
  }

  _handleMouseDown(interaction, viewRefs) {
    const {
      location
    } = interaction.payload;

    if (!rectContainsPoint(location, this._scrollThumbRect)) {
      return;
    }

    viewRefs.activeView = this;
    this.currentCursor = 'default';
    this._isScrolling = true;
    this.setNeedsDisplay();
  }

  _handleMouseMove(interaction, viewRefs) {
    const {
      event,
      location
    } = interaction.payload;

    if (rectContainsPoint(location, this.frame)) {
      if (viewRefs.hoveredView !== this) {
        viewRefs.hoveredView = this;
      }

      this.currentCursor = 'default';
    }

    if (viewRefs.activeView === this) {
      this.currentCursor = 'default';
      this.setScrollThumbY(this._scrollThumbRect.origin.y + event.movementY);
    }
  }

  _handleMouseUp(interaction, viewRefs) {
    if (viewRefs.activeView === this) {
      viewRefs.activeView = null;
    }

    if (this._isScrolling) {
      this._isScrolling = false;
      this.setNeedsDisplay();
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/vertical-scroll-overflow/index.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


;// CONCATENATED MODULE: ../react-devtools-timeline/src/view-base/index.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */










;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/utils/positioning.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
function positioningScaleFactor(intrinsicWidth, frame) {
  return frame.size.width / intrinsicWidth;
}
function timestampToPosition(timestamp, scaleFactor, frame) {
  return frame.origin.x + timestamp * scaleFactor;
}
function positionToTimestamp(position, scaleFactor, frame) {
  return (position - frame.origin.x) / scaleFactor;
}
function durationToWidth(duration, scaleFactor) {
  return duration * scaleFactor;
}
function widthToDuration(width, scaleFactor) {
  return width / scaleFactor;
}
// EXTERNAL MODULE: ../../node_modules/pretty-ms/index.js
var pretty_ms = __webpack_require__(7779);
var pretty_ms_default = /*#__PURE__*/__webpack_require__.n(pretty_ms);
;// CONCATENATED MODULE: ../react-devtools-timeline/src/utils/formatting.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function formatTimestamp(ms) {
  return ms.toLocaleString(undefined, {
    minimumFractionDigits: 1,
    maximumFractionDigits: 1
  }) + 'ms';
}
function formatting_formatDuration(ms) {
  return pretty_ms_default()(ms, {
    millisecondsDecimalDigits: 1
  });
}
function trimString(string, length) {
  if (string.length > length) {
    return `${string.slice(0, length - 1)}…`;
  }

  return string;
}
function getSchedulingEventLabel(event) {
  switch (event.type) {
    case 'schedule-render':
      return 'render scheduled';

    case 'schedule-state-update':
      return 'state update scheduled';

    case 'schedule-force-update':
      return 'force update scheduled';

    default:
      return null;
  }
}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/ComponentMeasuresView.js
function ComponentMeasuresView_defineProperty(obj, key, value) { key = ComponentMeasuresView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function ComponentMeasuresView_toPropertyKey(t) { var i = ComponentMeasuresView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function ComponentMeasuresView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





const ROW_WITH_BORDER_HEIGHT = NATIVE_EVENT_HEIGHT + BORDER_SIZE;
class ComponentMeasuresView extends View {
  constructor(surface, frame, profilerData, viewState) {
    super(surface, frame);

    ComponentMeasuresView_defineProperty(this, "_cachedSearchRegExp", null);

    ComponentMeasuresView_defineProperty(this, "_hoveredComponentMeasure", null);

    ComponentMeasuresView_defineProperty(this, "onHover", null);

    this._profilerData = profilerData;
    this._viewState = viewState;
    this._cachedSearchMatches = new Map();
    this._cachedSearchRegExp = null;
    viewState.onSearchRegExpStateChange(() => {
      this.setNeedsDisplay();
    });
    this._intrinsicSize = {
      width: profilerData.duration,
      height: ROW_WITH_BORDER_HEIGHT
    };
  }

  desiredSize() {
    return this._intrinsicSize;
  }

  setHoveredEvent(hoveredEvent) {
    if (this._hoveredComponentMeasure === hoveredEvent) {
      return;
    }

    this._hoveredComponentMeasure = hoveredEvent;
    this.setNeedsDisplay();
  }
  /**
   * Draw a single `ReactComponentMeasure` as a box/span with text inside of it.
   */


  _drawSingleReactComponentMeasure(context, rect, componentMeasure, scaleFactor, showHoverHighlight) {
    const {
      frame
    } = this;
    const {
      componentName,
      duration,
      timestamp,
      type,
      warning
    } = componentMeasure;
    const xStart = timestampToPosition(timestamp, scaleFactor, frame);
    const xStop = timestampToPosition(timestamp + duration, scaleFactor, frame);
    const componentMeasureRect = {
      origin: {
        x: xStart,
        y: frame.origin.y
      },
      size: {
        width: xStop - xStart,
        height: NATIVE_EVENT_HEIGHT
      }
    };

    if (!rectIntersectsRect(componentMeasureRect, rect)) {
      return false; // Not in view
    }

    const width = durationToWidth(duration, scaleFactor);

    if (width < 1) {
      return false; // Too small to render at this zoom level
    }

    let textFillStyle = null;
    let typeLabel = null;
    const drawableRect = intersectionOfRects(componentMeasureRect, rect);
    context.beginPath();

    if (warning !== null) {
      context.fillStyle = showHoverHighlight ? COLORS.WARNING_BACKGROUND_HOVER : COLORS.WARNING_BACKGROUND;
    } else {
      switch (type) {
        case 'render':
          context.fillStyle = showHoverHighlight ? COLORS.REACT_RENDER_HOVER : COLORS.REACT_RENDER;
          textFillStyle = COLORS.REACT_RENDER_TEXT;
          typeLabel = 'rendered';
          break;

        case 'layout-effect-mount':
          context.fillStyle = showHoverHighlight ? COLORS.REACT_LAYOUT_EFFECTS_HOVER : COLORS.REACT_LAYOUT_EFFECTS;
          textFillStyle = COLORS.REACT_LAYOUT_EFFECTS_TEXT;
          typeLabel = 'mounted layout effect';
          break;

        case 'layout-effect-unmount':
          context.fillStyle = showHoverHighlight ? COLORS.REACT_LAYOUT_EFFECTS_HOVER : COLORS.REACT_LAYOUT_EFFECTS;
          textFillStyle = COLORS.REACT_LAYOUT_EFFECTS_TEXT;
          typeLabel = 'unmounted layout effect';
          break;

        case 'passive-effect-mount':
          context.fillStyle = showHoverHighlight ? COLORS.REACT_PASSIVE_EFFECTS_HOVER : COLORS.REACT_PASSIVE_EFFECTS;
          textFillStyle = COLORS.REACT_PASSIVE_EFFECTS_TEXT;
          typeLabel = 'mounted passive effect';
          break;

        case 'passive-effect-unmount':
          context.fillStyle = showHoverHighlight ? COLORS.REACT_PASSIVE_EFFECTS_HOVER : COLORS.REACT_PASSIVE_EFFECTS;
          textFillStyle = COLORS.REACT_PASSIVE_EFFECTS_TEXT;
          typeLabel = 'unmounted passive effect';
          break;
      }
    }

    let isMatch = false;
    const cachedSearchRegExp = this._cachedSearchRegExp;

    if (cachedSearchRegExp !== null) {
      const cachedSearchMatches = this._cachedSearchMatches;
      const cachedValue = cachedSearchMatches.get(componentName);

      if (cachedValue != null) {
        isMatch = cachedValue;
      } else {
        isMatch = componentName.match(cachedSearchRegExp) !== null;
        cachedSearchMatches.set(componentName, isMatch);
      }
    }

    if (isMatch) {
      context.fillStyle = COLORS.SEARCH_RESULT_FILL;
    }

    context.fillRect(drawableRect.origin.x, drawableRect.origin.y, drawableRect.size.width, drawableRect.size.height);
    const label = `${componentName} ${typeLabel} - ${formatting_formatDuration(duration)}`;
    drawText(label, context, componentMeasureRect, drawableRect, {
      fillStyle: textFillStyle
    });
    return true;
  }

  draw(context) {
    const {
      frame,
      _profilerData: {
        componentMeasures
      },
      _hoveredComponentMeasure,
      visibleArea
    } = this;
    const searchRegExp = this._viewState.searchRegExp;

    if (this._cachedSearchRegExp !== searchRegExp) {
      this._cachedSearchMatches = new Map();
      this._cachedSearchRegExp = searchRegExp;
    }

    context.fillStyle = COLORS.BACKGROUND;
    context.fillRect(visibleArea.origin.x, visibleArea.origin.y, visibleArea.size.width, visibleArea.size.height); // Draw events

    const scaleFactor = positioningScaleFactor(this._intrinsicSize.width, frame);
    let didDrawMeasure = false;
    componentMeasures.forEach(componentMeasure => {
      didDrawMeasure = this._drawSingleReactComponentMeasure(context, visibleArea, componentMeasure, scaleFactor, componentMeasure === _hoveredComponentMeasure) || didDrawMeasure;
    });

    if (!didDrawMeasure) {
      drawText('(zoom or pan to see React components)', context, visibleArea, visibleArea, {
        fillStyle: COLORS.TEXT_DIM_COLOR,
        textAlign: 'center'
      });
    }

    context.fillStyle = COLORS.PRIORITY_BORDER;
    context.fillRect(visibleArea.origin.x, visibleArea.origin.y + ROW_WITH_BORDER_HEIGHT - BORDER_SIZE, visibleArea.size.width, BORDER_SIZE);
  }
  /**
   * @private
   */


  _handleMouseMove(interaction, viewRefs) {
    const {
      frame,
      _intrinsicSize,
      onHover,
      visibleArea
    } = this;

    if (!onHover) {
      return;
    }

    const {
      location
    } = interaction.payload;

    if (!rectContainsPoint(location, visibleArea)) {
      onHover(null);
      return;
    }

    const scaleFactor = positioningScaleFactor(_intrinsicSize.width, frame);
    const hoverTimestamp = positionToTimestamp(location.x, scaleFactor, frame);
    const componentMeasures = this._profilerData.componentMeasures;

    for (let index = componentMeasures.length - 1; index >= 0; index--) {
      const componentMeasure = componentMeasures[index];
      const {
        duration,
        timestamp
      } = componentMeasure;

      if (hoverTimestamp >= timestamp && hoverTimestamp <= timestamp + duration) {
        this.currentCursor = 'context-menu';
        viewRefs.hoveredView = this;
        onHover(componentMeasure);
        return;
      }
    }

    onHover(null);
  }

  handleInteraction(interaction, viewRefs) {
    switch (interaction.type) {
      case 'mousemove':
        this._handleMouseMove(interaction, viewRefs);

        break;
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/utils/moduleFilters.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function isInternalModule(internalModuleSourceToRanges, flamechartStackFrame) {
  const {
    locationColumn,
    locationLine,
    scriptUrl
  } = flamechartStackFrame;

  if (scriptUrl == null || locationColumn == null || locationLine == null) {
    // This could indicate a browser-internal API like performance.mark().
    return false;
  } // Internal modules are only registered if DevTools was running when the profile was captured,
  // but DevTools should also hide its own frames to avoid over-emphasizing them.


  if ( // Handle webpack-internal:// sources
  scriptUrl.includes('/react-devtools') || scriptUrl.includes('/react_devtools') || // Filter out known extension IDs
  scriptUrl.includes(CHROME_WEBSTORE_EXTENSION_ID) || scriptUrl.includes(INTERNAL_EXTENSION_ID) || scriptUrl.includes(LOCAL_EXTENSION_ID) // Unfortunately this won't get everything, like relatively loaded chunks or Web Worker files.
  ) {
    return true;
  } // Filter out React internal packages.


  const ranges = internalModuleSourceToRanges.get(scriptUrl);

  if (ranges != null) {
    for (let i = 0; i < ranges.length; i++) {
      const [startStackFrame, stopStackFrame] = ranges[i];
      const isAfterStart = locationLine > startStackFrame.lineNumber || locationLine === startStackFrame.lineNumber && locationColumn >= startStackFrame.columnNumber;
      const isBeforeStop = locationLine < stopStackFrame.lineNumber || locationLine === stopStackFrame.lineNumber && locationColumn <= stopStackFrame.columnNumber;

      if (isAfterStart && isBeforeStop) {
        return true;
      }
    }
  }

  return false;
}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/utils/colors.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
// Docstrings from https://www.w3schools.com/css/css_colors_hsl.asp
function hslaColorToString({
  h,
  s,
  l,
  a
}) {
  return `hsl(${h}deg ${s}% ${l}% / ${a})`;
}
function dimmedColor(color, dimDelta) {
  return { ...color,
    l: color.l - dimDelta
  };
} // Source: https://source.chromium.org/chromium/chromium/src/+/master:out/Debug/gen/devtools/platform/utilities.js;l=120

function hashCode(string) {
  // Hash algorithm for substrings is described in "Über die Komplexität der Multiplikation in
  // eingeschränkten Branchingprogrammmodellen" by Woelfe.
  // http://opendatastructures.org/versions/edition-0.1d/ods-java/node33.html#SECTION00832000000000000000
  const p = (1 << 30) * 4 - 5; // prime: 2^32 - 5

  const z = 0x5033d967; // 32 bits from random.org

  const z2 = 0x59d2f15d; // random odd 32 bit number

  let s = 0;
  let zi = 1;

  for (let i = 0; i < string.length; i++) {
    const xi = string.charCodeAt(i) * z2;
    s = (s + zi * xi) % p;
    zi = zi * z % p;
  }

  s = (s + zi * (p - 1)) % p;
  return Math.abs(s | 0);
}

function indexToValueInSpace(index, space) {
  if (typeof space === 'number') {
    return space;
  }

  const count = space.count || space.max - space.min;
  index %= count;
  return space.min + Math.floor(index / (count - 1) * (space.max - space.min));
}
/**
 * Deterministic color generator.
 *
 * Adapted from: https://source.chromium.org/chromium/chromium/src/+/master:out/Debug/gen/devtools/common/Color.js
 */


class ColorGenerator {
  constructor(hueSpace, satSpace, lightnessSpace, alphaSpace) {
    this._hueSpace = hueSpace || {
      min: 0,
      max: 360
    };
    this._satSpace = satSpace || 67;
    this._lightnessSpace = lightnessSpace || 80;
    this._alphaSpace = alphaSpace || 1;
    this._colors = new Map();
  }

  setColorForID(id, color) {
    this._colors.set(id, color);
  }

  colorForID(id) {
    const cachedColor = this._colors.get(id);

    if (cachedColor) {
      return cachedColor;
    }

    const color = this._generateColorForID(id);

    this._colors.set(id, color);

    return color;
  }

  _generateColorForID(id) {
    const hash = hashCode(id);
    return {
      h: indexToValueInSpace(hash, this._hueSpace),
      s: indexToValueInSpace(hash >> 8, this._satSpace),
      l: indexToValueInSpace(hash >> 16, this._lightnessSpace),
      a: indexToValueInSpace(hash >> 24, this._alphaSpace)
    };
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/FlamechartView.js
function FlamechartView_defineProperty(obj, key, value) { key = FlamechartView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function FlamechartView_toPropertyKey(t) { var i = FlamechartView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function FlamechartView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





 // Source: https://source.chromium.org/chromium/chromium/src/+/master:out/Debug/gen/devtools/timeline/TimelineUIUtils.js;l=2109;drc=fb32e928d79707a693351b806b8710b2f6b7d399

const colorGenerator = new ColorGenerator({
  min: 30,
  max: 330
}, {
  min: 50,
  max: 80,
  count: 3
}, 85);
colorGenerator.setColorForID('', {
  h: 43.6,
  s: 45.8,
  l: 90.6,
  a: 100
});

function defaultHslaColorForStackFrame({
  scriptUrl
}) {
  return colorGenerator.colorForID(scriptUrl ?? '');
}

function defaultColorForStackFrame(stackFrame) {
  const color = defaultHslaColorForStackFrame(stackFrame);
  return hslaColorToString(color);
}

function hoverColorForStackFrame(stackFrame) {
  const color = dimmedColor(defaultHslaColorForStackFrame(stackFrame), COLOR_HOVER_DIM_DELTA);
  return hslaColorToString(color);
}

class FlamechartStackLayerView extends View {
  /** Layer to display */

  /** A set of `stackLayer`'s frames, for efficient lookup. */
  constructor(surface, frame, stackLayer, internalModuleSourceToRanges, duration) {
    super(surface, frame);

    FlamechartView_defineProperty(this, "_hoveredStackFrame", null);

    FlamechartView_defineProperty(this, "_onHover", null);

    FlamechartView_defineProperty(this, "_didGrab", false);

    this._stackLayer = stackLayer;
    this._stackFrameSet = new Set(stackLayer);
    this._internalModuleSourceToRanges = internalModuleSourceToRanges;
    this._intrinsicSize = {
      width: duration,
      height: FLAMECHART_FRAME_HEIGHT
    };
  }

  desiredSize() {
    return this._intrinsicSize;
  }

  setHoveredFlamechartStackFrame(hoveredStackFrame) {
    if (this._hoveredStackFrame === hoveredStackFrame) {
      return; // We're already hovering over this frame
    } // Only care about frames displayed by this view.


    const stackFrameToSet = hoveredStackFrame && this._stackFrameSet.has(hoveredStackFrame) ? hoveredStackFrame : null;

    if (this._hoveredStackFrame === stackFrameToSet) {
      return; // Resulting state is unchanged
    }

    this._hoveredStackFrame = stackFrameToSet;
    this.setNeedsDisplay();
  }

  draw(context) {
    const {
      frame,
      _stackLayer,
      _hoveredStackFrame,
      _intrinsicSize,
      visibleArea
    } = this;
    context.fillStyle = COLORS.PRIORITY_BACKGROUND;
    context.fillRect(visibleArea.origin.x, visibleArea.origin.y, visibleArea.size.width, visibleArea.size.height);
    const scaleFactor = positioningScaleFactor(_intrinsicSize.width, frame);

    for (let i = 0; i < _stackLayer.length; i++) {
      const stackFrame = _stackLayer[i];
      const {
        name,
        timestamp,
        duration
      } = stackFrame;
      const width = durationToWidth(duration, scaleFactor);

      if (width < 1) {
        continue; // Too small to render at this zoom level
      }

      const x = Math.floor(timestampToPosition(timestamp, scaleFactor, frame));
      const nodeRect = {
        origin: {
          x,
          y: frame.origin.y
        },
        size: {
          width: Math.floor(width - BORDER_SIZE),
          height: Math.floor(FLAMECHART_FRAME_HEIGHT - BORDER_SIZE)
        }
      };

      if (!rectIntersectsRect(nodeRect, visibleArea)) {
        continue; // Not in view
      }

      const showHoverHighlight = _hoveredStackFrame === _stackLayer[i];
      let textFillStyle;

      if (isInternalModule(this._internalModuleSourceToRanges, stackFrame)) {
        context.fillStyle = showHoverHighlight ? COLORS.INTERNAL_MODULE_FRAME_HOVER : COLORS.INTERNAL_MODULE_FRAME;
        textFillStyle = COLORS.INTERNAL_MODULE_FRAME_TEXT;
      } else {
        context.fillStyle = showHoverHighlight ? hoverColorForStackFrame(stackFrame) : defaultColorForStackFrame(stackFrame);
        textFillStyle = COLORS.TEXT_COLOR;
      }

      const drawableRect = intersectionOfRects(nodeRect, visibleArea);
      context.fillRect(drawableRect.origin.x, drawableRect.origin.y, drawableRect.size.width, drawableRect.size.height);
      drawText(name, context, nodeRect, drawableRect, {
        fillStyle: textFillStyle
      });
    } // Render bottom border.


    const borderFrame = {
      origin: {
        x: frame.origin.x,
        y: frame.origin.y + FLAMECHART_FRAME_HEIGHT - BORDER_SIZE
      },
      size: {
        width: frame.size.width,
        height: BORDER_SIZE
      }
    };

    if (rectIntersectsRect(borderFrame, visibleArea)) {
      const borderDrawableRect = intersectionOfRects(borderFrame, visibleArea);
      context.fillStyle = COLORS.PRIORITY_BORDER;
      context.fillRect(borderDrawableRect.origin.x, borderDrawableRect.origin.y, borderDrawableRect.size.width, borderDrawableRect.size.height);
    }
  }
  /**
   * @private
   */


  _handleMouseMove(interaction, viewRefs) {
    const {
      _stackLayer,
      frame,
      _intrinsicSize,
      _onHover,
      visibleArea
    } = this;
    const {
      location
    } = interaction.payload;

    if (!_onHover || !rectContainsPoint(location, visibleArea)) {
      return;
    } // Find the node being hovered over.


    const scaleFactor = positioningScaleFactor(_intrinsicSize.width, frame);
    let startIndex = 0;
    let stopIndex = _stackLayer.length - 1;

    while (startIndex <= stopIndex) {
      const currentIndex = Math.floor((startIndex + stopIndex) / 2);
      const flamechartStackFrame = _stackLayer[currentIndex];
      const {
        timestamp,
        duration
      } = flamechartStackFrame;
      const x = Math.floor(timestampToPosition(timestamp, scaleFactor, frame));
      const width = durationToWidth(duration, scaleFactor); // Don't show tooltips for nodes that are too small to render at this zoom level.

      if (Math.floor(width - BORDER_SIZE) >= 1) {
        if (x <= location.x && x + width >= location.x) {
          this.currentCursor = 'context-menu';
          viewRefs.hoveredView = this;

          _onHover(flamechartStackFrame);

          return;
        }
      }

      if (x > location.x) {
        stopIndex = currentIndex - 1;
      } else {
        startIndex = currentIndex + 1;
      }
    }

    _onHover(null);
  }

  handleInteraction(interaction, viewRefs) {
    switch (interaction.type) {
      case 'mousemove':
        this._handleMouseMove(interaction, viewRefs);

        break;
    }
  }

}

class FlamechartView extends View {
  /** Container view that vertically stacks flamechart rows */
  constructor(surface, frame, flamechart, internalModuleSourceToRanges, duration) {
    super(surface, frame, layeredLayout);

    FlamechartView_defineProperty(this, "_flamechartRowViews", []);

    FlamechartView_defineProperty(this, "_hoveredStackFrame", null);

    FlamechartView_defineProperty(this, "_onHover", null);

    this.setDataAndUpdateSubviews(flamechart, internalModuleSourceToRanges, duration);
  }

  setDataAndUpdateSubviews(flamechart, internalModuleSourceToRanges, duration) {
    const {
      surface,
      frame,
      _onHover,
      _hoveredStackFrame
    } = this; // Clear existing rows on data update

    if (this._verticalStackView) {
      this.removeAllSubviews();
      this._flamechartRowViews = [];
    }

    this._verticalStackView = new View(surface, frame, verticallyStackedLayout);
    this._flamechartRowViews = flamechart.map(stackLayer => {
      const rowView = new FlamechartStackLayerView(surface, frame, stackLayer, internalModuleSourceToRanges, duration);

      this._verticalStackView.addSubview(rowView); // Update states


      rowView._onHover = _onHover;
      rowView.setHoveredFlamechartStackFrame(_hoveredStackFrame);
      return rowView;
    }); // Add a plain background view to prevent gaps from appearing between flamechartRowViews.

    this.addSubview(new BackgroundColorView(surface, frame));
    this.addSubview(this._verticalStackView);
  }

  setHoveredFlamechartStackFrame(hoveredStackFrame) {
    this._hoveredStackFrame = hoveredStackFrame;

    this._flamechartRowViews.forEach(rowView => rowView.setHoveredFlamechartStackFrame(hoveredStackFrame));
  }

  setOnHover(onHover) {
    this._onHover = onHover;

    this._flamechartRowViews.forEach(rowView => rowView._onHover = onHover);
  }

  desiredSize() {
    // Ignore the wishes of the background color view
    const intrinsicSize = this._verticalStackView.desiredSize();

    return { ...intrinsicSize,
      // Collapsed by default
      maxInitialHeight: 0
    };
  }
  /**
   * @private
   */


  _handleMouseMove(interaction) {
    const {
      _onHover,
      visibleArea
    } = this;

    if (!_onHover) {
      return;
    }

    const {
      location
    } = interaction.payload;

    if (!rectContainsPoint(location, visibleArea)) {
      // Clear out any hovered flamechart stack frame
      _onHover(null);
    }
  }

  handleInteraction(interaction) {
    switch (interaction.type) {
      case 'mousemove':
        this._handleMouseMove(interaction);

        break;
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/NativeEventsView.js
function NativeEventsView_defineProperty(obj, key, value) { key = NativeEventsView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function NativeEventsView_toPropertyKey(t) { var i = NativeEventsView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function NativeEventsView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





const NativeEventsView_ROW_WITH_BORDER_HEIGHT = NATIVE_EVENT_HEIGHT + BORDER_SIZE;
class NativeEventsView extends View {
  constructor(surface, frame, profilerData) {
    super(surface, frame);

    NativeEventsView_defineProperty(this, "_hoveredEvent", null);

    NativeEventsView_defineProperty(this, "_maxDepth", 0);

    NativeEventsView_defineProperty(this, "onHover", null);

    this._profilerData = profilerData;

    this._performPreflightComputations();
  }

  _performPreflightComputations() {
    this._depthToNativeEvent = new Map();
    const {
      duration,
      nativeEvents
    } = this._profilerData;
    nativeEvents.forEach(event => {
      const depth = event.depth;
      this._maxDepth = Math.max(this._maxDepth, depth);

      if (!this._depthToNativeEvent.has(depth)) {
        this._depthToNativeEvent.set(depth, [event]);
      } else {
        // $FlowFixMe[incompatible-use] This is unnecessary.
        this._depthToNativeEvent.get(depth).push(event);
      }
    });
    this._intrinsicSize = {
      width: duration,
      height: (this._maxDepth + 1) * NativeEventsView_ROW_WITH_BORDER_HEIGHT,
      hideScrollBarIfLessThanHeight: NativeEventsView_ROW_WITH_BORDER_HEIGHT
    };
  }

  desiredSize() {
    return this._intrinsicSize;
  }

  setHoveredEvent(hoveredEvent) {
    if (this._hoveredEvent === hoveredEvent) {
      return;
    }

    this._hoveredEvent = hoveredEvent;
    this.setNeedsDisplay();
  }
  /**
   * Draw a single `NativeEvent` as a box/span with text inside of it.
   */


  _drawSingleNativeEvent(context, rect, event, baseY, scaleFactor, showHoverHighlight) {
    const {
      frame
    } = this;
    const {
      depth,
      duration,
      timestamp,
      type,
      warning
    } = event;
    baseY += depth * NativeEventsView_ROW_WITH_BORDER_HEIGHT;
    const xStart = timestampToPosition(timestamp, scaleFactor, frame);
    const xStop = timestampToPosition(timestamp + duration, scaleFactor, frame);
    const eventRect = {
      origin: {
        x: xStart,
        y: baseY
      },
      size: {
        width: xStop - xStart,
        height: NATIVE_EVENT_HEIGHT
      }
    };

    if (!rectIntersectsRect(eventRect, rect)) {
      return; // Not in view
    }

    const width = durationToWidth(duration, scaleFactor);

    if (width < 1) {
      return; // Too small to render at this zoom level
    }

    const drawableRect = intersectionOfRects(eventRect, rect);
    context.beginPath();

    if (warning !== null) {
      context.fillStyle = showHoverHighlight ? COLORS.WARNING_BACKGROUND_HOVER : COLORS.WARNING_BACKGROUND;
    } else {
      context.fillStyle = showHoverHighlight ? COLORS.NATIVE_EVENT_HOVER : COLORS.NATIVE_EVENT;
    }

    context.fillRect(drawableRect.origin.x, drawableRect.origin.y, drawableRect.size.width, drawableRect.size.height);
    const label = `${type} - ${formatting_formatDuration(duration)}`;
    drawText(label, context, eventRect, drawableRect);
  }

  draw(context) {
    const {
      frame,
      _profilerData: {
        nativeEvents
      },
      _hoveredEvent,
      visibleArea
    } = this;
    context.fillStyle = COLORS.PRIORITY_BACKGROUND;
    context.fillRect(visibleArea.origin.x, visibleArea.origin.y, visibleArea.size.width, visibleArea.size.height); // Draw events

    const scaleFactor = positioningScaleFactor(this._intrinsicSize.width, frame);
    nativeEvents.forEach(event => {
      this._drawSingleNativeEvent(context, visibleArea, event, frame.origin.y, scaleFactor, event === _hoveredEvent);
    }); // Render bottom borders.

    for (let i = 0; i <= this._maxDepth; i++) {
      const borderFrame = {
        origin: {
          x: frame.origin.x,
          y: frame.origin.y + NATIVE_EVENT_HEIGHT
        },
        size: {
          width: frame.size.width,
          height: BORDER_SIZE
        }
      };

      if (rectIntersectsRect(borderFrame, visibleArea)) {
        const borderDrawableRect = intersectionOfRects(borderFrame, visibleArea);
        context.fillStyle = COLORS.PRIORITY_BORDER;
        context.fillRect(borderDrawableRect.origin.x, borderDrawableRect.origin.y, borderDrawableRect.size.width, borderDrawableRect.size.height);
      }
    }
  }
  /**
   * @private
   */


  _handleMouseMove(interaction, viewRefs) {
    const {
      frame,
      _intrinsicSize,
      onHover,
      visibleArea
    } = this;

    if (!onHover) {
      return;
    }

    const {
      location
    } = interaction.payload;

    if (!rectContainsPoint(location, visibleArea)) {
      onHover(null);
      return;
    }

    const scaleFactor = positioningScaleFactor(_intrinsicSize.width, frame);
    const hoverTimestamp = positionToTimestamp(location.x, scaleFactor, frame);
    const adjustedCanvasMouseY = location.y - frame.origin.y;
    const depth = Math.floor(adjustedCanvasMouseY / NativeEventsView_ROW_WITH_BORDER_HEIGHT);

    const nativeEventsAtDepth = this._depthToNativeEvent.get(depth);

    if (nativeEventsAtDepth) {
      // Find the event being hovered over.
      for (let index = nativeEventsAtDepth.length - 1; index >= 0; index--) {
        const nativeEvent = nativeEventsAtDepth[index];
        const {
          duration,
          timestamp
        } = nativeEvent;

        if (hoverTimestamp >= timestamp && hoverTimestamp <= timestamp + duration) {
          viewRefs.hoveredView = this;
          onHover(nativeEvent);
          return;
        }
      }
    }

    onHover(null);
  }

  handleInteraction(interaction, viewRefs) {
    switch (interaction.type) {
      case 'mousemove':
        this._handleMouseMove(interaction, viewRefs);

        break;
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/NetworkMeasuresView.js
function NetworkMeasuresView_defineProperty(obj, key, value) { key = NetworkMeasuresView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function NetworkMeasuresView_toPropertyKey(t) { var i = NetworkMeasuresView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function NetworkMeasuresView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





const HEIGHT = SUSPENSE_EVENT_HEIGHT; // TODO Constant name

const NetworkMeasuresView_ROW_WITH_BORDER_HEIGHT = HEIGHT + BORDER_SIZE;
const BASE_URL_REGEX = /([^:]+:\/\/[^\/]+)/;
class NetworkMeasuresView extends View {
  constructor(surface, frame, profilerData) {
    super(surface, frame);

    NetworkMeasuresView_defineProperty(this, "_hoveredNetworkMeasure", null);

    NetworkMeasuresView_defineProperty(this, "_maxDepth", 0);

    NetworkMeasuresView_defineProperty(this, "onHover", null);

    this._profilerData = profilerData;

    this._performPreflightComputations();
  }

  _performPreflightComputations() {
    this._depthToNetworkMeasure = new Map();
    const {
      duration,
      networkMeasures
    } = this._profilerData;
    networkMeasures.forEach(event => {
      const depth = event.depth;
      this._maxDepth = Math.max(this._maxDepth, depth);

      if (!this._depthToNetworkMeasure.has(depth)) {
        this._depthToNetworkMeasure.set(depth, [event]);
      } else {
        // $FlowFixMe[incompatible-use] This is unnecessary.
        this._depthToNetworkMeasure.get(depth).push(event);
      }
    });
    this._intrinsicSize = {
      width: duration,
      height: (this._maxDepth + 1) * NetworkMeasuresView_ROW_WITH_BORDER_HEIGHT,
      // Collapsed by default
      maxInitialHeight: 0
    };
  }

  desiredSize() {
    return this._intrinsicSize;
  }

  setHoveredEvent(networkMeasure) {
    if (this._hoveredNetworkMeasure === networkMeasure) {
      return;
    }

    this._hoveredNetworkMeasure = networkMeasure;
    this.setNeedsDisplay();
  }
  /**
   * Draw a single `NetworkMeasure` as a box/span with text inside of it.
   */


  _drawSingleNetworkMeasure(context, networkMeasure, baseY, scaleFactor, showHoverHighlight) {
    const {
      frame,
      visibleArea
    } = this;
    const {
      depth,
      finishTimestamp,
      firstReceivedDataTimestamp,
      lastReceivedDataTimestamp,
      receiveResponseTimestamp,
      sendRequestTimestamp,
      url
    } = networkMeasure; // Account for requests that did not complete while we were profiling.
    // As well as requests that did not receive data before finish (cached?).

    const duration = this._profilerData.duration;
    const timestampBegin = sendRequestTimestamp;
    const timestampEnd = finishTimestamp || lastReceivedDataTimestamp || duration;
    const timestampMiddle = receiveResponseTimestamp || firstReceivedDataTimestamp || timestampEnd; // Convert all timestamps to x coordinates.

    const xStart = timestampToPosition(timestampBegin, scaleFactor, frame);
    const xMiddle = timestampToPosition(timestampMiddle, scaleFactor, frame);
    const xStop = timestampToPosition(timestampEnd, scaleFactor, frame);
    const width = durationToWidth(xStop - xStart, scaleFactor);

    if (width < 1) {
      return; // Too small to render at this zoom level
    }

    baseY += depth * NetworkMeasuresView_ROW_WITH_BORDER_HEIGHT;
    const outerRect = {
      origin: {
        x: xStart,
        y: baseY
      },
      size: {
        width: xStop - xStart,
        height: HEIGHT
      }
    };

    if (!rectIntersectsRect(outerRect, visibleArea)) {
      return; // Not in view
    } // Draw the secondary rect first (since it also shows as a thin border around the primary rect).


    let rect = {
      origin: {
        x: xStart,
        y: baseY
      },
      size: {
        width: xStop - xStart,
        height: HEIGHT
      }
    };

    if (rectIntersectsRect(rect, visibleArea)) {
      context.beginPath();
      context.fillStyle = this._hoveredNetworkMeasure === networkMeasure ? COLORS.NETWORK_SECONDARY_HOVER : COLORS.NETWORK_SECONDARY;
      context.fillRect(rect.origin.x, rect.origin.y, rect.size.width, rect.size.height);
    }

    rect = {
      origin: {
        x: xStart + BORDER_SIZE,
        y: baseY + BORDER_SIZE
      },
      size: {
        width: xMiddle - xStart - BORDER_SIZE,
        height: HEIGHT - BORDER_SIZE * 2
      }
    };

    if (rectIntersectsRect(rect, visibleArea)) {
      context.beginPath();
      context.fillStyle = this._hoveredNetworkMeasure === networkMeasure ? COLORS.NETWORK_PRIMARY_HOVER : COLORS.NETWORK_PRIMARY;
      context.fillRect(rect.origin.x, rect.origin.y, rect.size.width, rect.size.height);
    }

    const baseUrl = url.match(BASE_URL_REGEX);
    const displayUrl = baseUrl !== null ? baseUrl[1] : url;
    const durationLabel = finishTimestamp !== 0 ? `${formatting_formatDuration(finishTimestamp - sendRequestTimestamp)} - ` : '';
    const label = durationLabel + displayUrl;
    drawText(label, context, outerRect, visibleArea);
  }

  draw(context) {
    const {
      frame,
      _profilerData: {
        networkMeasures
      },
      _hoveredNetworkMeasure,
      visibleArea
    } = this;
    context.fillStyle = COLORS.PRIORITY_BACKGROUND;
    context.fillRect(visibleArea.origin.x, visibleArea.origin.y, visibleArea.size.width, visibleArea.size.height);
    const scaleFactor = positioningScaleFactor(this._intrinsicSize.width, frame);
    networkMeasures.forEach(networkMeasure => {
      this._drawSingleNetworkMeasure(context, networkMeasure, frame.origin.y, scaleFactor, networkMeasure === _hoveredNetworkMeasure);
    }); // Render bottom borders.

    for (let i = 0; i <= this._maxDepth; i++) {
      const borderFrame = {
        origin: {
          x: frame.origin.x,
          y: frame.origin.y + (i + 1) * NetworkMeasuresView_ROW_WITH_BORDER_HEIGHT - BORDER_SIZE
        },
        size: {
          width: frame.size.width,
          height: BORDER_SIZE
        }
      };

      if (rectIntersectsRect(borderFrame, visibleArea)) {
        const borderDrawableRect = intersectionOfRects(borderFrame, visibleArea);
        context.fillStyle = COLORS.PRIORITY_BORDER;
        context.fillRect(borderDrawableRect.origin.x, borderDrawableRect.origin.y, borderDrawableRect.size.width, borderDrawableRect.size.height);
      }
    }
  }
  /**
   * @private
   */


  _handleMouseMove(interaction, viewRefs) {
    const {
      frame,
      _intrinsicSize,
      onHover,
      visibleArea
    } = this;

    if (!onHover) {
      return;
    }

    const {
      location
    } = interaction.payload;

    if (!rectContainsPoint(location, visibleArea)) {
      onHover(null);
      return;
    }

    const scaleFactor = positioningScaleFactor(_intrinsicSize.width, frame);
    const hoverTimestamp = positionToTimestamp(location.x, scaleFactor, frame);
    const adjustedCanvasMouseY = location.y - frame.origin.y;
    const depth = Math.floor(adjustedCanvasMouseY / NetworkMeasuresView_ROW_WITH_BORDER_HEIGHT);

    const networkMeasuresAtDepth = this._depthToNetworkMeasure.get(depth);

    const duration = this._profilerData.duration;

    if (networkMeasuresAtDepth) {
      // Find the event being hovered over.
      for (let index = networkMeasuresAtDepth.length - 1; index >= 0; index--) {
        const networkMeasure = networkMeasuresAtDepth[index];
        const {
          finishTimestamp,
          lastReceivedDataTimestamp,
          sendRequestTimestamp
        } = networkMeasure;
        const timestampBegin = sendRequestTimestamp;
        const timestampEnd = finishTimestamp || lastReceivedDataTimestamp || duration;

        if (hoverTimestamp >= timestampBegin && hoverTimestamp <= timestampEnd) {
          this.currentCursor = 'context-menu';
          viewRefs.hoveredView = this;
          onHover(networkMeasure);
          return;
        }
      }
    }

    if (viewRefs.hoveredView === this) {
      viewRefs.hoveredView = null;
    }

    onHover(null);
  }

  handleInteraction(interaction, viewRefs) {
    switch (interaction.type) {
      case 'mousemove':
        this._handleMouseMove(interaction, viewRefs);

        break;
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/ReactMeasuresView.js
function ReactMeasuresView_defineProperty(obj, key, value) { key = ReactMeasuresView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function ReactMeasuresView_toPropertyKey(t) { var i = ReactMeasuresView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function ReactMeasuresView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





const REACT_LANE_HEIGHT = REACT_MEASURE_HEIGHT + BORDER_SIZE;
const MAX_ROWS_TO_SHOW_INITIALLY = 5;
class ReactMeasuresView extends View {
  constructor(surface, frame, profilerData) {
    super(surface, frame);

    ReactMeasuresView_defineProperty(this, "_hoveredMeasure", null);

    ReactMeasuresView_defineProperty(this, "onHover", null);

    this._profilerData = profilerData;

    this._performPreflightComputations();
  }

  _performPreflightComputations() {
    this._lanesToRender = []; // eslint-disable-next-line no-for-of-loops/no-for-of-loops

    for (const [lane, measuresForLane] of this._profilerData.laneToReactMeasureMap) {
      // Only show lanes with measures
      if (measuresForLane.length > 0) {
        this._lanesToRender.push(lane);
      }
    }

    this._intrinsicSize = {
      width: this._profilerData.duration,
      height: this._lanesToRender.length * REACT_LANE_HEIGHT,
      hideScrollBarIfLessThanHeight: REACT_LANE_HEIGHT,
      maxInitialHeight: MAX_ROWS_TO_SHOW_INITIALLY * REACT_LANE_HEIGHT
    };
  }

  desiredSize() {
    return this._intrinsicSize;
  }

  setHoveredMeasure(hoveredMeasure) {
    if (this._hoveredMeasure === hoveredMeasure) {
      return;
    }

    this._hoveredMeasure = hoveredMeasure;
    this.setNeedsDisplay();
  }
  /**
   * Draw a single `ReactMeasure` as a bar in the canvas.
   */


  _drawSingleReactMeasure(context, rect, measure, nextMeasure, baseY, scaleFactor, showGroupHighlight, showHoverHighlight) {
    const {
      frame,
      visibleArea
    } = this;
    const {
      timestamp,
      type,
      duration
    } = measure;
    let fillStyle = null;
    let hoveredFillStyle = null;
    let groupSelectedFillStyle = null;
    let textFillStyle = null; // We could change the max to 0 and just skip over rendering anything that small,
    // but this has the effect of making the chart look very empty when zoomed out.
    // So long as perf is okay- it might be best to err on the side of showing things.

    const width = durationToWidth(duration, scaleFactor);

    if (width <= 0) {
      return; // Too small to render at this zoom level
    }

    const x = timestampToPosition(timestamp, scaleFactor, frame);
    const measureRect = {
      origin: {
        x,
        y: baseY
      },
      size: {
        width,
        height: REACT_MEASURE_HEIGHT
      }
    };

    if (!rectIntersectsRect(measureRect, rect)) {
      return; // Not in view
    }

    const drawableRect = intersectionOfRects(measureRect, rect);
    let textRect = measureRect;

    switch (type) {
      case 'commit':
        fillStyle = COLORS.REACT_COMMIT;
        hoveredFillStyle = COLORS.REACT_COMMIT_HOVER;
        groupSelectedFillStyle = COLORS.REACT_COMMIT_HOVER;
        textFillStyle = COLORS.REACT_COMMIT_TEXT; // Commit phase rects are overlapped by layout and passive rects,
        // and it looks bad if text flows underneath/behind these overlayed rects.

        if (nextMeasure != null) {
          // This clipping shouldn't apply for measures that don't overlap though,
          // like passive effects that are processed after a delay,
          // or if there are now layout or passive effects and the next measure is render or idle.
          if (nextMeasure.timestamp < measure.timestamp + measure.duration) {
            textRect = { ...measureRect,
              size: {
                width: timestampToPosition(nextMeasure.timestamp, scaleFactor, frame) - x,
                height: REACT_MEASURE_HEIGHT
              }
            };
          }
        }

        break;

      case 'render-idle':
        // We could render idle time as diagonal hashes.
        // This looks nicer when zoomed in, but not so nice when zoomed out.
        // color = context.createPattern(getIdlePattern(), 'repeat');
        fillStyle = COLORS.REACT_IDLE;
        hoveredFillStyle = COLORS.REACT_IDLE_HOVER;
        groupSelectedFillStyle = COLORS.REACT_IDLE_HOVER;
        break;

      case 'render':
        fillStyle = COLORS.REACT_RENDER;
        hoveredFillStyle = COLORS.REACT_RENDER_HOVER;
        groupSelectedFillStyle = COLORS.REACT_RENDER_HOVER;
        textFillStyle = COLORS.REACT_RENDER_TEXT;
        break;

      case 'layout-effects':
        fillStyle = COLORS.REACT_LAYOUT_EFFECTS;
        hoveredFillStyle = COLORS.REACT_LAYOUT_EFFECTS_HOVER;
        groupSelectedFillStyle = COLORS.REACT_LAYOUT_EFFECTS_HOVER;
        textFillStyle = COLORS.REACT_LAYOUT_EFFECTS_TEXT;
        break;

      case 'passive-effects':
        fillStyle = COLORS.REACT_PASSIVE_EFFECTS;
        hoveredFillStyle = COLORS.REACT_PASSIVE_EFFECTS_HOVER;
        groupSelectedFillStyle = COLORS.REACT_PASSIVE_EFFECTS_HOVER;
        textFillStyle = COLORS.REACT_PASSIVE_EFFECTS_TEXT;
        break;

      default:
        throw new Error(`Unexpected measure type "${type}"`);
    }

    context.fillStyle = showHoverHighlight ? hoveredFillStyle : showGroupHighlight ? groupSelectedFillStyle : fillStyle;
    context.fillRect(drawableRect.origin.x, drawableRect.origin.y, drawableRect.size.width, drawableRect.size.height);

    if (textFillStyle !== null) {
      drawText(formatting_formatDuration(duration), context, textRect, visibleArea, {
        fillStyle: textFillStyle
      });
    }
  }

  draw(context) {
    const {
      frame,
      _hoveredMeasure,
      _lanesToRender,
      _profilerData,
      visibleArea
    } = this;
    context.fillStyle = COLORS.PRIORITY_BACKGROUND;
    context.fillRect(visibleArea.origin.x, visibleArea.origin.y, visibleArea.size.width, visibleArea.size.height);
    const scaleFactor = positioningScaleFactor(this._intrinsicSize.width, frame);

    for (let i = 0; i < _lanesToRender.length; i++) {
      const lane = _lanesToRender[i];
      const baseY = frame.origin.y + i * REACT_LANE_HEIGHT;

      const measuresForLane = _profilerData.laneToReactMeasureMap.get(lane);

      if (!measuresForLane) {
        throw new Error('No measures found for a React lane! This is a bug in this profiler tool. Please file an issue.');
      } // Render lane labels


      const label = _profilerData.laneToLabelMap.get(lane);

      if (label == null) {
        console.warn(`Could not find label for lane ${lane}.`);
      } else {
        const labelRect = {
          origin: {
            x: visibleArea.origin.x,
            y: baseY
          },
          size: {
            width: visibleArea.size.width,
            height: REACT_LANE_HEIGHT
          }
        };
        drawText(label, context, labelRect, visibleArea, {
          fillStyle: COLORS.TEXT_DIM_COLOR
        });
      } // Draw measures


      for (let j = 0; j < measuresForLane.length; j++) {
        const measure = measuresForLane[j];
        const showHoverHighlight = _hoveredMeasure === measure;
        const showGroupHighlight = !!_hoveredMeasure && _hoveredMeasure.batchUID === measure.batchUID;

        this._drawSingleReactMeasure(context, visibleArea, measure, measuresForLane[j + 1] || null, baseY, scaleFactor, showGroupHighlight, showHoverHighlight);
      } // Render bottom border


      const borderFrame = {
        origin: {
          x: frame.origin.x,
          y: frame.origin.y + (i + 1) * REACT_LANE_HEIGHT - BORDER_SIZE
        },
        size: {
          width: frame.size.width,
          height: BORDER_SIZE
        }
      };

      if (rectIntersectsRect(borderFrame, visibleArea)) {
        const borderDrawableRect = intersectionOfRects(borderFrame, visibleArea);
        context.fillStyle = COLORS.PRIORITY_BORDER;
        context.fillRect(borderDrawableRect.origin.x, borderDrawableRect.origin.y, borderDrawableRect.size.width, borderDrawableRect.size.height);
      }
    }
  }
  /**
   * @private
   */


  _handleMouseMove(interaction, viewRefs) {
    const {
      frame,
      _intrinsicSize,
      _lanesToRender,
      onHover,
      _profilerData,
      visibleArea
    } = this;

    if (!onHover) {
      return;
    }

    const {
      location
    } = interaction.payload;

    if (!rectContainsPoint(location, visibleArea)) {
      onHover(null);
      return;
    } // Identify the lane being hovered over


    const adjustedCanvasMouseY = location.y - frame.origin.y;
    const renderedLaneIndex = Math.floor(adjustedCanvasMouseY / REACT_LANE_HEIGHT);

    if (renderedLaneIndex < 0 || renderedLaneIndex >= _lanesToRender.length) {
      onHover(null);
      return;
    }

    const lane = _lanesToRender[renderedLaneIndex]; // Find the measure in `lane` being hovered over.
    //
    // Because data ranges may overlap, we want to find the last intersecting item.
    // This will always be the one on "top" (the one the user is hovering over).

    const scaleFactor = positioningScaleFactor(_intrinsicSize.width, frame);
    const hoverTimestamp = positionToTimestamp(location.x, scaleFactor, frame);

    const measures = _profilerData.laneToReactMeasureMap.get(lane);

    if (!measures) {
      onHover(null);
      return;
    }

    for (let index = measures.length - 1; index >= 0; index--) {
      const measure = measures[index];
      const {
        duration,
        timestamp
      } = measure;

      if (hoverTimestamp >= timestamp && hoverTimestamp <= timestamp + duration) {
        this.currentCursor = 'context-menu';
        viewRefs.hoveredView = this;
        onHover(measure);
        return;
      }
    }

    onHover(null);
  }

  handleInteraction(interaction, viewRefs) {
    switch (interaction.type) {
      case 'mousemove':
        this._handleMouseMove(interaction, viewRefs);

        break;
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/SchedulingEventsView.js
function SchedulingEventsView_defineProperty(obj, key, value) { key = SchedulingEventsView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function SchedulingEventsView_toPropertyKey(t) { var i = SchedulingEventsView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function SchedulingEventsView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



const EVENT_ROW_HEIGHT_FIXED = TOP_ROW_PADDING + REACT_EVENT_DIAMETER + TOP_ROW_PADDING;
class SchedulingEventsView extends View {
  constructor(surface, frame, profilerData) {
    super(surface, frame);

    SchedulingEventsView_defineProperty(this, "_hoveredEvent", null);

    SchedulingEventsView_defineProperty(this, "onHover", null);

    SchedulingEventsView_defineProperty(this, "onClick", null);

    this._profilerData = profilerData;
    this._intrinsicSize = {
      width: this._profilerData.duration,
      height: EVENT_ROW_HEIGHT_FIXED
    };
  }

  desiredSize() {
    return this._intrinsicSize;
  }

  setHoveredEvent(hoveredEvent) {
    if (this._hoveredEvent === hoveredEvent) {
      return;
    }

    this._hoveredEvent = hoveredEvent;
    this.setNeedsDisplay();
  }
  /**
   * Draw a single `SchedulingEvent` as a circle in the canvas.
   */


  _drawSingleSchedulingEvent(context, rect, event, baseY, scaleFactor, showHoverHighlight) {
    const {
      frame
    } = this;
    const {
      timestamp,
      type,
      warning
    } = event;
    const x = timestampToPosition(timestamp, scaleFactor, frame);
    const radius = REACT_EVENT_DIAMETER / 2;
    const eventRect = {
      origin: {
        x: x - radius,
        y: baseY
      },
      size: {
        width: REACT_EVENT_DIAMETER,
        height: REACT_EVENT_DIAMETER
      }
    };

    if (!rectIntersectsRect(eventRect, rect)) {
      return; // Not in view
    }

    let fillStyle = null;

    if (warning !== null) {
      fillStyle = showHoverHighlight ? COLORS.WARNING_BACKGROUND_HOVER : COLORS.WARNING_BACKGROUND;
    } else {
      switch (type) {
        case 'schedule-render':
        case 'schedule-state-update':
        case 'schedule-force-update':
          fillStyle = showHoverHighlight ? COLORS.REACT_SCHEDULE_HOVER : COLORS.REACT_SCHEDULE;
          break;

        default:
          if (false) {}

          break;
      }
    }

    if (fillStyle !== null) {
      const y = eventRect.origin.y + radius;
      context.beginPath();
      context.fillStyle = fillStyle;
      context.arc(x, y, radius, 0, 2 * Math.PI);
      context.fill();
    }
  }

  draw(context) {
    const {
      frame,
      _profilerData: {
        schedulingEvents
      },
      _hoveredEvent,
      visibleArea
    } = this;
    context.fillStyle = COLORS.BACKGROUND;
    context.fillRect(visibleArea.origin.x, visibleArea.origin.y, visibleArea.size.width, visibleArea.size.height); // Draw events

    const baseY = frame.origin.y + TOP_ROW_PADDING;
    const scaleFactor = positioningScaleFactor(this._intrinsicSize.width, frame);
    const highlightedEvents = [];
    schedulingEvents.forEach(event => {
      if (event === _hoveredEvent) {
        highlightedEvents.push(event);
        return;
      }

      this._drawSingleSchedulingEvent(context, visibleArea, event, baseY, scaleFactor, false);
    }); // Draw the highlighted items on top so they stand out.
    // This is helpful if there are multiple (overlapping) items close to each other.

    highlightedEvents.forEach(event => {
      this._drawSingleSchedulingEvent(context, visibleArea, event, baseY, scaleFactor, true);
    }); // Render bottom border.
    // Propose border rect, check if intersects with `rect`, draw intersection.

    const borderFrame = {
      origin: {
        x: frame.origin.x,
        y: frame.origin.y + EVENT_ROW_HEIGHT_FIXED - BORDER_SIZE
      },
      size: {
        width: frame.size.width,
        height: BORDER_SIZE
      }
    };

    if (rectIntersectsRect(borderFrame, visibleArea)) {
      const borderDrawableRect = intersectionOfRects(borderFrame, visibleArea);
      context.fillStyle = COLORS.REACT_WORK_BORDER;
      context.fillRect(borderDrawableRect.origin.x, borderDrawableRect.origin.y, borderDrawableRect.size.width, borderDrawableRect.size.height);
    }
  }
  /**
   * @private
   */


  _handleMouseMove(interaction, viewRefs) {
    const {
      frame,
      onHover,
      visibleArea
    } = this;

    if (!onHover) {
      return;
    }

    const {
      location
    } = interaction.payload;

    if (!rectContainsPoint(location, visibleArea)) {
      onHover(null);
      return;
    }

    const {
      _profilerData: {
        schedulingEvents
      }
    } = this;
    const scaleFactor = positioningScaleFactor(this._intrinsicSize.width, frame);
    const hoverTimestamp = positionToTimestamp(location.x, scaleFactor, frame);
    const eventTimestampAllowance = widthToDuration(REACT_EVENT_DIAMETER / 2, scaleFactor); // Because data ranges may overlap, we want to find the last intersecting item.
    // This will always be the one on "top" (the one the user is hovering over).

    for (let index = schedulingEvents.length - 1; index >= 0; index--) {
      const event = schedulingEvents[index];
      const {
        timestamp
      } = event;

      if (timestamp - eventTimestampAllowance <= hoverTimestamp && hoverTimestamp <= timestamp + eventTimestampAllowance) {
        this.currentCursor = 'pointer';
        viewRefs.hoveredView = this;
        onHover(event);
        return;
      }
    }

    onHover(null);
  }
  /**
   * @private
   */


  _handleClick(interaction) {
    const {
      onClick
    } = this;

    if (onClick) {
      const {
        _profilerData: {
          schedulingEvents
        }
      } = this;
      const eventIndex = schedulingEvents.findIndex(event => event === this._hoveredEvent); // onHover is going to take care of all the difficult logic here of
      // figuring out which event when they're proximity is close.

      onClick(this._hoveredEvent, eventIndex >= 0 ? eventIndex : null);
    }
  }

  handleInteraction(interaction, viewRefs) {
    switch (interaction.type) {
      case 'mousemove':
        this._handleMouseMove(interaction, viewRefs);

        break;

      case 'click':
        this._handleClick(interaction);

        break;
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/SnapshotsView.js
function SnapshotsView_defineProperty(obj, key, value) { key = SnapshotsView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function SnapshotsView_toPropertyKey(t) { var i = SnapshotsView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function SnapshotsView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



class SnapshotsView extends View {
  constructor(surface, frame, profilerData) {
    super(surface, frame);

    SnapshotsView_defineProperty(this, "_hoverLocation", null);

    SnapshotsView_defineProperty(this, "onHover", null);

    this._intrinsicSize = {
      width: profilerData.duration,
      height: profilerData.snapshotHeight
    };
    this._profilerData = profilerData;
  }

  desiredSize() {
    return this._intrinsicSize;
  }

  draw(context) {
    const snapshotHeight = this._profilerData.snapshotHeight;
    const {
      visibleArea
    } = this;
    context.fillStyle = COLORS.BACKGROUND;
    context.fillRect(visibleArea.origin.x, visibleArea.origin.y, visibleArea.size.width, visibleArea.size.height);
    const y = visibleArea.origin.y;
    let x = visibleArea.origin.x; // Rather than drawing each snapshot where it occurred,
    // draw them at fixed intervals and just show the nearest one.

    while (x < visibleArea.origin.x + visibleArea.size.width) {
      const snapshot = this._findClosestSnapshot(x);

      if (snapshot === null) {
        // This shold never happen.
        break;
      }

      const scaledHeight = snapshotHeight;
      const scaledWidth = snapshot.width * snapshotHeight / snapshot.height;
      const imageRect = {
        origin: {
          x,
          y
        },
        size: {
          width: scaledWidth,
          height: scaledHeight
        }
      }; // Lazily create and cache Image objects as we render a snapsho for the first time.

      if (snapshot.image === null) {
        const img = snapshot.image = new Image();

        img.onload = () => {
          this._drawSnapshotImage(context, snapshot, imageRect);
        };

        img.src = snapshot.imageSource;
      } else {
        this._drawSnapshotImage(context, snapshot, imageRect);
      }

      x += scaledWidth + BORDER_SIZE;
    }

    const hoverLocation = this._hoverLocation;

    if (hoverLocation !== null) {
      const scrubberWidth = SNAPSHOT_SCRUBBER_SIZE + BORDER_SIZE * 2;
      const scrubberOffset = scrubberWidth / 2;
      context.fillStyle = COLORS.SCRUBBER_BORDER;
      context.fillRect(hoverLocation.x - scrubberOffset, visibleArea.origin.y, scrubberWidth, visibleArea.size.height);
      context.fillStyle = COLORS.SCRUBBER_BACKGROUND;
      context.fillRect(hoverLocation.x - scrubberOffset + BORDER_SIZE, visibleArea.origin.y, SNAPSHOT_SCRUBBER_SIZE, visibleArea.size.height);
    }
  }

  handleInteraction(interaction, viewRefs) {
    switch (interaction.type) {
      case 'mousemove':
      case 'wheel-control':
      case 'wheel-meta':
      case 'wheel-plain':
      case 'wheel-shift':
        this._updateHover(interaction.payload.location, viewRefs);

        break;
    }
  }

  _drawSnapshotImage(context, snapshot, imageRect) {
    const visibleArea = this.visibleArea; // Prevent snapshot from visibly overflowing its container when clipped.
    // View clips by default, but since this view may draw async (on Image load) we re-clip.

    const shouldClip = !rectEqualToRect(imageRect, visibleArea);

    if (shouldClip) {
      const clippedRect = intersectionOfRects(imageRect, visibleArea);
      context.save();
      context.beginPath();
      context.rect(clippedRect.origin.x, clippedRect.origin.y, clippedRect.size.width, clippedRect.size.height);
      context.closePath();
      context.clip();
    }

    context.fillStyle = COLORS.REACT_RESIZE_BAR_BORDER;
    context.fillRect(imageRect.origin.x, imageRect.origin.y, imageRect.size.width, imageRect.size.height); // $FlowFixMe[incompatible-call] Flow doesn't know about the 9 argument variant of drawImage()

    context.drawImage(snapshot.image, // Image coordinates
    0, 0, // Native image size
    snapshot.width, snapshot.height, // Canvas coordinates
    imageRect.origin.x + BORDER_SIZE, imageRect.origin.y + BORDER_SIZE, // Scaled image size
    imageRect.size.width - BORDER_SIZE * 2, imageRect.size.height - BORDER_SIZE * 2);

    if (shouldClip) {
      context.restore();
    }
  }

  _findClosestSnapshot(x) {
    const frame = this.frame;
    const scaleFactor = positioningScaleFactor(this._intrinsicSize.width, frame);
    const snapshots = this._profilerData.snapshots;
    let startIndex = 0;
    let stopIndex = snapshots.length - 1;

    while (startIndex <= stopIndex) {
      const currentIndex = Math.floor((startIndex + stopIndex) / 2);
      const snapshot = snapshots[currentIndex];
      const {
        timestamp
      } = snapshot;
      const snapshotX = Math.floor(timestampToPosition(timestamp, scaleFactor, frame));

      if (x < snapshotX) {
        stopIndex = currentIndex - 1;
      } else {
        startIndex = currentIndex + 1;
      }
    }

    return snapshots[stopIndex] || null;
  }
  /**
   * @private
   */


  _updateHover(location, viewRefs) {
    const {
      onHover,
      visibleArea
    } = this;

    if (!onHover) {
      return;
    }

    if (!rectContainsPoint(location, visibleArea)) {
      if (this._hoverLocation !== null) {
        this._hoverLocation = null;
        this.setNeedsDisplay();
      }

      onHover(null);
      return;
    }

    const snapshot = this._findClosestSnapshot(location.x);

    if (snapshot !== null) {
      this._hoverLocation = location;
      onHover(snapshot);
    } else {
      this._hoverLocation = null;
      onHover(null);
    } // Any time the mouse moves within the boundaries of this view, we need to re-render.
    // This is because we draw a scrubbing bar that shows the location corresponding to the current tooltip.


    this.setNeedsDisplay();
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/SuspenseEventsView.js
function SuspenseEventsView_defineProperty(obj, key, value) { key = SuspenseEventsView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function SuspenseEventsView_toPropertyKey(t) { var i = SuspenseEventsView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function SuspenseEventsView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





const SuspenseEventsView_ROW_WITH_BORDER_HEIGHT = SUSPENSE_EVENT_HEIGHT + BORDER_SIZE;
const SuspenseEventsView_MAX_ROWS_TO_SHOW_INITIALLY = 3;
class SuspenseEventsView extends View {
  constructor(surface, frame, profilerData) {
    super(surface, frame);

    SuspenseEventsView_defineProperty(this, "_hoveredEvent", null);

    SuspenseEventsView_defineProperty(this, "_maxDepth", 0);

    SuspenseEventsView_defineProperty(this, "onHover", null);

    this._profilerData = profilerData;

    this._performPreflightComputations();
  }

  _performPreflightComputations() {
    this._depthToSuspenseEvent = new Map();
    const {
      duration,
      suspenseEvents
    } = this._profilerData;
    suspenseEvents.forEach(event => {
      const depth = event.depth;
      this._maxDepth = Math.max(this._maxDepth, depth);

      if (!this._depthToSuspenseEvent.has(depth)) {
        this._depthToSuspenseEvent.set(depth, [event]);
      } else {
        // $FlowFixMe[incompatible-use] This is unnecessary.
        this._depthToSuspenseEvent.get(depth).push(event);
      }
    });
    this._intrinsicSize = {
      width: duration,
      height: (this._maxDepth + 1) * SuspenseEventsView_ROW_WITH_BORDER_HEIGHT,
      hideScrollBarIfLessThanHeight: SuspenseEventsView_ROW_WITH_BORDER_HEIGHT,
      maxInitialHeight: SuspenseEventsView_ROW_WITH_BORDER_HEIGHT * SuspenseEventsView_MAX_ROWS_TO_SHOW_INITIALLY
    };
  }

  desiredSize() {
    return this._intrinsicSize;
  }

  setHoveredEvent(hoveredEvent) {
    if (this._hoveredEvent === hoveredEvent) {
      return;
    }

    this._hoveredEvent = hoveredEvent;
    this.setNeedsDisplay();
  }
  /**
   * Draw a single `SuspenseEvent` as a box/span with text inside of it.
   */


  _drawSingleSuspenseEvent(context, rect, event, baseY, scaleFactor, showHoverHighlight) {
    const {
      frame
    } = this;
    const {
      componentName,
      depth,
      duration,
      phase,
      promiseName,
      resolution,
      timestamp,
      warning
    } = event;
    baseY += depth * SuspenseEventsView_ROW_WITH_BORDER_HEIGHT;
    let fillStyle = null;

    if (warning !== null) {
      fillStyle = showHoverHighlight ? COLORS.WARNING_BACKGROUND_HOVER : COLORS.WARNING_BACKGROUND;
    } else {
      switch (resolution) {
        case 'rejected':
          fillStyle = showHoverHighlight ? COLORS.REACT_SUSPENSE_REJECTED_EVENT_HOVER : COLORS.REACT_SUSPENSE_REJECTED_EVENT;
          break;

        case 'resolved':
          fillStyle = showHoverHighlight ? COLORS.REACT_SUSPENSE_RESOLVED_EVENT_HOVER : COLORS.REACT_SUSPENSE_RESOLVED_EVENT;
          break;

        case 'unresolved':
          fillStyle = showHoverHighlight ? COLORS.REACT_SUSPENSE_UNRESOLVED_EVENT_HOVER : COLORS.REACT_SUSPENSE_UNRESOLVED_EVENT;
          break;
      }
    }

    const xStart = timestampToPosition(timestamp, scaleFactor, frame); // Pending suspense events (ones that never resolved) won't have durations.
    // So instead we draw them as diamonds.

    if (duration === null) {
      const size = PENDING_SUSPENSE_EVENT_SIZE;
      const halfSize = size / 2;
      baseY += (SUSPENSE_EVENT_HEIGHT - PENDING_SUSPENSE_EVENT_SIZE) / 2;
      const y = baseY + halfSize;
      const suspenseRect = {
        origin: {
          x: xStart - halfSize,
          y: baseY
        },
        size: {
          width: size,
          height: size
        }
      };

      if (!rectIntersectsRect(suspenseRect, rect)) {
        return; // Not in view
      }

      context.beginPath();
      context.fillStyle = fillStyle;
      context.moveTo(xStart, y - halfSize);
      context.lineTo(xStart + halfSize, y);
      context.lineTo(xStart, y + halfSize);
      context.lineTo(xStart - halfSize, y);
      context.fill();
    } else {
      const xStop = timestampToPosition(timestamp + duration, scaleFactor, frame);
      const eventRect = {
        origin: {
          x: xStart,
          y: baseY
        },
        size: {
          width: xStop - xStart,
          height: SUSPENSE_EVENT_HEIGHT
        }
      };

      if (!rectIntersectsRect(eventRect, rect)) {
        return; // Not in view
      }

      const width = durationToWidth(duration, scaleFactor);

      if (width < 1) {
        return; // Too small to render at this zoom level
      }

      const drawableRect = intersectionOfRects(eventRect, rect);
      context.beginPath();
      context.fillStyle = fillStyle;
      context.fillRect(drawableRect.origin.x, drawableRect.origin.y, drawableRect.size.width, drawableRect.size.height);
      let label = 'suspended';

      if (promiseName != null) {
        label = promiseName;
      } else if (componentName != null) {
        label = `${componentName} ${label}`;
      }

      if (phase !== null) {
        label += ` during ${phase}`;
      }

      if (resolution !== 'unresolved') {
        label += ` - ${formatting_formatDuration(duration)}`;
      }

      drawText(label, context, eventRect, drawableRect);
    }
  }

  draw(context) {
    const {
      frame,
      _profilerData: {
        suspenseEvents
      },
      _hoveredEvent,
      visibleArea
    } = this;
    context.fillStyle = COLORS.PRIORITY_BACKGROUND;
    context.fillRect(visibleArea.origin.x, visibleArea.origin.y, visibleArea.size.width, visibleArea.size.height); // Draw events

    const scaleFactor = positioningScaleFactor(this._intrinsicSize.width, frame);
    suspenseEvents.forEach(event => {
      this._drawSingleSuspenseEvent(context, visibleArea, event, frame.origin.y, scaleFactor, event === _hoveredEvent);
    }); // Render bottom borders.

    for (let i = 0; i <= this._maxDepth; i++) {
      const borderFrame = {
        origin: {
          x: frame.origin.x,
          y: frame.origin.y + (i + 1) * SuspenseEventsView_ROW_WITH_BORDER_HEIGHT - BORDER_SIZE
        },
        size: {
          width: frame.size.width,
          height: BORDER_SIZE
        }
      };

      if (rectIntersectsRect(borderFrame, visibleArea)) {
        const borderDrawableRect = intersectionOfRects(borderFrame, visibleArea);
        context.fillStyle = COLORS.REACT_WORK_BORDER;
        context.fillRect(borderDrawableRect.origin.x, borderDrawableRect.origin.y, borderDrawableRect.size.width, borderDrawableRect.size.height);
      }
    }
  }
  /**
   * @private
   */


  _handleMouseMove(interaction, viewRefs) {
    const {
      frame,
      _intrinsicSize,
      onHover,
      visibleArea
    } = this;

    if (!onHover) {
      return;
    }

    const {
      location
    } = interaction.payload;

    if (!rectContainsPoint(location, visibleArea)) {
      onHover(null);
      return;
    }

    const scaleFactor = positioningScaleFactor(_intrinsicSize.width, frame);
    const hoverTimestamp = positionToTimestamp(location.x, scaleFactor, frame);
    const adjustedCanvasMouseY = location.y - frame.origin.y;
    const depth = Math.floor(adjustedCanvasMouseY / SuspenseEventsView_ROW_WITH_BORDER_HEIGHT);

    const suspenseEventsAtDepth = this._depthToSuspenseEvent.get(depth);

    if (suspenseEventsAtDepth) {
      // Find the event being hovered over.
      for (let index = suspenseEventsAtDepth.length - 1; index >= 0; index--) {
        const suspenseEvent = suspenseEventsAtDepth[index];
        const {
          duration,
          timestamp
        } = suspenseEvent;

        if (duration === null) {
          const timestampAllowance = widthToDuration(PENDING_SUSPENSE_EVENT_SIZE / 2, scaleFactor);

          if (timestamp - timestampAllowance <= hoverTimestamp && hoverTimestamp <= timestamp + timestampAllowance) {
            this.currentCursor = 'context-menu';
            viewRefs.hoveredView = this;
            onHover(suspenseEvent);
            return;
          }
        } else if (hoverTimestamp >= timestamp && hoverTimestamp <= timestamp + duration) {
          this.currentCursor = 'context-menu';
          viewRefs.hoveredView = this;
          onHover(suspenseEvent);
          return;
        }
      }
    }

    onHover(null);
  }

  handleInteraction(interaction, viewRefs) {
    switch (interaction.type) {
      case 'mousemove':
        this._handleMouseMove(interaction, viewRefs);

        break;
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/ThrownErrorsView.js
function ThrownErrorsView_defineProperty(obj, key, value) { key = ThrownErrorsView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function ThrownErrorsView_toPropertyKey(t) { var i = ThrownErrorsView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function ThrownErrorsView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



const ThrownErrorsView_EVENT_ROW_HEIGHT_FIXED = TOP_ROW_PADDING + REACT_EVENT_DIAMETER + TOP_ROW_PADDING;
class ThrownErrorsView extends View {
  constructor(surface, frame, profilerData) {
    super(surface, frame);

    ThrownErrorsView_defineProperty(this, "_hoveredEvent", null);

    ThrownErrorsView_defineProperty(this, "onHover", null);

    this._profilerData = profilerData;
    this._intrinsicSize = {
      width: this._profilerData.duration,
      height: ThrownErrorsView_EVENT_ROW_HEIGHT_FIXED
    };
  }

  desiredSize() {
    return this._intrinsicSize;
  }

  setHoveredEvent(hoveredEvent) {
    if (this._hoveredEvent === hoveredEvent) {
      return;
    }

    this._hoveredEvent = hoveredEvent;
    this.setNeedsDisplay();
  }
  /**
   * Draw a single `ThrownError` as a circle in the canvas.
   */


  _drawSingleThrownError(context, rect, thrownError, baseY, scaleFactor, showHoverHighlight) {
    const {
      frame
    } = this;
    const {
      timestamp
    } = thrownError;
    const x = timestampToPosition(timestamp, scaleFactor, frame);
    const radius = REACT_EVENT_DIAMETER / 2;
    const eventRect = {
      origin: {
        x: x - radius,
        y: baseY
      },
      size: {
        width: REACT_EVENT_DIAMETER,
        height: REACT_EVENT_DIAMETER
      }
    };

    if (!rectIntersectsRect(eventRect, rect)) {
      return; // Not in view
    }

    const fillStyle = showHoverHighlight ? COLORS.REACT_THROWN_ERROR_HOVER : COLORS.REACT_THROWN_ERROR;
    const y = eventRect.origin.y + radius;
    context.beginPath();
    context.fillStyle = fillStyle;
    context.arc(x, y, radius, 0, 2 * Math.PI);
    context.fill();
  }

  draw(context) {
    const {
      frame,
      _profilerData: {
        thrownErrors
      },
      _hoveredEvent,
      visibleArea
    } = this;
    context.fillStyle = COLORS.BACKGROUND;
    context.fillRect(visibleArea.origin.x, visibleArea.origin.y, visibleArea.size.width, visibleArea.size.height); // Draw events

    const baseY = frame.origin.y + TOP_ROW_PADDING;
    const scaleFactor = positioningScaleFactor(this._intrinsicSize.width, frame);
    const highlightedEvents = [];
    thrownErrors.forEach(thrownError => {
      if (thrownError === _hoveredEvent) {
        highlightedEvents.push(thrownError);
        return;
      }

      this._drawSingleThrownError(context, visibleArea, thrownError, baseY, scaleFactor, false);
    }); // Draw the highlighted items on top so they stand out.
    // This is helpful if there are multiple (overlapping) items close to each other.

    highlightedEvents.forEach(thrownError => {
      this._drawSingleThrownError(context, visibleArea, thrownError, baseY, scaleFactor, true);
    }); // Render bottom borders.
    // Propose border rect, check if intersects with `rect`, draw intersection.

    const borderFrame = {
      origin: {
        x: frame.origin.x,
        y: frame.origin.y + ThrownErrorsView_EVENT_ROW_HEIGHT_FIXED - BORDER_SIZE
      },
      size: {
        width: frame.size.width,
        height: BORDER_SIZE
      }
    };

    if (rectIntersectsRect(borderFrame, visibleArea)) {
      const borderDrawableRect = intersectionOfRects(borderFrame, visibleArea);
      context.fillStyle = COLORS.REACT_WORK_BORDER;
      context.fillRect(borderDrawableRect.origin.x, borderDrawableRect.origin.y, borderDrawableRect.size.width, borderDrawableRect.size.height);
    }
  }
  /**
   * @private
   */


  _handleMouseMove(interaction, viewRefs) {
    const {
      frame,
      onHover,
      visibleArea
    } = this;

    if (!onHover) {
      return;
    }

    const {
      location
    } = interaction.payload;

    if (!rectContainsPoint(location, visibleArea)) {
      onHover(null);
      return;
    }

    const {
      _profilerData: {
        thrownErrors
      }
    } = this;
    const scaleFactor = positioningScaleFactor(this._intrinsicSize.width, frame);
    const hoverTimestamp = positionToTimestamp(location.x, scaleFactor, frame);
    const eventTimestampAllowance = widthToDuration(REACT_EVENT_DIAMETER / 2, scaleFactor); // Because data ranges may overlap, we want to find the last intersecting item.
    // This will always be the one on "top" (the one the user is hovering over).

    for (let index = thrownErrors.length - 1; index >= 0; index--) {
      const event = thrownErrors[index];
      const {
        timestamp
      } = event;

      if (timestamp - eventTimestampAllowance <= hoverTimestamp && hoverTimestamp <= timestamp + eventTimestampAllowance) {
        this.currentCursor = 'context-menu';
        viewRefs.hoveredView = this;
        onHover(event);
        return;
      }
    }

    onHover(null);
  }

  handleInteraction(interaction, viewRefs) {
    switch (interaction.type) {
      case 'mousemove':
        this._handleMouseMove(interaction, viewRefs);

        break;
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/TimeAxisMarkersView.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



const HEADER_HEIGHT_FIXED = MARKER_HEIGHT + BORDER_SIZE;
const LABEL_FIXED_WIDTH = LABEL_SIZE + BORDER_SIZE;
class TimeAxisMarkersView extends View {
  constructor(surface, frame, totalDuration) {
    super(surface, frame);
    this._totalDuration = totalDuration;
    this._intrinsicSize = {
      width: this._totalDuration,
      height: HEADER_HEIGHT_FIXED
    };
  }

  desiredSize() {
    return this._intrinsicSize;
  } // Time mark intervals vary based on the current zoom range and the time it represents.
  // In Chrome, these seem to range from 70-140 pixels wide.
  // Time wise, they represent intervals of e.g. 1s, 500ms, 200ms, 100ms, 50ms, 20ms.
  // Based on zoom, we should determine which amount to actually show.


  _getTimeTickInterval(scaleFactor) {
    for (let i = 0; i < INTERVAL_TIMES.length; i++) {
      const currentInterval = INTERVAL_TIMES[i];
      const intervalWidth = durationToWidth(currentInterval, scaleFactor);

      if (intervalWidth > MIN_INTERVAL_SIZE_PX) {
        return currentInterval;
      }
    }

    return INTERVAL_TIMES[0];
  }

  draw(context) {
    const {
      frame,
      _intrinsicSize,
      visibleArea
    } = this;
    const clippedFrame = {
      origin: frame.origin,
      size: {
        width: frame.size.width,
        height: _intrinsicSize.height
      }
    };
    const drawableRect = intersectionOfRects(clippedFrame, visibleArea); // Clear background

    context.fillStyle = COLORS.BACKGROUND;
    context.fillRect(drawableRect.origin.x, drawableRect.origin.y, drawableRect.size.width, drawableRect.size.height);
    const scaleFactor = positioningScaleFactor(_intrinsicSize.width, clippedFrame);

    const interval = this._getTimeTickInterval(scaleFactor);

    const firstIntervalTimestamp = Math.ceil(positionToTimestamp(drawableRect.origin.x - LABEL_FIXED_WIDTH, scaleFactor, clippedFrame) / interval) * interval;

    for (let markerTimestamp = firstIntervalTimestamp; true; markerTimestamp += interval) {
      if (markerTimestamp <= 0) {
        continue; // Timestamps < are probably a bug; markers at 0 are ugly.
      }

      const x = timestampToPosition(markerTimestamp, scaleFactor, clippedFrame);

      if (x > drawableRect.origin.x + drawableRect.size.width) {
        break; // Not in view
      }

      const markerLabel = Math.round(markerTimestamp);
      context.fillStyle = COLORS.PRIORITY_BORDER;
      context.fillRect(x, drawableRect.origin.y + MARKER_HEIGHT - MARKER_TICK_HEIGHT, BORDER_SIZE, MARKER_TICK_HEIGHT);
      context.fillStyle = COLORS.TIME_MARKER_LABEL;
      context.textAlign = 'right';
      context.textBaseline = 'middle';
      context.font = `${FONT_SIZE}px sans-serif`;
      context.fillText(`${markerLabel}ms`, x - MARKER_TEXT_PADDING, MARKER_HEIGHT / 2);
    } // Render bottom border.
    // Propose border rect, check if intersects with `rect`, draw intersection.


    const borderFrame = {
      origin: {
        x: clippedFrame.origin.x,
        y: clippedFrame.origin.y + clippedFrame.size.height - BORDER_SIZE
      },
      size: {
        width: clippedFrame.size.width,
        height: BORDER_SIZE
      }
    };

    if (rectIntersectsRect(borderFrame, visibleArea)) {
      const borderDrawableRect = intersectionOfRects(borderFrame, visibleArea);
      context.fillStyle = COLORS.PRIORITY_BORDER;
      context.fillRect(borderDrawableRect.origin.x, borderDrawableRect.origin.y, borderDrawableRect.size.width, borderDrawableRect.size.height);
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/UserTimingMarksView.js
function UserTimingMarksView_defineProperty(obj, key, value) { key = UserTimingMarksView_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function UserTimingMarksView_toPropertyKey(t) { var i = UserTimingMarksView_toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }

function UserTimingMarksView_toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



const ROW_HEIGHT_FIXED = TOP_ROW_PADDING + USER_TIMING_MARK_SIZE + TOP_ROW_PADDING;
class UserTimingMarksView extends View {
  constructor(surface, frame, marks, duration) {
    super(surface, frame);

    UserTimingMarksView_defineProperty(this, "_hoveredMark", null);

    UserTimingMarksView_defineProperty(this, "onHover", null);

    this._marks = marks;
    this._intrinsicSize = {
      width: duration,
      height: ROW_HEIGHT_FIXED
    };
  }

  desiredSize() {
    return this._intrinsicSize;
  }

  setHoveredMark(hoveredMark) {
    if (this._hoveredMark === hoveredMark) {
      return;
    }

    this._hoveredMark = hoveredMark;
    this.setNeedsDisplay();
  }
  /**
   * Draw a single `UserTimingMark` as a circle in the canvas.
   */


  _drawSingleMark(context, rect, mark, baseY, scaleFactor, showHoverHighlight) {
    const {
      frame
    } = this;
    const {
      timestamp
    } = mark;
    const x = timestampToPosition(timestamp, scaleFactor, frame);
    const size = USER_TIMING_MARK_SIZE;
    const halfSize = size / 2;
    const markRect = {
      origin: {
        x: x - halfSize,
        y: baseY
      },
      size: {
        width: size,
        height: size
      }
    };

    if (!rectIntersectsRect(markRect, rect)) {
      return; // Not in view
    }

    const fillStyle = showHoverHighlight ? COLORS.USER_TIMING_HOVER : COLORS.USER_TIMING;

    if (fillStyle !== null) {
      const y = baseY + halfSize;
      context.beginPath();
      context.fillStyle = fillStyle;
      context.moveTo(x, y - halfSize);
      context.lineTo(x + halfSize, y);
      context.lineTo(x, y + halfSize);
      context.lineTo(x - halfSize, y);
      context.fill();
    }
  }

  draw(context) {
    const {
      frame,
      _marks,
      _hoveredMark,
      visibleArea
    } = this;
    context.fillStyle = COLORS.BACKGROUND;
    context.fillRect(visibleArea.origin.x, visibleArea.origin.y, visibleArea.size.width, visibleArea.size.height); // Draw marks

    const baseY = frame.origin.y + TOP_ROW_PADDING;
    const scaleFactor = positioningScaleFactor(this._intrinsicSize.width, frame);

    _marks.forEach(mark => {
      if (mark === _hoveredMark) {
        return;
      }

      this._drawSingleMark(context, visibleArea, mark, baseY, scaleFactor, false);
    }); // Draw the hovered and/or selected items on top so they stand out.
    // This is helpful if there are multiple (overlapping) items close to each other.


    if (_hoveredMark !== null) {
      this._drawSingleMark(context, visibleArea, _hoveredMark, baseY, scaleFactor, true);
    } // Render bottom border.
    // Propose border rect, check if intersects with `rect`, draw intersection.


    const borderFrame = {
      origin: {
        x: frame.origin.x,
        y: frame.origin.y + ROW_HEIGHT_FIXED - BORDER_SIZE
      },
      size: {
        width: frame.size.width,
        height: BORDER_SIZE
      }
    };

    if (rectIntersectsRect(borderFrame, visibleArea)) {
      const borderDrawableRect = intersectionOfRects(borderFrame, visibleArea);
      context.fillStyle = COLORS.PRIORITY_BORDER;
      context.fillRect(borderDrawableRect.origin.x, borderDrawableRect.origin.y, borderDrawableRect.size.width, borderDrawableRect.size.height);
    }
  }
  /**
   * @private
   */


  _handleMouseMove(interaction, viewRefs) {
    const {
      frame,
      onHover,
      visibleArea
    } = this;

    if (!onHover) {
      return;
    }

    const {
      location
    } = interaction.payload;

    if (!rectContainsPoint(location, visibleArea)) {
      onHover(null);
      return;
    }

    const {
      _marks
    } = this;
    const scaleFactor = positioningScaleFactor(this._intrinsicSize.width, frame);
    const hoverTimestamp = positionToTimestamp(location.x, scaleFactor, frame);
    const timestampAllowance = widthToDuration(USER_TIMING_MARK_SIZE / 2, scaleFactor); // Because data ranges may overlap, we want to find the last intersecting item.
    // This will always be the one on "top" (the one the user is hovering over).

    for (let index = _marks.length - 1; index >= 0; index--) {
      const mark = _marks[index];
      const {
        timestamp
      } = mark;

      if (timestamp - timestampAllowance <= hoverTimestamp && hoverTimestamp <= timestamp + timestampAllowance) {
        viewRefs.hoveredView = this;
        onHover(mark);
        return;
      }
    }

    onHover(null);
  }

  handleInteraction(interaction, viewRefs) {
    switch (interaction.type) {
      case 'mousemove':
        this._handleMouseMove(interaction, viewRefs);

        break;
    }
  }

}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/content-views/index.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */











;// CONCATENATED MODULE: ../react-devtools-timeline/src/utils/getBatchRange.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function unmemoizedGetBatchRange(batchUID, data, minStartTime = 0) {
  const measures = data.batchUIDToMeasuresMap.get(batchUID);

  if (measures == null || measures.length === 0) {
    throw Error(`Could not find measures with batch UID "${batchUID}"`);
  }

  const lastMeasure = measures[measures.length - 1];
  const stopTime = lastMeasure.timestamp + lastMeasure.duration;

  if (stopTime < minStartTime) {
    return [0, 0];
  }

  let startTime = minStartTime;

  for (let index = 0; index < measures.length; index++) {
    const measure = measures[index];

    if (measure.timestamp >= minStartTime) {
      startTime = measure.timestamp;
      break;
    }
  }

  return [startTime, stopTime];
}

const getBatchRange = dist_memoize_one_esm(unmemoizedGetBatchRange);
;// CONCATENATED MODULE: ../react-devtools-timeline/src/utils/useSmartTooltip.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

const TOOLTIP_OFFSET_BOTTOM = 10;
const TOOLTIP_OFFSET_TOP = 5;
function useSmartTooltip({
  canvasRef,
  mouseX,
  mouseY
}) {
  const ref = (0,external_react_namespaceObject.useRef)(null); // HACK: Browser extension reports window.innerHeight of 0,
  // so we fallback to using the tooltip target element.

  let height = window.innerHeight;
  let width = window.innerWidth;
  const target = canvasRef.current;

  if (target !== null) {
    const rect = target.getBoundingClientRect();
    height = rect.top + rect.height;
    width = rect.left + rect.width;
  }

  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    const element = ref.current;

    if (element !== null) {
      // Let's check the vertical position.
      if (mouseY + TOOLTIP_OFFSET_BOTTOM + element.offsetHeight >= height) {
        // The tooltip doesn't fit below the mouse cursor (which is our
        // default strategy). Therefore we try to position it either above the
        // mouse cursor or finally aligned with the window's top edge.
        if (mouseY - TOOLTIP_OFFSET_TOP - element.offsetHeight > 0) {
          // We position the tooltip above the mouse cursor if it fits there.
          element.style.top = `${mouseY - element.offsetHeight - TOOLTIP_OFFSET_TOP}px`;
        } else {
          // Otherwise we align the tooltip with the window's top edge.
          element.style.top = '0px';
        }
      } else {
        element.style.top = `${mouseY + TOOLTIP_OFFSET_BOTTOM}px`;
      } // Now let's check the horizontal position.


      if (mouseX + TOOLTIP_OFFSET_BOTTOM + element.offsetWidth >= width) {
        // The tooltip doesn't fit at the right of the mouse cursor (which is
        // our default strategy). Therefore we try to position it either at the
        // left of the mouse cursor or finally aligned with the window's left
        // edge.
        if (mouseX - TOOLTIP_OFFSET_TOP - element.offsetWidth > 0) {
          // We position the tooltip at the left of the mouse cursor if it fits
          // there.
          element.style.left = `${mouseX - element.offsetWidth - TOOLTIP_OFFSET_TOP}px`;
        } else {
          // Otherwise, align the tooltip with the window's left edge.
          element.style.left = '0px';
        }
      } else {
        element.style.left = `${mouseX + TOOLTIP_OFFSET_BOTTOM}px`;
      }
    }
  });
  return ref;
}
// EXTERNAL MODULE: ../react-devtools-timeline/src/EventTooltip.css
var EventTooltip = __webpack_require__(2874);
var EventTooltip_default = /*#__PURE__*/__webpack_require__.n(EventTooltip);
;// CONCATENATED MODULE: ../react-devtools-timeline/src/EventTooltip.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





const MAX_TOOLTIP_TEXT_LENGTH = 60;

function getReactMeasureLabel(type) {
  switch (type) {
    case 'commit':
      return 'react commit';

    case 'render-idle':
      return 'react idle';

    case 'render':
      return 'react render';

    case 'layout-effects':
      return 'react layout effects';

    case 'passive-effects':
      return 'react passive effects';

    default:
      return null;
  }
}

function EventTooltip_EventTooltip({
  canvasRef,
  data,
  height,
  hoveredEvent,
  origin,
  width
}) {
  const ref = useSmartTooltip({
    canvasRef,
    mouseX: origin.x,
    mouseY: origin.y
  });

  if (hoveredEvent === null) {
    return null;
  }

  const {
    componentMeasure,
    flamechartStackFrame,
    measure,
    nativeEvent,
    networkMeasure,
    schedulingEvent,
    snapshot,
    suspenseEvent,
    thrownError,
    userTimingMark
  } = hoveredEvent;
  let content = null;

  if (componentMeasure !== null) {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(TooltipReactComponentMeasure, {
      componentMeasure: componentMeasure
    });
  } else if (nativeEvent !== null) {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(TooltipNativeEvent, {
      nativeEvent: nativeEvent
    });
  } else if (networkMeasure !== null) {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(TooltipNetworkMeasure, {
      networkMeasure: networkMeasure
    });
  } else if (schedulingEvent !== null) {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(TooltipSchedulingEvent, {
      data: data,
      schedulingEvent: schedulingEvent
    });
  } else if (snapshot !== null) {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(TooltipSnapshot, {
      height: height,
      snapshot: snapshot,
      width: width
    });
  } else if (suspenseEvent !== null) {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(TooltipSuspenseEvent, {
      suspenseEvent: suspenseEvent
    });
  } else if (measure !== null) {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(TooltipReactMeasure, {
      data: data,
      measure: measure
    });
  } else if (flamechartStackFrame !== null) {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(TooltipFlamechartNode, {
      stackFrame: flamechartStackFrame
    });
  } else if (userTimingMark !== null) {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(TooltipUserTimingMark, {
      mark: userTimingMark
    });
  } else if (thrownError !== null) {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(TooltipThrownError, {
      thrownError: thrownError
    });
  }

  if (content !== null) {
    return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (EventTooltip_default()).Tooltip,
      ref: ref
    }, content);
  } else {
    return null;
  }
}

const TooltipReactComponentMeasure = ({
  componentMeasure
}) => {
  const {
    componentName,
    duration,
    timestamp,
    type,
    warning
  } = componentMeasure;
  let label = componentName;

  switch (type) {
    case 'render':
      label += ' rendered';
      break;

    case 'layout-effect-mount':
      label += ' mounted layout effect';
      break;

    case 'layout-effect-unmount':
      label += ' unmounted layout effect';
      break;

    case 'passive-effect-mount':
      label += ' mounted passive effect';
      break;

    case 'passive-effect-unmount':
      label += ' unmounted passive effect';
      break;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).TooltipSection
  }, trimString(label, 768), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).Divider
  }), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGrid
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Timestamp:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, formatTimestamp(timestamp)), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Duration:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, formatting_formatDuration(duration)))), warning !== null && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).TooltipWarningSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).WarningText
  }, warning)));
};

const TooltipFlamechartNode = ({
  stackFrame
}) => {
  const {
    name,
    timestamp,
    duration,
    locationLine,
    locationColumn
  } = stackFrame;
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).TooltipSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (EventTooltip_default()).FlamechartStackFrameName
  }, name), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGrid
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Timestamp:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, formatTimestamp(timestamp)), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Duration:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, formatting_formatDuration(duration)), (locationLine !== undefined || locationColumn !== undefined) && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Location:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, "line ", locationLine, ", column ", locationColumn))));
};

const TooltipNativeEvent = ({
  nativeEvent
}) => {
  const {
    duration,
    timestamp,
    type,
    warning
  } = nativeEvent;
  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).TooltipSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (EventTooltip_default()).NativeEventName
  }, trimString(type, 768)), "event", /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).Divider
  }), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGrid
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Timestamp:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, formatTimestamp(timestamp)), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Duration:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, formatting_formatDuration(duration)))), warning !== null && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).TooltipWarningSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).WarningText
  }, warning)));
};

const TooltipNetworkMeasure = ({
  networkMeasure
}) => {
  const {
    finishTimestamp,
    lastReceivedDataTimestamp,
    priority,
    sendRequestTimestamp,
    url
  } = networkMeasure;
  let urlToDisplay = url;

  if (urlToDisplay.length > MAX_TOOLTIP_TEXT_LENGTH) {
    const half = Math.floor(MAX_TOOLTIP_TEXT_LENGTH / 2);
    urlToDisplay = url.slice(0, half) + '…' + url.slice(url.length - half);
  }

  const timestampBegin = sendRequestTimestamp;
  const timestampEnd = finishTimestamp || lastReceivedDataTimestamp;
  const duration = timestampEnd > 0 ? formatting_formatDuration(finishTimestamp - timestampBegin) : '(incomplete)';
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).SingleLineTextSection
  }, duration, " ", /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (EventTooltip_default()).DimText
  }, priority), ' ', urlToDisplay);
};

const TooltipSchedulingEvent = ({
  data,
  schedulingEvent
}) => {
  const label = getSchedulingEventLabel(schedulingEvent);

  if (!label) {
    if (false) {}

    return null;
  }

  let laneLabels = null;
  let lanes = null;

  switch (schedulingEvent.type) {
    case 'schedule-render':
    case 'schedule-state-update':
    case 'schedule-force-update':
      lanes = schedulingEvent.lanes;
      laneLabels = lanes.map(lane => data.laneToLabelMap.get(lane));
      break;
  }

  const {
    componentName,
    timestamp,
    warning
  } = schedulingEvent;
  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).TooltipSection
  }, componentName && /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (EventTooltip_default()).ComponentName
  }, trimString(componentName, 100)), label, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).Divider
  }), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGrid
  }, laneLabels !== null && lanes !== null && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Lanes:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, laneLabels.join(', '), " (", lanes.join(', '), ")")), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Timestamp:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, formatTimestamp(timestamp)))), warning !== null && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).TooltipWarningSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).WarningText
  }, warning)));
};

const TooltipSnapshot = ({
  height,
  snapshot,
  width
}) => {
  const aspectRatio = snapshot.width / snapshot.height; // Zoomed in view should not be any bigger than the DevTools viewport.

  let safeWidth = snapshot.width;
  let safeHeight = snapshot.height;

  if (safeWidth > width) {
    safeWidth = width;
    safeHeight = safeWidth / aspectRatio;
  }

  if (safeHeight > height) {
    safeHeight = height;
    safeWidth = safeHeight * aspectRatio;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("img", {
    className: (EventTooltip_default()).Image,
    src: snapshot.imageSource,
    style: {
      height: safeHeight,
      width: safeWidth
    }
  });
};

const TooltipSuspenseEvent = ({
  suspenseEvent
}) => {
  const {
    componentName,
    duration,
    phase,
    promiseName,
    resolution,
    timestamp,
    warning
  } = suspenseEvent;
  let label = 'suspended';

  if (phase !== null) {
    label += ` during ${phase}`;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).TooltipSection
  }, componentName && /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (EventTooltip_default()).ComponentName
  }, trimString(componentName, 100)), label, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).Divider
  }), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGrid
  }, promiseName !== null && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Resource:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLongValue
  }, promiseName)), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Status:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, resolution), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Timestamp:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, formatTimestamp(timestamp)), duration !== null && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Duration:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, formatting_formatDuration(duration))))), warning !== null && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).TooltipWarningSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).WarningText
  }, warning)));
};

const TooltipReactMeasure = ({
  data,
  measure
}) => {
  const label = getReactMeasureLabel(measure.type);

  if (!label) {
    if (false) {}

    return null;
  }

  const {
    batchUID,
    duration,
    timestamp,
    lanes
  } = measure;
  const [startTime, stopTime] = getBatchRange(batchUID, data);
  const laneLabels = lanes.map(lane => data.laneToLabelMap.get(lane));
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).TooltipSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (EventTooltip_default()).ReactMeasureLabel
  }, label), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).Divider
  }), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGrid
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Timestamp:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, formatTimestamp(timestamp)), measure.type !== 'render-idle' && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Duration:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, formatting_formatDuration(duration))), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Batch duration:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, formatting_formatDuration(stopTime - startTime)), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Lane", lanes.length === 1 ? '' : 's', ":"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, laneLabels.length > 0 ? `${laneLabels.join(', ')} (${lanes.join(', ')})` : lanes.join(', '))));
};

const TooltipUserTimingMark = ({
  mark
}) => {
  const {
    name,
    timestamp
  } = mark;
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).TooltipSection
  }, /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (EventTooltip_default()).UserTimingLabel
  }, name), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).Divider
  }), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGrid
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Timestamp:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, formatTimestamp(timestamp))));
};

const TooltipThrownError = ({
  thrownError
}) => {
  const {
    componentName,
    message,
    phase,
    timestamp
  } = thrownError;
  const label = `threw an error during ${phase}`;
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).TooltipSection
  }, componentName && /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (EventTooltip_default()).ComponentName
  }, trimString(componentName, 100)), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (EventTooltip_default()).UserTimingLabel
  }, label), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).Divider
  }), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGrid
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Timestamp:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, formatTimestamp(timestamp)), message !== '' && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (EventTooltip_default()).DetailsGridLabel
  }, "Error:"), /*#__PURE__*/external_react_namespaceObject.createElement("div", null, message))));
};
;// CONCATENATED MODULE: ../react-devtools-timeline/src/TimelineSearchContext.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


const EMPTY_ARRAY = [];

function TimelineSearchContext_reducer(state, action) {
  let {
    searchIndex,
    searchRegExp,
    searchResults,
    searchText
  } = state;

  switch (action.type) {
    case 'GO_TO_NEXT_SEARCH_RESULT':
      if (searchResults.length > 0) {
        if (searchIndex === -1 || searchIndex + 1 === searchResults.length) {
          searchIndex = 0;
        } else {
          searchIndex++;
        }
      }

      break;

    case 'GO_TO_PREVIOUS_SEARCH_RESULT':
      if (searchResults.length > 0) {
        if (searchIndex === -1 || searchIndex === 0) {
          searchIndex = searchResults.length - 1;
        } else {
          searchIndex--;
        }
      }

      break;

    case 'SET_SEARCH_TEXT':
      searchText = action.payload;
      searchRegExp = null;
      searchResults = [];

      if (searchText !== '') {
        const safeSearchText = searchText.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
        searchRegExp = new RegExp(`^${safeSearchText}`, 'i'); // If something is zoomed in on already, and the new search still contains it,
        // don't change the selection (even if overall search results set changes).

        let prevSelectedMeasure = null;

        if (searchIndex >= 0 && searchResults.length > searchIndex) {
          prevSelectedMeasure = searchResults[searchIndex];
        }

        const componentMeasures = state.profilerData.componentMeasures;
        let prevSelectedMeasureIndex = -1;

        for (let i = 0; i < componentMeasures.length; i++) {
          const componentMeasure = componentMeasures[i];

          if (componentMeasure.componentName.match(searchRegExp)) {
            searchResults.push(componentMeasure);

            if (componentMeasure === prevSelectedMeasure) {
              prevSelectedMeasureIndex = searchResults.length - 1;
            }
          }
        }

        searchIndex = prevSelectedMeasureIndex >= 0 ? prevSelectedMeasureIndex : 0;
      }

      break;
  }

  return {
    profilerData: state.profilerData,
    searchIndex,
    searchRegExp,
    searchResults,
    searchText
  };
}

const TimelineSearchContext = /*#__PURE__*/(0,external_react_namespaceObject.createContext)(null);
TimelineSearchContext.displayName = 'TimelineSearchContext';

function TimelineSearchContextController({
  children,
  profilerData,
  viewState
}) {
  const [state, dispatch] = (0,external_react_namespaceObject.useReducer)(TimelineSearchContext_reducer, {
    profilerData,
    searchIndex: -1,
    searchRegExp: null,
    searchResults: EMPTY_ARRAY,
    searchText: ''
  });
  const value = (0,external_react_namespaceObject.useMemo)(() => ({ ...state,
    dispatch
  }), [state]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(TimelineSearchContext.Provider, {
    value: value
  }, children);
}


;// CONCATENATED MODULE: ../react-devtools-timeline/src/CanvasPageContextMenu.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */










function zoomToBatch(data, measure, viewState, width) {
  const {
    batchUID
  } = measure;
  const [rangeStart, rangeEnd] = getBatchRange(batchUID, data); // Convert from time range to ScrollState

  const scrollState = moveStateToRange({
    state: viewState.horizontalScrollState,
    rangeStart,
    rangeEnd,
    contentLength: data.duration,
    minContentLength: data.duration * MIN_ZOOM_LEVEL,
    maxContentLength: data.duration * MAX_ZOOM_LEVEL,
    containerLength: width
  });
  viewState.updateHorizontalScrollState(scrollState);
}

function copySummary(data, measure) {
  const {
    batchUID,
    duration,
    timestamp,
    type
  } = measure;
  const [startTime, stopTime] = getBatchRange(batchUID, data);
  (0,clipboard.copy)(JSON.stringify({
    type,
    timestamp: pretty_ms_default()(timestamp),
    duration: pretty_ms_default()(duration),
    batchDuration: pretty_ms_default()(stopTime - startTime)
  }));
}

function CanvasPageContextMenu({
  canvasRef,
  timelineData,
  hoveredEvent,
  viewState,
  canvasWidth,
  closedMenuStub,
  ref
}) {
  const menuItems = (0,external_react_namespaceObject.useMemo)(() => {
    if (hoveredEvent == null) {
      return [];
    }

    const {
      componentMeasure,
      flamechartStackFrame,
      measure,
      networkMeasure,
      schedulingEvent,
      suspenseEvent
    } = hoveredEvent;
    const items = [];

    if (componentMeasure != null) {
      items.push({
        onClick: () => (0,clipboard.copy)(componentMeasure.componentName),
        content: 'Copy component name'
      });
    }

    if (networkMeasure != null) {
      items.push({
        onClick: () => (0,clipboard.copy)(networkMeasure.url),
        content: 'Copy URL'
      });
    }

    if (schedulingEvent != null) {
      items.push({
        onClick: () => (0,clipboard.copy)(schedulingEvent.componentName),
        content: 'Copy component name'
      });
    }

    if (suspenseEvent != null) {
      items.push({
        onClick: () => (0,clipboard.copy)(suspenseEvent.componentName),
        content: 'Copy component name'
      });
    }

    if (measure != null) {
      items.push({
        onClick: () => zoomToBatch(timelineData, measure, viewState, canvasWidth),
        content: 'Zoom to batch'
      }, {
        onClick: withPermissionsCheck({
          permissions: ['clipboardWrite']
        }, () => copySummary(timelineData, measure)),
        content: 'Copy summary'
      });
    }

    if (flamechartStackFrame != null) {
      items.push({
        onClick: withPermissionsCheck({
          permissions: ['clipboardWrite']
        }, () => (0,clipboard.copy)(flamechartStackFrame.scriptUrl)),
        content: 'Copy file path'
      }, {
        onClick: withPermissionsCheck({
          permissions: ['clipboardWrite']
        }, () => (0,clipboard.copy)(`line ${flamechartStackFrame.locationLine ?? ''}, column ${flamechartStackFrame.locationColumn ?? ''}`)),
        content: 'Copy location'
      });
    }

    return items;
  }, [hoveredEvent, viewState, canvasWidth]);
  return /*#__PURE__*/external_react_namespaceObject.createElement(ContextMenuContainer, {
    anchorElementRef: canvasRef,
    items: menuItems,
    closedMenuStub: closedMenuStub,
    ref: ref
  });
}
// EXTERNAL MODULE: ../react-devtools-timeline/src/CanvasPage.css
var CanvasPage = __webpack_require__(7138);
var CanvasPage_default = /*#__PURE__*/__webpack_require__.n(CanvasPage);
;// CONCATENATED MODULE: ../react-devtools-timeline/src/CanvasPage.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */














function CanvasPage_CanvasPage({
  profilerData,
  viewState
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (CanvasPage_default()).CanvasPage,
    style: {
      backgroundColor: COLORS.BACKGROUND
    }
  }, /*#__PURE__*/external_react_namespaceObject.createElement(AutoSizer, null, ({
    height,
    width
  }) => /*#__PURE__*/external_react_namespaceObject.createElement(AutoSizedCanvas, {
    data: profilerData,
    height: height,
    viewState: viewState,
    width: width
  })));
}

const EMPTY_CONTEXT_INFO = {
  componentMeasure: null,
  flamechartStackFrame: null,
  measure: null,
  nativeEvent: null,
  networkMeasure: null,
  schedulingEvent: null,
  snapshot: null,
  suspenseEvent: null,
  thrownError: null,
  userTimingMark: null
};

function AutoSizedCanvas({
  data,
  height,
  viewState,
  width
}) {
  const canvasRef = (0,external_react_namespaceObject.useRef)(null);
  const [mouseLocation, setMouseLocation] = (0,external_react_namespaceObject.useState)(zeroPoint); // DOM coordinates

  const [hoveredEvent, setHoveredEvent] = (0,external_react_namespaceObject.useState)(null);
  const [lastHoveredEvent, setLastHoveredEvent] = (0,external_react_namespaceObject.useState)(null);
  const contextMenuRef = (0,external_react_namespaceObject.useRef)(null);
  const resetHoveredEvent = (0,external_react_namespaceObject.useCallback)(() => setHoveredEvent(EMPTY_CONTEXT_INFO), []);
  const updateHoveredEvent = (0,external_react_namespaceObject.useCallback)(event => {
    setHoveredEvent(event); // If menu is already open, don't update the hovered event data
    // So the same set of menu items is preserved until the current context menu is closed

    if (contextMenuRef.current?.isShown()) {
      return;
    }

    const {
      componentMeasure,
      flamechartStackFrame,
      measure,
      networkMeasure,
      schedulingEvent,
      suspenseEvent
    } = event; // We have to keep track of last non-empty hovered event, since this will be the input for context menu items
    // We can't just pass hoveredEvent to ContextMenuContainer,
    // since it will be reset each time user moves mouse away from event object on the canvas

    if (componentMeasure != null || flamechartStackFrame != null || measure != null || networkMeasure != null || schedulingEvent != null || suspenseEvent != null) {
      setLastHoveredEvent(event);
    }
  }, [contextMenuRef]);
  const {
    searchIndex,
    searchRegExp,
    searchResults
  } = (0,external_react_namespaceObject.useContext)(TimelineSearchContext); // This effect searches timeline data and scrolls to the next match wen search criteria change.

  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    viewState.updateSearchRegExpState(searchRegExp);
    const componentMeasureSearchResult = searchResults.length > 0 ? searchResults[searchIndex] : null;

    if (componentMeasureSearchResult != null) {
      const scrollState = moveStateToRange({
        state: viewState.horizontalScrollState,
        rangeStart: componentMeasureSearchResult.timestamp,
        rangeEnd: componentMeasureSearchResult.timestamp + componentMeasureSearchResult.duration,
        contentLength: data.duration,
        minContentLength: data.duration * MIN_ZOOM_LEVEL,
        maxContentLength: data.duration * MAX_ZOOM_LEVEL,
        containerLength: width
      });
      viewState.updateHorizontalScrollState(scrollState);
    }

    surfaceRef.current.displayIfNeeded();
  }, [searchIndex, searchRegExp, searchResults, viewState]);
  const surfaceRef = (0,external_react_namespaceObject.useRef)(new Surface(resetHoveredEvent));
  const userTimingMarksViewRef = (0,external_react_namespaceObject.useRef)(null);
  const nativeEventsViewRef = (0,external_react_namespaceObject.useRef)(null);
  const schedulingEventsViewRef = (0,external_react_namespaceObject.useRef)(null);
  const suspenseEventsViewRef = (0,external_react_namespaceObject.useRef)(null);
  const componentMeasuresViewRef = (0,external_react_namespaceObject.useRef)(null);
  const reactMeasuresViewRef = (0,external_react_namespaceObject.useRef)(null);
  const flamechartViewRef = (0,external_react_namespaceObject.useRef)(null);
  const networkMeasuresViewRef = (0,external_react_namespaceObject.useRef)(null);
  const snapshotsViewRef = (0,external_react_namespaceObject.useRef)(null);
  const thrownErrorsViewRef = (0,external_react_namespaceObject.useRef)(null);
  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    const surface = surfaceRef.current;
    const defaultFrame = {
      origin: zeroPoint,
      size: {
        width,
        height
      }
    }; // Auto hide context menu when panning.

    viewState.onHorizontalScrollStateChange(scrollState => {
      contextMenuRef.current?.hide();
    }); // Initialize horizontal view state

    viewState.updateHorizontalScrollState(clampState({
      state: viewState.horizontalScrollState,
      minContentLength: data.duration * MIN_ZOOM_LEVEL,
      maxContentLength: data.duration * MAX_ZOOM_LEVEL,
      containerLength: defaultFrame.size.width
    }));

    function createViewHelper(view, label, shouldScrollVertically = false, shouldResizeVertically = false) {
      let verticalScrollView = null;

      if (shouldScrollVertically) {
        verticalScrollView = new VerticalScrollView(surface, defaultFrame, view, viewState, label);
      }

      const horizontalPanAndZoomView = new HorizontalPanAndZoomView(surface, defaultFrame, verticalScrollView !== null ? verticalScrollView : view, data.duration, viewState);
      let resizableView = null;

      if (shouldResizeVertically) {
        resizableView = new ResizableView(surface, defaultFrame, horizontalPanAndZoomView, viewState, canvasRef, label);
      }

      return resizableView || horizontalPanAndZoomView;
    }

    const axisMarkersView = new TimeAxisMarkersView(surface, defaultFrame, data.duration);
    const axisMarkersViewWrapper = createViewHelper(axisMarkersView, 'time');
    let userTimingMarksViewWrapper = null;

    if (data.otherUserTimingMarks.length > 0) {
      const userTimingMarksView = new UserTimingMarksView(surface, defaultFrame, data.otherUserTimingMarks, data.duration);
      userTimingMarksViewRef.current = userTimingMarksView;
      userTimingMarksViewWrapper = createViewHelper(userTimingMarksView, 'user timing api');
    }

    let nativeEventsViewWrapper = null;

    if (data.nativeEvents.length > 0) {
      const nativeEventsView = new NativeEventsView(surface, defaultFrame, data);
      nativeEventsViewRef.current = nativeEventsView;
      nativeEventsViewWrapper = createViewHelper(nativeEventsView, 'events', true, true);
    }

    let thrownErrorsViewWrapper = null;

    if (data.thrownErrors.length > 0) {
      const thrownErrorsView = new ThrownErrorsView(surface, defaultFrame, data);
      thrownErrorsViewRef.current = thrownErrorsView;
      thrownErrorsViewWrapper = createViewHelper(thrownErrorsView, 'thrown errors');
    }

    let schedulingEventsViewWrapper = null;

    if (data.schedulingEvents.length > 0) {
      const schedulingEventsView = new SchedulingEventsView(surface, defaultFrame, data);
      schedulingEventsViewRef.current = schedulingEventsView;
      schedulingEventsViewWrapper = createViewHelper(schedulingEventsView, 'react updates');
    }

    let suspenseEventsViewWrapper = null;

    if (data.suspenseEvents.length > 0) {
      const suspenseEventsView = new SuspenseEventsView(surface, defaultFrame, data);
      suspenseEventsViewRef.current = suspenseEventsView;
      suspenseEventsViewWrapper = createViewHelper(suspenseEventsView, 'suspense', true, true);
    }

    const reactMeasuresView = new ReactMeasuresView(surface, defaultFrame, data);
    reactMeasuresViewRef.current = reactMeasuresView;
    const reactMeasuresViewWrapper = createViewHelper(reactMeasuresView, 'react scheduling', true, true);
    let componentMeasuresViewWrapper = null;

    if (data.componentMeasures.length > 0) {
      const componentMeasuresView = new ComponentMeasuresView(surface, defaultFrame, data, viewState);
      componentMeasuresViewRef.current = componentMeasuresView;
      componentMeasuresViewWrapper = createViewHelper(componentMeasuresView, 'react components');
    }

    let snapshotsViewWrapper = null;

    if (data.snapshots.length > 0) {
      const snapshotsView = new SnapshotsView(surface, defaultFrame, data);
      snapshotsViewRef.current = snapshotsView;
      snapshotsViewWrapper = createViewHelper(snapshotsView, 'snapshots', true, true);
    }

    let networkMeasuresViewWrapper = null;

    if (data.snapshots.length > 0) {
      const networkMeasuresView = new NetworkMeasuresView(surface, defaultFrame, data);
      networkMeasuresViewRef.current = networkMeasuresView;
      networkMeasuresViewWrapper = createViewHelper(networkMeasuresView, 'network', true, true);
    }

    let flamechartViewWrapper = null;

    if (data.flamechart.length > 0) {
      const flamechartView = new FlamechartView(surface, defaultFrame, data.flamechart, data.internalModuleSourceToRanges, data.duration);
      flamechartViewRef.current = flamechartView;
      flamechartViewWrapper = createViewHelper(flamechartView, 'flamechart', true, true);
    } // Root view contains all of the sub views defined above.
    // The order we add them below determines their vertical position.


    const rootView = new View(surface, defaultFrame, verticallyStackedLayout, defaultFrame, COLORS.BACKGROUND);
    rootView.addSubview(axisMarkersViewWrapper);

    if (userTimingMarksViewWrapper !== null) {
      rootView.addSubview(userTimingMarksViewWrapper);
    }

    if (nativeEventsViewWrapper !== null) {
      rootView.addSubview(nativeEventsViewWrapper);
    }

    if (schedulingEventsViewWrapper !== null) {
      rootView.addSubview(schedulingEventsViewWrapper);
    }

    if (thrownErrorsViewWrapper !== null) {
      rootView.addSubview(thrownErrorsViewWrapper);
    }

    if (suspenseEventsViewWrapper !== null) {
      rootView.addSubview(suspenseEventsViewWrapper);
    }

    if (reactMeasuresViewWrapper !== null) {
      rootView.addSubview(reactMeasuresViewWrapper);
    }

    if (componentMeasuresViewWrapper !== null) {
      rootView.addSubview(componentMeasuresViewWrapper);
    }

    if (snapshotsViewWrapper !== null) {
      rootView.addSubview(snapshotsViewWrapper);
    }

    if (networkMeasuresViewWrapper !== null) {
      rootView.addSubview(networkMeasuresViewWrapper);
    }

    if (flamechartViewWrapper !== null) {
      rootView.addSubview(flamechartViewWrapper);
    }

    const verticalScrollOverflowView = new VerticalScrollOverflowView(surface, defaultFrame, rootView, viewState);
    surfaceRef.current.rootView = verticalScrollOverflowView;
  }, [data]);
  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    if (canvasRef.current) {
      surfaceRef.current.setCanvas(canvasRef.current, {
        width,
        height
      });
    }
  }, [width, height]);
  const interactor = (0,external_react_namespaceObject.useCallback)(interaction => {
    const canvas = canvasRef.current;

    if (canvas === null) {
      return;
    }

    const surface = surfaceRef.current;
    surface.handleInteraction(interaction); // Flush any display work that got queued up as part of the previous interaction.
    // Typically there should be no work, but certain interactions may need a second pass.
    // For example, the ResizableView may collapse/expand its contents,
    // which requires a second layout pass for an ancestor VerticalScrollOverflowView.
    //
    // TODO It would be nice to remove this call for performance reasons.
    // To do that, we'll need to address the UX bug with VerticalScrollOverflowView.
    // For more info see: https://github.com/facebook/react/pull/22005#issuecomment-896953399

    surface.displayIfNeeded();
    canvas.style.cursor = surface.getCurrentCursor() || 'default'; // Defer drawing to canvas until React's commit phase, to avoid drawing
    // twice and to ensure that both the canvas and DOM elements managed by
    // React are in sync.

    setMouseLocation({
      x: interaction.payload.event.x,
      y: interaction.payload.event.y
    });
  }, []);
  useCanvasInteraction(canvasRef, interactor);
  const {
    selectEvent
  } = (0,external_react_namespaceObject.useContext)(TimelineContext);
  (0,external_react_namespaceObject.useEffect)(() => {
    const {
      current: userTimingMarksView
    } = userTimingMarksViewRef;

    if (userTimingMarksView) {
      userTimingMarksView.onHover = userTimingMark => {
        if (!hoveredEvent || hoveredEvent.userTimingMark !== userTimingMark) {
          updateHoveredEvent({ ...EMPTY_CONTEXT_INFO,
            userTimingMark
          });
        }
      };
    }

    const {
      current: nativeEventsView
    } = nativeEventsViewRef;

    if (nativeEventsView) {
      nativeEventsView.onHover = nativeEvent => {
        if (!hoveredEvent || hoveredEvent.nativeEvent !== nativeEvent) {
          updateHoveredEvent({ ...EMPTY_CONTEXT_INFO,
            nativeEvent
          });
        }
      };
    }

    const {
      current: schedulingEventsView
    } = schedulingEventsViewRef;

    if (schedulingEventsView) {
      schedulingEventsView.onHover = schedulingEvent => {
        if (!hoveredEvent || hoveredEvent.schedulingEvent !== schedulingEvent) {
          updateHoveredEvent({ ...EMPTY_CONTEXT_INFO,
            schedulingEvent
          });
        }
      };

      schedulingEventsView.onClick = schedulingEvent => {
        selectEvent({ ...EMPTY_CONTEXT_INFO,
          schedulingEvent
        });
      };
    }

    const {
      current: suspenseEventsView
    } = suspenseEventsViewRef;

    if (suspenseEventsView) {
      suspenseEventsView.onHover = suspenseEvent => {
        if (!hoveredEvent || hoveredEvent.suspenseEvent !== suspenseEvent) {
          updateHoveredEvent({ ...EMPTY_CONTEXT_INFO,
            suspenseEvent
          });
        }
      };
    }

    const {
      current: reactMeasuresView
    } = reactMeasuresViewRef;

    if (reactMeasuresView) {
      reactMeasuresView.onHover = measure => {
        if (!hoveredEvent || hoveredEvent.measure !== measure) {
          updateHoveredEvent({ ...EMPTY_CONTEXT_INFO,
            measure
          });
        }
      };
    }

    const {
      current: componentMeasuresView
    } = componentMeasuresViewRef;

    if (componentMeasuresView) {
      componentMeasuresView.onHover = componentMeasure => {
        if (!hoveredEvent || hoveredEvent.componentMeasure !== componentMeasure) {
          updateHoveredEvent({ ...EMPTY_CONTEXT_INFO,
            componentMeasure
          });
        }
      };
    }

    const {
      current: snapshotsView
    } = snapshotsViewRef;

    if (snapshotsView) {
      snapshotsView.onHover = snapshot => {
        if (!hoveredEvent || hoveredEvent.snapshot !== snapshot) {
          updateHoveredEvent({ ...EMPTY_CONTEXT_INFO,
            snapshot
          });
        }
      };
    }

    const {
      current: flamechartView
    } = flamechartViewRef;

    if (flamechartView) {
      flamechartView.setOnHover(flamechartStackFrame => {
        if (!hoveredEvent || hoveredEvent.flamechartStackFrame !== flamechartStackFrame) {
          updateHoveredEvent({ ...EMPTY_CONTEXT_INFO,
            flamechartStackFrame
          });
        }
      });
    }

    const {
      current: networkMeasuresView
    } = networkMeasuresViewRef;

    if (networkMeasuresView) {
      networkMeasuresView.onHover = networkMeasure => {
        if (!hoveredEvent || hoveredEvent.networkMeasure !== networkMeasure) {
          updateHoveredEvent({ ...EMPTY_CONTEXT_INFO,
            networkMeasure
          });
        }
      };
    }

    const {
      current: thrownErrorsView
    } = thrownErrorsViewRef;

    if (thrownErrorsView) {
      thrownErrorsView.onHover = thrownError => {
        if (!hoveredEvent || hoveredEvent.thrownError !== thrownError) {
          updateHoveredEvent({ ...EMPTY_CONTEXT_INFO,
            thrownError
          });
        }
      };
    }
  }, [hoveredEvent, data // Attach onHover callbacks when views are re-created on data change
  ]);
  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    const userTimingMarksView = userTimingMarksViewRef.current;

    if (userTimingMarksView) {
      userTimingMarksView.setHoveredMark(hoveredEvent ? hoveredEvent.userTimingMark : null);
    }

    const nativeEventsView = nativeEventsViewRef.current;

    if (nativeEventsView) {
      nativeEventsView.setHoveredEvent(hoveredEvent ? hoveredEvent.nativeEvent : null);
    }

    const schedulingEventsView = schedulingEventsViewRef.current;

    if (schedulingEventsView) {
      schedulingEventsView.setHoveredEvent(hoveredEvent ? hoveredEvent.schedulingEvent : null);
    }

    const suspenseEventsView = suspenseEventsViewRef.current;

    if (suspenseEventsView) {
      suspenseEventsView.setHoveredEvent(hoveredEvent ? hoveredEvent.suspenseEvent : null);
    }

    const reactMeasuresView = reactMeasuresViewRef.current;

    if (reactMeasuresView) {
      reactMeasuresView.setHoveredMeasure(hoveredEvent ? hoveredEvent.measure : null);
    }

    const flamechartView = flamechartViewRef.current;

    if (flamechartView) {
      flamechartView.setHoveredFlamechartStackFrame(hoveredEvent ? hoveredEvent.flamechartStackFrame : null);
    }

    const networkMeasuresView = networkMeasuresViewRef.current;

    if (networkMeasuresView) {
      networkMeasuresView.setHoveredEvent(hoveredEvent ? hoveredEvent.networkMeasure : null);
    }
  }, [hoveredEvent]); // Draw to canvas in React's commit phase

  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    surfaceRef.current.displayIfNeeded();
  });
  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("canvas", {
    ref: canvasRef,
    height: height,
    width: width
  }), /*#__PURE__*/external_react_namespaceObject.createElement(CanvasPageContextMenu, {
    canvasRef: canvasRef,
    hoveredEvent: lastHoveredEvent,
    timelineData: data,
    viewState: viewState,
    canvasWidth: width,
    closedMenuStub: !surfaceRef.current.hasActiveView() ? /*#__PURE__*/external_react_namespaceObject.createElement(EventTooltip_EventTooltip, {
      canvasRef: canvasRef,
      data: data,
      height: height,
      hoveredEvent: hoveredEvent,
      origin: mouseLocation,
      width: width
    }) : null,
    ref: contextMenuRef
  }));
}

/* harmony default export */ const src_CanvasPage = (CanvasPage_CanvasPage);
// EXTERNAL MODULE: ../react-devtools-timeline/node_modules/regenerator-runtime/runtime.js
var runtime = __webpack_require__(5566);
// EXTERNAL MODULE: ../../node_modules/@elg/speedscope/dist/library/library.js
var library = __webpack_require__(7034);
;// CONCATENATED MODULE: ../react-devtools-timeline/src/constants.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

const REACT_TOTAL_NUM_LANES = 31; // Increment this number any time a backwards breaking change is made to the profiler metadata.

const SCHEDULING_PROFILER_VERSION = 1;
const SNAPSHOT_MAX_HEIGHT = 60;
;// CONCATENATED MODULE: ../react-devtools-timeline/src/import-worker/InvalidProfileError.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

/**
 * An error thrown when an invalid profile could not be processed.
 */
class InvalidProfileError extends Error {}
// EXTERNAL MODULE: ../../node_modules/error-stack-parser/error-stack-parser.js
var error_stack_parser = __webpack_require__(2267);
var error_stack_parser_default = /*#__PURE__*/__webpack_require__.n(error_stack_parser);
;// CONCATENATED MODULE: ../react-devtools-timeline/src/import-worker/preprocessData.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





const NATIVE_EVENT_DURATION_THRESHOLD = 20;
const NESTED_UPDATE_DURATION_THRESHOLD = 20;
const WARNING_STRINGS = {
  LONG_EVENT_HANDLER: 'An event handler scheduled a big update with React. Consider using the Transition API to defer some of this work.',
  NESTED_UPDATE: 'A big nested update was scheduled during layout. ' + 'Nested updates require React to re-render synchronously before the browser can paint. ' + 'Consider delaying this update by moving it to a passive effect (useEffect).',
  SUSPEND_DURING_UPDATE: 'A component suspended during an update which caused a fallback to be shown. ' + "Consider using the Transition API to avoid hiding components after they've been mounted."
}; // Exported for tests

function getLanesFromTransportDecimalBitmask(laneBitmaskString) {
  const laneBitmask = parseInt(laneBitmaskString, 10); // As negative numbers are stored in two's complement format, our bitmask
  // checks will be thrown off by them.

  if (laneBitmask < 0) {
    return [];
  }

  const lanes = [];
  let powersOfTwo = 0;

  while (powersOfTwo <= REACT_TOTAL_NUM_LANES) {
    if (1 << powersOfTwo & laneBitmask) {
      lanes.push(powersOfTwo);
    }

    powersOfTwo++;
  }

  return lanes;
}

function updateLaneToLabelMap(profilerData, laneLabelTuplesString) {
  // These marks appear multiple times in the data;
  // We only need to extact them once.
  if (profilerData.laneToLabelMap.size === 0) {
    const laneLabelTuples = laneLabelTuplesString.split(',');

    for (let laneIndex = 0; laneIndex < laneLabelTuples.length; laneIndex++) {
      // The numeric lane value (e.g. 64) isn't important.
      // The profiler parses and stores the lane's position within the bitmap,
      // (e.g. lane 1 is index 0, lane 16 is index 4).
      profilerData.laneToLabelMap.set(laneIndex, laneLabelTuples[laneIndex]);
    }
  }
}

let profilerVersion = null;

function getLastType(stack) {
  if (stack.length > 0) {
    const {
      type
    } = stack[stack.length - 1];
    return type;
  }

  return null;
}

function getDepth(stack) {
  if (stack.length > 0) {
    const {
      depth,
      type
    } = stack[stack.length - 1];
    return type === 'render-idle' ? depth : depth + 1;
  }

  return 0;
}

function markWorkStarted(type, startTime, lanes, currentProfilerData, state) {
  const {
    batchUID,
    measureStack
  } = state;
  const depth = getDepth(measureStack);
  const measure = {
    type,
    batchUID,
    depth,
    lanes,
    timestamp: startTime,
    duration: 0
  };
  state.measureStack.push({
    depth,
    measure,
    startTime,
    type
  }); // This array is pre-initialized when the batchUID is generated.

  const measures = currentProfilerData.batchUIDToMeasuresMap.get(batchUID);

  if (measures != null) {
    measures.push(measure);
  } else {
    currentProfilerData.batchUIDToMeasuresMap.set(state.batchUID, [measure]);
  } // This array is pre-initialized before processing starts.


  lanes.forEach(lane => {
    currentProfilerData.laneToReactMeasureMap.get(lane).push(measure);
  });
}

function markWorkCompleted(type, stopTime, currentProfilerData, stack) {
  if (stack.length === 0) {
    console.error('Unexpected type "%s" completed at %sms while stack is empty.', type, stopTime); // Ignore work "completion" user timing mark that doesn't complete anything

    return;
  }

  const last = stack[stack.length - 1];

  if (last.type !== type) {
    console.error('Unexpected type "%s" completed at %sms before "%s" completed.', type, stopTime, last.type);
  } // $FlowFixMe[incompatible-use]


  const {
    measure,
    startTime
  } = stack.pop();

  if (!measure) {
    console.error('Could not find matching measure for type "%s".', type);
  } // $FlowFixMe[cannot-write] This property should not be writable outside of this function.


  measure.duration = stopTime - startTime;
}

function throwIfIncomplete(type, stack) {
  const lastIndex = stack.length - 1;

  if (lastIndex >= 0) {
    const last = stack[lastIndex];

    if (last.stopTime === undefined && last.type === type) {
      throw new InvalidProfileError(`Unexpected type "${type}" started before "${last.type}" completed.`);
    }
  }
}

function processEventDispatch(event, timestamp, profilerData, state) {
  const data = event.args.data;
  const type = data.type;

  if (type.startsWith('react-')) {
    const stackTrace = data.stackTrace;

    if (stackTrace) {
      const topFrame = stackTrace[stackTrace.length - 1];

      if (topFrame.url.includes('/react-dom.')) {
        // Filter out fake React events dispatched by invokeGuardedCallbackDev.
        return;
      }
    }
  } // Reduce noise from events like DOMActivate, load/unload, etc. which are usually not relevant


  if (type === 'blur' || type === 'click' || type === 'input' || type.startsWith('focus') || type.startsWith('key') || type.startsWith('mouse') || type.startsWith('pointer')) {
    const duration = event.dur / 1000;
    let depth = 0;

    while (state.nativeEventStack.length > 0) {
      const prevNativeEvent = state.nativeEventStack[state.nativeEventStack.length - 1];
      const prevStopTime = prevNativeEvent.timestamp + prevNativeEvent.duration;

      if (timestamp < prevStopTime) {
        depth = prevNativeEvent.depth + 1;
        break;
      } else {
        state.nativeEventStack.pop();
      }
    }

    const nativeEvent = {
      depth,
      duration,
      timestamp,
      type,
      warning: null
    };
    profilerData.nativeEvents.push(nativeEvent); // Keep track of curent event in case future ones overlap.
    // We separate them into different vertical lanes in this case.

    state.nativeEventStack.push(nativeEvent);
  }
}

function processResourceFinish(event, timestamp, profilerData, state) {
  const requestId = event.args.data.requestId;
  const networkMeasure = state.requestIdToNetworkMeasureMap.get(requestId);

  if (networkMeasure != null) {
    networkMeasure.finishTimestamp = timestamp;

    if (networkMeasure.firstReceivedDataTimestamp === 0) {
      networkMeasure.firstReceivedDataTimestamp = timestamp;
    }

    if (networkMeasure.lastReceivedDataTimestamp === 0) {
      networkMeasure.lastReceivedDataTimestamp = timestamp;
    } // Clean up now that the resource is done.


    state.requestIdToNetworkMeasureMap.delete(event.args.data.requestId);
  }
}

function processResourceReceivedData(event, timestamp, profilerData, state) {
  const requestId = event.args.data.requestId;
  const networkMeasure = state.requestIdToNetworkMeasureMap.get(requestId);

  if (networkMeasure != null) {
    if (networkMeasure.firstReceivedDataTimestamp === 0) {
      networkMeasure.firstReceivedDataTimestamp = timestamp;
    }

    networkMeasure.lastReceivedDataTimestamp = timestamp;
    networkMeasure.finishTimestamp = timestamp;
  }
}

function processResourceReceiveResponse(event, timestamp, profilerData, state) {
  const requestId = event.args.data.requestId;
  const networkMeasure = state.requestIdToNetworkMeasureMap.get(requestId);

  if (networkMeasure != null) {
    networkMeasure.receiveResponseTimestamp = timestamp;
  }
}

function processScreenshot(event, timestamp, profilerData, state) {
  const encodedSnapshot = event.args.snapshot; // Base 64 encoded

  const snapshot = {
    height: 0,
    image: null,
    imageSource: `data:image/png;base64,${encodedSnapshot}`,
    timestamp,
    width: 0
  }; // Delay processing until we've extracted snapshot dimensions.

  let resolveFn = null;
  state.asyncProcessingPromises.push(new Promise(resolve => {
    resolveFn = resolve;
  })); // Parse the Base64 image data to determine native size.
  // This will be used later to scale for display within the thumbnail strip.

  fetch(snapshot.imageSource).then(response => response.blob()).then(blob => {
    // $FlowFixMe[cannot-resolve-name] createImageBitmap
    createImageBitmap(blob).then(bitmap => {
      snapshot.height = bitmap.height;
      snapshot.width = bitmap.width;
      resolveFn();
    });
  });
  profilerData.snapshots.push(snapshot);
}

function processResourceSendRequest(event, timestamp, profilerData, state) {
  const data = event.args.data;
  const requestId = data.requestId;
  const availableDepths = new Array(state.requestIdToNetworkMeasureMap.size + 1).fill(true);
  state.requestIdToNetworkMeasureMap.forEach(({
    depth
  }) => {
    availableDepths[depth] = false;
  });
  let depth = 0;

  for (let i = 0; i < availableDepths.length; i++) {
    if (availableDepths[i]) {
      depth = i;
      break;
    }
  }

  const networkMeasure = {
    depth,
    finishTimestamp: 0,
    firstReceivedDataTimestamp: 0,
    lastReceivedDataTimestamp: 0,
    requestId,
    requestMethod: data.requestMethod,
    priority: data.priority,
    sendRequestTimestamp: timestamp,
    receiveResponseTimestamp: 0,
    url: data.url
  };
  state.requestIdToNetworkMeasureMap.set(requestId, networkMeasure);
  profilerData.networkMeasures.push(networkMeasure);
  networkMeasure.sendRequestTimestamp = timestamp;
}

function processTimelineEvent(event,
/** Finalized profiler data up to `event`. May be mutated. */
currentProfilerData,
/** Intermediate processor state. May be mutated. */
state) {
  const {
    cat,
    name,
    ts,
    ph
  } = event;
  const startTime = (ts - currentProfilerData.startTime) / 1000;

  switch (cat) {
    case 'disabled-by-default-devtools.screenshot':
      processScreenshot(event, startTime, currentProfilerData, state);
      break;

    case 'devtools.timeline':
      switch (name) {
        case 'EventDispatch':
          processEventDispatch(event, startTime, currentProfilerData, state);
          break;

        case 'ResourceFinish':
          processResourceFinish(event, startTime, currentProfilerData, state);
          break;

        case 'ResourceReceivedData':
          processResourceReceivedData(event, startTime, currentProfilerData, state);
          break;

        case 'ResourceReceiveResponse':
          processResourceReceiveResponse(event, startTime, currentProfilerData, state);
          break;

        case 'ResourceSendRequest':
          processResourceSendRequest(event, startTime, currentProfilerData, state);
          break;
      }

      break;

    case 'blink.user_timing':
      if (name.startsWith('--react-version-')) {
        const [reactVersion] = name.slice(16).split('-');
        currentProfilerData.reactVersion = reactVersion;
      } else if (name.startsWith('--profiler-version-')) {
        const [versionString] = name.slice(19).split('-');
        profilerVersion = parseInt(versionString, 10);

        if (profilerVersion !== SCHEDULING_PROFILER_VERSION) {
          throw new InvalidProfileError(`This version of profiling data (${versionString}) is not supported by the current profiler.`);
        }
      } else if (name.startsWith('--react-lane-labels-')) {
        const [laneLabelTuplesString] = name.slice(20).split('-');
        updateLaneToLabelMap(currentProfilerData, laneLabelTuplesString);
      } else if (name.startsWith('--component-')) {
        processReactComponentMeasure(name, startTime, currentProfilerData, state);
      } else if (name.startsWith('--schedule-render-')) {
        const [laneBitmaskString] = name.slice(18).split('-');
        currentProfilerData.schedulingEvents.push({
          type: 'schedule-render',
          lanes: getLanesFromTransportDecimalBitmask(laneBitmaskString),
          timestamp: startTime,
          warning: null
        });
      } else if (name.startsWith('--schedule-forced-update-')) {
        const [laneBitmaskString, componentName] = name.slice(25).split('-');
        const forceUpdateEvent = {
          type: 'schedule-force-update',
          lanes: getLanesFromTransportDecimalBitmask(laneBitmaskString),
          componentName,
          timestamp: startTime,
          warning: null
        }; // If this is a nested update, make a note of it.
        // Once we're done processing events, we'll check to see if it was a long update and warn about it.

        if (state.measureStack.find(({
          type
        }) => type === 'commit')) {
          state.potentialLongNestedUpdate = forceUpdateEvent;
        }

        currentProfilerData.schedulingEvents.push(forceUpdateEvent);
      } else if (name.startsWith('--schedule-state-update-')) {
        const [laneBitmaskString, componentName] = name.slice(24).split('-');
        const stateUpdateEvent = {
          type: 'schedule-state-update',
          lanes: getLanesFromTransportDecimalBitmask(laneBitmaskString),
          componentName,
          timestamp: startTime,
          warning: null
        }; // If this is a nested update, make a note of it.
        // Once we're done processing events, we'll check to see if it was a long update and warn about it.

        if (state.measureStack.find(({
          type
        }) => type === 'commit')) {
          state.potentialLongNestedUpdate = stateUpdateEvent;
        }

        currentProfilerData.schedulingEvents.push(stateUpdateEvent);
      } else if (name.startsWith('--error-')) {
        const [componentName, phase, message] = name.slice(8).split('-');
        currentProfilerData.thrownErrors.push({
          componentName,
          message,
          phase: phase,
          timestamp: startTime,
          type: 'thrown-error'
        });
      } else if (name.startsWith('--suspense-suspend-')) {
        const [id, componentName, phase, laneBitmaskString, promiseName] = name.slice(19).split('-');
        const lanes = getLanesFromTransportDecimalBitmask(laneBitmaskString);
        const availableDepths = new Array(state.unresolvedSuspenseEvents.size + 1).fill(true);
        state.unresolvedSuspenseEvents.forEach(({
          depth
        }) => {
          availableDepths[depth] = false;
        });
        let depth = 0;

        for (let i = 0; i < availableDepths.length; i++) {
          if (availableDepths[i]) {
            depth = i;
            break;
          }
        } // TODO (timeline) Maybe we should calculate depth in post,
        // so unresolved Suspense requests don't take up space.
        // We can't know if they'll be resolved or not at this point.
        // We'll just give them a default (fake) duration width.


        const suspenseEvent = {
          componentName,
          depth,
          duration: null,
          id,
          phase: phase,
          promiseName: promiseName || null,
          resolution: 'unresolved',
          timestamp: startTime,
          type: 'suspense',
          warning: null
        };

        if (phase === 'update') {
          // If a component suspended during an update, we should verify that it was during a transition.
          // We need the lane metadata to verify this though.
          // Since that data is only logged during commit, we may not have it yet.
          // Store these events for post-processing then.
          state.potentialSuspenseEventsOutsideOfTransition.push([suspenseEvent, lanes]);
        }

        currentProfilerData.suspenseEvents.push(suspenseEvent);
        state.unresolvedSuspenseEvents.set(id, suspenseEvent);
      } else if (name.startsWith('--suspense-resolved-')) {
        const [id] = name.slice(20).split('-');
        const suspenseEvent = state.unresolvedSuspenseEvents.get(id);

        if (suspenseEvent != null) {
          state.unresolvedSuspenseEvents.delete(id);
          suspenseEvent.duration = startTime - suspenseEvent.timestamp;
          suspenseEvent.resolution = 'resolved';
        }
      } else if (name.startsWith('--suspense-rejected-')) {
        const [id] = name.slice(20).split('-');
        const suspenseEvent = state.unresolvedSuspenseEvents.get(id);

        if (suspenseEvent != null) {
          state.unresolvedSuspenseEvents.delete(id);
          suspenseEvent.duration = startTime - suspenseEvent.timestamp;
          suspenseEvent.resolution = 'rejected';
        }
      } else if (name.startsWith('--render-start-')) {
        if (state.nextRenderShouldGenerateNewBatchID) {
          state.nextRenderShouldGenerateNewBatchID = false;
          state.batchUID = state.uidCounter++;
        } // If this render is the result of a nested update, make a note of it.
        // Once we're done processing events, we'll check to see if it was a long update and warn about it.


        if (state.potentialLongNestedUpdate !== null) {
          state.potentialLongNestedUpdates.push([state.potentialLongNestedUpdate, state.batchUID]);
          state.potentialLongNestedUpdate = null;
        }

        const [laneBitmaskString] = name.slice(15).split('-');
        throwIfIncomplete('render', state.measureStack);

        if (getLastType(state.measureStack) !== 'render-idle') {
          markWorkStarted('render-idle', startTime, getLanesFromTransportDecimalBitmask(laneBitmaskString), currentProfilerData, state);
        }

        markWorkStarted('render', startTime, getLanesFromTransportDecimalBitmask(laneBitmaskString), currentProfilerData, state);

        for (let i = 0; i < state.nativeEventStack.length; i++) {
          const nativeEvent = state.nativeEventStack[i];
          const stopTime = nativeEvent.timestamp + nativeEvent.duration; // If React work was scheduled during an event handler, and the event had a long duration,
          // it might be because the React render was long and stretched the event.
          // It might also be that the React work was short and that something else stretched the event.
          // Make a note of this event for now and we'll examine the batch of React render work later.
          // (We can't know until we're done processing the React update anyway.)

          if (stopTime > startTime) {
            state.potentialLongEvents.push([nativeEvent, state.batchUID]);
          }
        }
      } else if (name.startsWith('--render-stop') || name.startsWith('--render-yield')) {
        markWorkCompleted('render', startTime, currentProfilerData, state.measureStack);
      } else if (name.startsWith('--commit-start-')) {
        state.nextRenderShouldGenerateNewBatchID = true;
        const [laneBitmaskString] = name.slice(15).split('-');
        markWorkStarted('commit', startTime, getLanesFromTransportDecimalBitmask(laneBitmaskString), currentProfilerData, state);
      } else if (name.startsWith('--commit-stop')) {
        markWorkCompleted('commit', startTime, currentProfilerData, state.measureStack);
        markWorkCompleted('render-idle', startTime, currentProfilerData, state.measureStack);
      } else if (name.startsWith('--layout-effects-start-')) {
        const [laneBitmaskString] = name.slice(23).split('-');
        markWorkStarted('layout-effects', startTime, getLanesFromTransportDecimalBitmask(laneBitmaskString), currentProfilerData, state);
      } else if (name.startsWith('--layout-effects-stop')) {
        markWorkCompleted('layout-effects', startTime, currentProfilerData, state.measureStack);
      } else if (name.startsWith('--passive-effects-start-')) {
        const [laneBitmaskString] = name.slice(24).split('-');
        markWorkStarted('passive-effects', startTime, getLanesFromTransportDecimalBitmask(laneBitmaskString), currentProfilerData, state);
      } else if (name.startsWith('--passive-effects-stop')) {
        markWorkCompleted('passive-effects', startTime, currentProfilerData, state.measureStack);
      } else if (name.startsWith('--react-internal-module-start-')) {
        const stackFrameStart = name.slice(30);

        if (!state.internalModuleStackStringSet.has(stackFrameStart)) {
          state.internalModuleStackStringSet.add(stackFrameStart);
          const parsedStackFrameStart = parseStackFrame(stackFrameStart);
          state.internalModuleCurrentStackFrame = parsedStackFrameStart;
        }
      } else if (name.startsWith('--react-internal-module-stop-')) {
        const stackFrameStop = name.slice(29);

        if (!state.internalModuleStackStringSet.has(stackFrameStop)) {
          state.internalModuleStackStringSet.add(stackFrameStop);
          const parsedStackFrameStop = parseStackFrame(stackFrameStop);

          if (parsedStackFrameStop !== null && state.internalModuleCurrentStackFrame !== null) {
            const parsedStackFrameStart = state.internalModuleCurrentStackFrame;
            state.internalModuleCurrentStackFrame = null;
            const range = [parsedStackFrameStart, parsedStackFrameStop];
            const ranges = currentProfilerData.internalModuleSourceToRanges.get(parsedStackFrameStart.fileName);

            if (ranges == null) {
              currentProfilerData.internalModuleSourceToRanges.set(parsedStackFrameStart.fileName, [range]);
            } else {
              ranges.push(range);
            }
          }
        }
      } else if (ph === 'R' || ph === 'n') {
        // User Timing mark
        currentProfilerData.otherUserTimingMarks.push({
          name,
          timestamp: startTime
        });
      } else if (ph === 'b') {// TODO: Begin user timing measure
      } else if (ph === 'e') {// TODO: End user timing measure
      } else if (ph === 'i' || ph === 'I') {// Instant events.
        // Note that the capital "I" is a deprecated value that exists in Chrome Canary traces.
      } else {
        throw new InvalidProfileError(`Unrecognized event ${JSON.stringify(event)}! This is likely a bug in this profiler tool.`);
      }

      break;
  }
}

function assertNoOverlappingComponentMeasure(state) {
  if (state.currentReactComponentMeasure !== null) {
    console.error('Component measure started while another measure in progress:', state.currentReactComponentMeasure);
  }
}

function assertCurrentComponentMeasureType(state, type) {
  if (state.currentReactComponentMeasure === null) {
    console.error(`Component measure type "${type}" stopped while no measure was in progress`);
  } else if (state.currentReactComponentMeasure.type !== type) {
    console.error(`Component measure type "${type}" stopped while type ${state.currentReactComponentMeasure.type} in progress`);
  }
}

function processReactComponentMeasure(name, startTime, currentProfilerData, state) {
  if (name.startsWith('--component-render-start-')) {
    const [componentName] = name.slice(25).split('-');
    assertNoOverlappingComponentMeasure(state);
    state.currentReactComponentMeasure = {
      componentName,
      timestamp: startTime,
      duration: 0,
      type: 'render',
      warning: null
    };
  } else if (name === '--component-render-stop') {
    assertCurrentComponentMeasureType(state, 'render');

    if (state.currentReactComponentMeasure !== null) {
      const componentMeasure = state.currentReactComponentMeasure;
      componentMeasure.duration = startTime - componentMeasure.timestamp;
      state.currentReactComponentMeasure = null;
      currentProfilerData.componentMeasures.push(componentMeasure);
    }
  } else if (name.startsWith('--component-layout-effect-mount-start-')) {
    const [componentName] = name.slice(38).split('-');
    assertNoOverlappingComponentMeasure(state);
    state.currentReactComponentMeasure = {
      componentName,
      timestamp: startTime,
      duration: 0,
      type: 'layout-effect-mount',
      warning: null
    };
  } else if (name === '--component-layout-effect-mount-stop') {
    assertCurrentComponentMeasureType(state, 'layout-effect-mount');

    if (state.currentReactComponentMeasure !== null) {
      const componentMeasure = state.currentReactComponentMeasure;
      componentMeasure.duration = startTime - componentMeasure.timestamp;
      state.currentReactComponentMeasure = null;
      currentProfilerData.componentMeasures.push(componentMeasure);
    }
  } else if (name.startsWith('--component-layout-effect-unmount-start-')) {
    const [componentName] = name.slice(40).split('-');
    assertNoOverlappingComponentMeasure(state);
    state.currentReactComponentMeasure = {
      componentName,
      timestamp: startTime,
      duration: 0,
      type: 'layout-effect-unmount',
      warning: null
    };
  } else if (name === '--component-layout-effect-unmount-stop') {
    assertCurrentComponentMeasureType(state, 'layout-effect-unmount');

    if (state.currentReactComponentMeasure !== null) {
      const componentMeasure = state.currentReactComponentMeasure;
      componentMeasure.duration = startTime - componentMeasure.timestamp;
      state.currentReactComponentMeasure = null;
      currentProfilerData.componentMeasures.push(componentMeasure);
    }
  } else if (name.startsWith('--component-passive-effect-mount-start-')) {
    const [componentName] = name.slice(39).split('-');
    assertNoOverlappingComponentMeasure(state);
    state.currentReactComponentMeasure = {
      componentName,
      timestamp: startTime,
      duration: 0,
      type: 'passive-effect-mount',
      warning: null
    };
  } else if (name === '--component-passive-effect-mount-stop') {
    assertCurrentComponentMeasureType(state, 'passive-effect-mount');

    if (state.currentReactComponentMeasure !== null) {
      const componentMeasure = state.currentReactComponentMeasure;
      componentMeasure.duration = startTime - componentMeasure.timestamp;
      state.currentReactComponentMeasure = null;
      currentProfilerData.componentMeasures.push(componentMeasure);
    }
  } else if (name.startsWith('--component-passive-effect-unmount-start-')) {
    const [componentName] = name.slice(41).split('-');
    assertNoOverlappingComponentMeasure(state);
    state.currentReactComponentMeasure = {
      componentName,
      timestamp: startTime,
      duration: 0,
      type: 'passive-effect-unmount',
      warning: null
    };
  } else if (name === '--component-passive-effect-unmount-stop') {
    assertCurrentComponentMeasureType(state, 'passive-effect-unmount');

    if (state.currentReactComponentMeasure !== null) {
      const componentMeasure = state.currentReactComponentMeasure;
      componentMeasure.duration = startTime - componentMeasure.timestamp;
      state.currentReactComponentMeasure = null;
      currentProfilerData.componentMeasures.push(componentMeasure);
    }
  }
}

function preprocessFlamechart(rawData) {
  let parsedData;

  try {
    parsedData = (0,library.importFromChromeTimeline)(rawData, 'react-devtools');
  } catch (error) {
    // Assume any Speedscope errors are caused by bad profiles
    const errorToRethrow = new InvalidProfileError(error.message);
    errorToRethrow.stack = error.stack;
    throw errorToRethrow;
  }

  const profile = parsedData.profiles[0]; // TODO: Choose the main CPU thread only

  const speedscopeFlamechart = new library.Flamechart({
    // $FlowFixMe[method-unbinding]
    getTotalWeight: profile.getTotalWeight.bind(profile),
    // $FlowFixMe[method-unbinding]
    forEachCall: profile.forEachCall.bind(profile),
    // $FlowFixMe[method-unbinding]
    formatValue: profile.formatValue.bind(profile),
    getColorBucketForFrame: () => 0
  });
  const flamechart = speedscopeFlamechart.getLayers().map(layer => layer.map(({
    start,
    end,
    node: {
      frame: {
        name,
        file,
        line,
        col
      }
    }
  }) => ({
    name,
    timestamp: start / 1000,
    duration: (end - start) / 1000,
    scriptUrl: file,
    locationLine: line,
    locationColumn: col
  })));
  return flamechart;
}

function parseStackFrame(stackFrame) {
  const error = new Error();
  error.stack = stackFrame;
  const frames = error_stack_parser_default().parse(error);
  return frames.length === 1 ? frames[0] : null;
}

async function preprocessData(timeline) {
  const flamechart = preprocessFlamechart(timeline);
  const laneToReactMeasureMap = new Map();

  for (let lane = 0; lane < REACT_TOTAL_NUM_LANES; lane++) {
    laneToReactMeasureMap.set(lane, []);
  }

  const profilerData = {
    batchUIDToMeasuresMap: new Map(),
    componentMeasures: [],
    duration: 0,
    flamechart,
    internalModuleSourceToRanges: new Map(),
    laneToLabelMap: new Map(),
    laneToReactMeasureMap,
    nativeEvents: [],
    networkMeasures: [],
    otherUserTimingMarks: [],
    reactVersion: null,
    schedulingEvents: [],
    snapshots: [],
    snapshotHeight: 0,
    startTime: 0,
    suspenseEvents: [],
    thrownErrors: []
  }; // Sort `timeline`. JSON Array Format trace events need not be ordered. See:
  // https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU/preview#heading=h.f2f0yd51wi15

  timeline = timeline.filter(Boolean).sort((a, b) => a.ts > b.ts ? 1 : -1); // Events displayed in flamechart have timestamps relative to the profile
  // event's startTime. Source: https://github.com/v8/v8/blob/44bd8fd7/src/inspector/js_protocol.json#L1486
  //
  // We'll thus expect there to be a 'Profile' event; if there is not one, we
  // can deduce that there are no flame chart events. As we expect React
  // scheduling profiling user timing marks to be recorded together with browser
  // flame chart events, we can futher deduce that the data is invalid and we
  // don't bother finding React events.

  const indexOfProfileEvent = timeline.findIndex(event => event.name === 'Profile');

  if (indexOfProfileEvent === -1) {
    return profilerData;
  } // Use Profile event's `startTime` as the start time to align with flame chart.
  // TODO: Remove assumption that there'll only be 1 'Profile' event. If this
  // assumption does not hold, the chart may start at the wrong time.


  profilerData.startTime = timeline[indexOfProfileEvent].args.data.startTime;
  profilerData.duration = (timeline[timeline.length - 1].ts - profilerData.startTime) / 1000;
  const state = {
    asyncProcessingPromises: [],
    batchUID: 0,
    currentReactComponentMeasure: null,
    internalModuleCurrentStackFrame: null,
    internalModuleStackStringSet: new Set(),
    measureStack: [],
    nativeEventStack: [],
    nextRenderShouldGenerateNewBatchID: true,
    potentialLongEvents: [],
    potentialLongNestedUpdate: null,
    potentialLongNestedUpdates: [],
    potentialSuspenseEventsOutsideOfTransition: [],
    requestIdToNetworkMeasureMap: new Map(),
    uidCounter: 0,
    unresolvedSuspenseEvents: new Map()
  };
  timeline.forEach(event => processTimelineEvent(event, profilerData, state));

  if (profilerVersion === null) {
    if (profilerData.schedulingEvents.length === 0 && profilerData.batchUIDToMeasuresMap.size === 0) {
      // No profiler version could indicate data was logged using an older build of React,
      // before an explicitly profiler version was included in the logging data.
      // But it could also indicate that the website was either not using React, or using a production build.
      // The easiest way to check for this case is to see if the data contains any scheduled updates or render work.
      throw new InvalidProfileError('No React marks were found in the provided profile.' + ' Please provide profiling data from an React application running in development or profiling mode.');
    }

    throw new InvalidProfileError(`This version of profiling data is not supported by the current profiler.`);
  } // Validate that all events and measures are complete


  const {
    measureStack
  } = state;

  if (measureStack.length > 0) {
    console.error('Incomplete events or measures', measureStack);
  } // Check for warnings.


  state.potentialLongEvents.forEach(([nativeEvent, batchUID]) => {
    // See how long the subsequent batch of React work was.
    // Ignore any work that was already started.
    const [startTime, stopTime] = getBatchRange(batchUID, profilerData, nativeEvent.timestamp);

    if (stopTime - startTime > NATIVE_EVENT_DURATION_THRESHOLD) {
      nativeEvent.warning = WARNING_STRINGS.LONG_EVENT_HANDLER;
    }
  });
  state.potentialLongNestedUpdates.forEach(([schedulingEvent, batchUID]) => {
    // See how long the subsequent batch of React work was.
    const [startTime, stopTime] = getBatchRange(batchUID, profilerData);

    if (stopTime - startTime > NESTED_UPDATE_DURATION_THRESHOLD) {
      // Don't warn about transition updates scheduled during the commit phase.
      // e.g. useTransition, useDeferredValue
      // These are allowed to be long-running.
      if (!schedulingEvent.lanes.some(lane => profilerData.laneToLabelMap.get(lane) === 'Transition')) {// FIXME: This warning doesn't account for "nested updates" that are
        // spawned by useDeferredValue. Disabling temporarily until we figure
        // out the right way to handle this.
        // schedulingEvent.warning = WARNING_STRINGS.NESTED_UPDATE;
      }
    }
  });
  state.potentialSuspenseEventsOutsideOfTransition.forEach(([suspenseEvent, lanes]) => {
    // HACK This is a bit gross but the numeric lane value might change between render versions.
    if (!lanes.some(lane => profilerData.laneToLabelMap.get(lane) === 'Transition')) {
      suspenseEvent.warning = WARNING_STRINGS.SUSPEND_DURING_UPDATE;
    }
  }); // Wait for any async processing to complete before returning.
  // Since processing is done in a worker, async work must complete before data is serialized and returned.

  await Promise.all(state.asyncProcessingPromises); // Now that all images have been loaded, let's figure out the display size we're going to use for our thumbnails:
  // both the ones rendered to the canvas and the ones shown on hover.

  if (profilerData.snapshots.length > 0) {
    // NOTE We assume a static window size here, which is not necessarily true but should be for most cases.
    // Regardless, Chrome also sets a single size/ratio and stick with it- so we'll do the same.
    const snapshot = profilerData.snapshots[0];
    profilerData.snapshotHeight = Math.min(snapshot.height, SNAPSHOT_MAX_HEIGHT);
  }

  return profilerData;
}
// EXTERNAL MODULE: ../../node_modules/nullthrows/nullthrows.js
var nullthrows = __webpack_require__(9209);
var nullthrows_default = /*#__PURE__*/__webpack_require__.n(nullthrows);
;// CONCATENATED MODULE: ../react-devtools-timeline/src/import-worker/readInputData.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


const readInputData = file => {
  if (!file.name.endsWith('.json')) {
    throw new InvalidProfileError('Invalid file type. Only JSON performance profiles are supported');
  }

  const fileReader = new FileReader();
  return new Promise((resolve, reject) => {
    fileReader.onload = () => {
      const result = nullthrows_default()(fileReader.result);

      if (typeof result === 'string') {
        resolve(result);
      }

      reject(new InvalidProfileError('Input file was not read as a string'));
    };

    fileReader.onerror = () => reject(fileReader.error);

    fileReader.readAsText(file);
  });
};
;// CONCATENATED MODULE: ../react-devtools-timeline/src/import-worker/importFile.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */




async function importFile(file) {
  try {
    const readFile = await readInputData(file);
    const events = JSON.parse(readFile);

    if (events.length === 0) {
      throw new InvalidProfileError('No profiling data found in file.');
    }

    const processedData = await preprocessData(events);
    return {
      status: 'SUCCESS',
      processedData
    };
  } catch (error) {
    if (error instanceof InvalidProfileError) {
      return {
        status: 'INVALID_PROFILE_ERROR',
        error
      };
    } else {
      return {
        status: 'UNEXPECTED_ERROR',
        error
      };
    }
  }
}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/import-worker/importFile.worker.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

const importFile_worker_importFile = importFile;
;// CONCATENATED MODULE: ../react-devtools-timeline/src/import-worker/index.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
// This file uses workerize to load ./importFile.worker as a webworker and instanciates it,
// exposing flow typed functions that can be used on other files.


const workerizedImportFile = window.Worker ? (0,importFile_worker_namespaceObject["default"])() : importFile_namespaceObject;
const import_worker_importFile = file => workerizedImportFile.importFile(file);
;// CONCATENATED MODULE: ../react-devtools-timeline/src/timelineCache.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

const timelineCache_Pending = 0;
const timelineCache_Resolved = 1;
const timelineCache_Rejected = 2;
// This is intentionally a module-level Map, rather than a React-managed one.
// Otherwise, refreshing the inspected element cache would also clear this cache.
// Profiler file contents are static anyway.
const fileNameToProfilerDataMap = new Map();

function timelineCache_readRecord(record) {
  if (record.status === timelineCache_Resolved) {
    // This is just a type refinement.
    return record;
  } else if (record.status === timelineCache_Rejected) {
    // This is just a type refinement.
    return record;
  } else {
    throw record.value;
  }
}

function timelineCache_importFile(file) {
  const fileName = file.name;
  let record = fileNameToProfilerDataMap.get(fileName);

  if (!record) {
    const callbacks = new Set();
    const wakeable = {
      then(callback) {
        callbacks.add(callback);
      },

      // Optional property used by Timeline:
      displayName: `Importing file "${fileName}"`
    };

    const wake = () => {
      // This assumes they won't throw.
      callbacks.forEach(callback => callback());
      callbacks.clear();
    };

    const newRecord = record = {
      status: timelineCache_Pending,
      value: wakeable
    };
    import_worker_importFile(file).then(data => {
      switch (data.status) {
        case 'SUCCESS':
          const resolvedRecord = newRecord;
          resolvedRecord.status = timelineCache_Resolved;
          resolvedRecord.value = data.processedData;
          break;

        case 'INVALID_PROFILE_ERROR':
        case 'UNEXPECTED_ERROR':
          const thrownRecord = newRecord;
          thrownRecord.status = timelineCache_Rejected;
          thrownRecord.value = data.error;
          break;
      }

      wake();
    });
    fileNameToProfilerDataMap.set(fileName, record);
  }

  const response = timelineCache_readRecord(record).value;
  return response;
}
;// CONCATENATED MODULE: ../react-devtools-timeline/src/TimelineSearchInput.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






function TimelineSearchInput(props) {
  const {
    searchInputContainerRef
  } = (0,external_react_namespaceObject.useContext)(TimelineContext);
  const {
    dispatch,
    searchIndex,
    searchResults,
    searchText
  } = (0,external_react_namespaceObject.useContext)(TimelineSearchContext);

  if (searchInputContainerRef.current === null) {
    return null;
  }

  const search = text => dispatch({
    type: 'SET_SEARCH_TEXT',
    payload: text
  });

  const goToNextResult = () => dispatch({
    type: 'GO_TO_NEXT_SEARCH_RESULT'
  });

  const goToPreviousResult = () => dispatch({
    type: 'GO_TO_PREVIOUS_SEARCH_RESULT'
  });

  return /*#__PURE__*/(0,external_react_dom_namespaceObject.createPortal)( /*#__PURE__*/external_react_namespaceObject.createElement(SearchInput_SearchInput, {
    goToNextResult: goToNextResult,
    goToPreviousResult: goToPreviousResult,
    placeholder: "Search components by name",
    search: search,
    searchIndex: searchIndex,
    searchResultsCount: searchResults.length,
    searchText: searchText
  }), searchInputContainerRef.current);
}
// EXTERNAL MODULE: ../react-devtools-timeline/src/TimelineNotSupported.css
var TimelineNotSupported = __webpack_require__(778);
var TimelineNotSupported_default = /*#__PURE__*/__webpack_require__.n(TimelineNotSupported);
;// CONCATENATED MODULE: ../react-devtools-timeline/src/TimelineNotSupported.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */



function TimelineNotSupported_TimelineNotSupported() {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (TimelineNotSupported_default()).Column
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (TimelineNotSupported_default()).Header
  }, "Timeline profiling not supported."), /*#__PURE__*/external_react_namespaceObject.createElement("p", {
    className: (TimelineNotSupported_default()).Paragraph
  }, /*#__PURE__*/external_react_namespaceObject.createElement("span", null, "Timeline profiler requires a development or profiling build of", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("code", {
    className: (TimelineNotSupported_default()).Code
  }, "react-dom@^18"), ".")), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (TimelineNotSupported_default()).LearnMoreRow
  }, "Click", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("a", {
    className: (TimelineNotSupported_default()).Link,
    href: "https://fb.me/react-devtools-profiling",
    rel: "noopener noreferrer",
    target: "_blank"
  }, "here"), ' ', "to learn more about profiling."), isInternalFacebookBuild && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (TimelineNotSupported_default()).MetaGKRow
  }, /*#__PURE__*/external_react_namespaceObject.createElement("strong", null, "Meta only"), ": Enable the", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("a", {
    className: (TimelineNotSupported_default()).Link,
    href: "https://fburl.com/react-devtools-scheduling-profiler-gk",
    rel: "noopener noreferrer",
    target: "_blank"
  }, "react_enable_scheduling_profiler GK"), "."));
}
// EXTERNAL MODULE: ../react-devtools-timeline/src/Timeline.css
var Timeline = __webpack_require__(3234);
var Timeline_default = /*#__PURE__*/__webpack_require__.n(Timeline);
;// CONCATENATED MODULE: ../react-devtools-timeline/src/Timeline.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */














function Timeline_Timeline(_) {
  const {
    file,
    inMemoryTimelineData,
    isTimelineSupported,
    setFile,
    viewState
  } = (0,external_react_namespaceObject.useContext)(TimelineContext);
  const {
    didRecordCommits,
    isProfiling
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const ref = (0,external_react_namespaceObject.useRef)(null); // HACK: Canvas rendering uses an imperative API,
  // but DevTools colors are stored in CSS variables (see root.css and SettingsContext).
  // When the theme changes, we need to trigger update the imperative colors and re-draw the Canvas.

  const {
    theme
  } = (0,external_react_namespaceObject.useContext)(SettingsContext); // HACK: SettingsContext also uses a useLayoutEffect to update styles;
  // make sure the theme context in SettingsContext updates before this code.

  const deferredTheme = (0,external_react_namespaceObject.useDeferredValue)(theme); // HACK: Schedule a re-render of the Canvas once colors have been updated.
  // The easiest way to guarangee this happens is to recreate the inner Canvas component.

  const [key, setKey] = (0,external_react_namespaceObject.useState)(theme);
  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    const pollForTheme = () => {
      if (updateColorsToMatchTheme(ref.current)) {
        clearInterval(intervalID);
        setKey(deferredTheme);
      }
    };

    const intervalID = setInterval(pollForTheme, 50);
    return () => {
      clearInterval(intervalID);
    };
  }, [deferredTheme]);
  let content = null;

  if (isProfiling) {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(RecordingInProgress, null);
  } else if (inMemoryTimelineData && inMemoryTimelineData.length > 0) {
    // TODO (timeline) Support multiple renderers.
    const timelineData = inMemoryTimelineData[0];
    content = /*#__PURE__*/external_react_namespaceObject.createElement(TimelineSearchContextController, {
      profilerData: timelineData,
      viewState: viewState
    }, /*#__PURE__*/external_react_namespaceObject.createElement(TimelineSearchInput, null), /*#__PURE__*/external_react_namespaceObject.createElement(src_CanvasPage, {
      profilerData: timelineData,
      viewState: viewState
    }));
  } else if (file) {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Suspense, {
      fallback: /*#__PURE__*/external_react_namespaceObject.createElement(ProcessingData, null)
    }, /*#__PURE__*/external_react_namespaceObject.createElement(FileLoader, {
      file: file,
      key: key,
      onFileSelect: setFile,
      viewState: viewState
    }));
  } else if (didRecordCommits) {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(NoTimelineData, null);
  } else if (isTimelineSupported) {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(NoProfilingData, null);
  } else {
    content = /*#__PURE__*/external_react_namespaceObject.createElement(TimelineNotSupported_TimelineNotSupported, null);
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Timeline_default()).Content,
    ref: ref
  }, content);
}

const ProcessingData = () => /*#__PURE__*/external_react_namespaceObject.createElement("div", {
  className: (Timeline_default()).EmptyStateContainer
}, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
  className: (Timeline_default()).Header
}, "Processing data..."), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
  className: (Timeline_default()).Row
}, "This should only take a minute.")); // $FlowFixMe[missing-local-annot]


const CouldNotLoadProfile = ({
  error,
  onFileSelect
}) => /*#__PURE__*/external_react_namespaceObject.createElement("div", {
  className: (Timeline_default()).EmptyStateContainer
}, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
  className: (Timeline_default()).Header
}, "Could not load profile"), error.message && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
  className: (Timeline_default()).Row
}, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
  className: (Timeline_default()).ErrorMessage
}, error.message)), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
  className: (Timeline_default()).Row
}, "Try importing another Chrome performance profile."));

const NoTimelineData = () => /*#__PURE__*/external_react_namespaceObject.createElement("div", {
  className: (Timeline_default()).EmptyStateContainer
}, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
  className: (Timeline_default()).Row
}, "This current profile does not contain timeline data."));

const FileLoader = ({
  file,
  onFileSelect,
  viewState
}) => {
  if (file === null) {
    return null;
  }

  const dataOrError = timelineCache_importFile(file);

  if (dataOrError instanceof Error) {
    return /*#__PURE__*/external_react_namespaceObject.createElement(CouldNotLoadProfile, {
      error: dataOrError,
      onFileSelect: onFileSelect
    });
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(TimelineSearchContextController, {
    profilerData: dataOrError,
    viewState: viewState
  }, /*#__PURE__*/external_react_namespaceObject.createElement(TimelineSearchInput, null), /*#__PURE__*/external_react_namespaceObject.createElement(src_CanvasPage, {
    profilerData: dataOrError,
    viewState: viewState
  }));
};
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/SidebarEventInfo.css
var SidebarEventInfo = __webpack_require__(7739);
var SidebarEventInfo_default = /*#__PURE__*/__webpack_require__.n(SidebarEventInfo);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/SidebarEventInfo.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */












function SchedulingEventInfo({
  eventInfo
}) {
  const {
    canViewElementSourceFunction,
    viewElementSourceFunction
  } = (0,external_react_namespaceObject.useContext)(Components_ViewElementSourceContext);
  const {
    componentName,
    timestamp
  } = eventInfo;
  const componentStack = eventInfo.componentStack || null;
  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SidebarEventInfo_default()).Toolbar
  }, componentName, " ", getSchedulingEventLabel(eventInfo)), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SidebarEventInfo_default()).Content,
    tabIndex: 0
  }, /*#__PURE__*/external_react_namespaceObject.createElement("ul", {
    className: (SidebarEventInfo_default()).List
  }, /*#__PURE__*/external_react_namespaceObject.createElement("li", {
    className: (SidebarEventInfo_default()).ListItem
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (SidebarEventInfo_default()).Label
  }, "Timestamp"), ":", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (SidebarEventInfo_default()).Value
  }, formatTimestamp(timestamp))), componentStack && /*#__PURE__*/external_react_namespaceObject.createElement("li", {
    className: (SidebarEventInfo_default()).ListItem
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SidebarEventInfo_default()).Row
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (SidebarEventInfo_default()).Label
  }, "Rendered by"), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: withPermissionsCheck({
      permissions: ['clipboardWrite']
    }, () => (0,clipboard.copy)(componentStack)),
    title: "Copy component stack to clipboard"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "copy"
  }))), /*#__PURE__*/external_react_namespaceObject.createElement("ul", {
    className: (SidebarEventInfo_default()).List
  }, stackToComponentSources(componentStack).map(([displayName, stack], index) => {
    if (stack == null) {
      return /*#__PURE__*/external_react_namespaceObject.createElement("li", {
        key: index
      }, /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
        className: (SidebarEventInfo_default()).UnclickableSource,
        disabled: true
      }, displayName));
    } // TODO: We should support symbolication here as well, but
    // symbolicating the whole stack can be expensive


    const [sourceURL, line, column] = stack;
    const source = {
      sourceURL,
      line,
      column
    };
    const canViewSource = canViewElementSourceFunction == null || canViewElementSourceFunction(source, null);
    const viewSource = !canViewSource || viewElementSourceFunction == null ? () => null : () => viewElementSourceFunction(source, null);
    return /*#__PURE__*/external_react_namespaceObject.createElement("li", {
      key: index
    }, /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
      className: canViewSource ? (SidebarEventInfo_default()).ClickableSource : (SidebarEventInfo_default()).UnclickableSource,
      disabled: !canViewSource,
      onClick: viewSource
    }, displayName));
  }))))));
}

function SidebarEventInfo_SidebarEventInfo(_) {
  const {
    selectedEvent
  } = (0,external_react_namespaceObject.useContext)(TimelineContext); // (TODO) Refactor in next PR so this supports multiple types of events

  if (selectedEvent && selectedEvent.schedulingEvent) {
    return /*#__PURE__*/external_react_namespaceObject.createElement(SchedulingEventInfo, {
      eventInfo: selectedEvent.schedulingEvent
    });
  }

  return null;
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/ReloadAndProfileButton.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






function ReloadAndProfileButton({
  disabled
}) {
  const bridge = (0,external_react_namespaceObject.useContext)(BridgeContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const subscription = (0,external_react_namespaceObject.useMemo)(() => ({
    getCurrentValue: () => ({
      recordChangeDescriptions: store.recordChangeDescriptions,
      supportsReloadAndProfile: store.supportsReloadAndProfile
    }),
    subscribe: callback => {
      store.addListener('recordChangeDescriptions', callback);
      store.addListener('supportsReloadAndProfile', callback);
      return () => {
        store.removeListener('recordChangeDescriptions', callback);
        store.removeListener('supportsReloadAndProfile', callback);
      };
    }
  }), [store]);
  const {
    recordChangeDescriptions,
    supportsReloadAndProfile
  } = useSubscription(subscription);
  const reloadAndProfile = (0,external_react_namespaceObject.useCallback)(() => {
    // TODO If we want to support reload-and-profile for e.g. React Native,
    // we might need to also start profiling here before reloading the app (since DevTools itself isn't reloaded).
    // We'd probably want to do this before reloading though, to avoid sending a message on a disconnected port in the browser.
    // For now, let's just skip doing it entirely to avoid paying snapshot costs for data we don't need.
    // startProfiling();
    bridge.send('reloadAndProfile', {
      recordChangeDescriptions,
      recordTimeline: store.supportsTimeline
    });
  }, [bridge, recordChangeDescriptions, store]);

  if (!supportsReloadAndProfile) {
    return null;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    disabled: disabled,
    onClick: reloadAndProfile,
    title: "Reload and start profiling"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "reload"
  }));
}
;// CONCATENATED MODULE: ../shared/hasOwnProperty.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
// $FlowFixMe[method-unbinding]
const hasOwnProperty_hasOwnProperty = Object.prototype.hasOwnProperty;
/* harmony default export */ const shared_hasOwnProperty = (hasOwnProperty_hasOwnProperty);
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/ProfilingImportExportButtons.css
var ProfilingImportExportButtons = __webpack_require__(5495);
var ProfilingImportExportButtons_default = /*#__PURE__*/__webpack_require__.n(ProfilingImportExportButtons);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/ProfilingImportExportButtons.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */













function ProfilingImportExportButtons_ProfilingImportExportButtons() {
  const {
    isProfiling,
    profilingData,
    rootID
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const {
    setFile
  } = (0,external_react_namespaceObject.useContext)(TimelineContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    profilerStore
  } = store;
  const inputRef = (0,external_react_namespaceObject.useRef)(null);
  const downloadRef = (0,external_react_namespaceObject.useRef)(null);
  const {
    dispatch: modalDialogDispatch
  } = (0,external_react_namespaceObject.useContext)(ModalDialogContext);
  const doesHaveInMemoryData = profilerStore.didRecordCommits;
  const downloadData = (0,external_react_namespaceObject.useCallback)(() => {
    if (rootID === null) {
      return;
    }

    const anchorElement = downloadRef.current;

    if (profilingData !== null && anchorElement !== null) {
      const profilingDataExport = prepareProfilingDataExport(profilingData);
      const date = new Date();
      const dateString = date.toLocaleDateString(undefined, {
        year: 'numeric',
        month: '2-digit',
        day: '2-digit'
      }).replace(/\//g, '-');
      const timeString = date.toLocaleTimeString(undefined, {
        hour12: false
      }).replace(/:/g, '-');
      downloadFile(anchorElement, `profiling-data.${dateString}.${timeString}.json`, JSON.stringify(profilingDataExport, null, 2));
    }
  }, [rootID, profilingData]);
  const clickInputElement = (0,external_react_namespaceObject.useCallback)(() => {
    if (inputRef.current !== null) {
      inputRef.current.click();
    }
  }, []); // TODO (profiling) We should probably use a transition for this and suspend while loading the file.
  // Local files load so fast it's probably not very noticeable though.

  const handleChange = () => {
    const input = inputRef.current;

    if (input !== null && input.files.length > 0) {
      const file = input.files[0]; // TODO (profiling) Handle fileReader errors.

      const fileReader = new FileReader();
      fileReader.addEventListener('load', () => {
        const raw = fileReader.result;
        const json = JSON.parse(raw);

        if (!shared_isArray(json) && shared_hasOwnProperty.call(json, 'version')) {
          // This looks like React profiling data.
          // But first, clear any User Timing marks; we should only have one type open at a time.
          setFile(null);

          try {
            const profilingDataExport = json;
            profilerStore.profilingData = prepareProfilingDataFrontendFromExport(profilingDataExport);
          } catch (error) {
            modalDialogDispatch({
              id: 'ProfilingImportExportButtons',
              type: 'SHOW',
              title: 'Import failed',
              content: /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", null, "The profiling data you selected cannot be imported."), error !== null && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
                className: (ProfilingImportExportButtons_default()).ErrorMessage
              }, error.message))
            });
          }
        } else {
          // Otherwise let's assume this is Trace Event data and pass it to the Timeline preprocessor.
          // But first, clear React profiling data; we should only have one type open at a time.
          profilerStore.clear(); // TODO (timeline) We shouldn't need to re-open the File but we'll need to refactor to avoid this.

          setFile(file);
        }
      });
      fileReader.readAsText(file);
    }
  };

  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (ProfilingImportExportButtons_default()).VRule
  }), /*#__PURE__*/external_react_namespaceObject.createElement("input", {
    ref: inputRef,
    className: (ProfilingImportExportButtons_default()).Input,
    type: "file",
    accept: ".json",
    onChange: handleChange,
    tabIndex: -1
  }), /*#__PURE__*/external_react_namespaceObject.createElement("a", {
    ref: downloadRef,
    className: (ProfilingImportExportButtons_default()).Input
  }), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    disabled: isProfiling,
    onClick: clickInputElement,
    title: "Load profile..."
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "import"
  })), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    disabled: isProfiling || !doesHaveInMemoryData,
    onClick: downloadData,
    title: "Save profile..."
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "export"
  })));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/SnapshotCommitListItem.css
var SnapshotCommitListItem = __webpack_require__(6386);
var SnapshotCommitListItem_default = /*#__PURE__*/__webpack_require__.n(SnapshotCommitListItem);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/SnapshotCommitListItem.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






function SnapshotCommitListItem_SnapshotCommitListItem({
  data: itemData,
  index,
  style
}) {
  const {
    filteredCommitIndices,
    maxDuration,
    selectedCommitIndex,
    selectCommitIndex,
    setHoveredCommitIndex,
    startCommitDrag,
    totalDurations
  } = itemData;
  index = filteredCommitIndices[index];
  const totalDuration = totalDurations[index]; // Use natural cbrt for bar height.
  // This prevents one (or a few) outliers from squishing the majority of other commits.
  // So rather than e.g. _█_ we get something more like e.g. ▄█_

  const heightScale = Math.min(1, Math.max(0, Math.cbrt(totalDuration) / Math.cbrt(maxDuration))) || 0; // Use a linear scale for color.
  // This gives some visual contrast between cheaper and more expensive commits
  // and somewhat compensates for the cbrt scale height.

  const colorScale = Math.min(1, Math.max(0, totalDuration / maxDuration)) || 0;
  const isSelected = selectedCommitIndex === index; // Leave a 1px gap between snapshots

  const width = parseFloat(style.width) - 1;

  const handleMouseDown = ({
    buttons,
    target
  }) => {
    if (buttons === 1) {
      selectCommitIndex(index);
      startCommitDrag({
        commitIndex: index,
        left: target.getBoundingClientRect().left,
        sizeIncrement: parseFloat(style.width)
      });
    }
  };

  let backgroundColor;

  if (!isSelected && totalDuration > 0) {
    backgroundColor = getGradientColor(colorScale);
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SnapshotCommitListItem_default()).Outer,
    onMouseDown: handleMouseDown,
    onMouseEnter: () => setHoveredCommitIndex(index),
    style: { ...style,
      width,
      borderBottom: isSelected ? '3px solid var(--color-tab-selected-border)' : undefined
    }
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: isSelected ? (SnapshotCommitListItem_default()).InnerSelected : (SnapshotCommitListItem_default()).Inner,
    style: {
      height: `${Math.round(heightScale * 100)}%`,
      backgroundColor
    }
  }));
}

/* harmony default export */ const Profiler_SnapshotCommitListItem = (/*#__PURE__*/(0,external_react_namespaceObject.memo)(SnapshotCommitListItem_SnapshotCommitListItem, areEqual));
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/SnapshotCommitList.css
var SnapshotCommitList = __webpack_require__(644);
var SnapshotCommitList_default = /*#__PURE__*/__webpack_require__.n(SnapshotCommitList);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/SnapshotCommitList.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */









function SnapshotCommitList_SnapshotCommitList({
  commitData,
  commitTimes,
  filteredCommitIndices,
  selectedCommitIndex,
  selectedFilteredCommitIndex,
  selectCommitIndex,
  totalDurations
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement(AutoSizer, null, ({
    height,
    width
  }) => /*#__PURE__*/external_react_namespaceObject.createElement(List, {
    commitData: commitData,
    commitTimes: commitTimes,
    height: height,
    filteredCommitIndices: filteredCommitIndices,
    selectedCommitIndex: selectedCommitIndex,
    selectedFilteredCommitIndex: selectedFilteredCommitIndex,
    selectCommitIndex: selectCommitIndex,
    totalDurations: totalDurations,
    width: width
  }));
}

function List({
  commitData,
  selectedCommitIndex,
  commitTimes,
  height,
  filteredCommitIndices,
  selectedFilteredCommitIndex,
  selectCommitIndex,
  totalDurations,
  width
}) {
  // $FlowFixMe[incompatible-use]
  const listRef = (0,external_react_namespaceObject.useRef)(null);
  const divRef = (0,external_react_namespaceObject.useRef)(null);
  const prevCommitIndexRef = (0,external_react_namespaceObject.useRef)(null); // Make sure a newly selected snapshot is fully visible within the list.

  (0,external_react_namespaceObject.useEffect)(() => {
    if (selectedFilteredCommitIndex !== prevCommitIndexRef.current) {
      prevCommitIndexRef.current = selectedFilteredCommitIndex;

      if (selectedFilteredCommitIndex !== null && listRef.current !== null) {
        listRef.current.scrollToItem(selectedFilteredCommitIndex);
      }
    }
  }, [listRef, selectedFilteredCommitIndex]);
  const itemSize = (0,external_react_namespaceObject.useMemo)(() => Math.max(minBarWidth, width / filteredCommitIndices.length), [filteredCommitIndices, width]);
  const maxDuration = (0,external_react_namespaceObject.useMemo)(() => totalDurations.reduce((max, duration) => Math.max(max, duration), 0), [totalDurations]);
  const maxCommitIndex = filteredCommitIndices.length - 1;
  const [dragState, setDragState] = (0,external_react_namespaceObject.useState)(null);

  const handleDragCommit = ({
    buttons,
    pageX
  }) => {
    if (buttons === 0) {
      setDragState(null);
      return;
    }

    if (dragState !== null) {
      const {
        commitIndex,
        left,
        sizeIncrement
      } = dragState;
      let newCommitIndex = commitIndex;
      let newCommitLeft = left;

      if (pageX < newCommitLeft) {
        while (pageX < newCommitLeft) {
          newCommitLeft -= sizeIncrement;
          newCommitIndex -= 1;
        }
      } else {
        let newCommitRectRight = newCommitLeft + sizeIncrement;

        while (pageX > newCommitRectRight) {
          newCommitRectRight += sizeIncrement;
          newCommitIndex += 1;
        }
      }

      if (newCommitIndex < 0) {
        newCommitIndex = 0;
      } else if (newCommitIndex > maxCommitIndex) {
        newCommitIndex = maxCommitIndex;
      }

      selectCommitIndex(newCommitIndex);
    }
  };

  (0,external_react_namespaceObject.useEffect)(() => {
    if (dragState === null) {
      return;
    }

    const element = divRef.current;

    if (element !== null) {
      const ownerDocument = element.ownerDocument;
      ownerDocument.addEventListener('mousemove', handleDragCommit);
      return () => {
        ownerDocument.removeEventListener('mousemove', handleDragCommit);
      };
    }
  }, [dragState]);
  const [hoveredCommitIndex, setHoveredCommitIndex] = (0,external_react_namespaceObject.useState)(null); // Pass required contextual data down to the ListItem renderer.

  const itemData = (0,external_react_namespaceObject.useMemo)(() => ({
    commitTimes,
    filteredCommitIndices,
    maxDuration,
    selectedCommitIndex,
    selectedFilteredCommitIndex,
    selectCommitIndex,
    setHoveredCommitIndex,
    startCommitDrag: setDragState,
    totalDurations
  }), [commitTimes, filteredCommitIndices, maxDuration, selectedCommitIndex, selectedFilteredCommitIndex, selectCommitIndex, setHoveredCommitIndex, totalDurations]);
  let tooltipLabel = null;

  if (hoveredCommitIndex !== null) {
    const {
      duration,
      effectDuration,
      passiveEffectDuration,
      priorityLevel,
      timestamp
    } = commitData[hoveredCommitIndex]; // Only some React versions include commit durations.
    // Show a richer tooltip only for builds that have that info.

    if (effectDuration !== null || passiveEffectDuration !== null || priorityLevel !== null) {
      tooltipLabel = /*#__PURE__*/external_react_namespaceObject.createElement("ul", {
        className: (SnapshotCommitList_default()).TooltipList
      }, priorityLevel !== null && /*#__PURE__*/external_react_namespaceObject.createElement("li", {
        className: (SnapshotCommitList_default()).TooltipListItem
      }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
        className: (SnapshotCommitList_default()).TooltipLabel
      }, "Priority"), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
        className: (SnapshotCommitList_default()).TooltipValue
      }, priorityLevel)), /*#__PURE__*/external_react_namespaceObject.createElement("li", {
        className: (SnapshotCommitList_default()).TooltipListItem
      }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
        className: (SnapshotCommitList_default()).TooltipLabel
      }, "Committed at"), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
        className: (SnapshotCommitList_default()).TooltipValue
      }, formatTime(timestamp), "s")), /*#__PURE__*/external_react_namespaceObject.createElement("li", {
        className: (SnapshotCommitList_default()).TooltipListItem
      }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        className: (SnapshotCommitList_default()).DurationsWrapper
      }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
        className: (SnapshotCommitList_default()).TooltipLabel
      }, "Durations"), /*#__PURE__*/external_react_namespaceObject.createElement("ul", {
        className: (SnapshotCommitList_default()).DurationsList
      }, /*#__PURE__*/external_react_namespaceObject.createElement("li", {
        className: (SnapshotCommitList_default()).DurationsListItem
      }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
        className: (SnapshotCommitList_default()).DurationsLabel
      }, "Render"), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
        className: (SnapshotCommitList_default()).DurationsValue
      }, formatDuration(duration), "ms")), effectDuration !== null && /*#__PURE__*/external_react_namespaceObject.createElement("li", {
        className: (SnapshotCommitList_default()).DurationsListItem
      }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
        className: (SnapshotCommitList_default()).DurationsLabel
      }, "Layout effects"), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
        className: (SnapshotCommitList_default()).DurationsValue
      }, formatDuration(effectDuration), "ms")), passiveEffectDuration !== null && /*#__PURE__*/external_react_namespaceObject.createElement("li", {
        className: (SnapshotCommitList_default()).DurationsListItem
      }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
        className: (SnapshotCommitList_default()).DurationsLabel
      }, "Passive effects"), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
        className: (SnapshotCommitList_default()).DurationsValue
      }, formatDuration(passiveEffectDuration), "ms"))))));
    } else {
      tooltipLabel = `${formatDuration(duration)}ms at ${formatTime(timestamp)}s`;
    }
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(Tooltip_Tooltip, {
    className: (SnapshotCommitList_default()).Tooltip,
    label: tooltipLabel
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    ref: divRef,
    style: {
      height,
      width
    },
    onMouseLeave: () => setHoveredCommitIndex(null)
  }, /*#__PURE__*/external_react_namespaceObject.createElement(FixedSizeList, {
    className: (SnapshotCommitList_default()).List,
    layout: "horizontal",
    height: height,
    itemCount: filteredCommitIndices.length,
    itemData: itemData,
    itemSize: itemSize,
    ref: listRef
    /* Flow bug? */
    ,
    width: width
  }, Profiler_SnapshotCommitListItem)));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/SnapshotSelector.css
var SnapshotSelector = __webpack_require__(359);
var SnapshotSelector_default = /*#__PURE__*/__webpack_require__.n(SnapshotSelector);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/SnapshotSelector.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */









function SnapshotSelector_SnapshotSelector(_) {
  const {
    isCommitFilterEnabled,
    minCommitDuration,
    rootID,
    selectedCommitIndex,
    selectCommitIndex
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const {
    profilerStore
  } = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    commitData
  } = profilerStore.getDataForRoot(rootID);
  const totalDurations = [];
  const commitTimes = [];
  commitData.forEach(commitDatum => {
    totalDurations.push(commitDatum.duration + (commitDatum.effectDuration || 0) + (commitDatum.passiveEffectDuration || 0));
    commitTimes.push(commitDatum.timestamp);
  });
  const filteredCommitIndices = (0,external_react_namespaceObject.useMemo)(() => commitData.reduce((reduced, commitDatum, index) => {
    if (!isCommitFilterEnabled || commitDatum.duration >= minCommitDuration) {
      reduced.push(index);
    }

    return reduced;
  }, []), [commitData, isCommitFilterEnabled, minCommitDuration]);
  const numFilteredCommits = filteredCommitIndices.length; // Map the (unfiltered) selected commit index to an index within the filtered data.

  const selectedFilteredCommitIndex = (0,external_react_namespaceObject.useMemo)(() => {
    if (selectedCommitIndex !== null) {
      for (let i = 0; i < filteredCommitIndices.length; i++) {
        if (filteredCommitIndices[i] === selectedCommitIndex) {
          return i;
        }
      }
    }

    return null;
  }, [filteredCommitIndices, selectedCommitIndex]); // TODO (ProfilerContext) This should be managed by the context controller (reducer).
  // It doesn't currently know about the filtered commits though (since it doesn't suspend).
  // Maybe this component should pass filteredCommitIndices up?

  if (selectedFilteredCommitIndex === null) {
    if (numFilteredCommits > 0) {
      selectCommitIndex(0);
    } else {
      selectCommitIndex(null);
    }
  } else if (selectedFilteredCommitIndex >= numFilteredCommits) {
    selectCommitIndex(numFilteredCommits === 0 ? null : numFilteredCommits - 1);
  }

  let label = null;

  if (numFilteredCommits > 0) {
    // $FlowFixMe[missing-local-annot]
    const handleCommitInputChange = event => {
      const value = parseInt(event.currentTarget.value, 10);

      if (!isNaN(value)) {
        const filteredIndex = Math.min(Math.max(value - 1, 0), // Snashots are shown to the user as 1-based
        // but the indices within the profiler data array ar 0-based.
        numFilteredCommits - 1);
        selectCommitIndex(filteredCommitIndices[filteredIndex]);
      }
    }; // $FlowFixMe[missing-local-annot]


    const handleClick = event => {
      event.currentTarget.select();
    }; // $FlowFixMe[missing-local-annot]


    const handleKeyDown = event => {
      switch (event.key) {
        case 'ArrowDown':
          viewPrevCommit();
          event.stopPropagation();
          break;

        case 'ArrowUp':
          viewNextCommit();
          event.stopPropagation();
          break;

        default:
          break;
      }
    };

    const input = /*#__PURE__*/external_react_namespaceObject.createElement("input", {
      className: (SnapshotSelector_default()).Input,
      "data-testname": "SnapshotSelector-Input",
      type: "text",
      inputMode: "numeric",
      pattern: "[0-9]*",
      value: // $FlowFixMe[unsafe-addition] addition with possible null/undefined value
      selectedFilteredCommitIndex + 1,
      size: `${numFilteredCommits}`.length,
      onChange: handleCommitInputChange,
      onClick: handleClick,
      onKeyDown: handleKeyDown
    });
    label = /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, input, " / ", numFilteredCommits);
  }

  const viewNextCommit = () => {
    let nextCommitIndex = selectedFilteredCommitIndex + 1;

    if (nextCommitIndex === filteredCommitIndices.length) {
      nextCommitIndex = 0;
    }

    selectCommitIndex(filteredCommitIndices[nextCommitIndex]);
  };

  const viewPrevCommit = () => {
    let nextCommitIndex = selectedFilteredCommitIndex - 1;

    if (nextCommitIndex < 0) {
      nextCommitIndex = filteredCommitIndices.length - 1;
    }

    selectCommitIndex(filteredCommitIndices[nextCommitIndex]);
  }; // $FlowFixMe[missing-local-annot]


  const handleKeyDown = event => {
    switch (event.key) {
      case 'ArrowLeft':
        viewPrevCommit();
        event.stopPropagation();
        break;

      case 'ArrowRight':
        viewNextCommit();
        event.stopPropagation();
        break;

      default:
        break;
    }
  };

  if (commitData.length === 0) {
    return null;
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (SnapshotSelector_default()).IndexLabel,
    "data-testname": "SnapshotSelector-Label"
  }, label), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    className: (SnapshotSelector_default()).Button,
    "data-testname": "SnapshotSelector-PreviousButton",
    disabled: numFilteredCommits === 0,
    onClick: viewPrevCommit,
    title: "Select previous commit"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "previous"
  })), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SnapshotSelector_default()).Commits,
    onKeyDown: handleKeyDown,
    style: {
      flex: numFilteredCommits > 0 ? '1 1 auto' : '0 0 auto',
      maxWidth: numFilteredCommits > 0 ? numFilteredCommits * maxBarWidth : undefined
    },
    tabIndex: 0
  }, numFilteredCommits > 0 && /*#__PURE__*/external_react_namespaceObject.createElement(SnapshotCommitList_SnapshotCommitList, {
    commitData: commitData,
    commitTimes: commitTimes,
    filteredCommitIndices: filteredCommitIndices,
    selectedCommitIndex: selectedCommitIndex,
    selectedFilteredCommitIndex: selectedFilteredCommitIndex,
    selectCommitIndex: selectCommitIndex,
    totalDurations: totalDurations
  }), numFilteredCommits === 0 && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SnapshotSelector_default()).NoCommits
  }, "No commits")), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    className: (SnapshotSelector_default()).Button,
    "data-testname": "SnapshotSelector-NextButton",
    disabled: numFilteredCommits === 0,
    onClick: viewNextCommit,
    title: "Select next commit"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "next"
  })));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/Updaters.css
var Updaters = __webpack_require__(4461);
var Updaters_default = /*#__PURE__*/__webpack_require__.n(Updaters);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/Updaters.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





function Updaters_Updaters({
  commitTree,
  updaters
}) {
  const {
    selectFiber
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const children = updaters.length > 0 ? updaters.map(serializedElement => {
    const {
      displayName,
      id,
      key,
      type
    } = serializedElement;
    const isVisibleInTree = commitTree.nodes.has(id) && type !== types_ElementTypeRoot;

    if (isVisibleInTree) {
      return /*#__PURE__*/external_react_namespaceObject.createElement("button", {
        key: id,
        className: (Updaters_default()).Updater,
        onClick: () => selectFiber(id, displayName)
      }, displayName, " ", key ? `key="${key}"` : '');
    } else {
      return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
        key: id,
        className: (Updaters_default()).UnmountedUpdater
      }, displayName, " ", key ? `key="${key}"` : '');
    }
  }) : /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    key: "none",
    className: (Updaters_default()).NoUpdaters
  }, "(unknown)");
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Updaters_default()).Updaters
  }, children);
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/SidebarCommitInfo.css
var SidebarCommitInfo = __webpack_require__(883);
var SidebarCommitInfo_default = /*#__PURE__*/__webpack_require__.n(SidebarCommitInfo);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/SidebarCommitInfo.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */








function SidebarCommitInfo_SidebarCommitInfo(_) {
  const {
    selectedCommitIndex,
    rootID
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const {
    profilerStore
  } = (0,external_react_namespaceObject.useContext)(StoreContext);

  if (rootID === null || selectedCommitIndex === null) {
    return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
      className: (SidebarCommitInfo_default()).NothingSelected
    }, "Nothing selected");
  }

  const {
    duration,
    effectDuration,
    passiveEffectDuration,
    priorityLevel,
    timestamp,
    updaters
  } = profilerStore.getCommitData(rootID, selectedCommitIndex);
  const hasCommitPhaseDurations = effectDuration !== null || passiveEffectDuration !== null;
  const commitTree = updaters !== null ? getCommitTree({
    commitIndex: selectedCommitIndex,
    profilerStore,
    rootID
  }) : null;
  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SidebarCommitInfo_default()).Toolbar
  }, "Commit information"), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SidebarCommitInfo_default()).Content
  }, /*#__PURE__*/external_react_namespaceObject.createElement("ul", {
    className: (SidebarCommitInfo_default()).List
  }, priorityLevel !== null && /*#__PURE__*/external_react_namespaceObject.createElement("li", {
    className: (SidebarCommitInfo_default()).ListItem
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (SidebarCommitInfo_default()).Label
  }, "Priority"), ":", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (SidebarCommitInfo_default()).Value
  }, priorityLevel)), /*#__PURE__*/external_react_namespaceObject.createElement("li", {
    className: (SidebarCommitInfo_default()).ListItem
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (SidebarCommitInfo_default()).Label
  }, "Committed at"), ":", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (SidebarCommitInfo_default()).Value
  }, formatTime(timestamp), "s")), !hasCommitPhaseDurations && /*#__PURE__*/external_react_namespaceObject.createElement("li", {
    className: (SidebarCommitInfo_default()).ListItem
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (SidebarCommitInfo_default()).Label
  }, "Render duration"), ":", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (SidebarCommitInfo_default()).Value
  }, formatDuration(duration), "ms")), hasCommitPhaseDurations && /*#__PURE__*/external_react_namespaceObject.createElement("li", {
    className: (SidebarCommitInfo_default()).ListItem
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (SidebarCommitInfo_default()).Label
  }, "Durations"), /*#__PURE__*/external_react_namespaceObject.createElement("ul", {
    className: (SidebarCommitInfo_default()).DurationsList
  }, /*#__PURE__*/external_react_namespaceObject.createElement("li", {
    className: (SidebarCommitInfo_default()).DurationsListItem
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (SidebarCommitInfo_default()).Label
  }, "Render"), ":", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (SidebarCommitInfo_default()).Value
  }, formatDuration(duration), "ms")), effectDuration !== null && /*#__PURE__*/external_react_namespaceObject.createElement("li", {
    className: (SidebarCommitInfo_default()).DurationsListItem
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (SidebarCommitInfo_default()).Label
  }, "Layout effects"), ":", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (SidebarCommitInfo_default()).Value
  }, formatDuration(effectDuration), "ms")), passiveEffectDuration !== null && /*#__PURE__*/external_react_namespaceObject.createElement("li", {
    className: (SidebarCommitInfo_default()).DurationsListItem
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (SidebarCommitInfo_default()).Label
  }, "Passive effects"), ":", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (SidebarCommitInfo_default()).Value
  }, formatDuration(passiveEffectDuration), "ms")))), updaters !== null && commitTree !== null && /*#__PURE__*/external_react_namespaceObject.createElement("li", {
    className: (SidebarCommitInfo_default()).ListItem
  }, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (SidebarCommitInfo_default()).Label
  }, "What caused this update"), "?", /*#__PURE__*/external_react_namespaceObject.createElement(Updaters_Updaters, {
    commitTree: commitTree,
    updaters: updaters
  })))));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/ProcessingData.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function ProcessingData_ProcessingData() {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Column
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Header
  }, "Processing data..."), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Row
  }, "This should only take a minute."));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/ProfilingNotSupported.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function ProfilingNotSupported() {
  return /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Column
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Header
  }, "Profiling not supported."), /*#__PURE__*/external_react_namespaceObject.createElement("p", {
    className: (Profiler_default()).Paragraph
  }, "Profiling support requires either a development or profiling build of React v16.5+."), /*#__PURE__*/external_react_namespaceObject.createElement("p", {
    className: (Profiler_default()).Paragraph
  }, "Learn more at", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("a", {
    className: (Profiler_default()).Link,
    href: "https://fb.me/react-devtools-profiling",
    rel: "noopener noreferrer",
    target: "_blank"
  }, "reactjs.org/link/profiling"), "."));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/Profiler/SidebarSelectedFiberInfo.css
var SidebarSelectedFiberInfo = __webpack_require__(4073);
var SidebarSelectedFiberInfo_default = /*#__PURE__*/__webpack_require__.n(SidebarSelectedFiberInfo);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/SidebarSelectedFiberInfo.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */










function SidebarSelectedFiberInfo_SidebarSelectedFiberInfo() {
  const {
    profilerStore
  } = (0,external_react_namespaceObject.useContext)(StoreContext);
  const {
    rootID,
    selectCommitIndex,
    selectedCommitIndex,
    selectedFiberID,
    selectedFiberName,
    selectFiber
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const {
    profilingCache
  } = profilerStore;
  const selectedListItemRef = (0,external_react_namespaceObject.useRef)(null);
  (0,external_react_namespaceObject.useEffect)(() => {
    const selectedElement = selectedListItemRef.current;

    if (selectedElement !== null && // $FlowFixMe[method-unbinding]
    typeof selectedElement.scrollIntoView === 'function') {
      selectedElement.scrollIntoView({
        block: 'nearest',
        inline: 'nearest'
      });
    }
  }, [selectedCommitIndex]);

  if (selectedFiberID === null || rootID === null || selectedCommitIndex === null) {
    return null;
  }

  const commitIndices = profilingCache.getFiberCommits({
    fiberID: selectedFiberID,
    rootID: rootID
  });
  const {
    nodes
  } = profilingCache.getCommitTree({
    rootID,
    commitIndex: selectedCommitIndex
  });
  const node = nodes.get(selectedFiberID); // $FlowFixMe[missing-local-annot]

  const handleKeyDown = event => {
    switch (event.key) {
      case 'ArrowUp':
        if (selectedCommitIndex !== null) {
          const prevIndex = commitIndices.indexOf(selectedCommitIndex);
          const nextIndex = prevIndex > 0 ? prevIndex - 1 : commitIndices.length - 1;
          selectCommitIndex(commitIndices[nextIndex]);
        }

        event.preventDefault();
        break;

      case 'ArrowDown':
        if (selectedCommitIndex !== null) {
          const prevIndex = commitIndices.indexOf(selectedCommitIndex);
          const nextIndex = prevIndex < commitIndices.length - 1 ? prevIndex + 1 : 0;
          selectCommitIndex(commitIndices[nextIndex]);
        }

        event.preventDefault();
        break;

      default:
        break;
    }
  };

  const listItems = [];
  let i = 0;

  for (i = 0; i < commitIndices.length; i++) {
    const commitIndex = commitIndices[i];
    const {
      duration,
      timestamp
    } = profilerStore.getCommitData(rootID, commitIndex);
    listItems.push( /*#__PURE__*/external_react_namespaceObject.createElement("button", {
      key: commitIndex,
      ref: selectedCommitIndex === commitIndex ? selectedListItemRef : null,
      className: selectedCommitIndex === commitIndex ? (SidebarSelectedFiberInfo_default()).CurrentCommit : (SidebarSelectedFiberInfo_default()).Commit,
      onClick: () => selectCommitIndex(commitIndex)
    }, formatTime(timestamp), "s for ", formatDuration(duration), "ms"));
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SidebarSelectedFiberInfo_default()).Toolbar
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SidebarSelectedFiberInfo_default()).Component
  }, selectedFiberName || 'Selected component'), /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
    onClick: () => selectFiber(null, null),
    title: "Back to commit view"
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
    type: "close"
  }))), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (SidebarSelectedFiberInfo_default()).Content,
    onKeyDown: handleKeyDown,
    tabIndex: 0
  }, node != null && /*#__PURE__*/external_react_namespaceObject.createElement(InspectedElementBadges_InspectedElementBadges, {
    hocDisplayNames: node.hocDisplayNames,
    compiledWithForget: node.compiledWithForget
  }), /*#__PURE__*/external_react_namespaceObject.createElement(WhatChanged_WhatChanged, {
    fiberID: selectedFiberID
  }), listItems.length > 0 && /*#__PURE__*/external_react_namespaceObject.createElement("div", null, /*#__PURE__*/external_react_namespaceObject.createElement("label", {
    className: (SidebarSelectedFiberInfo_default()).Label
  }, "Rendered at: "), listItems), listItems.length === 0 && /*#__PURE__*/external_react_namespaceObject.createElement("div", null, "Did not render on the client during this profiling session.")));
}
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/Profiler/Profiler.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





























function Profiler_Profiler(_) {
  const {
    didRecordCommits,
    isProcessingData,
    isProfiling,
    selectedCommitIndex,
    selectedFiberID,
    selectedTabID,
    selectTab,
    supportsProfiling
  } = (0,external_react_namespaceObject.useContext)(ProfilerContext);
  const {
    file: timelineTraceEventData,
    searchInputContainerRef
  } = (0,external_react_namespaceObject.useContext)(TimelineContext);
  const {
    supportsTimeline
  } = (0,external_react_namespaceObject.useContext)(StoreContext);
  const isLegacyProfilerSelected = selectedTabID !== 'timeline';
  let view = null;

  if (didRecordCommits || selectedTabID === 'timeline') {
    switch (selectedTabID) {
      case 'flame-chart':
        view = /*#__PURE__*/external_react_namespaceObject.createElement(CommitFlamegraphAutoSizer, null);
        break;

      case 'ranked-chart':
        view = /*#__PURE__*/external_react_namespaceObject.createElement(CommitRankedAutoSizer, null);
        break;

      case 'timeline':
        view = /*#__PURE__*/external_react_namespaceObject.createElement(Timeline_Timeline, null);
        break;

      default:
        break;
    }
  } else if (isProfiling) {
    view = /*#__PURE__*/external_react_namespaceObject.createElement(RecordingInProgress, null);
  } else if (isProcessingData) {
    view = /*#__PURE__*/external_react_namespaceObject.createElement(ProcessingData_ProcessingData, null);
  } else if (timelineTraceEventData) {
    view = /*#__PURE__*/external_react_namespaceObject.createElement(OnlyTimelineData, null);
  } else if (supportsProfiling) {
    view = /*#__PURE__*/external_react_namespaceObject.createElement(NoProfilingData, null);
  } else {
    view = /*#__PURE__*/external_react_namespaceObject.createElement(ProfilingNotSupported, null);
  }

  let sidebar = null;

  if (!isProfiling && !isProcessingData && didRecordCommits) {
    switch (selectedTabID) {
      case 'flame-chart':
      case 'ranked-chart':
        // TRICKY
        // Handle edge case where no commit is selected because of a min-duration filter update.
        // In that case, the selected commit index would be null.
        // We could still show a sidebar for the previously selected fiber,
        // but it would be an odd user experience.
        // TODO (ProfilerContext) This check should not be necessary.
        if (selectedCommitIndex !== null) {
          if (selectedFiberID !== null) {
            sidebar = /*#__PURE__*/external_react_namespaceObject.createElement(SidebarSelectedFiberInfo_SidebarSelectedFiberInfo, null);
          } else {
            sidebar = /*#__PURE__*/external_react_namespaceObject.createElement(SidebarCommitInfo_SidebarCommitInfo, null);
          }
        }

        break;

      case 'timeline':
        sidebar = /*#__PURE__*/external_react_namespaceObject.createElement(SidebarEventInfo_SidebarEventInfo, null);
        break;

      default:
        break;
    }
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(SettingsModalContextController, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Profiler
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).LeftColumn
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Toolbar
  }, /*#__PURE__*/external_react_namespaceObject.createElement(RecordToggle_RecordToggle, {
    disabled: !supportsProfiling
  }), /*#__PURE__*/external_react_namespaceObject.createElement(ReloadAndProfileButton, {
    disabled: !supportsProfiling
  }), /*#__PURE__*/external_react_namespaceObject.createElement(ClearProfilingDataButton, null), /*#__PURE__*/external_react_namespaceObject.createElement(ProfilingImportExportButtons_ProfilingImportExportButtons, null), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).VRule
  }), /*#__PURE__*/external_react_namespaceObject.createElement(TabBar_TabBar, {
    currentTab: selectedTabID,
    id: "Profiler",
    selectTab: selectTab,
    tabs: supportsTimeline ? tabsWithTimeline : Profiler_tabs,
    type: "profiler"
  }), /*#__PURE__*/external_react_namespaceObject.createElement(RootSelector_RootSelector, null), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Spacer
  }), !isLegacyProfilerSelected && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    ref: searchInputContainerRef,
    className: (Profiler_default()).TimelineSearchInputContainer
  }), /*#__PURE__*/external_react_namespaceObject.createElement(SettingsModalContextToggle, null), isLegacyProfilerSelected && didRecordCommits && /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).VRule
  }), /*#__PURE__*/external_react_namespaceObject.createElement(SnapshotSelector_SnapshotSelector, null))), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).Content
  }, view, /*#__PURE__*/external_react_namespaceObject.createElement(ModalDialog_ModalDialog, null))), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (Profiler_default()).RightColumn
  }, sidebar), /*#__PURE__*/external_react_namespaceObject.createElement(SettingsModal_SettingsModal, null)));
}

const OnlyTimelineData = () => /*#__PURE__*/external_react_namespaceObject.createElement("div", {
  className: (Profiler_default()).Column
}, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
  className: (Profiler_default()).Header
}, "Timeline only"), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
  className: (Profiler_default()).Row
}, "The current profile contains only Timeline data."));

const Profiler_tabs = [{
  id: 'flame-chart',
  icon: 'flame-chart',
  label: 'Flamegraph',
  title: 'Flamegraph chart'
}, {
  id: 'ranked-chart',
  icon: 'ranked-chart',
  label: 'Ranked',
  title: 'Ranked chart'
}];
const tabsWithTimeline = [...Profiler_tabs, null, // Divider/separator
{
  id: 'timeline',
  icon: 'timeline',
  label: 'Timeline',
  title: 'Timeline'
}];
/* harmony default export */ const views_Profiler_Profiler = (portaledContent(Profiler_Profiler));
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/ReactLogo.css
var ReactLogo = __webpack_require__(4306);
var ReactLogo_default = /*#__PURE__*/__webpack_require__.n(ReactLogo);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/ReactLogo.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */


function ReactLogo_ReactLogo({
  className
}) {
  return /*#__PURE__*/external_react_namespaceObject.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    className: `${(ReactLogo_default()).ReactLogo} ${className || ''}`,
    viewBox: "-11.5 -10.23174 23 20.46348"
  }, /*#__PURE__*/external_react_namespaceObject.createElement("circle", {
    cx: "0",
    cy: "0",
    r: "2.05",
    fill: "currentColor"
  }), /*#__PURE__*/external_react_namespaceObject.createElement("g", {
    stroke: "currentColor",
    strokeWidth: "1",
    fill: "none"
  }, /*#__PURE__*/external_react_namespaceObject.createElement("ellipse", {
    rx: "11",
    ry: "4.2"
  }), /*#__PURE__*/external_react_namespaceObject.createElement("ellipse", {
    rx: "11",
    ry: "4.2",
    transform: "rotate(60)"
  }), /*#__PURE__*/external_react_namespaceObject.createElement("ellipse", {
    rx: "11",
    ry: "4.2",
    transform: "rotate(120)"
  })));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/UnsupportedBridgeProtocolDialog.css
var UnsupportedBridgeProtocolDialog = __webpack_require__(1792);
var UnsupportedBridgeProtocolDialog_default = /*#__PURE__*/__webpack_require__.n(UnsupportedBridgeProtocolDialog);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/UnsupportedBridgeProtocolDialog.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */










const DEVTOOLS_VERSION = "6.1.1-3366146796";
const INSTRUCTIONS_FB_URL = 'https://fb.me/devtools-unsupported-bridge-protocol';
const MODAL_DIALOG_ID = 'UnsupportedBridgeProtocolDialog';
function UnsupportedBridgeProtocolDialog_UnsupportedBridgeProtocolDialog(_) {
  const {
    dialogs,
    dispatch
  } = (0,external_react_namespaceObject.useContext)(ModalDialogContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const isVisible = !!dialogs.find(dialog => dialog.id === MODAL_DIALOG_ID);
  (0,external_react_namespaceObject.useEffect)(() => {
    const updateDialog = () => {
      if (!isVisible) {
        if (store.unsupportedBridgeProtocolDetected) {
          dispatch({
            canBeDismissed: false,
            id: MODAL_DIALOG_ID,
            type: 'SHOW',
            content: /*#__PURE__*/external_react_namespaceObject.createElement(DialogContent, {
              unsupportedBridgeProtocol: store.bridgeProtocol
            })
          });
        }
      } else {
        if (!store.unsupportedBridgeProtocolDetected) {
          dispatch({
            type: 'HIDE',
            id: MODAL_DIALOG_ID
          });
        }
      }
    };

    updateDialog();
    store.addListener('unsupportedBridgeProtocolDetected', updateDialog);
    return () => {
      store.removeListener('unsupportedBridgeProtocolDetected', updateDialog);
    };
  }, [isVisible, store]);
  return null;
}

function DialogContent({
  unsupportedBridgeProtocol
}) {
  const {
    version,
    minNpmVersion,
    maxNpmVersion
  } = unsupportedBridgeProtocol;
  let instructions;

  if (maxNpmVersion === null) {
    const upgradeInstructions = `npm i -g react-devtools@^${minNpmVersion}`;
    instructions = /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("p", {
      className: (UnsupportedBridgeProtocolDialog_default()).Paragraph
    }, "To fix this, upgrade the DevTools NPM package:"), /*#__PURE__*/external_react_namespaceObject.createElement("pre", {
      className: (UnsupportedBridgeProtocolDialog_default()).NpmCommand
    }, upgradeInstructions, /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
      onClick: withPermissionsCheck({
        permissions: ['clipboardWrite']
      }, () => (0,clipboard.copy)(upgradeInstructions)),
      title: "Copy upgrade command to clipboard"
    }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
      type: "copy"
    }))));
  } else {
    const downgradeInstructions = `npm i -g react-devtools@${maxNpmVersion}`;
    instructions = /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("p", {
      className: (UnsupportedBridgeProtocolDialog_default()).Paragraph
    }, "To fix this, downgrade the DevTools NPM package:"), /*#__PURE__*/external_react_namespaceObject.createElement("pre", {
      className: (UnsupportedBridgeProtocolDialog_default()).NpmCommand
    }, downgradeInstructions, /*#__PURE__*/external_react_namespaceObject.createElement(Button_Button, {
      onClick: withPermissionsCheck({
        permissions: ['clipboardWrite']
      }, () => (0,clipboard.copy)(downgradeInstructions)),
      title: "Copy downgrade command to clipboard"
    }, /*#__PURE__*/external_react_namespaceObject.createElement(ButtonIcon_ButtonIcon, {
      type: "copy"
    }))));
  }

  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (UnsupportedBridgeProtocolDialog_default()).Column
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (UnsupportedBridgeProtocolDialog_default()).Title
  }, "Unsupported DevTools backend version"), /*#__PURE__*/external_react_namespaceObject.createElement("p", {
    className: (UnsupportedBridgeProtocolDialog_default()).Paragraph
  }, "You are running ", /*#__PURE__*/external_react_namespaceObject.createElement("code", null, "react-devtools"), " version", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (UnsupportedBridgeProtocolDialog_default()).Version
  }, DEVTOOLS_VERSION), "."), /*#__PURE__*/external_react_namespaceObject.createElement("p", {
    className: (UnsupportedBridgeProtocolDialog_default()).Paragraph
  }, "This requires bridge protocol", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (UnsupportedBridgeProtocolDialog_default()).Version
  }, "version ", currentBridgeProtocol.version), ". However the current backend version uses bridge protocol", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (UnsupportedBridgeProtocolDialog_default()).Version
  }, "version ", version), "."), instructions, /*#__PURE__*/external_react_namespaceObject.createElement("p", {
    className: (UnsupportedBridgeProtocolDialog_default()).Paragraph
  }, "Or", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("a", {
    className: (UnsupportedBridgeProtocolDialog_default()).Link,
    href: INSTRUCTIONS_FB_URL,
    target: "_blank"
  }, "click here"), ' ', "for more information.")));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/UnsupportedVersionDialog.css
var UnsupportedVersionDialog = __webpack_require__(7357);
var UnsupportedVersionDialog_default = /*#__PURE__*/__webpack_require__.n(UnsupportedVersionDialog);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/UnsupportedVersionDialog.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */






function UnsupportedVersionDialog_UnsupportedVersionDialog(_) {
  const {
    dispatch
  } = (0,external_react_namespaceObject.useContext)(ModalDialogContext);
  const store = (0,external_react_namespaceObject.useContext)(StoreContext);
  const [state, setState] = (0,external_react_namespaceObject.useState)('dialog-not-shown');
  (0,external_react_namespaceObject.useEffect)(() => {
    if (state === 'dialog-not-shown') {
      const showDialog = () => {
        setState('show-dialog');
        dispatch({
          canBeDismissed: true,
          id: 'UnsupportedVersionDialog',
          type: 'SHOW',
          content: /*#__PURE__*/external_react_namespaceObject.createElement(UnsupportedVersionDialog_DialogContent, null)
        });
      };

      if (store.unsupportedRendererVersionDetected) {
        showDialog();
      } else {
        store.addListener('unsupportedRendererVersionDetected', showDialog);
        return () => {
          store.removeListener('unsupportedRendererVersionDetected', showDialog);
        };
      }
    }
  }, [state, store]);
  return null;
}

function UnsupportedVersionDialog_DialogContent(_) {
  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (UnsupportedVersionDialog_default()).Row
  }, /*#__PURE__*/external_react_namespaceObject.createElement("div", null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (UnsupportedVersionDialog_default()).Title
  }, "Unsupported React version detected"), /*#__PURE__*/external_react_namespaceObject.createElement("p", null, "This version of React DevTools supports React DOM v15+ and React Native v61+."), /*#__PURE__*/external_react_namespaceObject.createElement("p", null, "In order to use DevTools with an older version of React, you'll need to", ' ', /*#__PURE__*/external_react_namespaceObject.createElement("a", {
    className: (UnsupportedVersionDialog_default()).ReleaseNotesLink,
    target: "_blank",
    rel: "noopener noreferrer",
    href: UNSUPPORTED_VERSION_URL
  }, "install an older version of the extension"), "."))));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/WarnIfLegacyBackendDetected.css
var WarnIfLegacyBackendDetected = __webpack_require__(1322);
var WarnIfLegacyBackendDetected_default = /*#__PURE__*/__webpack_require__.n(WarnIfLegacyBackendDetected);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/WarnIfLegacyBackendDetected.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */





function WarnIfLegacyBackendDetected_WarnIfLegacyBackendDetected(_) {
  const bridge = (0,external_react_namespaceObject.useContext)(BridgeContext);
  const {
    dispatch
  } = (0,external_react_namespaceObject.useContext)(ModalDialogContext); // Detect pairing with legacy v3 backend.
  // We do this by listening to a message that it broadcasts but the v4 backend doesn't.
  // In this case the frontend should show upgrade instructions.

  (0,external_react_namespaceObject.useEffect)(() => {
    // Wall.listen returns a cleanup function
    let unlisten = bridge.wall.listen(message => {
      switch (message.type) {
        case 'call':
        case 'event':
        case 'many-events':
          // Any of these types indicate the v3 backend.
          dispatch({
            canBeDismissed: false,
            id: 'WarnIfLegacyBackendDetected',
            type: 'SHOW',
            title: 'DevTools v4 is incompatible with this version of React',
            content: /*#__PURE__*/external_react_namespaceObject.createElement(InvalidBackendDetected, null)
          }); // Once we've identified the backend version, it's safe to unsubscribe.

          if (typeof unlisten === 'function') {
            unlisten();
            unlisten = null;
          }

          break;

        default:
          break;
      }

      switch (message.event) {
        case 'isBackendStorageAPISupported':
        case 'isNativeStyleEditorSupported':
        case 'operations':
        case 'overrideComponentFilters':
          // Any of these is sufficient to indicate a v4 backend.
          // Once we've identified the backend version, it's safe to unsubscribe.
          if (typeof unlisten === 'function') {
            unlisten();
            unlisten = null;
          }

          break;

        default:
          break;
      }
    });
    return () => {
      if (typeof unlisten === 'function') {
        unlisten();
        unlisten = null;
      }
    };
  }, [bridge, dispatch]);
  return null;
}

function InvalidBackendDetected(_) {
  return /*#__PURE__*/external_react_namespaceObject.createElement(external_react_namespaceObject.Fragment, null, /*#__PURE__*/external_react_namespaceObject.createElement("p", null, "Either upgrade React or install React DevTools v3:"), /*#__PURE__*/external_react_namespaceObject.createElement("code", {
    className: (WarnIfLegacyBackendDetected_default()).Command
  }, "npm install -d react-devtools@^3"));
}
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/DevTools.css
var DevTools = __webpack_require__(5167);
var DevTools_default = /*#__PURE__*/__webpack_require__.n(DevTools);
// EXTERNAL MODULE: ../react-devtools-shared/src/devtools/views/root.css
var root = __webpack_require__(2932);
;// CONCATENATED MODULE: ../react-devtools-shared/src/devtools/views/DevTools.js
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */
// Reach styles need to come before any component styles.
// This makes overriding the styles simpler.



























const componentsTab = {
  id: 'components',
  icon: 'components',
  label: 'Components',
  title: 'React Components'
};
const profilerTab = {
  id: 'profiler',
  icon: 'profiler',
  label: 'Profiler',
  title: 'React Profiler'
};
const DevTools_tabs = [componentsTab, profilerTab];
function DevTools_DevTools({
  bridge,
  browserTheme = 'light',
  canViewElementSourceFunction,
  componentsPortalContainer,
  defaultTab = 'components',
  enabledInspectedElementContextMenu = false,
  fetchFileWithCaching,
  hookNamesModuleLoaderFunction,
  overrideTab,
  profilerPortalContainer,
  showTabBar = false,
  store,
  warnIfLegacyBackendDetected = false,
  warnIfUnsupportedVersionDetected = false,
  viewAttributeSourceFunction,
  viewElementSourceFunction,
  readOnly,
  hideSettings,
  hideToggleErrorAction,
  hideToggleSuspenseAction,
  hideLogAction,
  hideViewSourceAction
}) {
  const [currentTab, setTab] = useLocalStorage(LOCAL_STORAGE_DEFAULT_TAB_KEY, defaultTab);
  let tab = currentTab;

  if (overrideTab != null) {
    tab = overrideTab;
  }

  const selectTab = (0,external_react_namespaceObject.useCallback)(tabId => {
    // We show the TabBar when DevTools is NOT rendered as a browser extension.
    // In this case, we want to capture when people select tabs with the TabBar.
    // When DevTools is rendered as an extension, we capture this event when
    // the browser devtools panel changes.
    if (showTabBar === true) {
      if (tabId === 'components') {
        logEvent({
          event_name: 'selected-components-tab'
        });
      } else {
        logEvent({
          event_name: 'selected-profiler-tab'
        });
      }
    }

    setTab(tabId);
  }, [setTab, showTabBar]);
  const options = (0,external_react_namespaceObject.useMemo)(() => ({
    readOnly: readOnly || false,
    hideSettings: hideSettings || false,
    hideToggleErrorAction: hideToggleErrorAction || false,
    hideToggleSuspenseAction: hideToggleSuspenseAction || false,
    hideLogAction: hideLogAction || false,
    hideViewSourceAction: hideViewSourceAction || false
  }), [readOnly, hideSettings, hideToggleErrorAction, hideToggleSuspenseAction, hideLogAction, hideViewSourceAction]);
  const viewElementSource = (0,external_react_namespaceObject.useMemo)(() => ({
    canViewElementSourceFunction: canViewElementSourceFunction || null,
    viewElementSourceFunction: viewElementSourceFunction || null
  }), [canViewElementSourceFunction, viewElementSourceFunction]);
  const contextMenu = (0,external_react_namespaceObject.useMemo)(() => ({
    isEnabledForInspectedElement: enabledInspectedElementContextMenu,
    viewAttributeSourceFunction: viewAttributeSourceFunction || null
  }), [enabledInspectedElementContextMenu, viewAttributeSourceFunction]);
  const devToolsRef = (0,external_react_namespaceObject.useRef)(null);
  (0,external_react_namespaceObject.useEffect)(() => {
    if (!showTabBar) {
      return;
    }

    const div = devToolsRef.current;

    if (div === null) {
      return;
    }

    const ownerWindow = div.ownerDocument.defaultView;

    const handleKeyDown = event => {
      if (event.ctrlKey || event.metaKey) {
        switch (event.key) {
          case '1':
            selectTab(DevTools_tabs[0].id);
            event.preventDefault();
            event.stopPropagation();
            break;

          case '2':
            selectTab(DevTools_tabs[1].id);
            event.preventDefault();
            event.stopPropagation();
            break;
        }
      }
    };

    ownerWindow.addEventListener('keydown', handleKeyDown);
    return () => {
      ownerWindow.removeEventListener('keydown', handleKeyDown);
    };
  }, [showTabBar]);
  (0,external_react_namespaceObject.useLayoutEffect)(() => {
    return () => {
      try {
        // Shut the Bridge down synchronously (during unmount).
        bridge.shutdown();
      } catch (error) {// Attempting to use a disconnected port.
      }
    };
  }, [bridge]);
  (0,external_react_namespaceObject.useEffect)(() => {
    logEvent({
      event_name: 'loaded-dev-tools'
    });
  }, []);
  return /*#__PURE__*/external_react_namespaceObject.createElement(BridgeContext.Provider, {
    value: bridge
  }, /*#__PURE__*/external_react_namespaceObject.createElement(StoreContext.Provider, {
    value: store
  }, /*#__PURE__*/external_react_namespaceObject.createElement(OptionsContext.Provider, {
    value: options
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ContextMenuContext.Provider, {
    value: contextMenu
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ModalDialogContextController, null, /*#__PURE__*/external_react_namespaceObject.createElement(SettingsContextController, {
    browserTheme: browserTheme,
    componentsPortalContainer: componentsPortalContainer,
    profilerPortalContainer: profilerPortalContainer
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Components_ViewElementSourceContext.Provider, {
    value: viewElementSource
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Components_HookNamesModuleLoaderContext.Provider, {
    value: hookNamesModuleLoaderFunction || null
  }, /*#__PURE__*/external_react_namespaceObject.createElement(Components_FetchFileWithCachingContext.Provider, {
    value: fetchFileWithCaching || null
  }, /*#__PURE__*/external_react_namespaceObject.createElement(TreeContextController, null, /*#__PURE__*/external_react_namespaceObject.createElement(ProfilerContextController, null, /*#__PURE__*/external_react_namespaceObject.createElement(TimelineContextController, null, /*#__PURE__*/external_react_namespaceObject.createElement(ThemeProvider, null, /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (DevTools_default()).DevTools,
    ref: devToolsRef,
    "data-react-devtools-portal-root": true
  }, showTabBar && /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (DevTools_default()).TabBar
  }, /*#__PURE__*/external_react_namespaceObject.createElement(ReactLogo_ReactLogo, null), /*#__PURE__*/external_react_namespaceObject.createElement("span", {
    className: (DevTools_default()).DevToolsVersion
  }, "6.1.1-3366146796"), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (DevTools_default()).Spacer
  }), /*#__PURE__*/external_react_namespaceObject.createElement(TabBar_TabBar, {
    currentTab: tab,
    id: "DevTools",
    selectTab: selectTab,
    tabs: DevTools_tabs,
    type: "navigation"
  })), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (DevTools_default()).TabContent,
    hidden: tab !== 'components'
  }, /*#__PURE__*/external_react_namespaceObject.createElement(views_Components_Components, {
    portalContainer: componentsPortalContainer
  })), /*#__PURE__*/external_react_namespaceObject.createElement("div", {
    className: (DevTools_default()).TabContent,
    hidden: tab !== 'profiler'
  }, /*#__PURE__*/external_react_namespaceObject.createElement(views_Profiler_Profiler, {
    portalContainer: profilerPortalContainer
  }))))))))))), /*#__PURE__*/external_react_namespaceObject.createElement(UnsupportedBridgeProtocolDialog_UnsupportedBridgeProtocolDialog, null), warnIfLegacyBackendDetected && /*#__PURE__*/external_react_namespaceObject.createElement(WarnIfLegacyBackendDetected_WarnIfLegacyBackendDetected, null), warnIfUnsupportedVersionDetected && /*#__PURE__*/external_react_namespaceObject.createElement(UnsupportedVersionDialog_UnsupportedVersionDialog, null))))));
}
;// CONCATENATED MODULE: ./src/frontend.js
function frontend_extends() { frontend_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return frontend_extends.apply(this, arguments); }








function createStore(bridge, config) {
  return new Store(bridge, {
    checkBridgeProtocolCompatibility: true,
    supportsTraceUpdates: true,
    supportsTimeline: true,
    ...config
  });
}
function createBridge(contentWindow, wall) {
  if (wall == null) {
    wall = {
      listen(fn) {
        // $FlowFixMe[missing-local-annot]
        const onMessage = ({
          data
        }) => {
          fn(data);
        };

        window.addEventListener('message', onMessage);
        return () => {
          window.removeEventListener('message', onMessage);
        };
      },

      send(event, payload, transferable) {
        contentWindow.postMessage({
          event,
          payload
        }, '*', transferable);
      }

    };
  }

  return new bridge(wall);
}
function initialize(contentWindow, {
  bridge,
  store
} = {}) {
  if (bridge == null) {
    bridge = createBridge(contentWindow);
  } // Type refinement.


  const frontendBridge = bridge;

  if (store == null) {
    store = createStore(frontendBridge);
  }

  const onGetSavedPreferences = () => {
    // This is the only message we're listening for,
    // so it's safe to cleanup after we've received it.
    frontendBridge.removeListener('getSavedPreferences', onGetSavedPreferences);
    const data = {
      componentFilters: getSavedComponentFilters()
    }; // The renderer interface can't read saved preferences directly,
    // because they are stored in localStorage within the context of the extension.
    // Instead it relies on the extension to pass them through.

    frontendBridge.send('savedPreferences', data);
  };

  frontendBridge.addListener('getSavedPreferences', onGetSavedPreferences);
  const ForwardRef = /*#__PURE__*/(0,external_react_namespaceObject.forwardRef)((props, ref) => /*#__PURE__*/external_react_namespaceObject.createElement(DevTools_DevTools, frontend_extends({
    ref: ref,
    bridge: frontendBridge,
    store: store
  }, props)));
  ForwardRef.displayName = 'DevTools';
  return ForwardRef;
}
})();

var __webpack_exports__createBridge = __webpack_exports__.EH;
var __webpack_exports__createStore = __webpack_exports__.MT;
var __webpack_exports__initialize = __webpack_exports__.j2;
var __webpack_exports__prepareProfilingDataExport = __webpack_exports__.l3;
var __webpack_exports__prepareProfilingDataFrontendFromExport = __webpack_exports__.TV;
export { __webpack_exports__createBridge as createBridge, __webpack_exports__createStore as createStore, __webpack_exports__initialize as initialize, __webpack_exports__prepareProfilingDataExport as prepareProfilingDataExport, __webpack_exports__prepareProfilingDataFrontendFromExport as prepareProfilingDataFrontendFromExport };

//# sourceMappingURL=frontend.js.map