{
  "name": "react-native-ide",
  "displayName": "React Native IDE",
  "description": "Extension turning VSCode into a full-featured IDE for React Native and Expo",
  "publisher": "swmansion",
  "categories": [
    "Programming Languages"
  ],
  "icon": "assets/logo.png",
  "activationEvents": [
    "workspaceContains:node_modules/react-native",
    "workspaceContains:app.json",
    "workspaceContains:metro.config.js",
    "workspaceContains:metro.config.ts",
    "workspaceContains:app.config.js",
    "workspaceContains:app.config.ts"
  ],
  "version": "0.0.15",
  "engines": {
    "vscode": "^1.75.0",
    "os": "darwin"
  },
  "extensionKind": [
    "workspace"
  ],
  "license": "SEE LICENSE IN LICENSE.txt",
  "repository": {
    "type": "git",
    "url": "https://github.com/software-mansion/react-native-ide"
  },
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "RNIDE.openDevMenu",
        "title": "Open Dev Menu",
        "category": "React Native IDE",
        "enablement": "RNIDE.extensionIsActive"
      },
      {
        "command": "RNIDE.closePanel",
        "title": "Close IDE Panel",
        "category": "React Native IDE",
        "icon": "$(close)",
        "enablement": "RNIDE.extensionIsActive"
      },
      {
        "command": "RNIDE.openPanel",
        "title": "Open IDE Panel",
        "category": "React Native IDE",
        "enablement": "RNIDE.extensionIsActive && !RNIDE.panelIsOpen"
      },
      {
        "command": "RNIDE.showPanel",
        "title": "Show IDE Panel",
        "category": "React Native IDE",
        "enablement": "RNIDE.extensionIsActive && RNIDE.panelIsOpen"
      },
      {
        "command": "RNIDE.diagnose",
        "title": "Diagnostics",
        "category": "React Native IDE",
        "enablement": "!RNIDE.extensionIsActive"
      }
    ],
    "keybindings": [
      {
        "command": "RNIDE.openDevMenu",
        "key": "ctrl+alt+z",
        "mac": "ctrl+cmd+z"
      },
      {
        "command": "RNIDE.closeWithConfirmation",
        "key": "ctrl+w",
        "mac": "cmd+w",
        "when": "RNIDE.isTabPanelFocused"
      }
    ],
    "configuration": {
      "title": "React Native IDE",
      "properties": {
        "ReactNativeIDE.panelLocation": {
          "type": "string",
          "scope": "window",
          "default": "tab",
          "enum": [
            "tab",
            "side-panel",
            "secondary-side-panel"
          ],
          "description": "Controlls location of the IDE panel. Due to vscode API limitations, when secondary side panel is selected, you need to manually move the IDE panel to the secondary side panel. Changing this option closes and reopens the IDE."
        },
        "ReactNativeIDE.inspectorExcludePattern": {
          "type": "string",
          "scope": "window",
          "default": null,
          "description": "Files matching this pattern fill be excluded for the inspector jump to file functionality. This can be used if your codebase has some design system primitives that are used everywhere in your codebase and that you don't want to always get opened when using inspect functionality."
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "ReactNativeIDE",
          "title": "React Native IDE",
          "icon": "assets/logo.svg"
        }
      ]
    },
    "views": {
      "ReactNativeIDE": [
        {
          "type": "webview",
          "id": "ReactNativeIDE.view",
          "name": "",
          "when": "config.ReactNativeIDE.panelLocation != 'tab' && !RNIDE.sidePanelIsClosed"
        }
      ]
    },
    "menus": {
      "editor/title": [
        {
          "command": "RNIDE.openPanel",
          "group": "navigation",
          "when": "RNIDE.extensionIsActive && !RNIDE.panelIsOpen"
        }
      ],
      "view/title": [
        {
          "command": "RNIDE.closePanel",
          "group": "navigation",
          "when": "RNIDE.extensionIsActive && RNIDE.panelIsOpen && view == ReactNativeIDE.view"
        }
      ]
    },
    "breakpoints": [
      {
        "language": "typescript"
      },
      {
        "language": "javascript"
      }
    ],
    "debuggers": [
      {
        "type": "com.swmansion.react-native-ide",
        "label": "React Native IDE internal",
        "hiddenWhen": "true",
        "languages": [
          "javascript",
          "typescript"
        ]
      },
      {
        "type": "react-native-ide",
        "label": "React Native IDE",
        "languages": [
          "javascript",
          "typescript",
          "javascriptreact",
          "typescriptreact"
        ],
        "configurationAttributes": {
          "launch": {
            "required": [],
            "properties": {
              "appRoot": {
                "type": "string",
                "description": "Location of the React Native application root folder relative to the workspace. This is used for monorepo type setups when the workspace root is not the root of the React Native project. The IDE extension tries to locate the React Native application root automatically, but in case it failes to do so (i.e. there are multiple applications defined in the workspace), you can use this setting to override the location."
              },
              "isExpo": {
                "type": "boolean",
                "description": "IDE tries to detect whether project uses Expo or React Native community CLI. This is needed when starting the bundler. If your project uses Expo but IDE fails to automatically detect it, you can set this parameter to `true` to force the use of Expo CLI."
              },
              "env": {
                "type": "object",
                "description": "Environment variables to be passed to all build/run commands that the IDE is launching."
              },
              "metroConfigPath": {
                "type": "string",
                "description": "Location of Metro config relative to the workspace. This is used for using custom configs for e.g. development."
              },
              "ios": {
                "description": "Provides a way to customize Xcode builds for iOS",
                "type": "object",
                "properties": {
                  "scheme": {
                    "type": "string",
                    "description": "Scheme name (from xcode project) the IDE will use for iOS builds, defaults to xcworkspace base file name."
                  },
                  "configuration": {
                    "type": "string",
                    "description": "Build configuration name (from xcode project) the IDE will use for iOS builds, defaults to \"Debug\"."
                  }
                }
              },
              "android": {
                "description": "Provides a way to customize Gradle builds for Android",
                "type": "object",
                "properties": {
                  "variant": {
                    "type": "string",
                    "description": "Android's build variant used when building with Gradle, defaults to \"debug\"."
                  }
                }
              },
              "preview": {
                "description": "Custommize the behavior of device preview",
                "type": "object",
                "properties": {
                  "waitForAppLaunch": {
                    "type": "boolean",
                    "description": "Defaults to `true`, this should only be set to `false` for brownfield setups when React Native components aren't rendered immediately after the app launches."
                  }
                }
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "react-native-ide",
            "request": "launch",
            "name": "React Native IDE panel",
            "ios": {
              "configuration": "Debug"
            },
            "android": {
              "buildType": "debug"
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:package": "vsce package",
    "vscode:prepublish": "npm run package",
    "build:extension-debug": "npm run build:extension-code-debug && npm run build:expo-fingerprint",
    "build:extension": "npm run build:extension-code && npm run build:expo-fingerprint",
    "build:extension-code-debug": "esbuild ./src/extension.ts --bundle --outfile=dist/extension.js --external:vscode --format=cjs --platform=node --sourcemap && cp ./node_modules/source-map/lib/mappings.wasm dist/.",
    "build:extension-code": "esbuild ./src/extension.ts --bundle --outfile=dist/extension.js --external:vscode --format=cjs --platform=node --minify && cp ./node_modules/source-map/lib/mappings.wasm dist/.",
    "build:expo-fingerprint": "esbuild ./node_modules/@expo/fingerprint/build/sourcer/ExpoConfigLoader.js --bundle --format=cjs --outfile=dist/ExpoConfigLoader.js --platform=node --minify",
    "build:webview": "vite build --mode production && cp ./node_modules/@vscode/codicons/dist/codicon.* dist/.",
    "build:sim-server-debug": "./scripts/build-sim-server.sh dist Debug",
    "build:sim-server": "./scripts/build-sim-server.sh dist Release",
    "build:debug": "npm run build:extension-debug && npm run build:sim-server-debug",
    "build:dist": "npm run build:extension && npm run build:sim-server && npm run build:webview",
    "watch:extension": "vite",
    "package": "rm -rf dist/ && npm run build:dist",
    "lint": "eslint src --ext ts && yarn prettier --check src",
    "format": "prettier --write --list-different src",
    "build:tests": "tsc --project tsconfig.test.json",
    "test": "npm run build:extension-code && npm run build:webview && npm run build:tests && vscode-test"
  },
  "devDependencies": {
    "@babel/preset-react": "^7.23.3",
    "coordinate-parser": "^1.0.7",
    "@expo/fingerprint": "^0.5.0",
    "@expo/package-manager": "^1.1.2",
    "@msgpack/msgpack": "^2.8.0",
    "@radix-ui/react-alert-dialog": "^1.0.5",
    "@radix-ui/react-context-menu": "^2.1.5",
    "@radix-ui/react-dialog": "^1.0.5",
    "@radix-ui/react-dropdown-menu": "^2.0.6",
    "@radix-ui/react-progress": "^1.0.3",
    "@radix-ui/react-radio-group": "^1.1.3",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-slider": "^1.1.2",
    "@radix-ui/react-switch": "^1.0.3",
    "@radix-ui/react-tooltip": "^1.0.7",
    "@types/glob": "^7.1.3",
    "@types/lodash": "^4.14.202",
    "@types/node": "^18.19.3",
    "@types/node-fetch": "^2.6.9",
    "@types/plist": "^3.0.5",
    "@types/react": "^18.2.45",
    "@types/semver": "^7.5.8",
    "@types/sinon": "^17.0.3",
    "@types/tar": "^6.1.11",
    "@types/uuid": "^9.0.7",
    "@types/vscode": "^1.46.0",
    "@types/ws": "^8.5.10",
    "@types/xml2js": "^0.4.14",
    "@typescript-eslint/eslint-plugin": "^4.14.1",
    "@typescript-eslint/parser": "^4.14.1",
    "@vitejs/plugin-react": "^4.2.1",
    "@vscode/codicons": "^0.0.35",
    "@vscode/debugadapter": "^1.51.0",
    "@vscode/debugprotocol": "^1.51.0",
    "@vscode/extension-telemetry": "^0.9.6",
    "@vscode/test-cli": "^0.0.9",
    "@vscode/test-electron": "^2.4.0",
    "@vscode/vsce": "^2.22.0",
    "@vscode/webview-ui-toolkit": "^1.3.1",
    "babel-loader": "^9.1.3",
    "chrome-remote-interface": "^0.33.0",
    "classnames": "^2.5.1",
    "esbuild": "^0.19.9",
    "eslint": "^7.19.0",
    "execa": "^5.1.1",
    "file-loader": "^6.2.0",
    "glob": "^7.1.6",
    "lodash": "^4.17.21",
    "minimatch": "^9.0.4",
    "mocha": "^10.4.0",
    "node-fetch": "^2.7.0",
    "plist": "^3.1.0",
    "prettier": "^2.2.1",
    "re-resizable": "^6.9.16",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "semver": "^7.6.2",
    "sinon": "^18.0.0",
    "source-map": "^0.8.0-beta.0",
    "ts-loader": "^9.5.1",
    "typescript": "^4.1.3",
    "url-loader": "^4.1.1",
    "uuid": "^9.0.1",
    "vite": "^5.0.8",
    "vscode-test": "^1.5.0",
    "ws": "^8.14.2",
    "xml2js": "^0.6.2"
  }
}
