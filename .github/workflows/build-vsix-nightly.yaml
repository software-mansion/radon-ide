name: Build VSIX and Run Tests (macOS)

on:
  workflow_dispatch:
  schedule:
    - cron: "5 13 * * *"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Set workflow start time
        id: date
        run: echo "date=$(date +'%Y-%m-%dT%H%M%S')" >> $GITHUB_OUTPUT

      - name: Set targets
        id: set_targets
        run: |
          targets="darwin-arm64 darwin-x64 win32-x64 linux-x64"
          echo "Building extension for targets: $targets"
          echo "targets=$targets" >> $GITHUB_OUTPUT

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Enforce HTTPS for submodules
        run: git config --global url."https://github.com/".insteadOf "git@github.com:"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: packages/vscode-extension/package-lock.json

      - name: Install dependencies
        working-directory: packages/vscode-extension
        run: npm ci

      - name: Prepare package name for artifact upload
        id: prepare_name
        run: |
          ref_name=$(echo -n "${{ github.event.inputs.ref }}" | xargs | sed 's/[\\\/'"'"':<>|*?]/-/g') 
          package_name=radon-ide-${ref_name}-${{ steps.date.outputs.date }}
          echo "package_name=$package_name" >> $GITHUB_OUTPUT

      - name: Package extension for each target
        working-directory: packages/vscode-extension
        id: package_and_upload
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          IFS=' ' read -r -a targets <<< "${{ steps.set_targets.outputs.targets }}"
          output_paths=""
          for target in "${targets[@]}"; do
            out_path=/tmp/${{ steps.prepare_name.outputs.package_name }}-$target.vsix
            npm run vscode:package -- --out $out_path --target $target
            output_paths="$output_paths $out_path"
          done
          echo "output_paths=$output_paths" >> $GITHUB_OUTPUT

      - name: Upload extension artifacts
        uses: actions/upload-artifact@v4
        with:
          name: radon-ide-extensions
          path: /tmp/${{ steps.prepare_name.outputs.package_name }}-*.vsix
